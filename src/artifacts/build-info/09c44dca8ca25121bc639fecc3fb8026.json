{
	"id": "09c44dca8ca25121bc639fecc3fb8026",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/token.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.0;\n\nimport { AccessControl } from \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport { ERC20 } from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport { SafeERC20 } from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport { ReentrancyGuard } from \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n\n/**\n * @title EqualFiToken\n * @dev This contract implements an ERC20 token with additional features such as minting, burning, pausing, \n *      supply capping, and transfer fee mechanisms. It uses role-based access control for administrative functions \n *      and is protected against reentrancy attacks.\n */\ncontract EqualFiToken is ERC20, AccessControl, ReentrancyGuard {\n\n    using SafeERC20 for IERC20;\n\n    // ========================== Roles ==========================\n\n    /// @notice Role identifier for minting new tokens\n    bytes32 public constant _MINT = keccak256(\"_MINT\");\n\n    /// @notice Role identifier for minting tokens to specific addresses\n    bytes32 public constant _MINTTO = keccak256(\"_MINTTO\");\n\n    /// @notice Role identifier for burning tokens\n    bytes32 public constant _BURN = keccak256(\"_BURN\");\n\n    /// @notice Role identifier for burning tokens from specific addresses\n    bytes32 public constant _BURNFROM = keccak256(\"_BURNFROM\");\n\n    /// @notice Role identifier for modifying the supply cap\n    bytes32 public constant _SUPPLY = keccak256(\"_SUPPLY\");\n\n    /// @notice Role identifier for administrative tasks\n    bytes32 public constant _ADMIN = keccak256(\"_ADMIN\");\n\n    /// @notice Role identifier for rescuing tokens and Ether\n    bytes32 public constant _RESCUE = keccak256(\"_RESCUE\");\n   \n    // ========================== State Variables ==========================\n\n    /// @notice Maximum supply cap for the token\n    uint public _cap;\n\n    /// @notice Transaction fee for transfers (0.005 tokens, assuming 18 decimals)\n    uint public txFee = 5e15;\n\n    /// @notice Flag to pause the contract's operations\n    bool public paused;\n\n    /// @notice Flag to disable minting\n    bool public mintDisabled;\n\n    /// @notice Flag to disable minting to specific addresses\n    bool public mintToDisabled;\n    \n    // ========================== Events ==========================\n\n    /// @notice Emitted when tokens are minted\n    event TokensMinted(uint _amount);\n\n    /// @notice Emitted when tokens are minted to a specific address\n    event TokensMintedTo(address _to, uint _amount);\n\n    /// @notice Emitted when tokens are burned from the caller's balance\n    event TokensBurned(uint _amount, address _burner);\n\n    /// @notice Emitted when tokens are burned from a specific address\n    event TokensBurnedFrom(address _from, uint _amount, address _burner);\n\n    /// @notice Emitted when the supply cap is changed\n    event SupplyCapChanged(uint _newCap, address _changedBy);\n\n    /// @notice Emitted when the contract is paused\n    event ContractPaused(uint _blockHeight, address _pausedBy);\n\n    /// @notice Emitted when the contract is unpaused\n    event ContractUnpaused(uint _blockHeight, address _unpausedBy);\n\n    /// @notice Emitted when minting is enabled\n    event MintingEnabled(uint _blockHeight, address _enabledBy);\n\n    /// @notice Emitted when minting is disabled\n    event MintingDisabled(uint _blockHeight, address _disabledBy);\n\n    /// @notice Emitted when minting to specific addresses is enabled\n    event MintingToEnabled(uint _blockHeight, address _enabledBy);\n\n    /// @notice Emitted when minting to specific addresses is disabled\n    event MintingToDisabled(uint _blockHeight, address _disabledBy);\n\n    /// @notice Emitted when Ether is rescued from the contract\n    event ETHRescued(address _dest, uint _blockHeight, uint _amount);\n\n    /// @notice Emitted when ERC20 tokens are rescued from the contract\n    event ERC20Rescued(IERC20 _token, uint _blockHeight, address _dest, uint _amount);\n\n    // ========================== Mappings ==========================\n\n    /// @notice Mapping to track addresses exempt from transfer fees\n    mapping(address => bool) public whitelistedAddress;\n\n    // ========================== Constructor ==========================\n\n    /**\n     * @dev Constructor that sets the token name, symbol, and initial minting.\n     *      It also grants necessary roles to the deployer and sets initial parameters such as the supply cap.\n     */\n    constructor() ERC20(\"Token\", \"TKN\") {\n        _cap = 1e25; // Set the supply cap to 10 million tokens (10^7 * 10^18 = 1e25 wei)\n        mintDisabled = false; // Initially enable minting\n        mintToDisabled = false; // Initially enable minting to specific addresses\n        _grantRole(DEFAULT_ADMIN_ROLE, _msgSender());\n\n        // Grant initial roles to the deployer\n        _grantRole(_ADMIN, _msgSender());\n        _grantRole(_MINT, _msgSender());\n        _grantRole(_BURN, _msgSender());\n\n        // Mint 1 million tokens to the deployer for initial use (1e6 * 10^18 = 1e24 wei)\n        _mint(_msgSender(), 1e24);\n    }\n    \n    // ========================== Modifiers ==========================\n\n    /**\n     * @dev Modifier to ensure that the contract is not paused before executing the function.\n     */\n    modifier pause() {\n        require(!paused, \"Contract: Contract is Paused\");\n        _;\n    }\n    \n    /**\n     * @dev Modifier to ensure that minting is not disabled before executing the function.\n     */\n    modifier mintDis() {\n        require(!mintDisabled, \"Minting disabled\");\n        _;\n    }\n    \n    /**\n     * @dev Modifier to ensure that minting to specific addresses is not disabled before executing the function.\n     */\n    modifier mintToDis() {\n        require(!mintToDisabled, \"Minting to disabled\");\n        _;\n    }\n    \n    // ========================== Admin Functions ==========================\n\n    /**\n     * @dev Function to pause or unpause the contract's operations. \n     *      Only callable by an admin.\n     * @param _paused Boolean indicating whether the contract should be paused (true) or unpaused (false).\n     */\n    function setPaused(bool _paused) external onlyRole(_ADMIN) {\n        paused = _paused;\n\n        if (_paused) {\n            emit ContractPaused(block.number, _msgSender());\n        } else {\n            emit ContractUnpaused(block.number, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Function to disable or enable minting.\n     *      Only callable by an admin.\n     * @param _disableMinting Boolean indicating whether minting should be disabled (true) or enabled (false).\n     */\n    function disableMint(bool _disableMinting) external onlyRole(_ADMIN) {\n        mintDisabled = _disableMinting;\n\n        if (_disableMinting) {\n            emit MintingDisabled(block.number, _msgSender());\n        } else {\n            emit MintingEnabled(block.number, _msgSender());\n        }\n    }   \n\n    /**\n     * @dev Function to disable or enable minting to specific addresses.\n     *      Only callable by an admin.\n     * @param _disableMintTo Boolean indicating whether minting to specific addresses should be disabled (true) or enabled (false).\n     */\n    function disableMintTo(bool _disableMintTo) external onlyRole(_ADMIN) {\n        mintToDisabled = _disableMintTo;\n\n        if (_disableMintTo) {\n            emit MintingToDisabled(block.number, _msgSender());\n        } else {\n            emit MintingToEnabled(block.number, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Function to change the supply cap of the token.\n     *      Only callable by an admin.\n     * @param _supplyCap The new supply cap.\n     */\n    function setSupplyCap(uint _supplyCap) external pause onlyRole(_SUPPLY) {\n        require(_supplyCap >= totalSupply(), \"Contract: Supply Cap too low\");\n        _cap = _supplyCap;\n        emit SupplyCapChanged(_supplyCap, _msgSender());\n    }\n\n    /**\n     * @dev Function to get the current supply cap.\n     * @return The current supply cap.\n     */\n    function supplyCap() public view returns (uint) {\n        return _cap;\n    }\n\n    /**\n     * @dev Function to add or remove an address from the whitelist. Whitelisted addresses are exempt from transfer fees.\n     *      Only callable by an admin.\n     * @param _whitelist The address to whitelist or remove from the whitelist.\n     * @param _status Boolean indicating whether to add (true) or remove (false) the address from the whitelist.\n     */\n    function setWhitelistAddress(address _whitelist, bool _status) external onlyRole(_ADMIN) {\n        require(_whitelist != address(0), \"Invalid address\");\n        whitelistedAddress[_whitelist] = _status;\n    }\n\n    /**\n     * @dev Function to update the transaction fee for transfers.\n     *      Only callable by an admin.\n     * @param _newFee The new transaction fee.\n     */\n    function setTxFee(uint256 _newFee) external onlyRole(_ADMIN) {\n        txFee = _newFee;\n    }\n\n    // ========================== Minting Functions ==========================\n\n    /**\n     * @dev Function to mint tokens to a specific address.\n     *      Only callable by an address with the _MINTTO role, and if minting to is enabled and contract is not paused.\n     * @param _to The address to mint tokens to.\n     * @param _amount The amount of tokens to mint.\n     */\n    function mintTo(address _to, uint _amount) external pause mintToDis onlyRole(_MINTTO) {\n        require(totalSupply() + _amount <= _cap, \"Contract: Supply Cap exceeded\");\n        emit TokensMintedTo(_to, _amount);\n        _mint(_to, _amount);\n    }\n\n    /**\n     * @dev Function to mint tokens to the caller.\n     *      Only callable by an address with the _MINT role, and if minting is enabled and contract is not paused.\n     * @param _amount The amount of tokens to mint.\n     */\n    function mint(uint _amount) external pause mintDis onlyRole(_MINT) {\n        require(totalSupply() + _amount <= _cap, \"Contract: Supply Cap exceeded\");\n        emit TokensMinted(_amount);\n        _mint(_msgSender(), _amount);\n    }\n    \n    // ========================== Burning Functions ==========================\n\n    /**\n     * @dev Function to burn tokens from the caller's balance.\n     *      Only callable by an address with the _BURN role, and if the contract is not paused.\n     * @param _amount The amount of tokens to burn.\n     */\n    function burn(uint _amount) external pause onlyRole(_BURN) { \n        emit TokensBurned(_amount, _msgSender());\n        _burn(_msgSender(), _amount);\n    }\n\n    /**\n     * @dev Function to burn tokens from a specific address.\n     *      Only callable by an address with the _BURNFROM role, and if the contract is not paused.\n     * @param _from The address to burn tokens from.\n     * @param _amount The amount of tokens to burn.\n     */\n    function burnFrom(address _from, uint _amount) external pause onlyRole(_BURNFROM) {\n        emit TokensBurnedFrom(_from, _amount, _msgSender());\n        _burn(_from, _amount);\n    }\n\n    // ========================== Transfer Functions ==========================\n\n    /**\n     * @dev Overrides the `transferFrom` function to apply a transaction fee unless the sender is whitelisted.\n     *      The transfer will reduce the spender's allowance if applicable.\n     * @param from The address sending tokens.\n     * @param to The address receiving tokens.\n     * @param value The amount of tokens to transfer.\n     * @return True if the transfer was successful.\n     */\n    function transferFrom(address from, address to, uint256 value) nonReentrant public virtual override returns (bool) {\n        address spender = _msgSender();\n        uint256 currentAllowance = allowance(from, spender);\n        require(currentAllowance >= value, \"ERC20: transfer amount exceeds allowance\");\n\n        // Decrease the allowance by the value being transferred\n        _approve(from, spender, currentAllowance - value);\n\n        if (whitelistedAddress[spender] == true) {\n            _transfer(from, to, value);\n        } else {\n            // Transfer value to the recipient\n            _transfer(from, to, value);\n\n            // Apply transaction fee and burn it\n            _burn(from, txFee);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Overrides the `transfer` function to apply a transaction fee unless the sender is whitelisted.\n     * @param to The address receiving tokens.\n     * @param value The amount of tokens to transfer.\n     * @return True if the transfer was successful.\n     */\n    function transfer(address to, uint256 value) nonReentrant public virtual override returns (bool) {\n        address owner = _msgSender();\n\n        if (whitelistedAddress[owner]) {\n            _transfer(owner, to, value);\n        } else {\n            // Transfer tokens and apply the fee\n            _transfer(owner, to, value);\n            _burn(owner, txFee);  // Apply transaction fee and burn it\n        }\n\n        return true;\n    }\n\n    // ========================== Rescue Functions ==========================\n\n    /**\n     * @dev Function to rescue ERC20 tokens sent to the contract by mistake.\n     *      Only callable by an account with the _RESCUE role.\n     * @param _ERC20 The ERC20 token contract to rescue.\n     * @param _dest The address to send the rescued tokens to.\n     * @param _ERC20Amount The amount of tokens to rescue.\n     */\n    function moveERC20(IERC20 _ERC20, address _dest, uint _ERC20Amount) nonReentrant public onlyRole(_RESCUE) {\n        IERC20(_ERC20).safeTransfer(_dest, _ERC20Amount);\n        emit ERC20Rescued(_ERC20, block.number, _dest, _ERC20Amount);\n    }\n\n    /**\n     * @dev Function to rescue Ether sent to the contract by mistake.\n     *      Only callable by an account with the _RESCUE role.\n     * @param _dest The address to send the rescued Ether to.\n     * @param _etherAmount The amount of Ether to rescue (in wei).\n     */\n    function ethRescue(address payable _dest, uint _etherAmount) nonReentrant public onlyRole(_RESCUE) {\n        _dest.transfer(_etherAmount);\n        emit ETHRescued(_dest, block.number, _etherAmount);\n    }\n    \n}\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [
				"@ensdomains/=lib/v4-core/node_modules/@ensdomains/",
				"@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
				"@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/",
				"ds-test/=lib/forge-std/lib/ds-test/src/"
			]
		}
	},
	"output": {
		"contracts": {
			"lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "lib/openzeppelin-contracts/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "lib/openzeppelin-contracts/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "lib/openzeppelin-contracts/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 628,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 634,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 636,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 638,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 640,
								"contract": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ad4c0e7126f42373bfc673eed97c221f0b21ac844e424a4d93cca339948e8c2b64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ad4c0e7126f42373bfc673eed97c221f0b21ac844e424a4d93cca339948e8c2b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD 0x4C 0xE PUSH18 0x26F42373BFC673EED97C221F0B21AC844E42 BLOBBASEFEE 0x4D SWAP4 0xCC LOG3 CODECOPY SWAP5 DUP15 DUP13 0x2B PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "750:8692:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ad4c0e7126f42373bfc673eed97c221f0b21ac844e424a4d93cca339948e8c2b64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD 0x4C 0xE PUSH18 0x26F42373BFC673EED97C221F0B21AC844E42 BLOBBASEFEE 0x4D SWAP4 0xCC LOG3 CODECOPY SWAP5 DUP15 DUP13 0x2B PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "750:8692:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ad4c0e7126f42373bfc673eed97c221f0b21ac844e424a4d93cca339948e8c2b64736f6c634300081a0033",
									".code": [
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
								"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
								"lib/openzeppelin-contracts/contracts/utils/Address.sol",
								"lib/openzeppelin-contracts/contracts/utils/Context.sol",
								"lib/openzeppelin-contracts/contracts/utils/Errors.sol",
								"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol",
								"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
								"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
								"src/token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"lib/openzeppelin-contracts/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":233:6032  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":233:6032  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b235adacb13f0187c9e29a21f37a37cad8e8a9cfeeebe9cc8e9a8ea7c08bf86664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b235adacb13f0187c9e29a21f37a37cad8e8a9cfeeebe9cc8e9a8ea7c08bf86664736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 CALLDATALOAD 0xAD 0xAC 0xB1 EXTCODEHASH ADD DUP8 0xC9 0xE2 SWAP11 0x21 RETURN PUSH27 0x37CAD8E8A9CFEEEBE9CC8E9A8EA7C08BF86664736F6C634300081A STOP CALLER ",
							"sourceMap": "233:5799:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b235adacb13f0187c9e29a21f37a37cad8e8a9cfeeebe9cc8e9a8ea7c08bf86664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 CALLDATALOAD 0xAD 0xAC 0xB1 EXTCODEHASH ADD DUP8 0xC9 0xE2 SWAP11 0x21 RETURN PUSH27 0x37CAD8E8A9CFEEEBE9CC8E9A8EA7C08BF86664736F6C634300081A STOP CALLER ",
							"sourceMap": "233:5799:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b235adacb13f0187c9e29a21f37a37cad8e8a9cfeeebe9cc8e9a8ea7c08bf86664736f6c634300081a0033",
									".code": [
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
								"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
								"lib/openzeppelin-contracts/contracts/utils/Address.sol",
								"lib/openzeppelin-contracts/contracts/utils/Context.sol",
								"lib/openzeppelin-contracts/contracts/utils/Errors.sol",
								"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol",
								"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
								"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
								"src/token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"lib/openzeppelin-contracts/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/openzeppelin-contracts/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/openzeppelin-contracts/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b81bdfe8381a246816ebd93224b1ba1210e44579af97d4d942cfb4e5076a07ae64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b81bdfe8381a246816ebd93224b1ba1210e44579af97d4d942cfb4e5076a07ae64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 SHL 0xDF 0xE8 CODESIZE BYTE 0x24 PUSH9 0x16EBD93224B1BA1210 0xE4 GASLIMIT PUSH26 0xAF97D4D942CFB4E5076A07AE64736F6C634300081A0033000000 ",
							"sourceMap": "411:484:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b81bdfe8381a246816ebd93224b1ba1210e44579af97d4d942cfb4e5076a07ae64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 SHL 0xDF 0xE8 CODESIZE BYTE 0x24 PUSH9 0x16EBD93224B1BA1210 0xE4 GASLIMIT PUSH26 0xAF97D4D942CFB4E5076A07AE64736F6C634300081A0033000000 ",
							"sourceMap": "411:484:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b81bdfe8381a246816ebd93224b1ba1210e44579af97d4d942cfb4e5076a07ae64736f6c634300081a0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
								"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
								"lib/openzeppelin-contracts/contracts/utils/Address.sol",
								"lib/openzeppelin-contracts/contracts/utils/Context.sol",
								"lib/openzeppelin-contracts/contracts/utils/Errors.sol",
								"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol",
								"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
								"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
								"src/token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1957,
								"contract": "lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/token.sol": {
				"EqualFiToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_blockHeight",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_pausedBy",
									"type": "address"
								}
							],
							"name": "ContractPaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_blockHeight",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_unpausedBy",
									"type": "address"
								}
							],
							"name": "ContractUnpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_blockHeight",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_dest",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "ERC20Rescued",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_dest",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_blockHeight",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "ETHRescued",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_blockHeight",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_disabledBy",
									"type": "address"
								}
							],
							"name": "MintingDisabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_blockHeight",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_enabledBy",
									"type": "address"
								}
							],
							"name": "MintingEnabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_blockHeight",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_disabledBy",
									"type": "address"
								}
							],
							"name": "MintingToDisabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_blockHeight",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_enabledBy",
									"type": "address"
								}
							],
							"name": "MintingToEnabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_newCap",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_changedBy",
									"type": "address"
								}
							],
							"name": "SupplyCapChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_burner",
									"type": "address"
								}
							],
							"name": "TokensBurned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_burner",
									"type": "address"
								}
							],
							"name": "TokensBurnedFrom",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "TokensMinted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "TokensMintedTo",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_ADMIN",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_BURN",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_BURNFROM",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_MINT",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_MINTTO",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_RESCUE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_SUPPLY",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_cap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_disableMinting",
									"type": "bool"
								}
							],
							"name": "disableMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_disableMintTo",
									"type": "bool"
								}
							],
							"name": "disableMintTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_dest",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_etherAmount",
									"type": "uint256"
								}
							],
							"name": "ethRescue",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintDisabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mintTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintToDisabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_ERC20",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_dest",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_ERC20Amount",
									"type": "uint256"
								}
							],
							"name": "moveERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_paused",
									"type": "bool"
								}
							],
							"name": "setPaused",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_supplyCap",
									"type": "uint256"
								}
							],
							"name": "setSupplyCap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newFee",
									"type": "uint256"
								}
							],
							"name": "setTxFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_whitelist",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_status",
									"type": "bool"
								}
							],
							"name": "setWhitelistAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "supplyCap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "txFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "whitelistedAddress",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This contract implements an ERC20 token with additional features such as minting, burning, pausing,       supply capping, and transfer fee mechanisms. It uses role-based access control for administrative functions       and is protected against reentrancy attacks.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Function to burn tokens from the caller's balance.      Only callable by an address with the _BURN role, and if the contract is not paused.",
								"params": {
									"_amount": "The amount of tokens to burn."
								}
							},
							"burnFrom(address,uint256)": {
								"details": "Function to burn tokens from a specific address.      Only callable by an address with the _BURNFROM role, and if the contract is not paused.",
								"params": {
									"_amount": "The amount of tokens to burn.",
									"_from": "The address to burn tokens from."
								}
							},
							"constructor": {
								"details": "Constructor that sets the token name, symbol, and initial minting.      It also grants necessary roles to the deployer and sets initial parameters such as the supply cap."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"disableMint(bool)": {
								"details": "Function to disable or enable minting.      Only callable by an admin.",
								"params": {
									"_disableMinting": "Boolean indicating whether minting should be disabled (true) or enabled (false)."
								}
							},
							"disableMintTo(bool)": {
								"details": "Function to disable or enable minting to specific addresses.      Only callable by an admin.",
								"params": {
									"_disableMintTo": "Boolean indicating whether minting to specific addresses should be disabled (true) or enabled (false)."
								}
							},
							"ethRescue(address,uint256)": {
								"details": "Function to rescue Ether sent to the contract by mistake.      Only callable by an account with the _RESCUE role.",
								"params": {
									"_dest": "The address to send the rescued Ether to.",
									"_etherAmount": "The amount of Ether to rescue (in wei)."
								}
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"mint(uint256)": {
								"details": "Function to mint tokens to the caller.      Only callable by an address with the _MINT role, and if minting is enabled and contract is not paused.",
								"params": {
									"_amount": "The amount of tokens to mint."
								}
							},
							"mintTo(address,uint256)": {
								"details": "Function to mint tokens to a specific address.      Only callable by an address with the _MINTTO role, and if minting to is enabled and contract is not paused.",
								"params": {
									"_amount": "The amount of tokens to mint.",
									"_to": "The address to mint tokens to."
								}
							},
							"moveERC20(address,address,uint256)": {
								"details": "Function to rescue ERC20 tokens sent to the contract by mistake.      Only callable by an account with the _RESCUE role.",
								"params": {
									"_ERC20": "The ERC20 token contract to rescue.",
									"_ERC20Amount": "The amount of tokens to rescue.",
									"_dest": "The address to send the rescued tokens to."
								}
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"setPaused(bool)": {
								"details": "Function to pause or unpause the contract's operations.       Only callable by an admin.",
								"params": {
									"_paused": "Boolean indicating whether the contract should be paused (true) or unpaused (false)."
								}
							},
							"setSupplyCap(uint256)": {
								"details": "Function to change the supply cap of the token.      Only callable by an admin.",
								"params": {
									"_supplyCap": "The new supply cap."
								}
							},
							"setTxFee(uint256)": {
								"details": "Function to update the transaction fee for transfers.      Only callable by an admin.",
								"params": {
									"_newFee": "The new transaction fee."
								}
							},
							"setWhitelistAddress(address,bool)": {
								"details": "Function to add or remove an address from the whitelist. Whitelisted addresses are exempt from transfer fees.      Only callable by an admin.",
								"params": {
									"_status": "Boolean indicating whether to add (true) or remove (false) the address from the whitelist.",
									"_whitelist": "The address to whitelist or remove from the whitelist."
								}
							},
							"supplyCap()": {
								"details": "Function to get the current supply cap.",
								"returns": {
									"_0": "The current supply cap."
								}
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "Overrides the `transfer` function to apply a transaction fee unless the sender is whitelisted.",
								"params": {
									"to": "The address receiving tokens.",
									"value": "The amount of tokens to transfer."
								},
								"returns": {
									"_0": "True if the transfer was successful."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Overrides the `transferFrom` function to apply a transaction fee unless the sender is whitelisted.      The transfer will reduce the spender's allowance if applicable.",
								"params": {
									"from": "The address sending tokens.",
									"to": "The address receiving tokens.",
									"value": "The amount of tokens to transfer."
								},
								"returns": {
									"_0": "True if the transfer was successful."
								}
							}
						},
						"title": "EqualFiToken",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/token.sol\":768:14133  contract EqualFiToken is ERC20, AccessControl, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"src/token.sol\":2050:2054  5e15 */\n  0x11c37937e08000\n    /* \"src/token.sol\":2030:2054  uint public txFee = 5e15 */\n  0x08\n  sstore\n    /* \"src/token.sol\":4505:5130  constructor() ERC20(\"Token\", \"TKN\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x546f6b656e000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x544b4e0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n  0x01\n    /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2061:2068  _status */\n  0x06\n    /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2061:2082  _status = NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"src/token.sol\":4558:4562  1e25 */\n  0x084595161401484a000000\n    /* \"src/token.sol\":4551:4555  _cap */\n  0x07\n    /* \"src/token.sol\":4551:4562  _cap = 1e25 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"src/token.sol\":4656:4661  false */\n  0x00\n    /* \"src/token.sol\":4641:4653  mintDisabled */\n  0x09\n  0x01\n    /* \"src/token.sol\":4641:4661  mintDisabled = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/token.sol\":4716:4721  false */\n  0x00\n    /* \"src/token.sol\":4699:4713  mintToDisabled */\n  0x09\n  0x02\n    /* \"src/token.sol\":4699:4721  mintToDisabled = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/token.sol\":4781:4825  _grantRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n  tag_11\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"src/token.sol\":4792:4810  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"src/token.sol\":4812:4824  _msgSender() */\n  tag_12\n    /* \"src/token.sol\":4812:4822  _msgSender */\n  shl(0x20, tag_13)\n    /* \"src/token.sol\":4812:4824  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"src/token.sol\":4781:4791  _grantRole */\n  shl(0x20, tag_14)\n    /* \"src/token.sol\":4781:4825  _grantRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n  pop\n    /* \"src/token.sol\":4883:4915  _grantRole(_ADMIN, _msgSender()) */\n  tag_15\n    /* \"src/token.sol\":1645:1664  keccak256(\"_ADMIN\") */\n  0xae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d3\n    /* \"src/token.sol\":4902:4914  _msgSender() */\n  tag_16\n    /* \"src/token.sol\":4902:4912  _msgSender */\n  shl(0x20, tag_13)\n    /* \"src/token.sol\":4902:4914  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"src/token.sol\":4883:4893  _grantRole */\n  shl(0x20, tag_14)\n    /* \"src/token.sol\":4883:4915  _grantRole(_ADMIN, _msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n  pop\n    /* \"src/token.sol\":4925:4956  _grantRole(_MINT, _msgSender()) */\n  tag_17\n    /* \"src/token.sol\":1026:1044  keccak256(\"_MINT\") */\n  0x8c66330d9d4f6aba064f25ef2a307366ea6d917616f44c075aa60fa15e5cb1cb\n    /* \"src/token.sol\":4943:4955  _msgSender() */\n  tag_18\n    /* \"src/token.sol\":4943:4953  _msgSender */\n  shl(0x20, tag_13)\n    /* \"src/token.sol\":4943:4955  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"src/token.sol\":4925:4935  _grantRole */\n  shl(0x20, tag_14)\n    /* \"src/token.sol\":4925:4956  _grantRole(_MINT, _msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n  pop\n    /* \"src/token.sol\":4966:4997  _grantRole(_BURN, _msgSender()) */\n  tag_19\n    /* \"src/token.sol\":1268:1286  keccak256(\"_BURN\") */\n  0x9edfad36e7d4d9da54b4f78f22bf97cb5b58bb7998294a4288da41c15c647c45\n    /* \"src/token.sol\":4984:4996  _msgSender() */\n  tag_20\n    /* \"src/token.sol\":4984:4994  _msgSender */\n  shl(0x20, tag_13)\n    /* \"src/token.sol\":4984:4996  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"src/token.sol\":4966:4976  _grantRole */\n  shl(0x20, tag_14)\n    /* \"src/token.sol\":4966:4997  _grantRole(_BURN, _msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n  pop\n    /* \"src/token.sol\":5098:5123  _mint(_msgSender(), 1e24) */\n  tag_21\n    /* \"src/token.sol\":5104:5116  _msgSender() */\n  tag_22\n    /* \"src/token.sol\":5104:5114  _msgSender */\n  shl(0x20, tag_13)\n    /* \"src/token.sol\":5104:5116  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_22:\n    /* \"src/token.sol\":5118:5122  1e24 */\n  0xd3c21bcecceda1000000\n    /* \"src/token.sol\":5098:5103  _mint */\n  shl(0x20, tag_23)\n    /* \"src/token.sol\":5098:5123  _mint(_msgSender(), 1e24) */\n  0x20\n  shr\n  jump\t// in\ntag_21:\n    /* \"src/token.sol\":768:14133  contract EqualFiToken is ERC20, AccessControl, ReentrancyGuard {... */\n  jump(tag_24)\n    /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_13:\n    /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_14:\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  tag_27\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6285:6289  role */\n  dup4\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6291:6298  account */\n  dup4\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n  shl(0x20, tag_28)\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_29\n  jumpi\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x05\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6322:6326  role */\n  dup6\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n  0x00\n  add\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6336:6343  account */\n  dup5\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_30\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n  shl(0x20, tag_13)\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_30:\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  pop\n  jump(tag_26)\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_29:\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_26:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_23:\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n  dup3\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_33\n  jumpi\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_34\n  swap2\n  swap1\n  tag_35\n  jump\t// in\ntag_34:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_33:\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_36\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  shl(0x20, tag_37)\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_36:\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_28:\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2931:2935  bool */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  0x05\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2961:2965  role */\n  dup5\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n  0x00\n  add\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2975:2982  account */\n  dup4\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_37:\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n  dup4\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_40\n  jumpi\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_41\n  swap2\n  swap1\n  tag_42\n  jump\t// in\ntag_41:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  jump(tag_43)\ntag_40:\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n  dup1\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n  dup6\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n  dup2\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n  dup2\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  lt\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_44\n  jumpi\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n  dup4\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n  dup2\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n  dup4\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_45\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_46\n  jump\t// in\ntag_45:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_44:\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n  dup2\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n  dup2\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  sub\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  dup1\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n  dup7\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_43:\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n  dup3\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_47\n  jumpi\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n  dup1\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_48)\ntag_47:\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n  dup1\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  dup1\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n  dup5\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_48:\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_49\n  swap2\n  swap1\n  tag_50\n  jump\t// in\ntag_49:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_51:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_52:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_53:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_54:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_81\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_81:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_82\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_83\n  tag_53\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":714:798   */\ntag_82:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_55:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_56:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_57:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_58:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_88\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_57\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":1429:1468   */\n  tag_89\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_57\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_59:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_60:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_61:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_93\n    /* \"#utility.yul\":1818:1852   */\n  tag_94\n    /* \"#utility.yul\":1827:1851   */\n  tag_95\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_59\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":1818:1852   */\n  tag_60\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":1800:1853   */\n  tag_59\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_62:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_63:\n    /* \"#utility.yul\":2056:2095   */\n  tag_98\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_61\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":2117:2208   */\n  tag_99\n    /* \"#utility.yul\":2166:2207   */\n  tag_100\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_62\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_58\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_64:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_65:\n    /* \"#utility.yul\":2377:2409   */\n  tag_103\n  tag_64\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":2418:2483   */\n  tag_104\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_63\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_66:\n    /* \"#utility.yul\":2555:2675   */\ntag_106:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_108\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_109\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_65\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_106)\ntag_108:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_67:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_112\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_55\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":2906:2935   */\n  tag_113\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_56\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_114:\n    /* \"#utility.yul\":3133:3213   */\n  tag_115\n    /* \"#utility.yul\":3189:3211   */\n  tag_116\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_56\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_66\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_111:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_68:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_69:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_119\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_68\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_70:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_121\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_69\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_7:\n    /* \"#utility.yul\":3950:3987   */\n  tag_123\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_51\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_124\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_125\n  tag_52\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":4038:4094   */\ntag_124:\n    /* \"#utility.yul\":4118:4156   */\n  tag_126\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_54\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":4203:4270   */\n  tag_127\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_67\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_129\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_130:\n    /* \"#utility.yul\":5144:5211   */\n  tag_131\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_70\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_128)\n    /* \"#utility.yul\":4365:4983   */\ntag_129:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_132\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_55\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_133:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_135\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_133)\ntag_135:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_137\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_69\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_136:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_128:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5360   */\ntag_71:\n    /* \"#utility.yul\":5271:5278   */\n  0x00\n    /* \"#utility.yul\":5311:5353   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5304:5309   */\n  dup3\n    /* \"#utility.yul\":5300:5354   */\n  and\n    /* \"#utility.yul\":5289:5354   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5360   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5366:5462   */\ntag_72:\n    /* \"#utility.yul\":5403:5410   */\n  0x00\n    /* \"#utility.yul\":5432:5456   */\n  tag_140\n    /* \"#utility.yul\":5450:5455   */\n  dup3\n    /* \"#utility.yul\":5432:5456   */\n  tag_71\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":5421:5456   */\n  swap1\n  pop\n    /* \"#utility.yul\":5366:5462   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5468:5586   */\ntag_73:\n    /* \"#utility.yul\":5555:5579   */\n  tag_142\n    /* \"#utility.yul\":5573:5578   */\n  dup2\n    /* \"#utility.yul\":5555:5579   */\n  tag_72\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":5550:5553   */\n  dup3\n    /* \"#utility.yul\":5543:5580   */\n  mstore\n    /* \"#utility.yul\":5468:5586   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5592:5814   */\ntag_35:\n    /* \"#utility.yul\":5685:5689   */\n  0x00\n    /* \"#utility.yul\":5723:5725   */\n  0x20\n    /* \"#utility.yul\":5712:5721   */\n  dup3\n    /* \"#utility.yul\":5708:5726   */\n  add\n    /* \"#utility.yul\":5700:5726   */\n  swap1\n  pop\n    /* \"#utility.yul\":5736:5807   */\n  tag_144\n    /* \"#utility.yul\":5804:5805   */\n  0x00\n    /* \"#utility.yul\":5793:5802   */\n  dup4\n    /* \"#utility.yul\":5789:5806   */\n  add\n    /* \"#utility.yul\":5780:5786   */\n  dup5\n    /* \"#utility.yul\":5736:5807   */\n  tag_73\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":5592:5814   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5820:6000   */\ntag_74:\n    /* \"#utility.yul\":5868:5945   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5865:5866   */\n  0x00\n    /* \"#utility.yul\":5858:5946   */\n  mstore\n    /* \"#utility.yul\":5965:5969   */\n  0x11\n    /* \"#utility.yul\":5962:5963   */\n  0x04\n    /* \"#utility.yul\":5955:5970   */\n  mstore\n    /* \"#utility.yul\":5989:5993   */\n  0x24\n    /* \"#utility.yul\":5986:5987   */\n  0x00\n    /* \"#utility.yul\":5979:5994   */\n  revert\n    /* \"#utility.yul\":6006:6197   */\ntag_42:\n    /* \"#utility.yul\":6046:6049   */\n  0x00\n    /* \"#utility.yul\":6065:6085   */\n  tag_147\n    /* \"#utility.yul\":6083:6084   */\n  dup3\n    /* \"#utility.yul\":6065:6085   */\n  tag_59\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":6060:6085   */\n  swap2\n  pop\n    /* \"#utility.yul\":6099:6119   */\n  tag_148\n    /* \"#utility.yul\":6117:6118   */\n  dup4\n    /* \"#utility.yul\":6099:6119   */\n  tag_59\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":6094:6119   */\n  swap3\n  pop\n    /* \"#utility.yul\":6142:6143   */\n  dup3\n    /* \"#utility.yul\":6139:6140   */\n  dup3\n    /* \"#utility.yul\":6135:6144   */\n  add\n    /* \"#utility.yul\":6128:6144   */\n  swap1\n  pop\n    /* \"#utility.yul\":6163:6166   */\n  dup1\n    /* \"#utility.yul\":6160:6161   */\n  dup3\n    /* \"#utility.yul\":6157:6167   */\n  gt\n    /* \"#utility.yul\":6154:6190   */\n  iszero\n  tag_149\n  jumpi\n    /* \"#utility.yul\":6170:6188   */\n  tag_150\n  tag_74\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":6154:6190   */\ntag_149:\n    /* \"#utility.yul\":6006:6197   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6203:6321   */\ntag_75:\n    /* \"#utility.yul\":6290:6314   */\n  tag_152\n    /* \"#utility.yul\":6308:6313   */\n  dup2\n    /* \"#utility.yul\":6290:6314   */\n  tag_59\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":6285:6288   */\n  dup3\n    /* \"#utility.yul\":6278:6315   */\n  mstore\n    /* \"#utility.yul\":6203:6321   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6327:6769   */\ntag_46:\n    /* \"#utility.yul\":6476:6480   */\n  0x00\n    /* \"#utility.yul\":6514:6516   */\n  0x60\n    /* \"#utility.yul\":6503:6512   */\n  dup3\n    /* \"#utility.yul\":6499:6517   */\n  add\n    /* \"#utility.yul\":6491:6517   */\n  swap1\n  pop\n    /* \"#utility.yul\":6527:6598   */\n  tag_154\n    /* \"#utility.yul\":6595:6596   */\n  0x00\n    /* \"#utility.yul\":6584:6593   */\n  dup4\n    /* \"#utility.yul\":6580:6597   */\n  add\n    /* \"#utility.yul\":6571:6577   */\n  dup7\n    /* \"#utility.yul\":6527:6598   */\n  tag_73\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":6608:6680   */\n  tag_155\n    /* \"#utility.yul\":6676:6678   */\n  0x20\n    /* \"#utility.yul\":6665:6674   */\n  dup4\n    /* \"#utility.yul\":6661:6679   */\n  add\n    /* \"#utility.yul\":6652:6658   */\n  dup6\n    /* \"#utility.yul\":6608:6680   */\n  tag_75\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":6690:6762   */\n  tag_156\n    /* \"#utility.yul\":6758:6760   */\n  0x40\n    /* \"#utility.yul\":6747:6756   */\n  dup4\n    /* \"#utility.yul\":6743:6761   */\n  add\n    /* \"#utility.yul\":6734:6740   */\n  dup5\n    /* \"#utility.yul\":6690:6762   */\n  tag_75\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":6327:6769   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6775:6997   */\ntag_50:\n    /* \"#utility.yul\":6868:6872   */\n  0x00\n    /* \"#utility.yul\":6906:6908   */\n  0x20\n    /* \"#utility.yul\":6895:6904   */\n  dup3\n    /* \"#utility.yul\":6891:6909   */\n  add\n    /* \"#utility.yul\":6883:6909   */\n  swap1\n  pop\n    /* \"#utility.yul\":6919:6990   */\n  tag_158\n    /* \"#utility.yul\":6987:6988   */\n  0x00\n    /* \"#utility.yul\":6976:6985   */\n  dup4\n    /* \"#utility.yul\":6972:6989   */\n  add\n    /* \"#utility.yul\":6963:6969   */\n  dup5\n    /* \"#utility.yul\":6919:6990   */\n  tag_75\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":6775:6997   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"src/token.sol\":768:14133  contract EqualFiToken is ERC20, AccessControl, ReentrancyGuard {... */\ntag_24:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/token.sol\":768:14133  contract EqualFiToken is ERC20, AccessControl, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x79cc6790\n      gt\n      tag_45\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_46\n      jumpi\n      dup1\n      0xd547741f\n      gt\n      tag_47\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xdeb6db36\n      eq\n      tag_41\n      jumpi\n      dup1\n      0xea5cb532\n      eq\n      tag_42\n      jumpi\n      dup1\n      0xf05d16f7\n      eq\n      tag_43\n      jumpi\n      dup1\n      0xf2250d3d\n      eq\n      tag_44\n      jumpi\n      jump(tag_2)\n    tag_47:\n      dup1\n      0xa9059cbb\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xb6a3f59a\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xc30796ab\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xcf820461\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xd1c9f69b\n      eq\n      tag_38\n      jumpi\n      jump(tag_2)\n    tag_46:\n      dup1\n      0x91d14854\n      gt\n      tag_48\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x956feccf\n      eq\n      tag_30\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_33\n      jumpi\n      jump(tag_2)\n    tag_48:\n      dup1\n      0x79cc6790\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x7e92a7fd\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x8d580b9f\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x8ebed5b1\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x8f770ad0\n      eq\n      tag_28\n      jumpi\n      jump(tag_2)\n    tag_45:\n      dup1\n      0x36568abe\n      gt\n      tag_49\n      jumpi\n      dup1\n      0x48132f48\n      gt\n      tag_50\n      jumpi\n      dup1\n      0x48132f48\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x51557289\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x53a4c31e\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x6ba77a38\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_50:\n      dup1\n      0x36568abe\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x3f914aef\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x41f431fd\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x449a52f8\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_49:\n      dup1\n      0x18160ddd\n      gt\n      tag_51\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_51:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x060cf4e8\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x16c38b3c\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/token.sol\":1924:1940  uint public _cap */\n    tag_4:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_5:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/token.sol\":6175:6442  function setPaused(bool _paused) external onlyRole(_ADMIN) {... */\n    tag_7:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      stop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_8:\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/token.sol\":11514:12260  function transferFrom(address from, address to, uint256 value) nonReentrant public virtual override returns (bool) {... */\n    tag_9:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_10:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_11:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      tag_92\n      jump\t// in\n    tag_89:\n      stop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_12:\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_13:\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n    tag_97:\n      stop\n        /* \"src/token.sol\":8507:8715  function setWhitelistAddress(address _whitelist, bool _status) external onlyRole(_ADMIN) {... */\n    tag_14:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      tag_103\n      jump\t// in\n    tag_100:\n      stop\n        /* \"src/token.sol\":13397:13638  function moveERC20(IERC20 _ERC20, address _dest, uint _ERC20Amount) nonReentrant public onlyRole(_RESCUE) {... */\n    tag_15:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      tag_107\n      jump\t// in\n    tag_104:\n      stop\n        /* \"src/token.sol\":10400:10555  function burn(uint _amount) external pause onlyRole(_BURN) { ... */\n    tag_16:\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      tag_111\n      jump\t// in\n    tag_108:\n      stop\n        /* \"src/token.sol\":9364:9612  function mintTo(address _to, uint _amount) external pause mintToDis onlyRole(_MINTTO) {... */\n    tag_17:\n      tag_112\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_113\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_113:\n      tag_114\n      jump\t// in\n    tag_112:\n      stop\n        /* \"src/token.sol\":13922:14126  function ethRescue(address payable _dest, uint _etherAmount) nonReentrant public onlyRole(_RESCUE) {... */\n    tag_18:\n      tag_115\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      tag_118\n      jump\t// in\n    tag_115:\n      stop\n        /* \"src/token.sol\":1612:1664  bytes32 public constant _ADMIN = keccak256(\"_ADMIN\") */\n    tag_19:\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/token.sol\":1236:1286  bytes32 public constant _BURN = keccak256(\"_BURN\") */\n    tag_20:\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      tag_124\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/token.sol\":2117:2135  bool public paused */\n    tag_21:\n      tag_125\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      tag_127\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/token.sol\":1368:1426  bytes32 public constant _BURNFROM = keccak256(\"_BURNFROM\") */\n    tag_22:\n      tag_128\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      tag_130\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_23:\n      tag_131\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_132\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      tag_134\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      tag_135\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/token.sol\":10843:11024  function burnFrom(address _from, uint _amount) external pause onlyRole(_BURNFROM) {... */\n    tag_24:\n      tag_136\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_137:\n      tag_138\n      jump\t// in\n    tag_136:\n      stop\n        /* \"src/token.sol\":1124:1178  bytes32 public constant _MINTTO = keccak256(\"_MINTTO\") */\n    tag_25:\n      tag_139\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      tag_141\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/token.sol\":1733:1787  bytes32 public constant _RESCUE = keccak256(\"_RESCUE\") */\n    tag_26:\n      tag_142\n      tag_143\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      tag_144\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/token.sol\":994:1044  bytes32 public constant _MINT = keccak256(\"_MINT\") */\n    tag_27:\n      tag_145\n      tag_146\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      tag_147\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/token.sol\":8055:8131  function supplyCap() public view returns (uint) {... */\n    tag_28:\n      tag_148\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      tag_150\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_29:\n      tag_151\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_152\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_152:\n      tag_153\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      tag_154\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/token.sol\":2182:2206  bool public mintDisabled */\n    tag_30:\n      tag_155\n      tag_156\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      tag_157\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_31:\n      tag_158\n      tag_159\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      tag_160\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/token.sol\":9852:10083  function mint(uint _amount) external pause mintDis onlyRole(_MINT) {... */\n    tag_32:\n      tag_161\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_162\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_162:\n      tag_163\n      jump\t// in\n    tag_161:\n      stop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_33:\n      tag_164\n      tag_165\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      tag_166\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/token.sol\":12542:12977  function transfer(address to, uint256 value) nonReentrant public virtual override returns (bool) {... */\n    tag_34:\n      tag_167\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_168\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_168:\n      tag_169\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      tag_170\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/token.sol\":7701:7942  function setSupplyCap(uint _supplyCap) external pause onlyRole(_SUPPLY) {... */\n    tag_35:\n      tag_171\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_172\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_172:\n      tag_173\n      jump\t// in\n    tag_171:\n      stop\n        /* \"src/token.sol\":4168:4218  mapping(address => bool) public whitelistedAddress */\n    tag_36:\n      tag_174\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_175\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_175:\n      tag_176\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      tag_177\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/token.sol\":2030:2054  uint public txFee = 5e15 */\n    tag_37:\n      tag_178\n      tag_179\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      tag_180\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/token.sol\":2275:2301  bool public mintToDisabled */\n    tag_38:\n      tag_181\n      tag_182\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      tag_183\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_39:\n      tag_184\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_185\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_185:\n      tag_186\n      jump\t// in\n    tag_184:\n      stop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_40:\n      tag_187\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_188\n      swap2\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n      tag_190\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      tag_191\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/token.sol\":6665:6963  function disableMint(bool _disableMinting) external onlyRole(_ADMIN) {... */\n    tag_41:\n      tag_192\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_193\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_193:\n      tag_194\n      jump\t// in\n    tag_192:\n      stop\n        /* \"src/token.sol\":1494:1548  bytes32 public constant _SUPPLY = keccak256(\"_SUPPLY\") */\n    tag_42:\n      tag_195\n      tag_196\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      tag_197\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/token.sol\":8889:8982  function setTxFee(uint256 _newFee) external onlyRole(_ADMIN) {... */\n    tag_43:\n      tag_198\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_199\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_199:\n      tag_200\n      jump\t// in\n    tag_198:\n      stop\n        /* \"src/token.sol\":7232:7535  function disableMintTo(bool _disableMintTo) external onlyRole(_ADMIN) {... */\n    tag_44:\n      tag_201\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_202\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_202:\n      tag_203\n      jump\t// in\n    tag_201:\n      stop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_55:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2688:2720  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2673:2684  interfaceId */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_205\n      jumpi\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_206\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2748:2759  interfaceId */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2724:2747  super.supportsInterface */\n      tag_207\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_206:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_205:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/token.sol\":1924:1940  uint public _cap */\n    tag_59:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_63:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_209\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_211\n      swap1\n      tag_210\n      jump\t// in\n    tag_211:\n      dup1\n      iszero\n      tag_212\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_213\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_212)\n    tag_213:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_214:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_214\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_212:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_69:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_216\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_217\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_216:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_218\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_219\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_218:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/token.sol\":6175:6442  function setPaused(bool _paused) external onlyRole(_ADMIN) {... */\n    tag_74:\n        /* \"src/token.sol\":1645:1664  keccak256(\"_ADMIN\") */\n      0xae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_221\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_222\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_221:\n        /* \"src/token.sol\":6253:6260  _paused */\n      dup2\n        /* \"src/token.sol\":6244:6250  paused */\n      0x09\n      0x00\n        /* \"src/token.sol\":6244:6260  paused = _paused */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/token.sol\":6275:6282  _paused */\n      dup2\n        /* \"src/token.sol\":6271:6436  if (_paused) {... */\n      iszero\n      tag_224\n      jumpi\n        /* \"src/token.sol\":6303:6345  ContractPaused(block.number, _msgSender()) */\n      0xd8c9c5623123df8e137854c59a08f9084b75609fe24584228d44ffdce5ab920a\n        /* \"src/token.sol\":6318:6330  block.number */\n      number\n        /* \"src/token.sol\":6332:6344  _msgSender() */\n      tag_225\n        /* \"src/token.sol\":6332:6342  _msgSender */\n      tag_217\n        /* \"src/token.sol\":6332:6344  _msgSender() */\n      jump\t// in\n    tag_225:\n        /* \"src/token.sol\":6303:6345  ContractPaused(block.number, _msgSender()) */\n      mload(0x40)\n      tag_226\n      swap3\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/token.sol\":6271:6436  if (_paused) {... */\n      jump(tag_228)\n    tag_224:\n        /* \"src/token.sol\":6381:6425  ContractUnpaused(block.number, _msgSender()) */\n      0x1e7a7234ad01ed7353bf129217f5c162773639a6cb22773e84bcd5a2b0ef362e\n        /* \"src/token.sol\":6398:6410  block.number */\n      number\n        /* \"src/token.sol\":6412:6424  _msgSender() */\n      tag_229\n        /* \"src/token.sol\":6412:6422  _msgSender */\n      tag_217\n        /* \"src/token.sol\":6412:6424  _msgSender() */\n      jump\t// in\n    tag_229:\n        /* \"src/token.sol\":6381:6425  ContractUnpaused(block.number, _msgSender()) */\n      mload(0x40)\n      tag_230\n      swap3\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_230:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/token.sol\":6271:6436  if (_paused) {... */\n    tag_228:\n        /* \"src/token.sol\":6175:6442  function setPaused(bool _paused) external onlyRole(_ADMIN) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_76:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"src/token.sol\":11514:12260  function transferFrom(address from, address to, uint256 value) nonReentrant public virtual override returns (bool) {... */\n    tag_81:\n        /* \"src/token.sol\":11623:11627  bool */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_233\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_234\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_233:\n        /* \"src/token.sol\":11639:11654  address spender */\n      0x00\n        /* \"src/token.sol\":11657:11669  _msgSender() */\n      tag_236\n        /* \"src/token.sol\":11657:11667  _msgSender */\n      tag_217\n        /* \"src/token.sol\":11657:11669  _msgSender() */\n      jump\t// in\n    tag_236:\n        /* \"src/token.sol\":11639:11669  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"src/token.sol\":11679:11703  uint256 currentAllowance */\n      0x00\n        /* \"src/token.sol\":11706:11730  allowance(from, spender) */\n      tag_237\n        /* \"src/token.sol\":11716:11720  from */\n      dup7\n        /* \"src/token.sol\":11722:11729  spender */\n      dup4\n        /* \"src/token.sol\":11706:11715  allowance */\n      tag_190\n        /* \"src/token.sol\":11706:11730  allowance(from, spender) */\n      jump\t// in\n    tag_237:\n        /* \"src/token.sol\":11679:11730  uint256 currentAllowance = allowance(from, spender) */\n      swap1\n      pop\n        /* \"src/token.sol\":11768:11773  value */\n      dup4\n        /* \"src/token.sol\":11748:11764  currentAllowance */\n      dup2\n        /* \"src/token.sol\":11748:11773  currentAllowance >= value */\n      lt\n      iszero\n        /* \"src/token.sol\":11740:11818  require(currentAllowance >= value, \"ERC20: transfer amount exceeds allowance\") */\n      tag_238\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_239\n      swap1\n      tag_240\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_238:\n        /* \"src/token.sol\":11894:11943  _approve(from, spender, currentAllowance - value) */\n      tag_241\n        /* \"src/token.sol\":11903:11907  from */\n      dup7\n        /* \"src/token.sol\":11909:11916  spender */\n      dup4\n        /* \"src/token.sol\":11937:11942  value */\n      dup7\n        /* \"src/token.sol\":11918:11934  currentAllowance */\n      dup5\n        /* \"src/token.sol\":11918:11942  currentAllowance - value */\n      tag_242\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:\n        /* \"src/token.sol\":11894:11902  _approve */\n      tag_219\n        /* \"src/token.sol\":11894:11943  _approve(from, spender, currentAllowance - value) */\n      jump\t// in\n    tag_241:\n        /* \"src/token.sol\":11989:11993  true */\n      0x01\n        /* \"src/token.sol\":11958:11993  whitelistedAddress[spender] == true */\n      iszero\n      iszero\n        /* \"src/token.sol\":11958:11976  whitelistedAddress */\n      0x0a\n        /* \"src/token.sol\":11958:11985  whitelistedAddress[spender] */\n      0x00\n        /* \"src/token.sol\":11977:11984  spender */\n      dup5\n        /* \"src/token.sol\":11958:11985  whitelistedAddress[spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/token.sol\":11958:11993  whitelistedAddress[spender] == true */\n      iszero\n      iszero\n      sub\n        /* \"src/token.sol\":11954:12232  if (whitelistedAddress[spender] == true) {... */\n      tag_244\n      jumpi\n        /* \"src/token.sol\":12009:12035  _transfer(from, to, value) */\n      tag_245\n        /* \"src/token.sol\":12019:12023  from */\n      dup7\n        /* \"src/token.sol\":12025:12027  to */\n      dup7\n        /* \"src/token.sol\":12029:12034  value */\n      dup7\n        /* \"src/token.sol\":12009:12018  _transfer */\n      tag_246\n        /* \"src/token.sol\":12009:12035  _transfer(from, to, value) */\n      jump\t// in\n    tag_245:\n        /* \"src/token.sol\":11954:12232  if (whitelistedAddress[spender] == true) {... */\n      jump(tag_247)\n    tag_244:\n        /* \"src/token.sol\":12113:12139  _transfer(from, to, value) */\n      tag_248\n        /* \"src/token.sol\":12123:12127  from */\n      dup7\n        /* \"src/token.sol\":12129:12131  to */\n      dup7\n        /* \"src/token.sol\":12133:12138  value */\n      dup7\n        /* \"src/token.sol\":12113:12122  _transfer */\n      tag_246\n        /* \"src/token.sol\":12113:12139  _transfer(from, to, value) */\n      jump\t// in\n    tag_248:\n        /* \"src/token.sol\":12203:12221  _burn(from, txFee) */\n      tag_249\n        /* \"src/token.sol\":12209:12213  from */\n      dup7\n        /* \"src/token.sol\":12215:12220  txFee */\n      sload(0x08)\n        /* \"src/token.sol\":12203:12208  _burn */\n      tag_250\n        /* \"src/token.sol\":12203:12221  _burn(from, txFee) */\n      jump\t// in\n    tag_249:\n        /* \"src/token.sol\":11954:12232  if (whitelistedAddress[spender] == true) {... */\n    tag_247:\n        /* \"src/token.sol\":12249:12253  true */\n      0x01\n        /* \"src/token.sol\":12242:12253  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_251\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2542:2560  _nonReentrantAfter */\n      tag_252\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      jump\t// in\n    tag_251:\n        /* \"src/token.sol\":11514:12260  function transferFrom(address from, address to, uint256 value) nonReentrant public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_86:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x05\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3908:3912  role */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_92:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_254\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4313:4317  role */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n      tag_86\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      jump\t// in\n    tag_254:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_256\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_222\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_256:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_258\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_259\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_258:\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_94:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_99:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      tag_262\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5443:5453  _msgSender */\n      tag_217\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      jump\t// in\n    tag_262:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5421:5439  callerConfirmation */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_263\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_263:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_264\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_265\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_264:\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/token.sol\":8507:8715  function setWhitelistAddress(address _whitelist, bool _status) external onlyRole(_ADMIN) {... */\n    tag_103:\n        /* \"src/token.sol\":1645:1664  keccak256(\"_ADMIN\") */\n      0xae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_267\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_222\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_267:\n        /* \"src/token.sol\":8636:8637  0 */\n      0x00\n        /* \"src/token.sol\":8614:8638  _whitelist != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/token.sol\":8614:8624  _whitelist */\n      dup4\n        /* \"src/token.sol\":8614:8638  _whitelist != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/token.sol\":8606:8658  require(_whitelist != address(0), \"Invalid address\") */\n      tag_269\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_270\n      swap1\n      tag_271\n      jump\t// in\n    tag_270:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_269:\n        /* \"src/token.sol\":8701:8708  _status */\n      dup2\n        /* \"src/token.sol\":8668:8686  whitelistedAddress */\n      0x0a\n        /* \"src/token.sol\":8668:8698  whitelistedAddress[_whitelist] */\n      0x00\n        /* \"src/token.sol\":8687:8697  _whitelist */\n      dup6\n        /* \"src/token.sol\":8668:8698  whitelistedAddress[_whitelist] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/token.sol\":8668:8708  whitelistedAddress[_whitelist] = _status */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/token.sol\":8507:8715  function setWhitelistAddress(address _whitelist, bool _status) external onlyRole(_ADMIN) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/token.sol\":13397:13638  function moveERC20(IERC20 _ERC20, address _dest, uint _ERC20Amount) nonReentrant public onlyRole(_RESCUE) {... */\n    tag_107:\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_273\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_234\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_273:\n        /* \"src/token.sol\":1767:1787  keccak256(\"_RESCUE\") */\n      0x508f8f8be8f5dbcb88f4f4500430b8b3684c471ed936f31fea912c78ad46a6b9\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_275\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_222\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_275:\n        /* \"src/token.sol\":13513:13561  IERC20(_ERC20).safeTransfer(_dest, _ERC20Amount) */\n      tag_277\n        /* \"src/token.sol\":13541:13546  _dest */\n      dup4\n        /* \"src/token.sol\":13548:13560  _ERC20Amount */\n      dup4\n        /* \"src/token.sol\":13520:13526  _ERC20 */\n      dup7\n        /* \"src/token.sol\":13513:13540  IERC20(_ERC20).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_278\n      swap1\n        /* \"src/token.sol\":13513:13561  IERC20(_ERC20).safeTransfer(_dest, _ERC20Amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_277:\n        /* \"src/token.sol\":13576:13631  ERC20Rescued(_ERC20, block.number, _dest, _ERC20Amount) */\n      0x494215f965756bbc8b7f57addd2a0ebdbce467a4999f8320c67adc1771885d7b\n        /* \"src/token.sol\":13589:13595  _ERC20 */\n      dup5\n        /* \"src/token.sol\":13597:13609  block.number */\n      number\n        /* \"src/token.sol\":13611:13616  _dest */\n      dup6\n        /* \"src/token.sol\":13618:13630  _ERC20Amount */\n      dup6\n        /* \"src/token.sol\":13576:13631  ERC20Rescued(_ERC20, block.number, _dest, _ERC20Amount) */\n      mload(0x40)\n      tag_279\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_280\n      jump\t// in\n    tag_279:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2531:2532  _ */\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_281\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2542:2560  _nonReentrantAfter */\n      tag_252\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      jump\t// in\n    tag_281:\n        /* \"src/token.sol\":13397:13638  function moveERC20(IERC20 _ERC20, address _dest, uint _ERC20Amount) nonReentrant public onlyRole(_RESCUE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/token.sol\":10400:10555  function burn(uint _amount) external pause onlyRole(_BURN) { ... */\n    tag_111:\n        /* \"src/token.sol\":5358:5364  paused */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/token.sol\":5357:5364  !paused */\n      iszero\n        /* \"src/token.sol\":5349:5397  require(!paused, \"Contract: Contract is Paused\") */\n      tag_283\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_284\n      swap1\n      tag_285\n      jump\t// in\n    tag_284:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_283:\n        /* \"src/token.sol\":1268:1286  keccak256(\"_BURN\") */\n      0x9edfad36e7d4d9da54b4f78f22bf97cb5b58bb7998294a4288da41c15c647c45\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_287\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_222\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_287:\n        /* \"src/token.sol\":10475:10510  TokensBurned(_amount, _msgSender()) */\n      0x63706707d038997d2210eb026bb1339397deab463921538a81bb98e69ee54ca8\n        /* \"src/token.sol\":10488:10495  _amount */\n      dup3\n        /* \"src/token.sol\":10497:10509  _msgSender() */\n      tag_289\n        /* \"src/token.sol\":10497:10507  _msgSender */\n      tag_217\n        /* \"src/token.sol\":10497:10509  _msgSender() */\n      jump\t// in\n    tag_289:\n        /* \"src/token.sol\":10475:10510  TokensBurned(_amount, _msgSender()) */\n      mload(0x40)\n      tag_290\n      swap3\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_290:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/token.sol\":10520:10548  _burn(_msgSender(), _amount) */\n      tag_291\n        /* \"src/token.sol\":10526:10538  _msgSender() */\n      tag_292\n        /* \"src/token.sol\":10526:10536  _msgSender */\n      tag_217\n        /* \"src/token.sol\":10526:10538  _msgSender() */\n      jump\t// in\n    tag_292:\n        /* \"src/token.sol\":10540:10547  _amount */\n      dup4\n        /* \"src/token.sol\":10520:10525  _burn */\n      tag_250\n        /* \"src/token.sol\":10520:10548  _burn(_msgSender(), _amount) */\n      jump\t// in\n    tag_291:\n        /* \"src/token.sol\":5407:5408  _ */\n      pop\n        /* \"src/token.sol\":10400:10555  function burn(uint _amount) external pause onlyRole(_BURN) { ... */\n      pop\n      jump\t// out\n        /* \"src/token.sol\":9364:9612  function mintTo(address _to, uint _amount) external pause mintToDis onlyRole(_MINTTO) {... */\n    tag_114:\n        /* \"src/token.sol\":5358:5364  paused */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/token.sol\":5357:5364  !paused */\n      iszero\n        /* \"src/token.sol\":5349:5397  require(!paused, \"Contract: Contract is Paused\") */\n      tag_294\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_295\n      swap1\n      tag_285\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_294:\n        /* \"src/token.sol\":5800:5814  mintToDisabled */\n      0x09\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/token.sol\":5799:5814  !mintToDisabled */\n      iszero\n        /* \"src/token.sol\":5791:5838  require(!mintToDisabled, \"Minting to disabled\") */\n      tag_297\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_298\n      swap1\n      tag_299\n      jump\t// in\n    tag_298:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_297:\n        /* \"src/token.sol\":1158:1178  keccak256(\"_MINTTO\") */\n      0x7d800f56a05adcb6245df540492a560d0e668aac15ee6c7dd40668064913da33\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_301\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_222\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_301:\n        /* \"src/token.sol\":9495:9499  _cap */\n      sload(0x07)\n        /* \"src/token.sol\":9484:9491  _amount */\n      dup3\n        /* \"src/token.sol\":9468:9481  totalSupply() */\n      tag_303\n        /* \"src/token.sol\":9468:9479  totalSupply */\n      tag_76\n        /* \"src/token.sol\":9468:9481  totalSupply() */\n      jump\t// in\n    tag_303:\n        /* \"src/token.sol\":9468:9491  totalSupply() + _amount */\n      tag_304\n      swap2\n      swap1\n      tag_305\n      jump\t// in\n    tag_304:\n        /* \"src/token.sol\":9468:9499  totalSupply() + _amount <= _cap */\n      gt\n      iszero\n        /* \"src/token.sol\":9460:9533  require(totalSupply() + _amount <= _cap, \"Contract: Supply Cap exceeded\") */\n      tag_306\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_307\n      swap1\n      tag_308\n      jump\t// in\n    tag_307:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_306:\n        /* \"src/token.sol\":9548:9576  TokensMintedTo(_to, _amount) */\n      0xe98063832b4ff0356868961b75f7f49b096b14ea066c9725301ad197f2f63147\n        /* \"src/token.sol\":9563:9566  _to */\n      dup4\n        /* \"src/token.sol\":9568:9575  _amount */\n      dup4\n        /* \"src/token.sol\":9548:9576  TokensMintedTo(_to, _amount) */\n      mload(0x40)\n      tag_309\n      swap3\n      swap2\n      swap1\n      tag_310\n      jump\t// in\n    tag_309:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/token.sol\":9586:9605  _mint(_to, _amount) */\n      tag_311\n        /* \"src/token.sol\":9592:9595  _to */\n      dup4\n        /* \"src/token.sol\":9597:9604  _amount */\n      dup4\n        /* \"src/token.sol\":9586:9591  _mint */\n      tag_312\n        /* \"src/token.sol\":9586:9605  _mint(_to, _amount) */\n      jump\t// in\n    tag_311:\n        /* \"src/token.sol\":5848:5849  _ */\n      pop\n        /* \"src/token.sol\":9364:9612  function mintTo(address _to, uint _amount) external pause mintToDis onlyRole(_MINTTO) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/token.sol\":13922:14126  function ethRescue(address payable _dest, uint _etherAmount) nonReentrant public onlyRole(_RESCUE) {... */\n    tag_118:\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_314\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_234\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_314:\n        /* \"src/token.sol\":1767:1787  keccak256(\"_RESCUE\") */\n      0x508f8f8be8f5dbcb88f4f4500430b8b3684c471ed936f31fea912c78ad46a6b9\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_316\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_222\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_316:\n        /* \"src/token.sol\":14031:14036  _dest */\n      dup3\n        /* \"src/token.sol\":14031:14045  _dest.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/token.sol\":14031:14059  _dest.transfer(_etherAmount) */\n      0x08fc\n        /* \"src/token.sol\":14046:14058  _etherAmount */\n      dup4\n        /* \"src/token.sol\":14031:14059  _dest.transfer(_etherAmount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_319\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_319:\n      pop\n        /* \"src/token.sol\":14074:14119  ETHRescued(_dest, block.number, _etherAmount) */\n      0x3b1c0368c81e47d03164182dc6f9fcf4f5e4b3bd9462d74960d729f73138ce36\n        /* \"src/token.sol\":14085:14090  _dest */\n      dup4\n        /* \"src/token.sol\":14092:14104  block.number */\n      number\n        /* \"src/token.sol\":14106:14118  _etherAmount */\n      dup5\n        /* \"src/token.sol\":14074:14119  ETHRescued(_dest, block.number, _etherAmount) */\n      mload(0x40)\n      tag_320\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_321\n      jump\t// in\n    tag_320:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2531:2532  _ */\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_322\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2542:2560  _nonReentrantAfter */\n      tag_252\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      jump\t// in\n    tag_322:\n        /* \"src/token.sol\":13922:14126  function ethRescue(address payable _dest, uint _etherAmount) nonReentrant public onlyRole(_RESCUE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/token.sol\":1612:1664  bytes32 public constant _ADMIN = keccak256(\"_ADMIN\") */\n    tag_120:\n        /* \"src/token.sol\":1645:1664  keccak256(\"_ADMIN\") */\n      0xae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d3\n        /* \"src/token.sol\":1612:1664  bytes32 public constant _ADMIN = keccak256(\"_ADMIN\") */\n      dup2\n      jump\t// out\n        /* \"src/token.sol\":1236:1286  bytes32 public constant _BURN = keccak256(\"_BURN\") */\n    tag_123:\n        /* \"src/token.sol\":1268:1286  keccak256(\"_BURN\") */\n      0x9edfad36e7d4d9da54b4f78f22bf97cb5b58bb7998294a4288da41c15c647c45\n        /* \"src/token.sol\":1236:1286  bytes32 public constant _BURN = keccak256(\"_BURN\") */\n      dup2\n      jump\t// out\n        /* \"src/token.sol\":2117:2135  bool public paused */\n    tag_126:\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"src/token.sol\":1368:1426  bytes32 public constant _BURNFROM = keccak256(\"_BURNFROM\") */\n    tag_129:\n        /* \"src/token.sol\":1404:1426  keccak256(\"_BURNFROM\") */\n      0xc8a3befa5973ff6e159afc769978d92f26bae29c51a73d11c9112a05b68d25e6\n        /* \"src/token.sol\":1368:1426  bytes32 public constant _BURNFROM = keccak256(\"_BURNFROM\") */\n      dup2\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_134:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/token.sol\":10843:11024  function burnFrom(address _from, uint _amount) external pause onlyRole(_BURNFROM) {... */\n    tag_138:\n        /* \"src/token.sol\":5358:5364  paused */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/token.sol\":5357:5364  !paused */\n      iszero\n        /* \"src/token.sol\":5349:5397  require(!paused, \"Contract: Contract is Paused\") */\n      tag_325\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_326\n      swap1\n      tag_285\n      jump\t// in\n    tag_326:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_325:\n        /* \"src/token.sol\":1404:1426  keccak256(\"_BURNFROM\") */\n      0xc8a3befa5973ff6e159afc769978d92f26bae29c51a73d11c9112a05b68d25e6\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_328\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_222\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_328:\n        /* \"src/token.sol\":10940:10986  TokensBurnedFrom(_from, _amount, _msgSender()) */\n      0xe419ce2aab145a1feaf5893bb6a9478f9282415bbd81c76d5cfff2d4f13431dd\n        /* \"src/token.sol\":10957:10962  _from */\n      dup4\n        /* \"src/token.sol\":10964:10971  _amount */\n      dup4\n        /* \"src/token.sol\":10973:10985  _msgSender() */\n      tag_330\n        /* \"src/token.sol\":10973:10983  _msgSender */\n      tag_217\n        /* \"src/token.sol\":10973:10985  _msgSender() */\n      jump\t// in\n    tag_330:\n        /* \"src/token.sol\":10940:10986  TokensBurnedFrom(_from, _amount, _msgSender()) */\n      mload(0x40)\n      tag_331\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_332\n      jump\t// in\n    tag_331:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/token.sol\":10996:11017  _burn(_from, _amount) */\n      tag_333\n        /* \"src/token.sol\":11002:11007  _from */\n      dup4\n        /* \"src/token.sol\":11009:11016  _amount */\n      dup4\n        /* \"src/token.sol\":10996:11001  _burn */\n      tag_250\n        /* \"src/token.sol\":10996:11017  _burn(_from, _amount) */\n      jump\t// in\n    tag_333:\n        /* \"src/token.sol\":5407:5408  _ */\n      pop\n        /* \"src/token.sol\":10843:11024  function burnFrom(address _from, uint _amount) external pause onlyRole(_BURNFROM) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/token.sol\":1124:1178  bytes32 public constant _MINTTO = keccak256(\"_MINTTO\") */\n    tag_140:\n        /* \"src/token.sol\":1158:1178  keccak256(\"_MINTTO\") */\n      0x7d800f56a05adcb6245df540492a560d0e668aac15ee6c7dd40668064913da33\n        /* \"src/token.sol\":1124:1178  bytes32 public constant _MINTTO = keccak256(\"_MINTTO\") */\n      dup2\n      jump\t// out\n        /* \"src/token.sol\":1733:1787  bytes32 public constant _RESCUE = keccak256(\"_RESCUE\") */\n    tag_143:\n        /* \"src/token.sol\":1767:1787  keccak256(\"_RESCUE\") */\n      0x508f8f8be8f5dbcb88f4f4500430b8b3684c471ed936f31fea912c78ad46a6b9\n        /* \"src/token.sol\":1733:1787  bytes32 public constant _RESCUE = keccak256(\"_RESCUE\") */\n      dup2\n      jump\t// out\n        /* \"src/token.sol\":994:1044  bytes32 public constant _MINT = keccak256(\"_MINT\") */\n    tag_146:\n        /* \"src/token.sol\":1026:1044  keccak256(\"_MINT\") */\n      0x8c66330d9d4f6aba064f25ef2a307366ea6d917616f44c075aa60fa15e5cb1cb\n        /* \"src/token.sol\":994:1044  bytes32 public constant _MINT = keccak256(\"_MINT\") */\n      dup2\n      jump\t// out\n        /* \"src/token.sol\":8055:8131  function supplyCap() public view returns (uint) {... */\n    tag_149:\n        /* \"src/token.sol\":8097:8101  uint */\n      0x00\n        /* \"src/token.sol\":8120:8124  _cap */\n      sload(0x07)\n        /* \"src/token.sol\":8113:8124  return _cap */\n      swap1\n      pop\n        /* \"src/token.sol\":8055:8131  function supplyCap() public view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_153:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x05\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2961:2965  role */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n      0x00\n      add\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2975:2982  account */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/token.sol\":2182:2206  bool public mintDisabled */\n    tag_156:\n      0x09\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_159:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_337\n      swap1\n      tag_210\n      jump\t// in\n    tag_337:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_338\n      swap1\n      tag_210\n      jump\t// in\n    tag_338:\n      dup1\n      iszero\n      tag_339\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_340\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_339)\n    tag_340:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_341:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_341\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_339:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"src/token.sol\":9852:10083  function mint(uint _amount) external pause mintDis onlyRole(_MINT) {... */\n    tag_163:\n        /* \"src/token.sol\":5358:5364  paused */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/token.sol\":5357:5364  !paused */\n      iszero\n        /* \"src/token.sol\":5349:5397  require(!paused, \"Contract: Contract is Paused\") */\n      tag_343\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_344\n      swap1\n      tag_285\n      jump\t// in\n    tag_344:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_343:\n        /* \"src/token.sol\":5570:5582  mintDisabled */\n      0x09\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/token.sol\":5569:5582  !mintDisabled */\n      iszero\n        /* \"src/token.sol\":5561:5603  require(!mintDisabled, \"Minting disabled\") */\n      tag_346\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_347\n      swap1\n      tag_348\n      jump\t// in\n    tag_347:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_346:\n        /* \"src/token.sol\":1026:1044  keccak256(\"_MINT\") */\n      0x8c66330d9d4f6aba064f25ef2a307366ea6d917616f44c075aa60fa15e5cb1cb\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_350\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_222\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_350:\n        /* \"src/token.sol\":9964:9968  _cap */\n      sload(0x07)\n        /* \"src/token.sol\":9953:9960  _amount */\n      dup3\n        /* \"src/token.sol\":9937:9950  totalSupply() */\n      tag_352\n        /* \"src/token.sol\":9937:9948  totalSupply */\n      tag_76\n        /* \"src/token.sol\":9937:9950  totalSupply() */\n      jump\t// in\n    tag_352:\n        /* \"src/token.sol\":9937:9960  totalSupply() + _amount */\n      tag_353\n      swap2\n      swap1\n      tag_305\n      jump\t// in\n    tag_353:\n        /* \"src/token.sol\":9937:9968  totalSupply() + _amount <= _cap */\n      gt\n      iszero\n        /* \"src/token.sol\":9929:10002  require(totalSupply() + _amount <= _cap, \"Contract: Supply Cap exceeded\") */\n      tag_354\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap1\n      tag_308\n      jump\t// in\n    tag_355:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_354:\n        /* \"src/token.sol\":10017:10038  TokensMinted(_amount) */\n      0x772f66a00a405709c30e7f18feadcc8f123b20c09c7260165d3eec36c9f21372\n        /* \"src/token.sol\":10030:10037  _amount */\n      dup3\n        /* \"src/token.sol\":10017:10038  TokensMinted(_amount) */\n      mload(0x40)\n      tag_356\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_356:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/token.sol\":10048:10076  _mint(_msgSender(), _amount) */\n      tag_357\n        /* \"src/token.sol\":10054:10066  _msgSender() */\n      tag_358\n        /* \"src/token.sol\":10054:10064  _msgSender */\n      tag_217\n        /* \"src/token.sol\":10054:10066  _msgSender() */\n      jump\t// in\n    tag_358:\n        /* \"src/token.sol\":10068:10075  _amount */\n      dup4\n        /* \"src/token.sol\":10048:10053  _mint */\n      tag_312\n        /* \"src/token.sol\":10048:10076  _mint(_msgSender(), _amount) */\n      jump\t// in\n    tag_357:\n        /* \"src/token.sol\":5613:5614  _ */\n      pop\n        /* \"src/token.sol\":9852:10083  function mint(uint _amount) external pause mintDis onlyRole(_MINT) {... */\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_165:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"src/token.sol\":12542:12977  function transfer(address to, uint256 value) nonReentrant public virtual override returns (bool) {... */\n    tag_169:\n        /* \"src/token.sol\":12633:12637  bool */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_360\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_234\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_360:\n        /* \"src/token.sol\":12649:12662  address owner */\n      0x00\n        /* \"src/token.sol\":12665:12677  _msgSender() */\n      tag_362\n        /* \"src/token.sol\":12665:12675  _msgSender */\n      tag_217\n        /* \"src/token.sol\":12665:12677  _msgSender() */\n      jump\t// in\n    tag_362:\n        /* \"src/token.sol\":12649:12677  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"src/token.sol\":12692:12710  whitelistedAddress */\n      0x0a\n        /* \"src/token.sol\":12692:12717  whitelistedAddress[owner] */\n      0x00\n        /* \"src/token.sol\":12711:12716  owner */\n      dup3\n        /* \"src/token.sol\":12692:12717  whitelistedAddress[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/token.sol\":12688:12949  if (whitelistedAddress[owner]) {... */\n      iszero\n      tag_363\n      jumpi\n        /* \"src/token.sol\":12733:12760  _transfer(owner, to, value) */\n      tag_364\n        /* \"src/token.sol\":12743:12748  owner */\n      dup2\n        /* \"src/token.sol\":12750:12752  to */\n      dup6\n        /* \"src/token.sol\":12754:12759  value */\n      dup6\n        /* \"src/token.sol\":12733:12742  _transfer */\n      tag_246\n        /* \"src/token.sol\":12733:12760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_364:\n        /* \"src/token.sol\":12688:12949  if (whitelistedAddress[owner]) {... */\n      jump(tag_365)\n    tag_363:\n        /* \"src/token.sol\":12840:12867  _transfer(owner, to, value) */\n      tag_366\n        /* \"src/token.sol\":12850:12855  owner */\n      dup2\n        /* \"src/token.sol\":12857:12859  to */\n      dup6\n        /* \"src/token.sol\":12861:12866  value */\n      dup6\n        /* \"src/token.sol\":12840:12849  _transfer */\n      tag_246\n        /* \"src/token.sol\":12840:12867  _transfer(owner, to, value) */\n      jump\t// in\n    tag_366:\n        /* \"src/token.sol\":12881:12900  _burn(owner, txFee) */\n      tag_367\n        /* \"src/token.sol\":12887:12892  owner */\n      dup2\n        /* \"src/token.sol\":12894:12899  txFee */\n      sload(0x08)\n        /* \"src/token.sol\":12881:12886  _burn */\n      tag_250\n        /* \"src/token.sol\":12881:12900  _burn(owner, txFee) */\n      jump\t// in\n    tag_367:\n        /* \"src/token.sol\":12688:12949  if (whitelistedAddress[owner]) {... */\n    tag_365:\n        /* \"src/token.sol\":12966:12970  true */\n      0x01\n        /* \"src/token.sol\":12959:12970  return true */\n      swap2\n      pop\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_368\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2542:2560  _nonReentrantAfter */\n      tag_252\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      jump\t// in\n    tag_368:\n        /* \"src/token.sol\":12542:12977  function transfer(address to, uint256 value) nonReentrant public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/token.sol\":7701:7942  function setSupplyCap(uint _supplyCap) external pause onlyRole(_SUPPLY) {... */\n    tag_173:\n        /* \"src/token.sol\":5358:5364  paused */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/token.sol\":5357:5364  !paused */\n      iszero\n        /* \"src/token.sol\":5349:5397  require(!paused, \"Contract: Contract is Paused\") */\n      tag_370\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_371\n      swap1\n      tag_285\n      jump\t// in\n    tag_371:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_370:\n        /* \"src/token.sol\":1528:1548  keccak256(\"_SUPPLY\") */\n      0xea4defabeb90fa1e79f929d6c8d482fee8a115926a592b79634d39a67cce3b62\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_373\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_222\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_373:\n        /* \"src/token.sol\":7805:7818  totalSupply() */\n      tag_375\n        /* \"src/token.sol\":7805:7816  totalSupply */\n      tag_76\n        /* \"src/token.sol\":7805:7818  totalSupply() */\n      jump\t// in\n    tag_375:\n        /* \"src/token.sol\":7791:7801  _supplyCap */\n      dup3\n        /* \"src/token.sol\":7791:7818  _supplyCap >= totalSupply() */\n      lt\n      iszero\n        /* \"src/token.sol\":7783:7851  require(_supplyCap >= totalSupply(), \"Contract: Supply Cap too low\") */\n      tag_376\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_377\n      swap1\n      tag_378\n      jump\t// in\n    tag_377:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_376:\n        /* \"src/token.sol\":7868:7878  _supplyCap */\n      dup2\n        /* \"src/token.sol\":7861:7865  _cap */\n      0x07\n        /* \"src/token.sol\":7861:7878  _cap = _supplyCap */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/token.sol\":7893:7935  SupplyCapChanged(_supplyCap, _msgSender()) */\n      0xa11cbdeb4d62442fae7c8ec6286585b17c47acb7b17bbcab1beadce84befa300\n        /* \"src/token.sol\":7910:7920  _supplyCap */\n      dup3\n        /* \"src/token.sol\":7922:7934  _msgSender() */\n      tag_379\n        /* \"src/token.sol\":7922:7932  _msgSender */\n      tag_217\n        /* \"src/token.sol\":7922:7934  _msgSender() */\n      jump\t// in\n    tag_379:\n        /* \"src/token.sol\":7893:7935  SupplyCapChanged(_supplyCap, _msgSender()) */\n      mload(0x40)\n      tag_380\n      swap3\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_380:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/token.sol\":5407:5408  _ */\n      pop\n        /* \"src/token.sol\":7701:7942  function setSupplyCap(uint _supplyCap) external pause onlyRole(_SUPPLY) {... */\n      pop\n      jump\t// out\n        /* \"src/token.sol\":4168:4218  mapping(address => bool) public whitelistedAddress */\n    tag_176:\n      mstore(0x20, 0x0a)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"src/token.sol\":2030:2054  uint public txFee = 5e15 */\n    tag_179:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"src/token.sol\":2275:2301  bool public mintToDisabled */\n    tag_182:\n      0x09\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_186:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_381\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4730:4734  role */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4717:4729  getRoleAdmin */\n      tag_86\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      jump\t// in\n    tag_381:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_383\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_222\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_383:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_385\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_265\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n    tag_385:\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_190:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/token.sol\":6665:6963  function disableMint(bool _disableMinting) external onlyRole(_ADMIN) {... */\n    tag_194:\n        /* \"src/token.sol\":1645:1664  keccak256(\"_ADMIN\") */\n      0xae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_388\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_222\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_388:\n        /* \"src/token.sol\":6759:6774  _disableMinting */\n      dup2\n        /* \"src/token.sol\":6744:6756  mintDisabled */\n      0x09\n      0x01\n        /* \"src/token.sol\":6744:6774  mintDisabled = _disableMinting */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/token.sol\":6789:6804  _disableMinting */\n      dup2\n        /* \"src/token.sol\":6785:6957  if (_disableMinting) {... */\n      iszero\n      tag_390\n      jumpi\n        /* \"src/token.sol\":6825:6868  MintingDisabled(block.number, _msgSender()) */\n      0x5668502ca8e7b393c09d1dac964ca45a27870a78d7ba212b7a189450897ca05f\n        /* \"src/token.sol\":6841:6853  block.number */\n      number\n        /* \"src/token.sol\":6855:6867  _msgSender() */\n      tag_391\n        /* \"src/token.sol\":6855:6865  _msgSender */\n      tag_217\n        /* \"src/token.sol\":6855:6867  _msgSender() */\n      jump\t// in\n    tag_391:\n        /* \"src/token.sol\":6825:6868  MintingDisabled(block.number, _msgSender()) */\n      mload(0x40)\n      tag_392\n      swap3\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_392:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/token.sol\":6785:6957  if (_disableMinting) {... */\n      jump(tag_393)\n    tag_390:\n        /* \"src/token.sol\":6904:6946  MintingEnabled(block.number, _msgSender()) */\n      0x98e05482fdb38df5eb461fb932fa6e1af90a3569939ce5a8d92d699b102d6402\n        /* \"src/token.sol\":6919:6931  block.number */\n      number\n        /* \"src/token.sol\":6933:6945  _msgSender() */\n      tag_394\n        /* \"src/token.sol\":6933:6943  _msgSender */\n      tag_217\n        /* \"src/token.sol\":6933:6945  _msgSender() */\n      jump\t// in\n    tag_394:\n        /* \"src/token.sol\":6904:6946  MintingEnabled(block.number, _msgSender()) */\n      mload(0x40)\n      tag_395\n      swap3\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_395:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/token.sol\":6785:6957  if (_disableMinting) {... */\n    tag_393:\n        /* \"src/token.sol\":6665:6963  function disableMint(bool _disableMinting) external onlyRole(_ADMIN) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/token.sol\":1494:1548  bytes32 public constant _SUPPLY = keccak256(\"_SUPPLY\") */\n    tag_196:\n        /* \"src/token.sol\":1528:1548  keccak256(\"_SUPPLY\") */\n      0xea4defabeb90fa1e79f929d6c8d482fee8a115926a592b79634d39a67cce3b62\n        /* \"src/token.sol\":1494:1548  bytes32 public constant _SUPPLY = keccak256(\"_SUPPLY\") */\n      dup2\n      jump\t// out\n        /* \"src/token.sol\":8889:8982  function setTxFee(uint256 _newFee) external onlyRole(_ADMIN) {... */\n    tag_200:\n        /* \"src/token.sol\":1645:1664  keccak256(\"_ADMIN\") */\n      0xae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_397\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_222\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_397:\n        /* \"src/token.sol\":8968:8975  _newFee */\n      dup2\n        /* \"src/token.sol\":8960:8965  txFee */\n      0x08\n        /* \"src/token.sol\":8960:8975  txFee = _newFee */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/token.sol\":8889:8982  function setTxFee(uint256 _newFee) external onlyRole(_ADMIN) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/token.sol\":7232:7535  function disableMintTo(bool _disableMintTo) external onlyRole(_ADMIN) {... */\n    tag_203:\n        /* \"src/token.sol\":1645:1664  keccak256(\"_ADMIN\") */\n      0xae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_400\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_222\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_400:\n        /* \"src/token.sol\":7329:7343  _disableMintTo */\n      dup2\n        /* \"src/token.sol\":7312:7326  mintToDisabled */\n      0x09\n      0x02\n        /* \"src/token.sol\":7312:7343  mintToDisabled = _disableMintTo */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/token.sol\":7358:7372  _disableMintTo */\n      dup2\n        /* \"src/token.sol\":7354:7529  if (_disableMintTo) {... */\n      iszero\n      tag_402\n      jumpi\n        /* \"src/token.sol\":7393:7438  MintingToDisabled(block.number, _msgSender()) */\n      0x218e25f0a7435729f5a66aae50a9ed0084535a0080300c1c2e8366d8df7136ed\n        /* \"src/token.sol\":7411:7423  block.number */\n      number\n        /* \"src/token.sol\":7425:7437  _msgSender() */\n      tag_403\n        /* \"src/token.sol\":7425:7435  _msgSender */\n      tag_217\n        /* \"src/token.sol\":7425:7437  _msgSender() */\n      jump\t// in\n    tag_403:\n        /* \"src/token.sol\":7393:7438  MintingToDisabled(block.number, _msgSender()) */\n      mload(0x40)\n      tag_404\n      swap3\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_404:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/token.sol\":7354:7529  if (_disableMintTo) {... */\n      jump(tag_405)\n    tag_402:\n        /* \"src/token.sol\":7474:7518  MintingToEnabled(block.number, _msgSender()) */\n      0x41606e1dcee38320f9edbfcd642aeaa81bb2140c705de9d4a7814024a1e9a314\n        /* \"src/token.sol\":7491:7503  block.number */\n      number\n        /* \"src/token.sol\":7505:7517  _msgSender() */\n      tag_406\n        /* \"src/token.sol\":7505:7515  _msgSender */\n      tag_217\n        /* \"src/token.sol\":7505:7517  _msgSender() */\n      jump\t// in\n    tag_406:\n        /* \"src/token.sol\":7474:7518  MintingToEnabled(block.number, _msgSender()) */\n      mload(0x40)\n      tag_407\n      swap3\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_407:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/token.sol\":7354:7529  if (_disableMintTo) {... */\n    tag_405:\n        /* \"src/token.sol\":7232:7535  function disableMintTo(bool _disableMintTo) external onlyRole(_ADMIN) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_207:\n        /* \"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":839:843  bool */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":877:902  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":862:873  interfaceId */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":855:902  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_217:\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_219:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_411\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_412\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_411:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_222:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_414\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      tag_415\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3282:3292  _msgSender */\n      tag_217\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      jump\t// in\n    tag_415:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_416\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_414:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2575:2882  function _nonReentrantBefore() private {... */\n    tag_234:\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":1899:1900  2 */\n      0x02\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2702:2709  _status */\n      sload(0x06)\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2702:2720  _status == ENTERED */\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2698:2784  if (_status == ENTERED) {... */\n      tag_418\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2743:2773  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      0x3ee5aeb500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2698:2784  if (_status == ENTERED) {... */\n    tag_418:\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":1899:1900  2 */\n      0x02\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2858:2865  _status */\n      0x06\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2858:2875  _status = ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2575:2882  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_246:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_420\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_421\n      swap2\n      swap1\n      tag_422\n      jump\t// in\n    tag_421:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_420:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_423\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_424\n      swap2\n      swap1\n      tag_422\n      jump\t// in\n    tag_424:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_423:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_425\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_426\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_425:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n    tag_250:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8073:8074  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8054:8061  account */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n      tag_428\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8125:8126  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_429\n      swap2\n      swap1\n      tag_422\n      jump\t// in\n    tag_429:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n    tag_428:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      tag_430\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8156:8163  account */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8173:8174  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8177:8182  value */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8148:8155  _update */\n      tag_426\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      jump\t// in\n    tag_430:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2888:3096  function _nonReentrantAfter() private {... */\n    tag_252:\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":3068:3075  _status */\n      0x06\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":3068:3089  _status = NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":2888:3096  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_259:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_433\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_153\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_433:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_434\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x05\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6322:6326  role */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n      0x00\n      add\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6336:6343  account */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_435\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n      tag_217\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      jump\t// in\n    tag_435:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      pop\n      jump(tag_432)\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_434:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_432:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_265:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6808:6812  bool */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      tag_438\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6836:6840  role */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6842:6849  account */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6828:6835  hasRole */\n      tag_153\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      jump\t// in\n    tag_438:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      iszero\n      tag_439\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6898:6903  false */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6866:6872  _roles */\n      0x05\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6873:6877  role */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6866:6886  _roles[role].hasRole */\n      0x00\n      add\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6887:6894  account */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6866:6903  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      tag_440\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6949:6959  _msgSender */\n      tag_217\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      jump\t// in\n    tag_440:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6940:6947  account */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6934:6938  role */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6983:6987  true */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      pop\n      jump(tag_437)\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n    tag_439:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":7025:7030  false */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":7018:7030  return false */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_437:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":1271:1431  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_278:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1424  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_443\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":1373:1378  token */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":1395:1400  token */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":1395:1409  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1414  to */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":1416:1421  value */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":1380:1423  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_444\n      swap3\n      swap2\n      swap1\n      tag_310\n      jump\t// in\n    tag_444:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1372  _callOptionalReturn */\n      tag_445\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1424  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_443:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":1271:1431  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_312:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_447\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_448\n      swap2\n      swap1\n      tag_422\n      jump\t// in\n    tag_448:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_447:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_449\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_426\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_449:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_412:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_451\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_452\n      swap2\n      swap1\n      tag_422\n      jump\t// in\n    tag_452:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_451:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_453\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_454\n      swap2\n      swap1\n      tag_422\n      jump\t// in\n    tag_454:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_453:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_455\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_456\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_456:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_455:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_416:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_458\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_153\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_458:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_459\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3598:3605  account */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3607:3611  role */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_460\n      swap3\n      swap2\n      swap1\n      tag_461\n      jump\t// in\n    tag_460:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_459:\n        /* \"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_426:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_463\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_464\n      swap2\n      swap1\n      tag_305\n      jump\t// in\n    tag_464:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_465)\n    tag_463:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_466\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_467\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_468\n      jump\t// in\n    tag_467:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_466:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_465:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_469\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_470)\n    tag_469:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_470:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_471\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_471:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":7738:8458  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_445:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":7818:7836  uint256 returnSize */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":7846:7865  uint256 returnValue */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":7984:7988  0x20 */\n      0x20\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":7981:7982  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":7974:7978  data */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":7968:7979  mload(data) */\n      mload\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":7961:7965  0x20 */\n      0x20\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":7955:7959  data */\n      dup7\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":7951:7966  add(data, 0x20) */\n      add\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":7948:7949  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":7941:7946  token */\n      dup9\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":7934:7939  gas() */\n      gas\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":7929:7989  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8041:8048  success */\n      dup1\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8031:8207  if iszero(success) {... */\n      tag_473\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8085:8089  0x40 */\n      0x40\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8079:8090  mload(0x40) */\n      mload\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8130:8146  returndatasize() */\n      returndatasize\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8127:8128  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8122:8125  ptr */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8107:8147  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8176:8192  returndatasize() */\n      returndatasize\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8171:8174  ptr */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8164:8193  revert(ptr, returndatasize()) */\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8031:8207  if iszero(success) {... */\n    tag_473:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8234:8250  returndatasize() */\n      returndatasize\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8220:8250  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8284:8285  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8278:8286  mload(0) */\n      mload\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8263:8286  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":7900:8296  {... */\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8324:8325  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8320  returnSize */\n      dup3\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8325  returnSize == 0 */\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_474\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8377:8378  1 */\n      0x01\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8362:8373  returnValue */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8362:8378  returnValue != 1 */\n      eq\n      iszero\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_475)\n    tag_474:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8358:8359  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8336:8341  token */\n      dup5\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8328:8354  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8328:8359  address(token).code.length == 0 */\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_475:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8452  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_476\n      jumpi\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8434:8439  token */\n      dup4\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8401:8441  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_477\n      swap2\n      swap1\n      tag_422\n      jump\t// in\n    tag_477:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8452  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_476:\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":7808:8458  {... */\n      pop\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":7738:8458  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_479:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_481:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_482:\n        /* \"#utility.yul\":561:584   */\n      tag_543\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_481\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_544\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_544:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_483:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_546\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_482\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_54:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_548\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_549\n      tag_479\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":833:952   */\n    tag_548:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_550\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_483\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_484:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_485:\n        /* \"#utility.yul\":1268:1289   */\n      tag_553\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_484\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_57:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_555\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_485\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1595   */\n    tag_486:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1573:1589   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1719   */\n    tag_487:\n        /* \"#utility.yul\":1688:1712   */\n      tag_558\n        /* \"#utility.yul\":1706:1711   */\n      dup2\n        /* \"#utility.yul\":1688:1712   */\n      tag_486\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":1683:1686   */\n      dup3\n        /* \"#utility.yul\":1676:1713   */\n      mstore\n        /* \"#utility.yul\":1601:1719   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1725:1947   */\n    tag_61:\n        /* \"#utility.yul\":1818:1822   */\n      0x00\n        /* \"#utility.yul\":1856:1858   */\n      0x20\n        /* \"#utility.yul\":1845:1854   */\n      dup3\n        /* \"#utility.yul\":1841:1859   */\n      add\n        /* \"#utility.yul\":1833:1859   */\n      swap1\n      pop\n        /* \"#utility.yul\":1869:1940   */\n      tag_560\n        /* \"#utility.yul\":1937:1938   */\n      0x00\n        /* \"#utility.yul\":1926:1935   */\n      dup4\n        /* \"#utility.yul\":1922:1939   */\n      add\n        /* \"#utility.yul\":1913:1919   */\n      dup5\n        /* \"#utility.yul\":1869:1940   */\n      tag_487\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":1725:1947   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1953:2052   */\n    tag_488:\n        /* \"#utility.yul\":2005:2011   */\n      0x00\n        /* \"#utility.yul\":2039:2044   */\n      dup2\n        /* \"#utility.yul\":2033:2045   */\n      mload\n        /* \"#utility.yul\":2023:2045   */\n      swap1\n      pop\n        /* \"#utility.yul\":1953:2052   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2058:2227   */\n    tag_489:\n        /* \"#utility.yul\":2142:2153   */\n      0x00\n        /* \"#utility.yul\":2176:2182   */\n      dup3\n        /* \"#utility.yul\":2171:2174   */\n      dup3\n        /* \"#utility.yul\":2164:2183   */\n      mstore\n        /* \"#utility.yul\":2216:2220   */\n      0x20\n        /* \"#utility.yul\":2211:2214   */\n      dup3\n        /* \"#utility.yul\":2207:2221   */\n      add\n        /* \"#utility.yul\":2192:2221   */\n      swap1\n      pop\n        /* \"#utility.yul\":2058:2227   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2233:2372   */\n    tag_490:\n        /* \"#utility.yul\":2322:2328   */\n      dup3\n        /* \"#utility.yul\":2317:2320   */\n      dup2\n        /* \"#utility.yul\":2312:2315   */\n      dup4\n        /* \"#utility.yul\":2306:2329   */\n      mcopy\n        /* \"#utility.yul\":2363:2364   */\n      0x00\n        /* \"#utility.yul\":2354:2360   */\n      dup4\n        /* \"#utility.yul\":2349:2352   */\n      dup4\n        /* \"#utility.yul\":2345:2361   */\n      add\n        /* \"#utility.yul\":2338:2365   */\n      mstore\n        /* \"#utility.yul\":2233:2372   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2378:2480   */\n    tag_491:\n        /* \"#utility.yul\":2419:2425   */\n      0x00\n        /* \"#utility.yul\":2470:2472   */\n      0x1f\n        /* \"#utility.yul\":2466:2473   */\n      not\n        /* \"#utility.yul\":2461:2463   */\n      0x1f\n        /* \"#utility.yul\":2454:2459   */\n      dup4\n        /* \"#utility.yul\":2450:2464   */\n      add\n        /* \"#utility.yul\":2446:2474   */\n      and\n        /* \"#utility.yul\":2436:2474   */\n      swap1\n      pop\n        /* \"#utility.yul\":2378:2480   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2486:2863   */\n    tag_492:\n        /* \"#utility.yul\":2574:2577   */\n      0x00\n        /* \"#utility.yul\":2602:2641   */\n      tag_566\n        /* \"#utility.yul\":2635:2640   */\n      dup3\n        /* \"#utility.yul\":2602:2641   */\n      tag_488\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":2657:2728   */\n      tag_567\n        /* \"#utility.yul\":2721:2727   */\n      dup2\n        /* \"#utility.yul\":2716:2719   */\n      dup6\n        /* \"#utility.yul\":2657:2728   */\n      tag_489\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":2650:2728   */\n      swap4\n      pop\n        /* \"#utility.yul\":2737:2802   */\n      tag_568\n        /* \"#utility.yul\":2795:2801   */\n      dup2\n        /* \"#utility.yul\":2790:2793   */\n      dup6\n        /* \"#utility.yul\":2783:2787   */\n      0x20\n        /* \"#utility.yul\":2776:2781   */\n      dup7\n        /* \"#utility.yul\":2772:2788   */\n      add\n        /* \"#utility.yul\":2737:2802   */\n      tag_490\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":2827:2856   */\n      tag_569\n        /* \"#utility.yul\":2849:2855   */\n      dup2\n        /* \"#utility.yul\":2827:2856   */\n      tag_491\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":2822:2825   */\n      dup5\n        /* \"#utility.yul\":2818:2857   */\n      add\n        /* \"#utility.yul\":2811:2857   */\n      swap2\n      pop\n        /* \"#utility.yul\":2578:2863   */\n      pop\n        /* \"#utility.yul\":2486:2863   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2869:3182   */\n    tag_65:\n        /* \"#utility.yul\":2982:2986   */\n      0x00\n        /* \"#utility.yul\":3020:3022   */\n      0x20\n        /* \"#utility.yul\":3009:3018   */\n      dup3\n        /* \"#utility.yul\":3005:3023   */\n      add\n        /* \"#utility.yul\":2997:3023   */\n      swap1\n      pop\n        /* \"#utility.yul\":3069:3078   */\n      dup2\n        /* \"#utility.yul\":3063:3067   */\n      dup2\n        /* \"#utility.yul\":3059:3079   */\n      sub\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3044:3053   */\n      dup4\n        /* \"#utility.yul\":3040:3057   */\n      add\n        /* \"#utility.yul\":3033:3080   */\n      mstore\n        /* \"#utility.yul\":3097:3175   */\n      tag_571\n        /* \"#utility.yul\":3170:3174   */\n      dup2\n        /* \"#utility.yul\":3161:3167   */\n      dup5\n        /* \"#utility.yul\":3097:3175   */\n      tag_492\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":3089:3175   */\n      swap1\n      pop\n        /* \"#utility.yul\":2869:3182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3188:3314   */\n    tag_493:\n        /* \"#utility.yul\":3225:3232   */\n      0x00\n        /* \"#utility.yul\":3265:3307   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3258:3263   */\n      dup3\n        /* \"#utility.yul\":3254:3308   */\n      and\n        /* \"#utility.yul\":3243:3308   */\n      swap1\n      pop\n        /* \"#utility.yul\":3188:3314   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3320:3416   */\n    tag_494:\n        /* \"#utility.yul\":3357:3364   */\n      0x00\n        /* \"#utility.yul\":3386:3410   */\n      tag_574\n        /* \"#utility.yul\":3404:3409   */\n      dup3\n        /* \"#utility.yul\":3386:3410   */\n      tag_493\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":3375:3410   */\n      swap1\n      pop\n        /* \"#utility.yul\":3320:3416   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3422:3544   */\n    tag_495:\n        /* \"#utility.yul\":3495:3519   */\n      tag_576\n        /* \"#utility.yul\":3513:3518   */\n      dup2\n        /* \"#utility.yul\":3495:3519   */\n      tag_494\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":3488:3493   */\n      dup2\n        /* \"#utility.yul\":3485:3520   */\n      eq\n        /* \"#utility.yul\":3475:3538   */\n      tag_577\n      jumpi\n        /* \"#utility.yul\":3534:3535   */\n      0x00\n        /* \"#utility.yul\":3531:3532   */\n      dup1\n        /* \"#utility.yul\":3524:3536   */\n      revert\n        /* \"#utility.yul\":3475:3538   */\n    tag_577:\n        /* \"#utility.yul\":3422:3544   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3550:3689   */\n    tag_496:\n        /* \"#utility.yul\":3596:3601   */\n      0x00\n        /* \"#utility.yul\":3634:3640   */\n      dup2\n        /* \"#utility.yul\":3621:3641   */\n      calldataload\n        /* \"#utility.yul\":3612:3641   */\n      swap1\n      pop\n        /* \"#utility.yul\":3650:3683   */\n      tag_579\n        /* \"#utility.yul\":3677:3682   */\n      dup2\n        /* \"#utility.yul\":3650:3683   */\n      tag_495\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":3550:3689   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3695:3817   */\n    tag_497:\n        /* \"#utility.yul\":3768:3792   */\n      tag_581\n        /* \"#utility.yul\":3786:3791   */\n      dup2\n        /* \"#utility.yul\":3768:3792   */\n      tag_486\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":3761:3766   */\n      dup2\n        /* \"#utility.yul\":3758:3793   */\n      eq\n        /* \"#utility.yul\":3748:3811   */\n      tag_582\n      jumpi\n        /* \"#utility.yul\":3807:3808   */\n      0x00\n        /* \"#utility.yul\":3804:3805   */\n      dup1\n        /* \"#utility.yul\":3797:3809   */\n      revert\n        /* \"#utility.yul\":3748:3811   */\n    tag_582:\n        /* \"#utility.yul\":3695:3817   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3823:3962   */\n    tag_498:\n        /* \"#utility.yul\":3869:3874   */\n      0x00\n        /* \"#utility.yul\":3907:3913   */\n      dup2\n        /* \"#utility.yul\":3894:3914   */\n      calldataload\n        /* \"#utility.yul\":3885:3914   */\n      swap1\n      pop\n        /* \"#utility.yul\":3923:3956   */\n      tag_584\n        /* \"#utility.yul\":3950:3955   */\n      dup2\n        /* \"#utility.yul\":3923:3956   */\n      tag_497\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":3823:3962   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3968:4442   */\n    tag_68:\n        /* \"#utility.yul\":4036:4042   */\n      0x00\n        /* \"#utility.yul\":4044:4050   */\n      dup1\n        /* \"#utility.yul\":4093:4095   */\n      0x40\n        /* \"#utility.yul\":4081:4090   */\n      dup4\n        /* \"#utility.yul\":4072:4079   */\n      dup6\n        /* \"#utility.yul\":4068:4091   */\n      sub\n        /* \"#utility.yul\":4064:4096   */\n      slt\n        /* \"#utility.yul\":4061:4180   */\n      iszero\n      tag_586\n      jumpi\n        /* \"#utility.yul\":4099:4178   */\n      tag_587\n      tag_479\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":4061:4180   */\n    tag_586:\n        /* \"#utility.yul\":4219:4220   */\n      0x00\n        /* \"#utility.yul\":4244:4297   */\n      tag_588\n        /* \"#utility.yul\":4289:4296   */\n      dup6\n        /* \"#utility.yul\":4280:4286   */\n      dup3\n        /* \"#utility.yul\":4269:4278   */\n      dup7\n        /* \"#utility.yul\":4265:4287   */\n      add\n        /* \"#utility.yul\":4244:4297   */\n      tag_496\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":4234:4297   */\n      swap3\n      pop\n        /* \"#utility.yul\":4190:4307   */\n      pop\n        /* \"#utility.yul\":4346:4348   */\n      0x20\n        /* \"#utility.yul\":4372:4425   */\n      tag_589\n        /* \"#utility.yul\":4417:4424   */\n      dup6\n        /* \"#utility.yul\":4408:4414   */\n      dup3\n        /* \"#utility.yul\":4397:4406   */\n      dup7\n        /* \"#utility.yul\":4393:4415   */\n      add\n        /* \"#utility.yul\":4372:4425   */\n      tag_498\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":4362:4425   */\n      swap2\n      pop\n        /* \"#utility.yul\":4317:4435   */\n      pop\n        /* \"#utility.yul\":3968:4442   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4448:4564   */\n    tag_499:\n        /* \"#utility.yul\":4518:4539   */\n      tag_591\n        /* \"#utility.yul\":4533:4538   */\n      dup2\n        /* \"#utility.yul\":4518:4539   */\n      tag_484\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":4511:4516   */\n      dup2\n        /* \"#utility.yul\":4508:4540   */\n      eq\n        /* \"#utility.yul\":4498:4558   */\n      tag_592\n      jumpi\n        /* \"#utility.yul\":4554:4555   */\n      0x00\n        /* \"#utility.yul\":4551:4552   */\n      dup1\n        /* \"#utility.yul\":4544:4556   */\n      revert\n        /* \"#utility.yul\":4498:4558   */\n    tag_592:\n        /* \"#utility.yul\":4448:4564   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4570:4703   */\n    tag_500:\n        /* \"#utility.yul\":4613:4618   */\n      0x00\n        /* \"#utility.yul\":4651:4657   */\n      dup2\n        /* \"#utility.yul\":4638:4658   */\n      calldataload\n        /* \"#utility.yul\":4629:4658   */\n      swap1\n      pop\n        /* \"#utility.yul\":4667:4697   */\n      tag_594\n        /* \"#utility.yul\":4691:4696   */\n      dup2\n        /* \"#utility.yul\":4667:4697   */\n      tag_499\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":4570:4703   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4709:5032   */\n    tag_73:\n        /* \"#utility.yul\":4765:4771   */\n      0x00\n        /* \"#utility.yul\":4814:4816   */\n      0x20\n        /* \"#utility.yul\":4802:4811   */\n      dup3\n        /* \"#utility.yul\":4793:4800   */\n      dup5\n        /* \"#utility.yul\":4789:4812   */\n      sub\n        /* \"#utility.yul\":4785:4817   */\n      slt\n        /* \"#utility.yul\":4782:4901   */\n      iszero\n      tag_596\n      jumpi\n        /* \"#utility.yul\":4820:4899   */\n      tag_597\n      tag_479\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":4782:4901   */\n    tag_596:\n        /* \"#utility.yul\":4940:4941   */\n      0x00\n        /* \"#utility.yul\":4965:5015   */\n      tag_598\n        /* \"#utility.yul\":5007:5014   */\n      dup5\n        /* \"#utility.yul\":4998:5004   */\n      dup3\n        /* \"#utility.yul\":4987:4996   */\n      dup6\n        /* \"#utility.yul\":4983:5005   */\n      add\n        /* \"#utility.yul\":4965:5015   */\n      tag_500\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":4955:5015   */\n      swap2\n      pop\n        /* \"#utility.yul\":4911:5025   */\n      pop\n        /* \"#utility.yul\":4709:5032   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5038:5657   */\n    tag_80:\n        /* \"#utility.yul\":5115:5121   */\n      0x00\n        /* \"#utility.yul\":5123:5129   */\n      dup1\n        /* \"#utility.yul\":5131:5137   */\n      0x00\n        /* \"#utility.yul\":5180:5182   */\n      0x60\n        /* \"#utility.yul\":5168:5177   */\n      dup5\n        /* \"#utility.yul\":5159:5166   */\n      dup7\n        /* \"#utility.yul\":5155:5178   */\n      sub\n        /* \"#utility.yul\":5151:5183   */\n      slt\n        /* \"#utility.yul\":5148:5267   */\n      iszero\n      tag_600\n      jumpi\n        /* \"#utility.yul\":5186:5265   */\n      tag_601\n      tag_479\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":5148:5267   */\n    tag_600:\n        /* \"#utility.yul\":5306:5307   */\n      0x00\n        /* \"#utility.yul\":5331:5384   */\n      tag_602\n        /* \"#utility.yul\":5376:5383   */\n      dup7\n        /* \"#utility.yul\":5367:5373   */\n      dup3\n        /* \"#utility.yul\":5356:5365   */\n      dup8\n        /* \"#utility.yul\":5352:5374   */\n      add\n        /* \"#utility.yul\":5331:5384   */\n      tag_496\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":5321:5384   */\n      swap4\n      pop\n        /* \"#utility.yul\":5277:5394   */\n      pop\n        /* \"#utility.yul\":5433:5435   */\n      0x20\n        /* \"#utility.yul\":5459:5512   */\n      tag_603\n        /* \"#utility.yul\":5504:5511   */\n      dup7\n        /* \"#utility.yul\":5495:5501   */\n      dup3\n        /* \"#utility.yul\":5484:5493   */\n      dup8\n        /* \"#utility.yul\":5480:5502   */\n      add\n        /* \"#utility.yul\":5459:5512   */\n      tag_496\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":5449:5512   */\n      swap3\n      pop\n        /* \"#utility.yul\":5404:5522   */\n      pop\n        /* \"#utility.yul\":5561:5563   */\n      0x40\n        /* \"#utility.yul\":5587:5640   */\n      tag_604\n        /* \"#utility.yul\":5632:5639   */\n      dup7\n        /* \"#utility.yul\":5623:5629   */\n      dup3\n        /* \"#utility.yul\":5612:5621   */\n      dup8\n        /* \"#utility.yul\":5608:5630   */\n      add\n        /* \"#utility.yul\":5587:5640   */\n      tag_498\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":5577:5640   */\n      swap2\n      pop\n        /* \"#utility.yul\":5532:5650   */\n      pop\n        /* \"#utility.yul\":5038:5657   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5663:5740   */\n    tag_501:\n        /* \"#utility.yul\":5700:5707   */\n      0x00\n        /* \"#utility.yul\":5729:5734   */\n      dup2\n        /* \"#utility.yul\":5718:5734   */\n      swap1\n      pop\n        /* \"#utility.yul\":5663:5740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5746:5868   */\n    tag_502:\n        /* \"#utility.yul\":5819:5843   */\n      tag_607\n        /* \"#utility.yul\":5837:5842   */\n      dup2\n        /* \"#utility.yul\":5819:5843   */\n      tag_501\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":5812:5817   */\n      dup2\n        /* \"#utility.yul\":5809:5844   */\n      eq\n        /* \"#utility.yul\":5799:5862   */\n      tag_608\n      jumpi\n        /* \"#utility.yul\":5858:5859   */\n      0x00\n        /* \"#utility.yul\":5855:5856   */\n      dup1\n        /* \"#utility.yul\":5848:5860   */\n      revert\n        /* \"#utility.yul\":5799:5862   */\n    tag_608:\n        /* \"#utility.yul\":5746:5868   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5874:6013   */\n    tag_503:\n        /* \"#utility.yul\":5920:5925   */\n      0x00\n        /* \"#utility.yul\":5958:5964   */\n      dup2\n        /* \"#utility.yul\":5945:5965   */\n      calldataload\n        /* \"#utility.yul\":5936:5965   */\n      swap1\n      pop\n        /* \"#utility.yul\":5974:6007   */\n      tag_610\n        /* \"#utility.yul\":6001:6006   */\n      dup2\n        /* \"#utility.yul\":5974:6007   */\n      tag_502\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":5874:6013   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6019:6348   */\n    tag_85:\n        /* \"#utility.yul\":6078:6084   */\n      0x00\n        /* \"#utility.yul\":6127:6129   */\n      0x20\n        /* \"#utility.yul\":6115:6124   */\n      dup3\n        /* \"#utility.yul\":6106:6113   */\n      dup5\n        /* \"#utility.yul\":6102:6125   */\n      sub\n        /* \"#utility.yul\":6098:6130   */\n      slt\n        /* \"#utility.yul\":6095:6214   */\n      iszero\n      tag_612\n      jumpi\n        /* \"#utility.yul\":6133:6212   */\n      tag_613\n      tag_479\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":6095:6214   */\n    tag_612:\n        /* \"#utility.yul\":6253:6254   */\n      0x00\n        /* \"#utility.yul\":6278:6331   */\n      tag_614\n        /* \"#utility.yul\":6323:6330   */\n      dup5\n        /* \"#utility.yul\":6314:6320   */\n      dup3\n        /* \"#utility.yul\":6303:6312   */\n      dup6\n        /* \"#utility.yul\":6299:6321   */\n      add\n        /* \"#utility.yul\":6278:6331   */\n      tag_503\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":6268:6331   */\n      swap2\n      pop\n        /* \"#utility.yul\":6224:6341   */\n      pop\n        /* \"#utility.yul\":6019:6348   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6354:6472   */\n    tag_504:\n        /* \"#utility.yul\":6441:6465   */\n      tag_616\n        /* \"#utility.yul\":6459:6464   */\n      dup2\n        /* \"#utility.yul\":6441:6465   */\n      tag_501\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":6436:6439   */\n      dup3\n        /* \"#utility.yul\":6429:6466   */\n      mstore\n        /* \"#utility.yul\":6354:6472   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6478:6700   */\n    tag_88:\n        /* \"#utility.yul\":6571:6575   */\n      0x00\n        /* \"#utility.yul\":6609:6611   */\n      0x20\n        /* \"#utility.yul\":6598:6607   */\n      dup3\n        /* \"#utility.yul\":6594:6612   */\n      add\n        /* \"#utility.yul\":6586:6612   */\n      swap1\n      pop\n        /* \"#utility.yul\":6622:6693   */\n      tag_618\n        /* \"#utility.yul\":6690:6691   */\n      0x00\n        /* \"#utility.yul\":6679:6688   */\n      dup4\n        /* \"#utility.yul\":6675:6692   */\n      add\n        /* \"#utility.yul\":6666:6672   */\n      dup5\n        /* \"#utility.yul\":6622:6693   */\n      tag_504\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":6478:6700   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6706:7180   */\n    tag_91:\n        /* \"#utility.yul\":6774:6780   */\n      0x00\n        /* \"#utility.yul\":6782:6788   */\n      dup1\n        /* \"#utility.yul\":6831:6833   */\n      0x40\n        /* \"#utility.yul\":6819:6828   */\n      dup4\n        /* \"#utility.yul\":6810:6817   */\n      dup6\n        /* \"#utility.yul\":6806:6829   */\n      sub\n        /* \"#utility.yul\":6802:6834   */\n      slt\n        /* \"#utility.yul\":6799:6918   */\n      iszero\n      tag_620\n      jumpi\n        /* \"#utility.yul\":6837:6916   */\n      tag_621\n      tag_479\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":6799:6918   */\n    tag_620:\n        /* \"#utility.yul\":6957:6958   */\n      0x00\n        /* \"#utility.yul\":6982:7035   */\n      tag_622\n        /* \"#utility.yul\":7027:7034   */\n      dup6\n        /* \"#utility.yul\":7018:7024   */\n      dup3\n        /* \"#utility.yul\":7007:7016   */\n      dup7\n        /* \"#utility.yul\":7003:7025   */\n      add\n        /* \"#utility.yul\":6982:7035   */\n      tag_503\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":6972:7035   */\n      swap3\n      pop\n        /* \"#utility.yul\":6928:7045   */\n      pop\n        /* \"#utility.yul\":7084:7086   */\n      0x20\n        /* \"#utility.yul\":7110:7163   */\n      tag_623\n        /* \"#utility.yul\":7155:7162   */\n      dup6\n        /* \"#utility.yul\":7146:7152   */\n      dup3\n        /* \"#utility.yul\":7135:7144   */\n      dup7\n        /* \"#utility.yul\":7131:7153   */\n      add\n        /* \"#utility.yul\":7110:7163   */\n      tag_496\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":7100:7163   */\n      swap2\n      pop\n        /* \"#utility.yul\":7055:7173   */\n      pop\n        /* \"#utility.yul\":6706:7180   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7186:7272   */\n    tag_505:\n        /* \"#utility.yul\":7221:7228   */\n      0x00\n        /* \"#utility.yul\":7261:7265   */\n      0xff\n        /* \"#utility.yul\":7254:7259   */\n      dup3\n        /* \"#utility.yul\":7250:7266   */\n      and\n        /* \"#utility.yul\":7239:7266   */\n      swap1\n      pop\n        /* \"#utility.yul\":7186:7272   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7278:7390   */\n    tag_506:\n        /* \"#utility.yul\":7361:7383   */\n      tag_626\n        /* \"#utility.yul\":7377:7382   */\n      dup2\n        /* \"#utility.yul\":7361:7383   */\n      tag_505\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":7356:7359   */\n      dup3\n        /* \"#utility.yul\":7349:7384   */\n      mstore\n        /* \"#utility.yul\":7278:7390   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7396:7610   */\n    tag_96:\n        /* \"#utility.yul\":7485:7489   */\n      0x00\n        /* \"#utility.yul\":7523:7525   */\n      0x20\n        /* \"#utility.yul\":7512:7521   */\n      dup3\n        /* \"#utility.yul\":7508:7526   */\n      add\n        /* \"#utility.yul\":7500:7526   */\n      swap1\n      pop\n        /* \"#utility.yul\":7536:7603   */\n      tag_628\n        /* \"#utility.yul\":7600:7601   */\n      0x00\n        /* \"#utility.yul\":7589:7598   */\n      dup4\n        /* \"#utility.yul\":7585:7602   */\n      add\n        /* \"#utility.yul\":7576:7582   */\n      dup5\n        /* \"#utility.yul\":7536:7603   */\n      tag_506\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":7396:7610   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7616:8084   */\n    tag_102:\n        /* \"#utility.yul\":7681:7687   */\n      0x00\n        /* \"#utility.yul\":7689:7695   */\n      dup1\n        /* \"#utility.yul\":7738:7740   */\n      0x40\n        /* \"#utility.yul\":7726:7735   */\n      dup4\n        /* \"#utility.yul\":7717:7724   */\n      dup6\n        /* \"#utility.yul\":7713:7736   */\n      sub\n        /* \"#utility.yul\":7709:7741   */\n      slt\n        /* \"#utility.yul\":7706:7825   */\n      iszero\n      tag_630\n      jumpi\n        /* \"#utility.yul\":7744:7823   */\n      tag_631\n      tag_479\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":7706:7825   */\n    tag_630:\n        /* \"#utility.yul\":7864:7865   */\n      0x00\n        /* \"#utility.yul\":7889:7942   */\n      tag_632\n        /* \"#utility.yul\":7934:7941   */\n      dup6\n        /* \"#utility.yul\":7925:7931   */\n      dup3\n        /* \"#utility.yul\":7914:7923   */\n      dup7\n        /* \"#utility.yul\":7910:7932   */\n      add\n        /* \"#utility.yul\":7889:7942   */\n      tag_496\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":7879:7942   */\n      swap3\n      pop\n        /* \"#utility.yul\":7835:7952   */\n      pop\n        /* \"#utility.yul\":7991:7993   */\n      0x20\n        /* \"#utility.yul\":8017:8067   */\n      tag_633\n        /* \"#utility.yul\":8059:8066   */\n      dup6\n        /* \"#utility.yul\":8050:8056   */\n      dup3\n        /* \"#utility.yul\":8039:8048   */\n      dup7\n        /* \"#utility.yul\":8035:8057   */\n      add\n        /* \"#utility.yul\":8017:8067   */\n      tag_500\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":8007:8067   */\n      swap2\n      pop\n        /* \"#utility.yul\":7962:8077   */\n      pop\n        /* \"#utility.yul\":7616:8084   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8090:8201   */\n    tag_507:\n        /* \"#utility.yul\":8142:8149   */\n      0x00\n        /* \"#utility.yul\":8171:8195   */\n      tag_635\n        /* \"#utility.yul\":8189:8194   */\n      dup3\n        /* \"#utility.yul\":8171:8195   */\n      tag_494\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":8160:8195   */\n      swap1\n      pop\n        /* \"#utility.yul\":8090:8201   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8207:8359   */\n    tag_508:\n        /* \"#utility.yul\":8295:8334   */\n      tag_637\n        /* \"#utility.yul\":8328:8333   */\n      dup2\n        /* \"#utility.yul\":8295:8334   */\n      tag_507\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":8288:8293   */\n      dup2\n        /* \"#utility.yul\":8285:8335   */\n      eq\n        /* \"#utility.yul\":8275:8353   */\n      tag_638\n      jumpi\n        /* \"#utility.yul\":8349:8350   */\n      0x00\n        /* \"#utility.yul\":8346:8347   */\n      dup1\n        /* \"#utility.yul\":8339:8351   */\n      revert\n        /* \"#utility.yul\":8275:8353   */\n    tag_638:\n        /* \"#utility.yul\":8207:8359   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8365:8534   */\n    tag_509:\n        /* \"#utility.yul\":8426:8431   */\n      0x00\n        /* \"#utility.yul\":8464:8470   */\n      dup2\n        /* \"#utility.yul\":8451:8471   */\n      calldataload\n        /* \"#utility.yul\":8442:8471   */\n      swap1\n      pop\n        /* \"#utility.yul\":8480:8528   */\n      tag_640\n        /* \"#utility.yul\":8522:8527   */\n      dup2\n        /* \"#utility.yul\":8480:8528   */\n      tag_508\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":8365:8534   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8540:9189   */\n    tag_106:\n        /* \"#utility.yul\":8632:8638   */\n      0x00\n        /* \"#utility.yul\":8640:8646   */\n      dup1\n        /* \"#utility.yul\":8648:8654   */\n      0x00\n        /* \"#utility.yul\":8697:8699   */\n      0x60\n        /* \"#utility.yul\":8685:8694   */\n      dup5\n        /* \"#utility.yul\":8676:8683   */\n      dup7\n        /* \"#utility.yul\":8672:8695   */\n      sub\n        /* \"#utility.yul\":8668:8700   */\n      slt\n        /* \"#utility.yul\":8665:8784   */\n      iszero\n      tag_642\n      jumpi\n        /* \"#utility.yul\":8703:8782   */\n      tag_643\n      tag_479\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":8665:8784   */\n    tag_642:\n        /* \"#utility.yul\":8823:8824   */\n      0x00\n        /* \"#utility.yul\":8848:8916   */\n      tag_644\n        /* \"#utility.yul\":8908:8915   */\n      dup7\n        /* \"#utility.yul\":8899:8905   */\n      dup3\n        /* \"#utility.yul\":8888:8897   */\n      dup8\n        /* \"#utility.yul\":8884:8906   */\n      add\n        /* \"#utility.yul\":8848:8916   */\n      tag_509\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":8838:8916   */\n      swap4\n      pop\n        /* \"#utility.yul\":8794:8926   */\n      pop\n        /* \"#utility.yul\":8965:8967   */\n      0x20\n        /* \"#utility.yul\":8991:9044   */\n      tag_645\n        /* \"#utility.yul\":9036:9043   */\n      dup7\n        /* \"#utility.yul\":9027:9033   */\n      dup3\n        /* \"#utility.yul\":9016:9025   */\n      dup8\n        /* \"#utility.yul\":9012:9034   */\n      add\n        /* \"#utility.yul\":8991:9044   */\n      tag_496\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":8981:9044   */\n      swap3\n      pop\n        /* \"#utility.yul\":8936:9054   */\n      pop\n        /* \"#utility.yul\":9093:9095   */\n      0x40\n        /* \"#utility.yul\":9119:9172   */\n      tag_646\n        /* \"#utility.yul\":9164:9171   */\n      dup7\n        /* \"#utility.yul\":9155:9161   */\n      dup3\n        /* \"#utility.yul\":9144:9153   */\n      dup8\n        /* \"#utility.yul\":9140:9162   */\n      add\n        /* \"#utility.yul\":9119:9172   */\n      tag_498\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":9109:9172   */\n      swap2\n      pop\n        /* \"#utility.yul\":9064:9182   */\n      pop\n        /* \"#utility.yul\":8540:9189   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":9195:9524   */\n    tag_110:\n        /* \"#utility.yul\":9254:9260   */\n      0x00\n        /* \"#utility.yul\":9303:9305   */\n      0x20\n        /* \"#utility.yul\":9291:9300   */\n      dup3\n        /* \"#utility.yul\":9282:9289   */\n      dup5\n        /* \"#utility.yul\":9278:9301   */\n      sub\n        /* \"#utility.yul\":9274:9306   */\n      slt\n        /* \"#utility.yul\":9271:9390   */\n      iszero\n      tag_648\n      jumpi\n        /* \"#utility.yul\":9309:9388   */\n      tag_649\n      tag_479\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":9271:9390   */\n    tag_648:\n        /* \"#utility.yul\":9429:9430   */\n      0x00\n        /* \"#utility.yul\":9454:9507   */\n      tag_650\n        /* \"#utility.yul\":9499:9506   */\n      dup5\n        /* \"#utility.yul\":9490:9496   */\n      dup3\n        /* \"#utility.yul\":9479:9488   */\n      dup6\n        /* \"#utility.yul\":9475:9497   */\n      add\n        /* \"#utility.yul\":9454:9507   */\n      tag_498\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":9444:9507   */\n      swap2\n      pop\n        /* \"#utility.yul\":9400:9517   */\n      pop\n        /* \"#utility.yul\":9195:9524   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9530:9634   */\n    tag_510:\n        /* \"#utility.yul\":9575:9582   */\n      0x00\n        /* \"#utility.yul\":9604:9628   */\n      tag_652\n        /* \"#utility.yul\":9622:9627   */\n      dup3\n        /* \"#utility.yul\":9604:9628   */\n      tag_493\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":9593:9628   */\n      swap1\n      pop\n        /* \"#utility.yul\":9530:9634   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9640:9778   */\n    tag_511:\n        /* \"#utility.yul\":9721:9753   */\n      tag_654\n        /* \"#utility.yul\":9747:9752   */\n      dup2\n        /* \"#utility.yul\":9721:9753   */\n      tag_510\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":9714:9719   */\n      dup2\n        /* \"#utility.yul\":9711:9754   */\n      eq\n        /* \"#utility.yul\":9701:9772   */\n      tag_655\n      jumpi\n        /* \"#utility.yul\":9768:9769   */\n      0x00\n        /* \"#utility.yul\":9765:9766   */\n      dup1\n        /* \"#utility.yul\":9758:9770   */\n      revert\n        /* \"#utility.yul\":9701:9772   */\n    tag_655:\n        /* \"#utility.yul\":9640:9778   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9784:9939   */\n    tag_512:\n        /* \"#utility.yul\":9838:9843   */\n      0x00\n        /* \"#utility.yul\":9876:9882   */\n      dup2\n        /* \"#utility.yul\":9863:9883   */\n      calldataload\n        /* \"#utility.yul\":9854:9883   */\n      swap1\n      pop\n        /* \"#utility.yul\":9892:9933   */\n      tag_657\n        /* \"#utility.yul\":9927:9932   */\n      dup2\n        /* \"#utility.yul\":9892:9933   */\n      tag_511\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":9784:9939   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9945:10435   */\n    tag_117:\n        /* \"#utility.yul\":10021:10027   */\n      0x00\n        /* \"#utility.yul\":10029:10035   */\n      dup1\n        /* \"#utility.yul\":10078:10080   */\n      0x40\n        /* \"#utility.yul\":10066:10075   */\n      dup4\n        /* \"#utility.yul\":10057:10064   */\n      dup6\n        /* \"#utility.yul\":10053:10076   */\n      sub\n        /* \"#utility.yul\":10049:10081   */\n      slt\n        /* \"#utility.yul\":10046:10165   */\n      iszero\n      tag_659\n      jumpi\n        /* \"#utility.yul\":10084:10163   */\n      tag_660\n      tag_479\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":10046:10165   */\n    tag_659:\n        /* \"#utility.yul\":10204:10205   */\n      0x00\n        /* \"#utility.yul\":10229:10290   */\n      tag_661\n        /* \"#utility.yul\":10282:10289   */\n      dup6\n        /* \"#utility.yul\":10273:10279   */\n      dup3\n        /* \"#utility.yul\":10262:10271   */\n      dup7\n        /* \"#utility.yul\":10258:10280   */\n      add\n        /* \"#utility.yul\":10229:10290   */\n      tag_512\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":10219:10290   */\n      swap3\n      pop\n        /* \"#utility.yul\":10175:10300   */\n      pop\n        /* \"#utility.yul\":10339:10341   */\n      0x20\n        /* \"#utility.yul\":10365:10418   */\n      tag_662\n        /* \"#utility.yul\":10410:10417   */\n      dup6\n        /* \"#utility.yul\":10401:10407   */\n      dup3\n        /* \"#utility.yul\":10390:10399   */\n      dup7\n        /* \"#utility.yul\":10386:10408   */\n      add\n        /* \"#utility.yul\":10365:10418   */\n      tag_498\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":10355:10418   */\n      swap2\n      pop\n        /* \"#utility.yul\":10310:10428   */\n      pop\n        /* \"#utility.yul\":9945:10435   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10441:10770   */\n    tag_133:\n        /* \"#utility.yul\":10500:10506   */\n      0x00\n        /* \"#utility.yul\":10549:10551   */\n      0x20\n        /* \"#utility.yul\":10537:10546   */\n      dup3\n        /* \"#utility.yul\":10528:10535   */\n      dup5\n        /* \"#utility.yul\":10524:10547   */\n      sub\n        /* \"#utility.yul\":10520:10552   */\n      slt\n        /* \"#utility.yul\":10517:10636   */\n      iszero\n      tag_664\n      jumpi\n        /* \"#utility.yul\":10555:10634   */\n      tag_665\n      tag_479\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":10517:10636   */\n    tag_664:\n        /* \"#utility.yul\":10675:10676   */\n      0x00\n        /* \"#utility.yul\":10700:10753   */\n      tag_666\n        /* \"#utility.yul\":10745:10752   */\n      dup5\n        /* \"#utility.yul\":10736:10742   */\n      dup3\n        /* \"#utility.yul\":10725:10734   */\n      dup6\n        /* \"#utility.yul\":10721:10743   */\n      add\n        /* \"#utility.yul\":10700:10753   */\n      tag_496\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":10690:10753   */\n      swap2\n      pop\n        /* \"#utility.yul\":10646:10763   */\n      pop\n        /* \"#utility.yul\":10441:10770   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10776:11250   */\n    tag_189:\n        /* \"#utility.yul\":10844:10850   */\n      0x00\n        /* \"#utility.yul\":10852:10858   */\n      dup1\n        /* \"#utility.yul\":10901:10903   */\n      0x40\n        /* \"#utility.yul\":10889:10898   */\n      dup4\n        /* \"#utility.yul\":10880:10887   */\n      dup6\n        /* \"#utility.yul\":10876:10899   */\n      sub\n        /* \"#utility.yul\":10872:10904   */\n      slt\n        /* \"#utility.yul\":10869:10988   */\n      iszero\n      tag_668\n      jumpi\n        /* \"#utility.yul\":10907:10986   */\n      tag_669\n      tag_479\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":10869:10988   */\n    tag_668:\n        /* \"#utility.yul\":11027:11028   */\n      0x00\n        /* \"#utility.yul\":11052:11105   */\n      tag_670\n        /* \"#utility.yul\":11097:11104   */\n      dup6\n        /* \"#utility.yul\":11088:11094   */\n      dup3\n        /* \"#utility.yul\":11077:11086   */\n      dup7\n        /* \"#utility.yul\":11073:11095   */\n      add\n        /* \"#utility.yul\":11052:11105   */\n      tag_496\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":11042:11105   */\n      swap3\n      pop\n        /* \"#utility.yul\":10998:11115   */\n      pop\n        /* \"#utility.yul\":11154:11156   */\n      0x20\n        /* \"#utility.yul\":11180:11233   */\n      tag_671\n        /* \"#utility.yul\":11225:11232   */\n      dup6\n        /* \"#utility.yul\":11216:11222   */\n      dup3\n        /* \"#utility.yul\":11205:11214   */\n      dup7\n        /* \"#utility.yul\":11201:11223   */\n      add\n        /* \"#utility.yul\":11180:11233   */\n      tag_496\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":11170:11233   */\n      swap2\n      pop\n        /* \"#utility.yul\":11125:11243   */\n      pop\n        /* \"#utility.yul\":10776:11250   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11256:11436   */\n    tag_513:\n        /* \"#utility.yul\":11304:11381   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11301:11302   */\n      0x00\n        /* \"#utility.yul\":11294:11382   */\n      mstore\n        /* \"#utility.yul\":11401:11405   */\n      0x22\n        /* \"#utility.yul\":11398:11399   */\n      0x04\n        /* \"#utility.yul\":11391:11406   */\n      mstore\n        /* \"#utility.yul\":11425:11429   */\n      0x24\n        /* \"#utility.yul\":11422:11423   */\n      0x00\n        /* \"#utility.yul\":11415:11430   */\n      revert\n        /* \"#utility.yul\":11442:11762   */\n    tag_210:\n        /* \"#utility.yul\":11486:11492   */\n      0x00\n        /* \"#utility.yul\":11523:11524   */\n      0x02\n        /* \"#utility.yul\":11517:11521   */\n      dup3\n        /* \"#utility.yul\":11513:11525   */\n      div\n        /* \"#utility.yul\":11503:11525   */\n      swap1\n      pop\n        /* \"#utility.yul\":11570:11571   */\n      0x01\n        /* \"#utility.yul\":11564:11568   */\n      dup3\n        /* \"#utility.yul\":11560:11572   */\n      and\n        /* \"#utility.yul\":11591:11609   */\n      dup1\n        /* \"#utility.yul\":11581:11662   */\n      tag_674\n      jumpi\n        /* \"#utility.yul\":11647:11651   */\n      0x7f\n        /* \"#utility.yul\":11639:11645   */\n      dup3\n        /* \"#utility.yul\":11635:11652   */\n      and\n        /* \"#utility.yul\":11625:11652   */\n      swap2\n      pop\n        /* \"#utility.yul\":11581:11662   */\n    tag_674:\n        /* \"#utility.yul\":11709:11711   */\n      0x20\n        /* \"#utility.yul\":11701:11707   */\n      dup3\n        /* \"#utility.yul\":11698:11712   */\n      lt\n        /* \"#utility.yul\":11678:11696   */\n      dup2\n        /* \"#utility.yul\":11675:11713   */\n      sub\n        /* \"#utility.yul\":11672:11756   */\n      tag_675\n      jumpi\n        /* \"#utility.yul\":11728:11746   */\n      tag_676\n      tag_513\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":11672:11756   */\n    tag_675:\n        /* \"#utility.yul\":11493:11762   */\n      pop\n        /* \"#utility.yul\":11442:11762   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11768:11886   */\n    tag_514:\n        /* \"#utility.yul\":11855:11879   */\n      tag_678\n        /* \"#utility.yul\":11873:11878   */\n      dup2\n        /* \"#utility.yul\":11855:11879   */\n      tag_494\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":11850:11853   */\n      dup3\n        /* \"#utility.yul\":11843:11880   */\n      mstore\n        /* \"#utility.yul\":11768:11886   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11892:12224   */\n    tag_227:\n        /* \"#utility.yul\":12013:12017   */\n      0x00\n        /* \"#utility.yul\":12051:12053   */\n      0x40\n        /* \"#utility.yul\":12040:12049   */\n      dup3\n        /* \"#utility.yul\":12036:12054   */\n      add\n        /* \"#utility.yul\":12028:12054   */\n      swap1\n      pop\n        /* \"#utility.yul\":12064:12135   */\n      tag_680\n        /* \"#utility.yul\":12132:12133   */\n      0x00\n        /* \"#utility.yul\":12121:12130   */\n      dup4\n        /* \"#utility.yul\":12117:12134   */\n      add\n        /* \"#utility.yul\":12108:12114   */\n      dup6\n        /* \"#utility.yul\":12064:12135   */\n      tag_487\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":12145:12217   */\n      tag_681\n        /* \"#utility.yul\":12213:12215   */\n      0x20\n        /* \"#utility.yul\":12202:12211   */\n      dup4\n        /* \"#utility.yul\":12198:12216   */\n      add\n        /* \"#utility.yul\":12189:12195   */\n      dup5\n        /* \"#utility.yul\":12145:12217   */\n      tag_514\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":11892:12224   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12230:12457   */\n    tag_515:\n        /* \"#utility.yul\":12370:12404   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":12366:12367   */\n      0x00\n        /* \"#utility.yul\":12358:12364   */\n      dup3\n        /* \"#utility.yul\":12354:12368   */\n      add\n        /* \"#utility.yul\":12347:12405   */\n      mstore\n        /* \"#utility.yul\":12439:12449   */\n      0x6c6c6f77616e6365000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12434:12436   */\n      0x20\n        /* \"#utility.yul\":12426:12432   */\n      dup3\n        /* \"#utility.yul\":12422:12437   */\n      add\n        /* \"#utility.yul\":12415:12450   */\n      mstore\n        /* \"#utility.yul\":12230:12457   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12463:12829   */\n    tag_516:\n        /* \"#utility.yul\":12605:12608   */\n      0x00\n        /* \"#utility.yul\":12626:12693   */\n      tag_684\n        /* \"#utility.yul\":12690:12692   */\n      0x28\n        /* \"#utility.yul\":12685:12688   */\n      dup4\n        /* \"#utility.yul\":12626:12693   */\n      tag_489\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":12619:12693   */\n      swap2\n      pop\n        /* \"#utility.yul\":12702:12795   */\n      tag_685\n        /* \"#utility.yul\":12791:12794   */\n      dup3\n        /* \"#utility.yul\":12702:12795   */\n      tag_515\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":12820:12822   */\n      0x40\n        /* \"#utility.yul\":12815:12818   */\n      dup3\n        /* \"#utility.yul\":12811:12823   */\n      add\n        /* \"#utility.yul\":12804:12823   */\n      swap1\n      pop\n        /* \"#utility.yul\":12463:12829   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12835:13254   */\n    tag_240:\n        /* \"#utility.yul\":13001:13005   */\n      0x00\n        /* \"#utility.yul\":13039:13041   */\n      0x20\n        /* \"#utility.yul\":13028:13037   */\n      dup3\n        /* \"#utility.yul\":13024:13042   */\n      add\n        /* \"#utility.yul\":13016:13042   */\n      swap1\n      pop\n        /* \"#utility.yul\":13088:13097   */\n      dup2\n        /* \"#utility.yul\":13082:13086   */\n      dup2\n        /* \"#utility.yul\":13078:13098   */\n      sub\n        /* \"#utility.yul\":13074:13075   */\n      0x00\n        /* \"#utility.yul\":13063:13072   */\n      dup4\n        /* \"#utility.yul\":13059:13076   */\n      add\n        /* \"#utility.yul\":13052:13099   */\n      mstore\n        /* \"#utility.yul\":13116:13247   */\n      tag_687\n        /* \"#utility.yul\":13242:13246   */\n      dup2\n        /* \"#utility.yul\":13116:13247   */\n      tag_516\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":13108:13247   */\n      swap1\n      pop\n        /* \"#utility.yul\":12835:13254   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13260:13440   */\n    tag_517:\n        /* \"#utility.yul\":13308:13385   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13305:13306   */\n      0x00\n        /* \"#utility.yul\":13298:13386   */\n      mstore\n        /* \"#utility.yul\":13405:13409   */\n      0x11\n        /* \"#utility.yul\":13402:13403   */\n      0x04\n        /* \"#utility.yul\":13395:13410   */\n      mstore\n        /* \"#utility.yul\":13429:13433   */\n      0x24\n        /* \"#utility.yul\":13426:13427   */\n      0x00\n        /* \"#utility.yul\":13419:13434   */\n      revert\n        /* \"#utility.yul\":13446:13640   */\n    tag_243:\n        /* \"#utility.yul\":13486:13490   */\n      0x00\n        /* \"#utility.yul\":13506:13526   */\n      tag_690\n        /* \"#utility.yul\":13524:13525   */\n      dup3\n        /* \"#utility.yul\":13506:13526   */\n      tag_486\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":13501:13526   */\n      swap2\n      pop\n        /* \"#utility.yul\":13540:13560   */\n      tag_691\n        /* \"#utility.yul\":13558:13559   */\n      dup4\n        /* \"#utility.yul\":13540:13560   */\n      tag_486\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":13535:13560   */\n      swap3\n      pop\n        /* \"#utility.yul\":13584:13585   */\n      dup3\n        /* \"#utility.yul\":13581:13582   */\n      dup3\n        /* \"#utility.yul\":13577:13586   */\n      sub\n        /* \"#utility.yul\":13569:13586   */\n      swap1\n      pop\n        /* \"#utility.yul\":13608:13609   */\n      dup2\n        /* \"#utility.yul\":13602:13606   */\n      dup2\n        /* \"#utility.yul\":13599:13610   */\n      gt\n        /* \"#utility.yul\":13596:13633   */\n      iszero\n      tag_692\n      jumpi\n        /* \"#utility.yul\":13613:13631   */\n      tag_693\n      tag_517\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":13596:13633   */\n    tag_692:\n        /* \"#utility.yul\":13446:13640   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13646:13811   */\n    tag_518:\n        /* \"#utility.yul\":13786:13803   */\n      0x496e76616c696420616464726573730000000000000000000000000000000000\n        /* \"#utility.yul\":13782:13783   */\n      0x00\n        /* \"#utility.yul\":13774:13780   */\n      dup3\n        /* \"#utility.yul\":13770:13784   */\n      add\n        /* \"#utility.yul\":13763:13804   */\n      mstore\n        /* \"#utility.yul\":13646:13811   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13817:14183   */\n    tag_519:\n        /* \"#utility.yul\":13959:13962   */\n      0x00\n        /* \"#utility.yul\":13980:14047   */\n      tag_696\n        /* \"#utility.yul\":14044:14046   */\n      0x0f\n        /* \"#utility.yul\":14039:14042   */\n      dup4\n        /* \"#utility.yul\":13980:14047   */\n      tag_489\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":13973:14047   */\n      swap2\n      pop\n        /* \"#utility.yul\":14056:14149   */\n      tag_697\n        /* \"#utility.yul\":14145:14148   */\n      dup3\n        /* \"#utility.yul\":14056:14149   */\n      tag_518\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":14174:14176   */\n      0x20\n        /* \"#utility.yul\":14169:14172   */\n      dup3\n        /* \"#utility.yul\":14165:14177   */\n      add\n        /* \"#utility.yul\":14158:14177   */\n      swap1\n      pop\n        /* \"#utility.yul\":13817:14183   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14189:14608   */\n    tag_271:\n        /* \"#utility.yul\":14355:14359   */\n      0x00\n        /* \"#utility.yul\":14393:14395   */\n      0x20\n        /* \"#utility.yul\":14382:14391   */\n      dup3\n        /* \"#utility.yul\":14378:14396   */\n      add\n        /* \"#utility.yul\":14370:14396   */\n      swap1\n      pop\n        /* \"#utility.yul\":14442:14451   */\n      dup2\n        /* \"#utility.yul\":14436:14440   */\n      dup2\n        /* \"#utility.yul\":14432:14452   */\n      sub\n        /* \"#utility.yul\":14428:14429   */\n      0x00\n        /* \"#utility.yul\":14417:14426   */\n      dup4\n        /* \"#utility.yul\":14413:14430   */\n      add\n        /* \"#utility.yul\":14406:14453   */\n      mstore\n        /* \"#utility.yul\":14470:14601   */\n      tag_699\n        /* \"#utility.yul\":14596:14600   */\n      dup2\n        /* \"#utility.yul\":14470:14601   */\n      tag_519\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":14462:14601   */\n      swap1\n      pop\n        /* \"#utility.yul\":14189:14608   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14614:14674   */\n    tag_520:\n        /* \"#utility.yul\":14642:14645   */\n      0x00\n        /* \"#utility.yul\":14663:14668   */\n      dup2\n        /* \"#utility.yul\":14656:14668   */\n      swap1\n      pop\n        /* \"#utility.yul\":14614:14674   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14680:14822   */\n    tag_521:\n        /* \"#utility.yul\":14730:14739   */\n      0x00\n        /* \"#utility.yul\":14763:14816   */\n      tag_702\n        /* \"#utility.yul\":14781:14815   */\n      tag_703\n        /* \"#utility.yul\":14790:14814   */\n      tag_704\n        /* \"#utility.yul\":14808:14813   */\n      dup5\n        /* \"#utility.yul\":14790:14814   */\n      tag_493\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":14781:14815   */\n      tag_520\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":14763:14816   */\n      tag_493\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":14750:14816   */\n      swap1\n      pop\n        /* \"#utility.yul\":14680:14822   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14828:14954   */\n    tag_522:\n        /* \"#utility.yul\":14878:14887   */\n      0x00\n        /* \"#utility.yul\":14911:14948   */\n      tag_706\n        /* \"#utility.yul\":14942:14947   */\n      dup3\n        /* \"#utility.yul\":14911:14948   */\n      tag_521\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":14898:14948   */\n      swap1\n      pop\n        /* \"#utility.yul\":14828:14954   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14960:15101   */\n    tag_523:\n        /* \"#utility.yul\":15025:15034   */\n      0x00\n        /* \"#utility.yul\":15058:15095   */\n      tag_708\n        /* \"#utility.yul\":15089:15094   */\n      dup3\n        /* \"#utility.yul\":15058:15095   */\n      tag_522\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":15045:15095   */\n      swap1\n      pop\n        /* \"#utility.yul\":14960:15101   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15107:15268   */\n    tag_524:\n        /* \"#utility.yul\":15209:15261   */\n      tag_710\n        /* \"#utility.yul\":15255:15260   */\n      dup2\n        /* \"#utility.yul\":15209:15261   */\n      tag_523\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":15204:15207   */\n      dup3\n        /* \"#utility.yul\":15197:15262   */\n      mstore\n        /* \"#utility.yul\":15107:15268   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15274:15857   */\n    tag_280:\n        /* \"#utility.yul\":15466:15470   */\n      0x00\n        /* \"#utility.yul\":15504:15507   */\n      0x80\n        /* \"#utility.yul\":15493:15502   */\n      dup3\n        /* \"#utility.yul\":15489:15508   */\n      add\n        /* \"#utility.yul\":15481:15508   */\n      swap1\n      pop\n        /* \"#utility.yul\":15518:15604   */\n      tag_712\n        /* \"#utility.yul\":15601:15602   */\n      0x00\n        /* \"#utility.yul\":15590:15599   */\n      dup4\n        /* \"#utility.yul\":15586:15603   */\n      add\n        /* \"#utility.yul\":15577:15583   */\n      dup8\n        /* \"#utility.yul\":15518:15604   */\n      tag_524\n      jump\t// in\n    tag_712:\n        /* \"#utility.yul\":15614:15686   */\n      tag_713\n        /* \"#utility.yul\":15682:15684   */\n      0x20\n        /* \"#utility.yul\":15671:15680   */\n      dup4\n        /* \"#utility.yul\":15667:15685   */\n      add\n        /* \"#utility.yul\":15658:15664   */\n      dup7\n        /* \"#utility.yul\":15614:15686   */\n      tag_487\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":15696:15768   */\n      tag_714\n        /* \"#utility.yul\":15764:15766   */\n      0x40\n        /* \"#utility.yul\":15753:15762   */\n      dup4\n        /* \"#utility.yul\":15749:15767   */\n      add\n        /* \"#utility.yul\":15740:15746   */\n      dup6\n        /* \"#utility.yul\":15696:15768   */\n      tag_514\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":15778:15850   */\n      tag_715\n        /* \"#utility.yul\":15846:15848   */\n      0x60\n        /* \"#utility.yul\":15835:15844   */\n      dup4\n        /* \"#utility.yul\":15831:15849   */\n      add\n        /* \"#utility.yul\":15822:15828   */\n      dup5\n        /* \"#utility.yul\":15778:15850   */\n      tag_487\n      jump\t// in\n    tag_715:\n        /* \"#utility.yul\":15274:15857   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15863:16041   */\n    tag_525:\n        /* \"#utility.yul\":16003:16033   */\n      0x436f6e74726163743a20436f6e74726163742069732050617573656400000000\n        /* \"#utility.yul\":15999:16000   */\n      0x00\n        /* \"#utility.yul\":15991:15997   */\n      dup3\n        /* \"#utility.yul\":15987:16001   */\n      add\n        /* \"#utility.yul\":15980:16034   */\n      mstore\n        /* \"#utility.yul\":15863:16041   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16047:16413   */\n    tag_526:\n        /* \"#utility.yul\":16189:16192   */\n      0x00\n        /* \"#utility.yul\":16210:16277   */\n      tag_718\n        /* \"#utility.yul\":16274:16276   */\n      0x1c\n        /* \"#utility.yul\":16269:16272   */\n      dup4\n        /* \"#utility.yul\":16210:16277   */\n      tag_489\n      jump\t// in\n    tag_718:\n        /* \"#utility.yul\":16203:16277   */\n      swap2\n      pop\n        /* \"#utility.yul\":16286:16379   */\n      tag_719\n        /* \"#utility.yul\":16375:16378   */\n      dup3\n        /* \"#utility.yul\":16286:16379   */\n      tag_525\n      jump\t// in\n    tag_719:\n        /* \"#utility.yul\":16404:16406   */\n      0x20\n        /* \"#utility.yul\":16399:16402   */\n      dup3\n        /* \"#utility.yul\":16395:16407   */\n      add\n        /* \"#utility.yul\":16388:16407   */\n      swap1\n      pop\n        /* \"#utility.yul\":16047:16413   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16419:16838   */\n    tag_285:\n        /* \"#utility.yul\":16585:16589   */\n      0x00\n        /* \"#utility.yul\":16623:16625   */\n      0x20\n        /* \"#utility.yul\":16612:16621   */\n      dup3\n        /* \"#utility.yul\":16608:16626   */\n      add\n        /* \"#utility.yul\":16600:16626   */\n      swap1\n      pop\n        /* \"#utility.yul\":16672:16681   */\n      dup2\n        /* \"#utility.yul\":16666:16670   */\n      dup2\n        /* \"#utility.yul\":16662:16682   */\n      sub\n        /* \"#utility.yul\":16658:16659   */\n      0x00\n        /* \"#utility.yul\":16647:16656   */\n      dup4\n        /* \"#utility.yul\":16643:16660   */\n      add\n        /* \"#utility.yul\":16636:16683   */\n      mstore\n        /* \"#utility.yul\":16700:16831   */\n      tag_721\n        /* \"#utility.yul\":16826:16830   */\n      dup2\n        /* \"#utility.yul\":16700:16831   */\n      tag_526\n      jump\t// in\n    tag_721:\n        /* \"#utility.yul\":16692:16831   */\n      swap1\n      pop\n        /* \"#utility.yul\":16419:16838   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16844:17013   */\n    tag_527:\n        /* \"#utility.yul\":16984:17005   */\n      0x4d696e74696e6720746f2064697361626c656400000000000000000000000000\n        /* \"#utility.yul\":16980:16981   */\n      0x00\n        /* \"#utility.yul\":16972:16978   */\n      dup3\n        /* \"#utility.yul\":16968:16982   */\n      add\n        /* \"#utility.yul\":16961:17006   */\n      mstore\n        /* \"#utility.yul\":16844:17013   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17019:17385   */\n    tag_528:\n        /* \"#utility.yul\":17161:17164   */\n      0x00\n        /* \"#utility.yul\":17182:17249   */\n      tag_724\n        /* \"#utility.yul\":17246:17248   */\n      0x13\n        /* \"#utility.yul\":17241:17244   */\n      dup4\n        /* \"#utility.yul\":17182:17249   */\n      tag_489\n      jump\t// in\n    tag_724:\n        /* \"#utility.yul\":17175:17249   */\n      swap2\n      pop\n        /* \"#utility.yul\":17258:17351   */\n      tag_725\n        /* \"#utility.yul\":17347:17350   */\n      dup3\n        /* \"#utility.yul\":17258:17351   */\n      tag_527\n      jump\t// in\n    tag_725:\n        /* \"#utility.yul\":17376:17378   */\n      0x20\n        /* \"#utility.yul\":17371:17374   */\n      dup3\n        /* \"#utility.yul\":17367:17379   */\n      add\n        /* \"#utility.yul\":17360:17379   */\n      swap1\n      pop\n        /* \"#utility.yul\":17019:17385   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17391:17810   */\n    tag_299:\n        /* \"#utility.yul\":17557:17561   */\n      0x00\n        /* \"#utility.yul\":17595:17597   */\n      0x20\n        /* \"#utility.yul\":17584:17593   */\n      dup3\n        /* \"#utility.yul\":17580:17598   */\n      add\n        /* \"#utility.yul\":17572:17598   */\n      swap1\n      pop\n        /* \"#utility.yul\":17644:17653   */\n      dup2\n        /* \"#utility.yul\":17638:17642   */\n      dup2\n        /* \"#utility.yul\":17634:17654   */\n      sub\n        /* \"#utility.yul\":17630:17631   */\n      0x00\n        /* \"#utility.yul\":17619:17628   */\n      dup4\n        /* \"#utility.yul\":17615:17632   */\n      add\n        /* \"#utility.yul\":17608:17655   */\n      mstore\n        /* \"#utility.yul\":17672:17803   */\n      tag_727\n        /* \"#utility.yul\":17798:17802   */\n      dup2\n        /* \"#utility.yul\":17672:17803   */\n      tag_528\n      jump\t// in\n    tag_727:\n        /* \"#utility.yul\":17664:17803   */\n      swap1\n      pop\n        /* \"#utility.yul\":17391:17810   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17816:18007   */\n    tag_305:\n        /* \"#utility.yul\":17856:17859   */\n      0x00\n        /* \"#utility.yul\":17875:17895   */\n      tag_729\n        /* \"#utility.yul\":17893:17894   */\n      dup3\n        /* \"#utility.yul\":17875:17895   */\n      tag_486\n      jump\t// in\n    tag_729:\n        /* \"#utility.yul\":17870:17895   */\n      swap2\n      pop\n        /* \"#utility.yul\":17909:17929   */\n      tag_730\n        /* \"#utility.yul\":17927:17928   */\n      dup4\n        /* \"#utility.yul\":17909:17929   */\n      tag_486\n      jump\t// in\n    tag_730:\n        /* \"#utility.yul\":17904:17929   */\n      swap3\n      pop\n        /* \"#utility.yul\":17952:17953   */\n      dup3\n        /* \"#utility.yul\":17949:17950   */\n      dup3\n        /* \"#utility.yul\":17945:17954   */\n      add\n        /* \"#utility.yul\":17938:17954   */\n      swap1\n      pop\n        /* \"#utility.yul\":17973:17976   */\n      dup1\n        /* \"#utility.yul\":17970:17971   */\n      dup3\n        /* \"#utility.yul\":17967:17977   */\n      gt\n        /* \"#utility.yul\":17964:18000   */\n      iszero\n      tag_731\n      jumpi\n        /* \"#utility.yul\":17980:17998   */\n      tag_732\n      tag_517\n      jump\t// in\n    tag_732:\n        /* \"#utility.yul\":17964:18000   */\n    tag_731:\n        /* \"#utility.yul\":17816:18007   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18013:18192   */\n    tag_529:\n        /* \"#utility.yul\":18153:18184   */\n      0x436f6e74726163743a20537570706c7920436170206578636565646564000000\n        /* \"#utility.yul\":18149:18150   */\n      0x00\n        /* \"#utility.yul\":18141:18147   */\n      dup3\n        /* \"#utility.yul\":18137:18151   */\n      add\n        /* \"#utility.yul\":18130:18185   */\n      mstore\n        /* \"#utility.yul\":18013:18192   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18198:18564   */\n    tag_530:\n        /* \"#utility.yul\":18340:18343   */\n      0x00\n        /* \"#utility.yul\":18361:18428   */\n      tag_735\n        /* \"#utility.yul\":18425:18427   */\n      0x1d\n        /* \"#utility.yul\":18420:18423   */\n      dup4\n        /* \"#utility.yul\":18361:18428   */\n      tag_489\n      jump\t// in\n    tag_735:\n        /* \"#utility.yul\":18354:18428   */\n      swap2\n      pop\n        /* \"#utility.yul\":18437:18530   */\n      tag_736\n        /* \"#utility.yul\":18526:18529   */\n      dup3\n        /* \"#utility.yul\":18437:18530   */\n      tag_529\n      jump\t// in\n    tag_736:\n        /* \"#utility.yul\":18555:18557   */\n      0x20\n        /* \"#utility.yul\":18550:18553   */\n      dup3\n        /* \"#utility.yul\":18546:18558   */\n      add\n        /* \"#utility.yul\":18539:18558   */\n      swap1\n      pop\n        /* \"#utility.yul\":18198:18564   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18570:18989   */\n    tag_308:\n        /* \"#utility.yul\":18736:18740   */\n      0x00\n        /* \"#utility.yul\":18774:18776   */\n      0x20\n        /* \"#utility.yul\":18763:18772   */\n      dup3\n        /* \"#utility.yul\":18759:18777   */\n      add\n        /* \"#utility.yul\":18751:18777   */\n      swap1\n      pop\n        /* \"#utility.yul\":18823:18832   */\n      dup2\n        /* \"#utility.yul\":18817:18821   */\n      dup2\n        /* \"#utility.yul\":18813:18833   */\n      sub\n        /* \"#utility.yul\":18809:18810   */\n      0x00\n        /* \"#utility.yul\":18798:18807   */\n      dup4\n        /* \"#utility.yul\":18794:18811   */\n      add\n        /* \"#utility.yul\":18787:18834   */\n      mstore\n        /* \"#utility.yul\":18851:18982   */\n      tag_738\n        /* \"#utility.yul\":18977:18981   */\n      dup2\n        /* \"#utility.yul\":18851:18982   */\n      tag_530\n      jump\t// in\n    tag_738:\n        /* \"#utility.yul\":18843:18982   */\n      swap1\n      pop\n        /* \"#utility.yul\":18570:18989   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18995:19327   */\n    tag_310:\n        /* \"#utility.yul\":19116:19120   */\n      0x00\n        /* \"#utility.yul\":19154:19156   */\n      0x40\n        /* \"#utility.yul\":19143:19152   */\n      dup3\n        /* \"#utility.yul\":19139:19157   */\n      add\n        /* \"#utility.yul\":19131:19157   */\n      swap1\n      pop\n        /* \"#utility.yul\":19167:19238   */\n      tag_740\n        /* \"#utility.yul\":19235:19236   */\n      0x00\n        /* \"#utility.yul\":19224:19233   */\n      dup4\n        /* \"#utility.yul\":19220:19237   */\n      add\n        /* \"#utility.yul\":19211:19217   */\n      dup6\n        /* \"#utility.yul\":19167:19238   */\n      tag_514\n      jump\t// in\n    tag_740:\n        /* \"#utility.yul\":19248:19320   */\n      tag_741\n        /* \"#utility.yul\":19316:19318   */\n      0x20\n        /* \"#utility.yul\":19305:19314   */\n      dup4\n        /* \"#utility.yul\":19301:19319   */\n      add\n        /* \"#utility.yul\":19292:19298   */\n      dup5\n        /* \"#utility.yul\":19248:19320   */\n      tag_487\n      jump\t// in\n    tag_741:\n        /* \"#utility.yul\":18995:19327   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19333:19467   */\n    tag_531:\n        /* \"#utility.yul\":19391:19400   */\n      0x00\n        /* \"#utility.yul\":19424:19461   */\n      tag_743\n        /* \"#utility.yul\":19455:19460   */\n      dup3\n        /* \"#utility.yul\":19424:19461   */\n      tag_522\n      jump\t// in\n    tag_743:\n        /* \"#utility.yul\":19411:19461   */\n      swap1\n      pop\n        /* \"#utility.yul\":19333:19467   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19473:19620   */\n    tag_532:\n        /* \"#utility.yul\":19568:19613   */\n      tag_745\n        /* \"#utility.yul\":19607:19612   */\n      dup2\n        /* \"#utility.yul\":19568:19613   */\n      tag_531\n      jump\t// in\n    tag_745:\n        /* \"#utility.yul\":19563:19566   */\n      dup3\n        /* \"#utility.yul\":19556:19614   */\n      mstore\n        /* \"#utility.yul\":19473:19620   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19626:20084   */\n    tag_321:\n        /* \"#utility.yul\":19783:19787   */\n      0x00\n        /* \"#utility.yul\":19821:19823   */\n      0x60\n        /* \"#utility.yul\":19810:19819   */\n      dup3\n        /* \"#utility.yul\":19806:19824   */\n      add\n        /* \"#utility.yul\":19798:19824   */\n      swap1\n      pop\n        /* \"#utility.yul\":19834:19913   */\n      tag_747\n        /* \"#utility.yul\":19910:19911   */\n      0x00\n        /* \"#utility.yul\":19899:19908   */\n      dup4\n        /* \"#utility.yul\":19895:19912   */\n      add\n        /* \"#utility.yul\":19886:19892   */\n      dup7\n        /* \"#utility.yul\":19834:19913   */\n      tag_532\n      jump\t// in\n    tag_747:\n        /* \"#utility.yul\":19923:19995   */\n      tag_748\n        /* \"#utility.yul\":19991:19993   */\n      0x20\n        /* \"#utility.yul\":19980:19989   */\n      dup4\n        /* \"#utility.yul\":19976:19994   */\n      add\n        /* \"#utility.yul\":19967:19973   */\n      dup6\n        /* \"#utility.yul\":19923:19995   */\n      tag_487\n      jump\t// in\n    tag_748:\n        /* \"#utility.yul\":20005:20077   */\n      tag_749\n        /* \"#utility.yul\":20073:20075   */\n      0x40\n        /* \"#utility.yul\":20062:20071   */\n      dup4\n        /* \"#utility.yul\":20058:20076   */\n      add\n        /* \"#utility.yul\":20049:20055   */\n      dup5\n        /* \"#utility.yul\":20005:20077   */\n      tag_487\n      jump\t// in\n    tag_749:\n        /* \"#utility.yul\":19626:20084   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20090:20532   */\n    tag_332:\n        /* \"#utility.yul\":20239:20243   */\n      0x00\n        /* \"#utility.yul\":20277:20279   */\n      0x60\n        /* \"#utility.yul\":20266:20275   */\n      dup3\n        /* \"#utility.yul\":20262:20280   */\n      add\n        /* \"#utility.yul\":20254:20280   */\n      swap1\n      pop\n        /* \"#utility.yul\":20290:20361   */\n      tag_751\n        /* \"#utility.yul\":20358:20359   */\n      0x00\n        /* \"#utility.yul\":20347:20356   */\n      dup4\n        /* \"#utility.yul\":20343:20360   */\n      add\n        /* \"#utility.yul\":20334:20340   */\n      dup7\n        /* \"#utility.yul\":20290:20361   */\n      tag_514\n      jump\t// in\n    tag_751:\n        /* \"#utility.yul\":20371:20443   */\n      tag_752\n        /* \"#utility.yul\":20439:20441   */\n      0x20\n        /* \"#utility.yul\":20428:20437   */\n      dup4\n        /* \"#utility.yul\":20424:20442   */\n      add\n        /* \"#utility.yul\":20415:20421   */\n      dup6\n        /* \"#utility.yul\":20371:20443   */\n      tag_487\n      jump\t// in\n    tag_752:\n        /* \"#utility.yul\":20453:20525   */\n      tag_753\n        /* \"#utility.yul\":20521:20523   */\n      0x40\n        /* \"#utility.yul\":20510:20519   */\n      dup4\n        /* \"#utility.yul\":20506:20524   */\n      add\n        /* \"#utility.yul\":20497:20503   */\n      dup5\n        /* \"#utility.yul\":20453:20525   */\n      tag_514\n      jump\t// in\n    tag_753:\n        /* \"#utility.yul\":20090:20532   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20538:20704   */\n    tag_533:\n        /* \"#utility.yul\":20678:20696   */\n      0x4d696e74696e672064697361626c656400000000000000000000000000000000\n        /* \"#utility.yul\":20674:20675   */\n      0x00\n        /* \"#utility.yul\":20666:20672   */\n      dup3\n        /* \"#utility.yul\":20662:20676   */\n      add\n        /* \"#utility.yul\":20655:20697   */\n      mstore\n        /* \"#utility.yul\":20538:20704   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20710:21076   */\n    tag_534:\n        /* \"#utility.yul\":20852:20855   */\n      0x00\n        /* \"#utility.yul\":20873:20940   */\n      tag_756\n        /* \"#utility.yul\":20937:20939   */\n      0x10\n        /* \"#utility.yul\":20932:20935   */\n      dup4\n        /* \"#utility.yul\":20873:20940   */\n      tag_489\n      jump\t// in\n    tag_756:\n        /* \"#utility.yul\":20866:20940   */\n      swap2\n      pop\n        /* \"#utility.yul\":20949:21042   */\n      tag_757\n        /* \"#utility.yul\":21038:21041   */\n      dup3\n        /* \"#utility.yul\":20949:21042   */\n      tag_533\n      jump\t// in\n    tag_757:\n        /* \"#utility.yul\":21067:21069   */\n      0x20\n        /* \"#utility.yul\":21062:21065   */\n      dup3\n        /* \"#utility.yul\":21058:21070   */\n      add\n        /* \"#utility.yul\":21051:21070   */\n      swap1\n      pop\n        /* \"#utility.yul\":20710:21076   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21082:21501   */\n    tag_348:\n        /* \"#utility.yul\":21248:21252   */\n      0x00\n        /* \"#utility.yul\":21286:21288   */\n      0x20\n        /* \"#utility.yul\":21275:21284   */\n      dup3\n        /* \"#utility.yul\":21271:21289   */\n      add\n        /* \"#utility.yul\":21263:21289   */\n      swap1\n      pop\n        /* \"#utility.yul\":21335:21344   */\n      dup2\n        /* \"#utility.yul\":21329:21333   */\n      dup2\n        /* \"#utility.yul\":21325:21345   */\n      sub\n        /* \"#utility.yul\":21321:21322   */\n      0x00\n        /* \"#utility.yul\":21310:21319   */\n      dup4\n        /* \"#utility.yul\":21306:21323   */\n      add\n        /* \"#utility.yul\":21299:21346   */\n      mstore\n        /* \"#utility.yul\":21363:21494   */\n      tag_759\n        /* \"#utility.yul\":21489:21493   */\n      dup2\n        /* \"#utility.yul\":21363:21494   */\n      tag_534\n      jump\t// in\n    tag_759:\n        /* \"#utility.yul\":21355:21494   */\n      swap1\n      pop\n        /* \"#utility.yul\":21082:21501   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21507:21685   */\n    tag_535:\n        /* \"#utility.yul\":21647:21677   */\n      0x436f6e74726163743a20537570706c792043617020746f6f206c6f7700000000\n        /* \"#utility.yul\":21643:21644   */\n      0x00\n        /* \"#utility.yul\":21635:21641   */\n      dup3\n        /* \"#utility.yul\":21631:21645   */\n      add\n        /* \"#utility.yul\":21624:21678   */\n      mstore\n        /* \"#utility.yul\":21507:21685   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21691:22057   */\n    tag_536:\n        /* \"#utility.yul\":21833:21836   */\n      0x00\n        /* \"#utility.yul\":21854:21921   */\n      tag_762\n        /* \"#utility.yul\":21918:21920   */\n      0x1c\n        /* \"#utility.yul\":21913:21916   */\n      dup4\n        /* \"#utility.yul\":21854:21921   */\n      tag_489\n      jump\t// in\n    tag_762:\n        /* \"#utility.yul\":21847:21921   */\n      swap2\n      pop\n        /* \"#utility.yul\":21930:22023   */\n      tag_763\n        /* \"#utility.yul\":22019:22022   */\n      dup3\n        /* \"#utility.yul\":21930:22023   */\n      tag_535\n      jump\t// in\n    tag_763:\n        /* \"#utility.yul\":22048:22050   */\n      0x20\n        /* \"#utility.yul\":22043:22046   */\n      dup3\n        /* \"#utility.yul\":22039:22051   */\n      add\n        /* \"#utility.yul\":22032:22051   */\n      swap1\n      pop\n        /* \"#utility.yul\":21691:22057   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22063:22482   */\n    tag_378:\n        /* \"#utility.yul\":22229:22233   */\n      0x00\n        /* \"#utility.yul\":22267:22269   */\n      0x20\n        /* \"#utility.yul\":22256:22265   */\n      dup3\n        /* \"#utility.yul\":22252:22270   */\n      add\n        /* \"#utility.yul\":22244:22270   */\n      swap1\n      pop\n        /* \"#utility.yul\":22316:22325   */\n      dup2\n        /* \"#utility.yul\":22310:22314   */\n      dup2\n        /* \"#utility.yul\":22306:22326   */\n      sub\n        /* \"#utility.yul\":22302:22303   */\n      0x00\n        /* \"#utility.yul\":22291:22300   */\n      dup4\n        /* \"#utility.yul\":22287:22304   */\n      add\n        /* \"#utility.yul\":22280:22327   */\n      mstore\n        /* \"#utility.yul\":22344:22475   */\n      tag_765\n        /* \"#utility.yul\":22470:22474   */\n      dup2\n        /* \"#utility.yul\":22344:22475   */\n      tag_536\n      jump\t// in\n    tag_765:\n        /* \"#utility.yul\":22336:22475   */\n      swap1\n      pop\n        /* \"#utility.yul\":22063:22482   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22488:22710   */\n    tag_422:\n        /* \"#utility.yul\":22581:22585   */\n      0x00\n        /* \"#utility.yul\":22619:22621   */\n      0x20\n        /* \"#utility.yul\":22608:22617   */\n      dup3\n        /* \"#utility.yul\":22604:22622   */\n      add\n        /* \"#utility.yul\":22596:22622   */\n      swap1\n      pop\n        /* \"#utility.yul\":22632:22703   */\n      tag_767\n        /* \"#utility.yul\":22700:22701   */\n      0x00\n        /* \"#utility.yul\":22689:22698   */\n      dup4\n        /* \"#utility.yul\":22685:22702   */\n      add\n        /* \"#utility.yul\":22676:22682   */\n      dup5\n        /* \"#utility.yul\":22632:22703   */\n      tag_514\n      jump\t// in\n    tag_767:\n        /* \"#utility.yul\":22488:22710   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22716:23048   */\n    tag_461:\n        /* \"#utility.yul\":22837:22841   */\n      0x00\n        /* \"#utility.yul\":22875:22877   */\n      0x40\n        /* \"#utility.yul\":22864:22873   */\n      dup3\n        /* \"#utility.yul\":22860:22878   */\n      add\n        /* \"#utility.yul\":22852:22878   */\n      swap1\n      pop\n        /* \"#utility.yul\":22888:22959   */\n      tag_769\n        /* \"#utility.yul\":22956:22957   */\n      0x00\n        /* \"#utility.yul\":22945:22954   */\n      dup4\n        /* \"#utility.yul\":22941:22958   */\n      add\n        /* \"#utility.yul\":22932:22938   */\n      dup6\n        /* \"#utility.yul\":22888:22959   */\n      tag_514\n      jump\t// in\n    tag_769:\n        /* \"#utility.yul\":22969:23041   */\n      tag_770\n        /* \"#utility.yul\":23037:23039   */\n      0x20\n        /* \"#utility.yul\":23026:23035   */\n      dup4\n        /* \"#utility.yul\":23022:23040   */\n      add\n        /* \"#utility.yul\":23013:23019   */\n      dup5\n        /* \"#utility.yul\":22969:23041   */\n      tag_504\n      jump\t// in\n    tag_770:\n        /* \"#utility.yul\":22716:23048   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23054:23496   */\n    tag_468:\n        /* \"#utility.yul\":23203:23207   */\n      0x00\n        /* \"#utility.yul\":23241:23243   */\n      0x60\n        /* \"#utility.yul\":23230:23239   */\n      dup3\n        /* \"#utility.yul\":23226:23244   */\n      add\n        /* \"#utility.yul\":23218:23244   */\n      swap1\n      pop\n        /* \"#utility.yul\":23254:23325   */\n      tag_772\n        /* \"#utility.yul\":23322:23323   */\n      0x00\n        /* \"#utility.yul\":23311:23320   */\n      dup4\n        /* \"#utility.yul\":23307:23324   */\n      add\n        /* \"#utility.yul\":23298:23304   */\n      dup7\n        /* \"#utility.yul\":23254:23325   */\n      tag_514\n      jump\t// in\n    tag_772:\n        /* \"#utility.yul\":23335:23407   */\n      tag_773\n        /* \"#utility.yul\":23403:23405   */\n      0x20\n        /* \"#utility.yul\":23392:23401   */\n      dup4\n        /* \"#utility.yul\":23388:23406   */\n      add\n        /* \"#utility.yul\":23379:23385   */\n      dup6\n        /* \"#utility.yul\":23335:23407   */\n      tag_487\n      jump\t// in\n    tag_773:\n        /* \"#utility.yul\":23417:23489   */\n      tag_774\n        /* \"#utility.yul\":23485:23487   */\n      0x40\n        /* \"#utility.yul\":23474:23483   */\n      dup4\n        /* \"#utility.yul\":23470:23488   */\n      add\n        /* \"#utility.yul\":23461:23467   */\n      dup5\n        /* \"#utility.yul\":23417:23489   */\n      tag_487\n      jump\t// in\n    tag_774:\n        /* \"#utility.yul\":23054:23496   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220bff9d0013640c6ef3513800fbcca4bd42eee571afeaf7e5ad10ebf4b5198a3a364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1968": {
									"entryPoint": null,
									"id": 1968,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2286": {
									"entryPoint": null,
									"id": 2286,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_657": {
									"entryPoint": null,
									"id": 657,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 516,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_960": {
									"entryPoint": 762,
									"id": 960,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1906": {
									"entryPoint": 509,
									"id": 1906,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_update_927": {
									"entryPoint": 995,
									"id": 927,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 895,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2508,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1680,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1532,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1965,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1698,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1632,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2075,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2047,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2397,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1587,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1542,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1857,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1713,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1907,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1725,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1866,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1903,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7000:17",
										"nodeType": "YulBlock",
										"src": "0:7000:17",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:17",
													"nodeType": "YulBlock",
													"src": "66:40:17",
													"statements": [
														{
															"nativeSrc": "77:22:17",
															"nodeType": "YulAssignment",
															"src": "77:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:17"
																},
																"nativeSrc": "87:12:17",
																"nodeType": "YulFunctionCall",
																"src": "87:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:17"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:17",
														"nodeType": "YulTypedName",
														"src": "49:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:17",
														"nodeType": "YulTypedName",
														"src": "59:6:17",
														"type": ""
													}
												],
												"src": "7:99:17"
											},
											{
												"body": {
													"nativeSrc": "140:152:17",
													"nodeType": "YulBlock",
													"src": "140:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:17",
																		"nodeType": "YulLiteral",
																		"src": "157:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:17",
																		"nodeType": "YulLiteral",
																		"src": "160:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:17"
																},
																"nativeSrc": "150:88:17",
																"nodeType": "YulFunctionCall",
																"src": "150:88:17"
															},
															"nativeSrc": "150:88:17",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:17",
																		"nodeType": "YulLiteral",
																		"src": "254:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:17",
																		"nodeType": "YulLiteral",
																		"src": "257:4:17",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:17"
																},
																"nativeSrc": "247:15:17",
																"nodeType": "YulFunctionCall",
																"src": "247:15:17"
															},
															"nativeSrc": "247:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:17",
																		"nodeType": "YulLiteral",
																		"src": "278:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:17",
																		"nodeType": "YulLiteral",
																		"src": "281:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:17"
																},
																"nativeSrc": "271:15:17",
																"nodeType": "YulFunctionCall",
																"src": "271:15:17"
															},
															"nativeSrc": "271:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:17"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:17",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:17"
											},
											{
												"body": {
													"nativeSrc": "326:152:17",
													"nodeType": "YulBlock",
													"src": "326:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:17",
																		"nodeType": "YulLiteral",
																		"src": "343:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:17",
																		"nodeType": "YulLiteral",
																		"src": "346:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:17"
																},
																"nativeSrc": "336:88:17",
																"nodeType": "YulFunctionCall",
																"src": "336:88:17"
															},
															"nativeSrc": "336:88:17",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:17",
																		"nodeType": "YulLiteral",
																		"src": "440:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:17",
																		"nodeType": "YulLiteral",
																		"src": "443:4:17",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:17"
																},
																"nativeSrc": "433:15:17",
																"nodeType": "YulFunctionCall",
																"src": "433:15:17"
															},
															"nativeSrc": "433:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:17",
																		"nodeType": "YulLiteral",
																		"src": "464:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:17",
																		"nodeType": "YulLiteral",
																		"src": "467:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:17"
																},
																"nativeSrc": "457:15:17",
																"nodeType": "YulFunctionCall",
																"src": "457:15:17"
															},
															"nativeSrc": "457:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:17"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:17",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:17"
											},
											{
												"body": {
													"nativeSrc": "535:269:17",
													"nodeType": "YulBlock",
													"src": "535:269:17",
													"statements": [
														{
															"nativeSrc": "545:22:17",
															"nodeType": "YulAssignment",
															"src": "545:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:17",
																		"nodeType": "YulLiteral",
																		"src": "565:1:17",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:17"
																},
																"nativeSrc": "555:12:17",
																"nodeType": "YulFunctionCall",
																"src": "555:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:17"
																}
															]
														},
														{
															"nativeSrc": "576:38:17",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:17",
																		"nodeType": "YulLiteral",
																		"src": "612:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:17"
																},
																"nativeSrc": "602:12:17",
																"nodeType": "YulFunctionCall",
																"src": "602:12:17"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:17",
																	"nodeType": "YulTypedName",
																	"src": "580:18:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:17",
																"nodeType": "YulBlock",
																"src": "653:51:17",
																"statements": [
																	{
																		"nativeSrc": "667:27:17",
																		"nodeType": "YulAssignment",
																		"src": "667:27:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:17",
																					"nodeType": "YulLiteral",
																					"src": "689:4:17",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:17"
																			},
																			"nativeSrc": "677:17:17",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:17"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:17",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:17"
																},
																"nativeSrc": "626:26:17",
																"nodeType": "YulFunctionCall",
																"src": "626:26:17"
															},
															"nativeSrc": "623:81:17",
															"nodeType": "YulIf",
															"src": "623:81:17"
														},
														{
															"body": {
																"nativeSrc": "756:42:17",
																"nodeType": "YulBlock",
																"src": "756:42:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:17"
																			},
																			"nativeSrc": "770:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:17"
																		},
																		"nativeSrc": "770:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:17",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:17",
																				"nodeType": "YulLiteral",
																				"src": "751:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:17"
																		},
																		"nativeSrc": "740:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:17"
																},
																"nativeSrc": "717:38:17",
																"nodeType": "YulFunctionCall",
																"src": "717:38:17"
															},
															"nativeSrc": "714:84:17",
															"nodeType": "YulIf",
															"src": "714:84:17"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:17",
														"nodeType": "YulTypedName",
														"src": "519:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:17",
														"nodeType": "YulTypedName",
														"src": "528:6:17",
														"type": ""
													}
												],
												"src": "484:320:17"
											},
											{
												"body": {
													"nativeSrc": "864:87:17",
													"nodeType": "YulBlock",
													"src": "864:87:17",
													"statements": [
														{
															"nativeSrc": "874:11:17",
															"nodeType": "YulAssignment",
															"src": "874:11:17",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:17",
																"nodeType": "YulIdentifier",
																"src": "882:3:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:17",
																		"nodeType": "YulLiteral",
																		"src": "902:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:17"
																},
																"nativeSrc": "895:14:17",
																"nodeType": "YulFunctionCall",
																"src": "895:14:17"
															},
															"nativeSrc": "895:14:17",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:17"
														},
														{
															"nativeSrc": "918:26:17",
															"nodeType": "YulAssignment",
															"src": "918:26:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:17",
																		"nodeType": "YulLiteral",
																		"src": "936:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:17",
																		"nodeType": "YulLiteral",
																		"src": "939:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:17"
																},
																"nativeSrc": "926:18:17",
																"nodeType": "YulFunctionCall",
																"src": "926:18:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:17"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:17",
														"nodeType": "YulTypedName",
														"src": "851:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:17",
														"nodeType": "YulTypedName",
														"src": "859:4:17",
														"type": ""
													}
												],
												"src": "810:141:17"
											},
											{
												"body": {
													"nativeSrc": "1001:49:17",
													"nodeType": "YulBlock",
													"src": "1001:49:17",
													"statements": [
														{
															"nativeSrc": "1011:33:17",
															"nodeType": "YulAssignment",
															"src": "1011:33:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:17",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:17"
																		},
																		"nativeSrc": "1025:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:17"
																},
																"nativeSrc": "1021:23:17",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:17"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:17",
														"nodeType": "YulTypedName",
														"src": "984:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:17",
														"nodeType": "YulTypedName",
														"src": "994:6:17",
														"type": ""
													}
												],
												"src": "957:93:17"
											},
											{
												"body": {
													"nativeSrc": "1109:54:17",
													"nodeType": "YulBlock",
													"src": "1109:54:17",
													"statements": [
														{
															"nativeSrc": "1119:37:17",
															"nodeType": "YulAssignment",
															"src": "1119:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:17"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:17"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:17"
																},
																"nativeSrc": "1140:16:17",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:17"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:17",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:17"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:17",
														"nodeType": "YulTypedName",
														"src": "1084:4:17",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:17",
														"nodeType": "YulTypedName",
														"src": "1090:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:17",
														"nodeType": "YulTypedName",
														"src": "1100:8:17",
														"type": ""
													}
												],
												"src": "1056:107:17"
											},
											{
												"body": {
													"nativeSrc": "1245:317:17",
													"nodeType": "YulBlock",
													"src": "1245:317:17",
													"statements": [
														{
															"nativeSrc": "1255:35:17",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:17",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:17",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:17",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:17",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:17"
																},
																"nativeSrc": "1272:18:17",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:17"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:17",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:17",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:17",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:17",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:17"
																},
																"nativeSrc": "1311:97:17",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:17"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:17",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:17",
															"nodeType": "YulAssignment",
															"src": "1417:51:17",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:17"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:17",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:17"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:17"
																},
																"nativeSrc": "1429:39:17",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:17"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:17",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:17"
																}
															]
														},
														{
															"nativeSrc": "1477:30:17",
															"nodeType": "YulAssignment",
															"src": "1477:30:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:17"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:17"
																		},
																		"nativeSrc": "1497:9:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:17"
																},
																"nativeSrc": "1486:21:17",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:17"
																}
															]
														},
														{
															"nativeSrc": "1516:40:17",
															"nodeType": "YulAssignment",
															"src": "1516:40:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:17",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:17"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:17"
																		},
																		"nativeSrc": "1536:19:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:17"
																},
																"nativeSrc": "1526:30:17",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:17"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:17",
														"nodeType": "YulTypedName",
														"src": "1206:5:17",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:17",
														"nodeType": "YulTypedName",
														"src": "1213:10:17",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:17",
														"nodeType": "YulTypedName",
														"src": "1225:8:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:17",
														"nodeType": "YulTypedName",
														"src": "1238:6:17",
														"type": ""
													}
												],
												"src": "1169:393:17"
											},
											{
												"body": {
													"nativeSrc": "1613:32:17",
													"nodeType": "YulBlock",
													"src": "1613:32:17",
													"statements": [
														{
															"nativeSrc": "1623:16:17",
															"nodeType": "YulAssignment",
															"src": "1623:16:17",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:17",
																"nodeType": "YulIdentifier",
																"src": "1634:5:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:17",
														"nodeType": "YulTypedName",
														"src": "1595:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:17",
														"nodeType": "YulTypedName",
														"src": "1605:7:17",
														"type": ""
													}
												],
												"src": "1568:77:17"
											},
											{
												"body": {
													"nativeSrc": "1683:28:17",
													"nodeType": "YulBlock",
													"src": "1683:28:17",
													"statements": [
														{
															"nativeSrc": "1693:12:17",
															"nodeType": "YulAssignment",
															"src": "1693:12:17",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:17",
																"nodeType": "YulIdentifier",
																"src": "1700:5:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:17"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:17",
														"nodeType": "YulTypedName",
														"src": "1669:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:17",
														"nodeType": "YulTypedName",
														"src": "1679:3:17",
														"type": ""
													}
												],
												"src": "1651:60:17"
											},
											{
												"body": {
													"nativeSrc": "1777:82:17",
													"nodeType": "YulBlock",
													"src": "1777:82:17",
													"statements": [
														{
															"nativeSrc": "1787:66:17",
															"nodeType": "YulAssignment",
															"src": "1787:66:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:17",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:17"
																				},
																				"nativeSrc": "1827:24:17",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:17"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:17",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:17"
																		},
																		"nativeSrc": "1818:34:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:17"
																},
																"nativeSrc": "1800:53:17",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:17"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:17"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:17",
														"nodeType": "YulTypedName",
														"src": "1757:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:17",
														"nodeType": "YulTypedName",
														"src": "1767:9:17",
														"type": ""
													}
												],
												"src": "1717:142:17"
											},
											{
												"body": {
													"nativeSrc": "1912:28:17",
													"nodeType": "YulBlock",
													"src": "1912:28:17",
													"statements": [
														{
															"nativeSrc": "1922:12:17",
															"nodeType": "YulAssignment",
															"src": "1922:12:17",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:17",
																"nodeType": "YulIdentifier",
																"src": "1929:5:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:17"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:17",
														"nodeType": "YulTypedName",
														"src": "1898:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:17",
														"nodeType": "YulTypedName",
														"src": "1908:3:17",
														"type": ""
													}
												],
												"src": "1865:75:17"
											},
											{
												"body": {
													"nativeSrc": "2022:193:17",
													"nodeType": "YulBlock",
													"src": "2022:193:17",
													"statements": [
														{
															"nativeSrc": "2032:63:17",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:17",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:17",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:17"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:17",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:17"
																},
																"nativeSrc": "2056:39:17",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:17"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:17",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:17",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:17"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:17"
																				},
																				"nativeSrc": "2145:11:17",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:17"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:17",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:17"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:17",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:17"
																				},
																				"nativeSrc": "2166:41:17",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:17"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:17",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:17"
																		},
																		"nativeSrc": "2117:91:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:17"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:17"
																},
																"nativeSrc": "2104:105:17",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:17"
															},
															"nativeSrc": "2104:105:17",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:17"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:17",
														"nodeType": "YulTypedName",
														"src": "1999:4:17",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:17",
														"nodeType": "YulTypedName",
														"src": "2005:6:17",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:17",
														"nodeType": "YulTypedName",
														"src": "2013:7:17",
														"type": ""
													}
												],
												"src": "1946:269:17"
											},
											{
												"body": {
													"nativeSrc": "2270:24:17",
													"nodeType": "YulBlock",
													"src": "2270:24:17",
													"statements": [
														{
															"nativeSrc": "2280:8:17",
															"nodeType": "YulAssignment",
															"src": "2280:8:17",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:17",
																"nodeType": "YulLiteral",
																"src": "2287:1:17",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:17"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:17",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:17",
														"nodeType": "YulTypedName",
														"src": "2266:3:17",
														"type": ""
													}
												],
												"src": "2221:73:17"
											},
											{
												"body": {
													"nativeSrc": "2353:136:17",
													"nodeType": "YulBlock",
													"src": "2353:136:17",
													"statements": [
														{
															"nativeSrc": "2363:46:17",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:17",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:17",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:17"
																},
																"nativeSrc": "2377:32:17",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:17"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:17",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:17"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:17"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:17"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:17"
																},
																"nativeSrc": "2418:65:17",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:17"
															},
															"nativeSrc": "2418:65:17",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:17"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:17",
														"nodeType": "YulTypedName",
														"src": "2339:4:17",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:17",
														"nodeType": "YulTypedName",
														"src": "2345:6:17",
														"type": ""
													}
												],
												"src": "2300:189:17"
											},
											{
												"body": {
													"nativeSrc": "2545:136:17",
													"nodeType": "YulBlock",
													"src": "2545:136:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:17",
																"nodeType": "YulBlock",
																"src": "2612:63:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:17",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:17"
																			},
																			"nativeSrc": "2626:39:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:17"
																		},
																		"nativeSrc": "2626:39:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:17"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:17"
																},
																"nativeSrc": "2562:14:17",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:17"
															},
															"nativeSrc": "2555:120:17",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:17",
																"nodeType": "YulBlock",
																"src": "2577:26:17",
																"statements": [
																	{
																		"nativeSrc": "2579:22:17",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:17",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:17"
																			},
																			"nativeSrc": "2588:13:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:17"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:17",
																"nodeType": "YulBlock",
																"src": "2559:2:17",
																"statements": []
															},
															"src": "2555:120:17"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:17",
														"nodeType": "YulTypedName",
														"src": "2533:5:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:17",
														"nodeType": "YulTypedName",
														"src": "2540:3:17",
														"type": ""
													}
												],
												"src": "2495:186:17"
											},
											{
												"body": {
													"nativeSrc": "2766:464:17",
													"nodeType": "YulBlock",
													"src": "2766:464:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:17",
																"nodeType": "YulBlock",
																"src": "2792:431:17",
																"statements": [
																	{
																		"nativeSrc": "2806:54:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:17"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:17",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:17"
																			},
																			"nativeSrc": "2822:38:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:17"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:17",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:17",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:17"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:17",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:17"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:17",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:17"
																					},
																					"nativeSrc": "2906:29:17",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:17"
																			},
																			"nativeSrc": "2892:44:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:17"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:17",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:17",
																			"nodeType": "YulBlock",
																			"src": "3093:27:17",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:17",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:17",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:17",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:17"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:17",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:17"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:17",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:17",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:17",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:17"
																			},
																			"nativeSrc": "3074:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:17"
																		},
																		"nativeSrc": "3071:49:17",
																		"nodeType": "YulIf",
																		"src": "3071:49:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:17",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:17"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:17",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:17"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:17"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:17",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:17"
																							},
																							"nativeSrc": "3189:22:17",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:17"
																					},
																					"nativeSrc": "3175:37:17",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:17"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:17",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:17"
																			},
																			"nativeSrc": "3133:80:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:17"
																		},
																		"nativeSrc": "3133:80:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:17",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:17"
																},
																"nativeSrc": "2780:11:17",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:17"
															},
															"nativeSrc": "2777:446:17",
															"nodeType": "YulIf",
															"src": "2777:446:17"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:17",
														"nodeType": "YulTypedName",
														"src": "2742:5:17",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:17",
														"nodeType": "YulTypedName",
														"src": "2749:3:17",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:17",
														"nodeType": "YulTypedName",
														"src": "2754:10:17",
														"type": ""
													}
												],
												"src": "2687:543:17"
											},
											{
												"body": {
													"nativeSrc": "3299:54:17",
													"nodeType": "YulBlock",
													"src": "3299:54:17",
													"statements": [
														{
															"nativeSrc": "3309:37:17",
															"nodeType": "YulAssignment",
															"src": "3309:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:17"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:17"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:17"
																},
																"nativeSrc": "3330:16:17",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:17"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:17",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:17"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:17",
														"nodeType": "YulTypedName",
														"src": "3274:4:17",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:17",
														"nodeType": "YulTypedName",
														"src": "3280:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:17",
														"nodeType": "YulTypedName",
														"src": "3290:8:17",
														"type": ""
													}
												],
												"src": "3236:117:17"
											},
											{
												"body": {
													"nativeSrc": "3410:118:17",
													"nodeType": "YulBlock",
													"src": "3410:118:17",
													"statements": [
														{
															"nativeSrc": "3420:68:17",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:17",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:17",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:17"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:17"
																				},
																				"nativeSrc": "3465:13:17",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:17",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:17",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:17"
																				},
																				"nativeSrc": "3480:6:17",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:17"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:17",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:17"
																		},
																		"nativeSrc": "3436:51:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:17"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:17"
																},
																"nativeSrc": "3432:56:17",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:17"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:17",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:17",
															"nodeType": "YulAssignment",
															"src": "3497:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:17"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:17"
																},
																"nativeSrc": "3507:15:17",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:17"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:17",
														"nodeType": "YulTypedName",
														"src": "3387:4:17",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:17",
														"nodeType": "YulTypedName",
														"src": "3393:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:17",
														"nodeType": "YulTypedName",
														"src": "3403:6:17",
														"type": ""
													}
												],
												"src": "3359:169:17"
											},
											{
												"body": {
													"nativeSrc": "3614:214:17",
													"nodeType": "YulBlock",
													"src": "3614:214:17",
													"statements": [
														{
															"nativeSrc": "3747:37:17",
															"nodeType": "YulAssignment",
															"src": "3747:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:17"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:17"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:17"
																},
																"nativeSrc": "3755:29:17",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:17"
																}
															]
														},
														{
															"nativeSrc": "3793:29:17",
															"nodeType": "YulAssignment",
															"src": "3793:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:17",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:17",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:17"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:17"
																		},
																		"nativeSrc": "3810:11:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:17"
																},
																"nativeSrc": "3801:21:17",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:17"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:17"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:17",
														"nodeType": "YulTypedName",
														"src": "3595:4:17",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:17",
														"nodeType": "YulTypedName",
														"src": "3601:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:17",
														"nodeType": "YulTypedName",
														"src": "3609:4:17",
														"type": ""
													}
												],
												"src": "3533:295:17"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:17",
													"nodeType": "YulBlock",
													"src": "3925:1303:17",
													"statements": [
														{
															"nativeSrc": "3936:51:17",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:17",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:17",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:17"
																},
																"nativeSrc": "3950:37:17",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:17"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:17",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:17",
																"nodeType": "YulBlock",
																"src": "4072:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:17"
																			},
																			"nativeSrc": "4074:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:17"
																		},
																		"nativeSrc": "4074:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:17",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:17"
																},
																"nativeSrc": "4041:30:17",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:17"
															},
															"nativeSrc": "4038:56:17",
															"nodeType": "YulIf",
															"src": "4038:56:17"
														},
														{
															"nativeSrc": "4104:52:17",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:17"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:17",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:17"
																		},
																		"nativeSrc": "4144:11:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:17"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:17",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:17"
																},
																"nativeSrc": "4118:38:17",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:17"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:17",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:17"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:17"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:17"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:17",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:17"
																},
																"nativeSrc": "4203:67:17",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:17"
															},
															"nativeSrc": "4203:67:17",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:17"
														},
														{
															"nativeSrc": "4280:18:17",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:17",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:17",
																"nodeType": "YulLiteral",
																"src": "4297:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:17",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:17",
															"nodeType": "YulAssignment",
															"src": "4308:17:17",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:17",
																"nodeType": "YulLiteral",
																"src": "4321:4:17",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:17"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:17",
																		"nodeType": "YulBlock",
																		"src": "4372:611:17",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:17",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:17"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:17",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:17",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:17"
																							},
																							"nativeSrc": "4413:9:17",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:17"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:17"
																					},
																					"nativeSrc": "4401:22:17",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:17"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:17",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:17",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:17"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:17",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:17"
																					},
																					"nativeSrc": "4451:37:17",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:17"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:17",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:17",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:17",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:17",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:17",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:17",
																					"nodeType": "YulBlock",
																					"src": "4569:163:17",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:17",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:17"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:17",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:17"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:17",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:17"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:17",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:17"
																												},
																												"nativeSrc": "4608:19:17",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:17"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:17",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:17"
																										},
																										"nativeSrc": "4602:26:17",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:17"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:17"
																								},
																								"nativeSrc": "4587:42:17",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:17"
																							},
																							"nativeSrc": "4587:42:17",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:17"
																						},
																						{
																							"nativeSrc": "4646:24:17",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:17",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:17"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:17",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:17"
																								},
																								"nativeSrc": "4656:14:17",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:17"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:17"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:17",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:17",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:17"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:17",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:17",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:17"
																								},
																								"nativeSrc": "4700:18:17",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:17"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:17",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:17"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:17",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:17"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:17",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:17"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:17"
																					},
																					"nativeSrc": "4532:14:17",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:17"
																				},
																				"nativeSrc": "4524:208:17",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:17",
																					"nodeType": "YulBlock",
																					"src": "4547:21:17",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:17",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:17",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:17"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:17",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:17",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:17"
																								},
																								"nativeSrc": "4554:12:17",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:17"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:17",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:17"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:17",
																					"nodeType": "YulBlock",
																					"src": "4528:3:17",
																					"statements": []
																				},
																				"src": "4524:208:17"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:17",
																					"nodeType": "YulBlock",
																					"src": "4768:156:17",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:17",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:17",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:17",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:17"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:17",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:17"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:17",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:17"
																										},
																										"nativeSrc": "4809:19:17",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:17"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:17"
																								},
																								"nativeSrc": "4803:26:17",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:17"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:17",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:17",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:17",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:17"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:17",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:17"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:17",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:17"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:17",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:17",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:17",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:17"
																												},
																												"nativeSrc": "4891:17:17",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:17"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:17",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:17"
																										},
																										"nativeSrc": "4861:48:17",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:17"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:17"
																								},
																								"nativeSrc": "4846:64:17",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:17"
																							},
																							"nativeSrc": "4846:64:17",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:17"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:17",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:17"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:17",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:17"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:17"
																					},
																					"nativeSrc": "4748:19:17",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:17"
																				},
																				"nativeSrc": "4745:179:17",
																				"nodeType": "YulIf",
																				"src": "4745:179:17"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:17",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:17"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:17",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:17"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:17",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:17",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:17",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:17"
																									},
																									"nativeSrc": "4954:14:17",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:17"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:17",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:17",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:17"
																							},
																							"nativeSrc": "4950:22:17",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:17"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:17"
																					},
																					"nativeSrc": "4937:36:17",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:17"
																				},
																				"nativeSrc": "4937:36:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:17"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:17",
																	"nodeType": "YulCase",
																	"src": "4365:618:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:17",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:17",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:17",
																		"nodeType": "YulBlock",
																		"src": "5000:222:17",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:17",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:17",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:17",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:17",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:17",
																					"nodeType": "YulBlock",
																					"src": "5051:67:17",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:17",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:17",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:17",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:17"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:17",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:17"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:17",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:17"
																										},
																										"nativeSrc": "5084:19:17",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:17"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:17"
																								},
																								"nativeSrc": "5078:26:17",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:17"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:17"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:17"
																				},
																				"nativeSrc": "5041:77:17",
																				"nodeType": "YulIf",
																				"src": "5041:77:17"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:17",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:17"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:17"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:17"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:17",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:17"
																							},
																							"nativeSrc": "5144:67:17",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:17"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:17"
																					},
																					"nativeSrc": "5131:81:17",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:17"
																				},
																				"nativeSrc": "5131:81:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:17"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:17",
																	"nodeType": "YulCase",
																	"src": "4992:230:17",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:17"
																},
																"nativeSrc": "4342:14:17",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:17"
															},
															"nativeSrc": "4335:887:17",
															"nodeType": "YulSwitch",
															"src": "4335:887:17"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:17",
														"nodeType": "YulTypedName",
														"src": "3914:4:17",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:17",
														"nodeType": "YulTypedName",
														"src": "3920:3:17",
														"type": ""
													}
												],
												"src": "3833:1395:17"
											},
											{
												"body": {
													"nativeSrc": "5279:81:17",
													"nodeType": "YulBlock",
													"src": "5279:81:17",
													"statements": [
														{
															"nativeSrc": "5289:65:17",
															"nodeType": "YulAssignment",
															"src": "5289:65:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5304:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "5304:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5311:42:17",
																		"nodeType": "YulLiteral",
																		"src": "5311:42:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5300:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:17"
																},
																"nativeSrc": "5300:54:17",
																"nodeType": "YulFunctionCall",
																"src": "5300:54:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5289:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "5289:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "5234:126:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5261:5:17",
														"nodeType": "YulTypedName",
														"src": "5261:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5271:7:17",
														"nodeType": "YulTypedName",
														"src": "5271:7:17",
														"type": ""
													}
												],
												"src": "5234:126:17"
											},
											{
												"body": {
													"nativeSrc": "5411:51:17",
													"nodeType": "YulBlock",
													"src": "5411:51:17",
													"statements": [
														{
															"nativeSrc": "5421:35:17",
															"nodeType": "YulAssignment",
															"src": "5421:35:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5450:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "5450:5:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5432:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "5432:17:17"
																},
																"nativeSrc": "5432:24:17",
																"nodeType": "YulFunctionCall",
																"src": "5432:24:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5421:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "5421:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5366:96:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5393:5:17",
														"nodeType": "YulTypedName",
														"src": "5393:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5403:7:17",
														"nodeType": "YulTypedName",
														"src": "5403:7:17",
														"type": ""
													}
												],
												"src": "5366:96:17"
											},
											{
												"body": {
													"nativeSrc": "5533:53:17",
													"nodeType": "YulBlock",
													"src": "5533:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5550:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "5550:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5573:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "5573:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5555:17:17",
																			"nodeType": "YulIdentifier",
																			"src": "5555:17:17"
																		},
																		"nativeSrc": "5555:24:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5555:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5543:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5543:6:17"
																},
																"nativeSrc": "5543:37:17",
																"nodeType": "YulFunctionCall",
																"src": "5543:37:17"
															},
															"nativeSrc": "5543:37:17",
															"nodeType": "YulExpressionStatement",
															"src": "5543:37:17"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5468:118:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5521:5:17",
														"nodeType": "YulTypedName",
														"src": "5521:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5528:3:17",
														"nodeType": "YulTypedName",
														"src": "5528:3:17",
														"type": ""
													}
												],
												"src": "5468:118:17"
											},
											{
												"body": {
													"nativeSrc": "5690:124:17",
													"nodeType": "YulBlock",
													"src": "5690:124:17",
													"statements": [
														{
															"nativeSrc": "5700:26:17",
															"nodeType": "YulAssignment",
															"src": "5700:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5712:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "5712:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5723:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5723:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5708:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5708:3:17"
																},
																"nativeSrc": "5708:18:17",
																"nodeType": "YulFunctionCall",
																"src": "5708:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5700:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "5700:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5780:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5793:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5793:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5804:1:17",
																				"nodeType": "YulLiteral",
																				"src": "5804:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5789:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5789:3:17"
																		},
																		"nativeSrc": "5789:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5789:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5736:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "5736:43:17"
																},
																"nativeSrc": "5736:71:17",
																"nodeType": "YulFunctionCall",
																"src": "5736:71:17"
															},
															"nativeSrc": "5736:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "5736:71:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5592:222:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5662:9:17",
														"nodeType": "YulTypedName",
														"src": "5662:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5674:6:17",
														"nodeType": "YulTypedName",
														"src": "5674:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5685:4:17",
														"nodeType": "YulTypedName",
														"src": "5685:4:17",
														"type": ""
													}
												],
												"src": "5592:222:17"
											},
											{
												"body": {
													"nativeSrc": "5848:152:17",
													"nodeType": "YulBlock",
													"src": "5848:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5865:1:17",
																		"nodeType": "YulLiteral",
																		"src": "5865:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5868:77:17",
																		"nodeType": "YulLiteral",
																		"src": "5868:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5858:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5858:6:17"
																},
																"nativeSrc": "5858:88:17",
																"nodeType": "YulFunctionCall",
																"src": "5858:88:17"
															},
															"nativeSrc": "5858:88:17",
															"nodeType": "YulExpressionStatement",
															"src": "5858:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5962:1:17",
																		"nodeType": "YulLiteral",
																		"src": "5962:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5965:4:17",
																		"nodeType": "YulLiteral",
																		"src": "5965:4:17",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5955:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5955:6:17"
																},
																"nativeSrc": "5955:15:17",
																"nodeType": "YulFunctionCall",
																"src": "5955:15:17"
															},
															"nativeSrc": "5955:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "5955:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5986:1:17",
																		"nodeType": "YulLiteral",
																		"src": "5986:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5989:4:17",
																		"nodeType": "YulLiteral",
																		"src": "5989:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5979:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5979:6:17"
																},
																"nativeSrc": "5979:15:17",
																"nodeType": "YulFunctionCall",
																"src": "5979:15:17"
															},
															"nativeSrc": "5979:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "5979:15:17"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5820:180:17",
												"nodeType": "YulFunctionDefinition",
												"src": "5820:180:17"
											},
											{
												"body": {
													"nativeSrc": "6050:147:17",
													"nodeType": "YulBlock",
													"src": "6050:147:17",
													"statements": [
														{
															"nativeSrc": "6060:25:17",
															"nodeType": "YulAssignment",
															"src": "6060:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6083:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "6083:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6065:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "6065:17:17"
																},
																"nativeSrc": "6065:20:17",
																"nodeType": "YulFunctionCall",
																"src": "6065:20:17"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6060:1:17",
																	"nodeType": "YulIdentifier",
																	"src": "6060:1:17"
																}
															]
														},
														{
															"nativeSrc": "6094:25:17",
															"nodeType": "YulAssignment",
															"src": "6094:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6117:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "6117:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6099:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "6099:17:17"
																},
																"nativeSrc": "6099:20:17",
																"nodeType": "YulFunctionCall",
																"src": "6099:20:17"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6094:1:17",
																	"nodeType": "YulIdentifier",
																	"src": "6094:1:17"
																}
															]
														},
														{
															"nativeSrc": "6128:16:17",
															"nodeType": "YulAssignment",
															"src": "6128:16:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6139:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "6139:1:17"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6142:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "6142:1:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6135:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6135:3:17"
																},
																"nativeSrc": "6135:9:17",
																"nodeType": "YulFunctionCall",
																"src": "6135:9:17"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6128:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6128:3:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6168:22:17",
																"nodeType": "YulBlock",
																"src": "6168:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6170:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "6170:16:17"
																			},
																			"nativeSrc": "6170:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "6170:18:17"
																		},
																		"nativeSrc": "6170:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "6170:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6160:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "6160:1:17"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6163:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "6163:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6157:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "6157:2:17"
																},
																"nativeSrc": "6157:10:17",
																"nodeType": "YulFunctionCall",
																"src": "6157:10:17"
															},
															"nativeSrc": "6154:36:17",
															"nodeType": "YulIf",
															"src": "6154:36:17"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6006:191:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6037:1:17",
														"nodeType": "YulTypedName",
														"src": "6037:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6040:1:17",
														"nodeType": "YulTypedName",
														"src": "6040:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6046:3:17",
														"nodeType": "YulTypedName",
														"src": "6046:3:17",
														"type": ""
													}
												],
												"src": "6006:191:17"
											},
											{
												"body": {
													"nativeSrc": "6268:53:17",
													"nodeType": "YulBlock",
													"src": "6268:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6285:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "6285:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6308:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "6308:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6290:17:17",
																			"nodeType": "YulIdentifier",
																			"src": "6290:17:17"
																		},
																		"nativeSrc": "6290:24:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6290:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6278:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6278:6:17"
																},
																"nativeSrc": "6278:37:17",
																"nodeType": "YulFunctionCall",
																"src": "6278:37:17"
															},
															"nativeSrc": "6278:37:17",
															"nodeType": "YulExpressionStatement",
															"src": "6278:37:17"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "6203:118:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6256:5:17",
														"nodeType": "YulTypedName",
														"src": "6256:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6263:3:17",
														"nodeType": "YulTypedName",
														"src": "6263:3:17",
														"type": ""
													}
												],
												"src": "6203:118:17"
											},
											{
												"body": {
													"nativeSrc": "6481:288:17",
													"nodeType": "YulBlock",
													"src": "6481:288:17",
													"statements": [
														{
															"nativeSrc": "6491:26:17",
															"nodeType": "YulAssignment",
															"src": "6491:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6503:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "6503:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6514:2:17",
																		"nodeType": "YulLiteral",
																		"src": "6514:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6499:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6499:3:17"
																},
																"nativeSrc": "6499:18:17",
																"nodeType": "YulFunctionCall",
																"src": "6499:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6491:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "6491:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6571:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "6571:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6584:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "6584:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6595:1:17",
																				"nodeType": "YulLiteral",
																				"src": "6595:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6580:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6580:3:17"
																		},
																		"nativeSrc": "6580:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6580:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6527:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "6527:43:17"
																},
																"nativeSrc": "6527:71:17",
																"nodeType": "YulFunctionCall",
																"src": "6527:71:17"
															},
															"nativeSrc": "6527:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "6527:71:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6652:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "6652:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6665:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "6665:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6676:2:17",
																				"nodeType": "YulLiteral",
																				"src": "6676:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6661:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6661:3:17"
																		},
																		"nativeSrc": "6661:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6661:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6608:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "6608:43:17"
																},
																"nativeSrc": "6608:72:17",
																"nodeType": "YulFunctionCall",
																"src": "6608:72:17"
															},
															"nativeSrc": "6608:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "6608:72:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6734:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "6734:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6747:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "6747:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6758:2:17",
																				"nodeType": "YulLiteral",
																				"src": "6758:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6743:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6743:3:17"
																		},
																		"nativeSrc": "6743:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6743:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6690:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "6690:43:17"
																},
																"nativeSrc": "6690:72:17",
																"nodeType": "YulFunctionCall",
																"src": "6690:72:17"
															},
															"nativeSrc": "6690:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "6690:72:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6327:442:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6437:9:17",
														"nodeType": "YulTypedName",
														"src": "6437:9:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6449:6:17",
														"nodeType": "YulTypedName",
														"src": "6449:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6457:6:17",
														"nodeType": "YulTypedName",
														"src": "6457:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6465:6:17",
														"nodeType": "YulTypedName",
														"src": "6465:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6476:4:17",
														"nodeType": "YulTypedName",
														"src": "6476:4:17",
														"type": ""
													}
												],
												"src": "6327:442:17"
											},
											{
												"body": {
													"nativeSrc": "6873:124:17",
													"nodeType": "YulBlock",
													"src": "6873:124:17",
													"statements": [
														{
															"nativeSrc": "6883:26:17",
															"nodeType": "YulAssignment",
															"src": "6883:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6895:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "6895:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6906:2:17",
																		"nodeType": "YulLiteral",
																		"src": "6906:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6891:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6891:3:17"
																},
																"nativeSrc": "6891:18:17",
																"nodeType": "YulFunctionCall",
																"src": "6891:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6883:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "6883:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6963:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "6963:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6976:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "6976:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6987:1:17",
																				"nodeType": "YulLiteral",
																				"src": "6987:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6972:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6972:3:17"
																		},
																		"nativeSrc": "6972:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6972:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6919:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "6919:43:17"
																},
																"nativeSrc": "6919:71:17",
																"nodeType": "YulFunctionCall",
																"src": "6919:71:17"
															},
															"nativeSrc": "6919:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "6919:71:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "6775:222:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6845:9:17",
														"nodeType": "YulTypedName",
														"src": "6845:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6857:6:17",
														"nodeType": "YulTypedName",
														"src": "6857:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6868:4:17",
														"nodeType": "YulTypedName",
														"src": "6868:4:17",
														"type": ""
													}
												],
												"src": "6775:222:17"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526611c37937e0800060085534801561001a575f80fd5b506040518060400160405280600581526020017f546f6b656e0000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f544b4e000000000000000000000000000000000000000000000000000000000081525081600390816100969190610836565b5080600490816100a69190610836565b50505060016006819055506a084595161401484a0000006007819055505f600960016101000a81548160ff0219169083151502179055505f600960026101000a81548160ff0219169083151502179055506101165f801b61010b6101fd60201b60201c565b61020460201b60201c565b506101547fae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d36101496101fd60201b60201c565b61020460201b60201c565b506101927f8c66330d9d4f6aba064f25ef2a307366ea6d917616f44c075aa60fa15e5cb1cb6101876101fd60201b60201c565b61020460201b60201c565b506101d07f9edfad36e7d4d9da54b4f78f22bf97cb5b58bb7998294a4288da41c15c647c456101c56101fd60201b60201c565b61020460201b60201c565b506101f86101e26101fd60201b60201c565b69d3c21bcecceda10000006102fa60201b60201c565b610a1a565b5f33905090565b5f610215838361037f60201b60201c565b6102f057600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061028d6101fd60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506102f4565b5f90505b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361036a575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016103619190610944565b60405180910390fd5b61037b5f83836103e360201b60201c565b5050565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610433578060025f828254610427919061098a565b92505081905550610501565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156104bc578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016104b3939291906109cc565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610548578060025f8282540392505081905550610592565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105ef9190610a01565b60405180910390a3505050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061067757607f821691505b60208210810361068a57610689610633565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026106ec7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826106b1565b6106f686836106b1565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61073a6107356107308461070e565b610717565b61070e565b9050919050565b5f819050919050565b61075383610720565b61076761075f82610741565b8484546106bd565b825550505050565b5f90565b61077b61076f565b61078681848461074a565b505050565b5b818110156107a95761079e5f82610773565b60018101905061078c565b5050565b601f8211156107ee576107bf81610690565b6107c8846106a2565b810160208510156107d7578190505b6107eb6107e3856106a2565b83018261078b565b50505b505050565b5f82821c905092915050565b5f61080e5f19846008026107f3565b1980831691505092915050565b5f61082683836107ff565b9150826002028217905092915050565b61083f826105fc565b67ffffffffffffffff81111561085857610857610606565b5b6108628254610660565b61086d8282856107ad565b5f60209050601f83116001811461089e575f841561088c578287015190505b610896858261081b565b8655506108fd565b601f1984166108ac86610690565b5f5b828110156108d3578489015182556001820191506020850194506020810190506108ae565b868310156108f057848901516108ec601f8916826107ff565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61092e82610905565b9050919050565b61093e81610924565b82525050565b5f6020820190506109575f830184610935565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6109948261070e565b915061099f8361070e565b92508282019050808211156109b7576109b661095d565b5b92915050565b6109c68161070e565b82525050565b5f6060820190506109df5f830186610935565b6109ec60208301856109bd565b6109f960408301846109bd565b949350505050565b5f602082019050610a145f8301846109bd565b92915050565b612f0080610a275f395ff3fe608060405234801561000f575f80fd5b506004361061025c575f3560e01c806379cc679011610144578063a9059cbb116100c1578063d547741f11610085578063d547741f14610712578063dd62ed3e1461072e578063deb6db361461075e578063ea5cb5321461077a578063f05d16f714610798578063f2250d3d146107b45761025c565b8063a9059cbb1461065a578063b6a3f59a1461068a578063c30796ab146106a6578063cf820461146106d6578063d1c9f69b146106f45761025c565b806391d148541161010857806391d14854146105b4578063956feccf146105e457806395d89b4114610602578063a0712d6814610620578063a217fddf1461063c5761025c565b806379cc6790146105205780637e92a7fd1461053c5780638d580b9f1461055a5780638ebed5b1146105785780638f770ad0146105965761025c565b806336568abe116101dd57806348132f48116101a157806348132f481461045c578063515572891461047857806353a4c31e146104965780635c975abb146104b45780636ba77a38146104d257806370a08231146104f05761025c565b806336568abe146103d05780633f914aef146103ec57806341f431fd1461040857806342966c6814610424578063449a52f8146104405761025c565b806318160ddd1161022457806318160ddd1461031857806323b872dd14610336578063248a9ca3146103665780632f2ff15d14610396578063313ce567146103b25761025c565b806301ffc9a714610260578063060cf4e81461029057806306fdde03146102ae578063095ea7b3146102cc57806316c38b3c146102fc575b5f80fd5b61027a6004803603810190610275919061238e565b6107d0565b60405161028791906123d3565b60405180910390f35b610298610849565b6040516102a59190612404565b60405180910390f35b6102b661084f565b6040516102c3919061248d565b60405180910390f35b6102e660048036038101906102e19190612531565b6108df565b6040516102f391906123d3565b60405180910390f35b61031660048036038101906103119190612599565b610901565b005b6103206109d4565b60405161032d9190612404565b60405180910390f35b610350600480360381019061034b91906125c4565b6109dd565b60405161035d91906123d3565b60405180910390f35b610380600480360381019061037b9190612647565b610ae9565b60405161038d9190612681565b60405180910390f35b6103b060048036038101906103ab919061269a565b610b06565b005b6103ba610b28565b6040516103c791906126f3565b60405180910390f35b6103ea60048036038101906103e5919061269a565b610b30565b005b6104066004803603810190610401919061270c565b610bab565b005b610422600480360381019061041d9190612785565b610c9c565b005b61043e600480360381019061043991906127d5565b610d44565b005b61045a60048036038101906104559190612531565b610e12565b005b6104766004803603810190610471919061283b565b610f7a565b005b610480611038565b60405161048d9190612681565b60405180910390f35b61049e61105c565b6040516104ab9190612681565b60405180910390f35b6104bc611080565b6040516104c991906123d3565b60405180910390f35b6104da611092565b6040516104e79190612681565b60405180910390f35b61050a60048036038101906105059190612879565b6110b6565b6040516105179190612404565b60405180910390f35b61053a60048036038101906105359190612531565b6110fb565b005b6105446111c5565b6040516105519190612681565b60405180910390f35b6105626111e9565b60405161056f9190612681565b60405180910390f35b61058061120d565b60405161058d9190612681565b60405180910390f35b61059e611231565b6040516105ab9190612404565b60405180910390f35b6105ce60048036038101906105c9919061269a565b61123a565b6040516105db91906123d3565b60405180910390f35b6105ec61129e565b6040516105f991906123d3565b60405180910390f35b61060a6112b1565b604051610617919061248d565b60405180910390f35b61063a600480360381019061063591906127d5565b611341565b005b6106446114ad565b6040516106519190612681565b60405180910390f35b610674600480360381019061066f9190612531565b6114b3565b60405161068191906123d3565b60405180910390f35b6106a4600480360381019061069f91906127d5565b611551565b005b6106c060048036038101906106bb9190612879565b61165f565b6040516106cd91906123d3565b60405180910390f35b6106de61167c565b6040516106eb9190612404565b60405180910390f35b6106fc611682565b60405161070991906123d3565b60405180910390f35b61072c6004803603810190610727919061269a565b611695565b005b610748600480360381019061074391906128a4565b6116b7565b6040516107559190612404565b60405180910390f35b61077860048036038101906107739190612599565b611739565b005b61078261180d565b60405161078f9190612681565b60405180910390f35b6107b260048036038101906107ad91906127d5565b611831565b005b6107ce60048036038101906107c99190612599565b611866565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061084257506108418261193a565b5b9050919050565b60075481565b60606003805461085e9061290f565b80601f016020809104026020016040519081016040528092919081815260200182805461088a9061290f565b80156108d55780601f106108ac576101008083540402835291602001916108d5565b820191905f5260205f20905b8154815290600101906020018083116108b857829003601f168201915b5050505050905090565b5f806108e96119a3565b90506108f68185856119aa565b600191505092915050565b7fae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d361092b816119bc565b8160095f6101000a81548160ff021916908315150217905550811561098f577fd8c9c5623123df8e137854c59a08f9084b75609fe24584228d44ffdce5ab920a436109746119a3565b60405161098292919061294e565b60405180910390a16109d0565b7f1e7a7234ad01ed7353bf129217f5c162773639a6cb22773e84bcd5a2b0ef362e436109b96119a3565b6040516109c792919061294e565b60405180910390a15b5050565b5f600254905090565b5f6109e66119d0565b5f6109ef6119a3565b90505f6109fc86836116b7565b905083811015610a41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a38906129e5565b60405180910390fd5b610a5786838684610a529190612a30565b6119aa565b60011515600a5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16151503610abc57610ab7868686611a16565b610ad4565b610ac7868686611a16565b610ad386600854611b06565b5b600192505050610ae2611b85565b9392505050565b5f60055f8381526020019081526020015f20600101549050919050565b610b0f82610ae9565b610b18816119bc565b610b228383611b8f565b50505050565b5f6012905090565b610b386119a3565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610b9c576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ba68282611c79565b505050565b7fae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d3610bd5816119bc565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3a90612aad565b60405180910390fd5b81600a5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550505050565b610ca46119d0565b7f508f8f8be8f5dbcb88f4f4500430b8b3684c471ed936f31fea912c78ad46a6b9610cce816119bc565b610cf983838673ffffffffffffffffffffffffffffffffffffffff16611d639092919063ffffffff16565b7f494215f965756bbc8b7f57addd2a0ebdbce467a4999f8320c67adc1771885d7b84438585604051610d2e9493929190612b26565b60405180910390a150610d3f611b85565b505050565b60095f9054906101000a900460ff1615610d93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8a90612bb3565b60405180910390fd5b7f9edfad36e7d4d9da54b4f78f22bf97cb5b58bb7998294a4288da41c15c647c45610dbd816119bc565b7f63706707d038997d2210eb026bb1339397deab463921538a81bb98e69ee54ca882610de76119a3565b604051610df592919061294e565b60405180910390a1610e0e610e086119a3565b83611b06565b5050565b60095f9054906101000a900460ff1615610e61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5890612bb3565b60405180910390fd5b600960029054906101000a900460ff1615610eb1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea890612c1b565b60405180910390fd5b7f7d800f56a05adcb6245df540492a560d0e668aac15ee6c7dd40668064913da33610edb816119bc565b60075482610ee76109d4565b610ef19190612c39565b1115610f32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2990612cb6565b60405180910390fd5b7fe98063832b4ff0356868961b75f7f49b096b14ea066c9725301ad197f2f631478383604051610f63929190612cd4565b60405180910390a1610f758383611de2565b505050565b610f826119d0565b7f508f8f8be8f5dbcb88f4f4500430b8b3684c471ed936f31fea912c78ad46a6b9610fac816119bc565b8273ffffffffffffffffffffffffffffffffffffffff166108fc8390811502906040515f60405180830381858888f19350505050158015610fef573d5f803e3d5ffd5b507f3b1c0368c81e47d03164182dc6f9fcf4f5e4b3bd9462d74960d729f73138ce3683438460405161102393929190612d1b565b60405180910390a150611034611b85565b5050565b7fae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d381565b7f9edfad36e7d4d9da54b4f78f22bf97cb5b58bb7998294a4288da41c15c647c4581565b60095f9054906101000a900460ff1681565b7fc8a3befa5973ff6e159afc769978d92f26bae29c51a73d11c9112a05b68d25e681565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60095f9054906101000a900460ff161561114a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114190612bb3565b60405180910390fd5b7fc8a3befa5973ff6e159afc769978d92f26bae29c51a73d11c9112a05b68d25e6611174816119bc565b7fe419ce2aab145a1feaf5893bb6a9478f9282415bbd81c76d5cfff2d4f13431dd838361119f6119a3565b6040516111ae93929190612d50565b60405180910390a16111c08383611b06565b505050565b7f7d800f56a05adcb6245df540492a560d0e668aac15ee6c7dd40668064913da3381565b7f508f8f8be8f5dbcb88f4f4500430b8b3684c471ed936f31fea912c78ad46a6b981565b7f8c66330d9d4f6aba064f25ef2a307366ea6d917616f44c075aa60fa15e5cb1cb81565b5f600754905090565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b600960019054906101000a900460ff1681565b6060600480546112c09061290f565b80601f01602080910402602001604051908101604052809291908181526020018280546112ec9061290f565b80156113375780601f1061130e57610100808354040283529160200191611337565b820191905f5260205f20905b81548152906001019060200180831161131a57829003601f168201915b5050505050905090565b60095f9054906101000a900460ff1615611390576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161138790612bb3565b60405180910390fd5b600960019054906101000a900460ff16156113e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113d790612dcf565b60405180910390fd5b7f8c66330d9d4f6aba064f25ef2a307366ea6d917616f44c075aa60fa15e5cb1cb61140a816119bc565b600754826114166109d4565b6114209190612c39565b1115611461576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161145890612cb6565b60405180910390fd5b7f772f66a00a405709c30e7f18feadcc8f123b20c09c7260165d3eec36c9f21372826040516114909190612404565b60405180910390a16114a96114a36119a3565b83611de2565b5050565b5f801b81565b5f6114bc6119d0565b5f6114c56119a3565b9050600a5f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161561152657611521818585611a16565b61153e565b611531818585611a16565b61153d81600854611b06565b5b600191505061154b611b85565b92915050565b60095f9054906101000a900460ff16156115a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159790612bb3565b60405180910390fd5b7fea4defabeb90fa1e79f929d6c8d482fee8a115926a592b79634d39a67cce3b626115ca816119bc565b6115d26109d4565b821015611614576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161160b90612e37565b60405180910390fd5b816007819055507fa11cbdeb4d62442fae7c8ec6286585b17c47acb7b17bbcab1beadce84befa300826116456119a3565b60405161165392919061294e565b60405180910390a15050565b600a602052805f5260405f205f915054906101000a900460ff1681565b60085481565b600960029054906101000a900460ff1681565b61169e82610ae9565b6116a7816119bc565b6116b18383611c79565b50505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b7fae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d3611763816119bc565b81600960016101000a81548160ff02191690831515021790555081156117c8577f5668502ca8e7b393c09d1dac964ca45a27870a78d7ba212b7a189450897ca05f436117ad6119a3565b6040516117bb92919061294e565b60405180910390a1611809565b7f98e05482fdb38df5eb461fb932fa6e1af90a3569939ce5a8d92d699b102d6402436117f26119a3565b60405161180092919061294e565b60405180910390a15b5050565b7fea4defabeb90fa1e79f929d6c8d482fee8a115926a592b79634d39a67cce3b6281565b7fae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d361185b816119bc565b816008819055505050565b7fae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d3611890816119bc565b81600960026101000a81548160ff02191690831515021790555081156118f5577f218e25f0a7435729f5a66aae50a9ed0084535a0080300c1c2e8366d8df7136ed436118da6119a3565b6040516118e892919061294e565b60405180910390a1611936565b7f41606e1dcee38320f9edbfcd642aeaa81bb2140c705de9d4a7814024a1e9a3144361191f6119a3565b60405161192d92919061294e565b60405180910390a15b5050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b6119b78383836001611e61565b505050565b6119cd816119c86119a3565b612030565b50565b600260065403611a0c576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600681905550565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a86575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611a7d9190612e55565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611af6575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611aed9190612e55565b60405180910390fd5b611b01838383612081565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611b76575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611b6d9190612e55565b60405180910390fd5b611b81825f83612081565b5050565b6001600681905550565b5f611b9a838361123a565b611c6f57600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611c0c6119a3565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050611c73565b5f90505b92915050565b5f611c84838361123a565b15611d59575f60055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611cf66119a3565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611d5d565b5f90505b92915050565b611ddd838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611d96929190612cd4565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061229a565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611e52575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611e499190612e55565b60405180910390fd5b611e5d5f8383612081565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611ed1575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611ec89190612e55565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611f41575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611f389190612e55565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561202a578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516120219190612404565b60405180910390a35b50505050565b61203a828261123a565b61207d5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401612074929190612e6e565b60405180910390fd5b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036120d1578060025f8282546120c59190612c39565b9250508190555061219f565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561215a578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161215193929190612e95565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036121e6578060025f8282540392505081905550612230565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161228d9190612404565b60405180910390a3505050565b5f8060205f8451602086015f885af1806122b9576040513d5f823e3d81fd5b3d92505f519150505f82146122d25760018114156122ed565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561232f57836040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016123269190612e55565b60405180910390fd5b50505050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61236d81612339565b8114612377575f80fd5b50565b5f8135905061238881612364565b92915050565b5f602082840312156123a3576123a2612335565b5b5f6123b08482850161237a565b91505092915050565b5f8115159050919050565b6123cd816123b9565b82525050565b5f6020820190506123e65f8301846123c4565b92915050565b5f819050919050565b6123fe816123ec565b82525050565b5f6020820190506124175f8301846123f5565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61245f8261241d565b6124698185612427565b9350612479818560208601612437565b61248281612445565b840191505092915050565b5f6020820190508181035f8301526124a58184612455565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6124d6826124ad565b9050919050565b6124e6816124cc565b81146124f0575f80fd5b50565b5f81359050612501816124dd565b92915050565b612510816123ec565b811461251a575f80fd5b50565b5f8135905061252b81612507565b92915050565b5f806040838503121561254757612546612335565b5b5f612554858286016124f3565b92505060206125658582860161251d565b9150509250929050565b612578816123b9565b8114612582575f80fd5b50565b5f813590506125938161256f565b92915050565b5f602082840312156125ae576125ad612335565b5b5f6125bb84828501612585565b91505092915050565b5f805f606084860312156125db576125da612335565b5b5f6125e8868287016124f3565b93505060206125f9868287016124f3565b925050604061260a8682870161251d565b9150509250925092565b5f819050919050565b61262681612614565b8114612630575f80fd5b50565b5f813590506126418161261d565b92915050565b5f6020828403121561265c5761265b612335565b5b5f61266984828501612633565b91505092915050565b61267b81612614565b82525050565b5f6020820190506126945f830184612672565b92915050565b5f80604083850312156126b0576126af612335565b5b5f6126bd85828601612633565b92505060206126ce858286016124f3565b9150509250929050565b5f60ff82169050919050565b6126ed816126d8565b82525050565b5f6020820190506127065f8301846126e4565b92915050565b5f806040838503121561272257612721612335565b5b5f61272f858286016124f3565b925050602061274085828601612585565b9150509250929050565b5f612754826124cc565b9050919050565b6127648161274a565b811461276e575f80fd5b50565b5f8135905061277f8161275b565b92915050565b5f805f6060848603121561279c5761279b612335565b5b5f6127a986828701612771565b93505060206127ba868287016124f3565b92505060406127cb8682870161251d565b9150509250925092565b5f602082840312156127ea576127e9612335565b5b5f6127f78482850161251d565b91505092915050565b5f61280a826124ad565b9050919050565b61281a81612800565b8114612824575f80fd5b50565b5f8135905061283581612811565b92915050565b5f806040838503121561285157612850612335565b5b5f61285e85828601612827565b925050602061286f8582860161251d565b9150509250929050565b5f6020828403121561288e5761288d612335565b5b5f61289b848285016124f3565b91505092915050565b5f80604083850312156128ba576128b9612335565b5b5f6128c7858286016124f3565b92505060206128d8858286016124f3565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061292657607f821691505b602082108103612939576129386128e2565b5b50919050565b612948816124cc565b82525050565b5f6040820190506129615f8301856123f5565b61296e602083018461293f565b9392505050565b7f45524332303a207472616e7366657220616d6f756e74206578636565647320615f8201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b5f6129cf602883612427565b91506129da82612975565b604082019050919050565b5f6020820190508181035f8301526129fc816129c3565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612a3a826123ec565b9150612a45836123ec565b9250828203905081811115612a5d57612a5c612a03565b5b92915050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f612a97600f83612427565b9150612aa282612a63565b602082019050919050565b5f6020820190508181035f830152612ac481612a8b565b9050919050565b5f819050919050565b5f612aee612ae9612ae4846124ad565b612acb565b6124ad565b9050919050565b5f612aff82612ad4565b9050919050565b5f612b1082612af5565b9050919050565b612b2081612b06565b82525050565b5f608082019050612b395f830187612b17565b612b4660208301866123f5565b612b53604083018561293f565b612b6060608301846123f5565b95945050505050565b7f436f6e74726163743a20436f6e747261637420697320506175736564000000005f82015250565b5f612b9d601c83612427565b9150612ba882612b69565b602082019050919050565b5f6020820190508181035f830152612bca81612b91565b9050919050565b7f4d696e74696e6720746f2064697361626c6564000000000000000000000000005f82015250565b5f612c05601383612427565b9150612c1082612bd1565b602082019050919050565b5f6020820190508181035f830152612c3281612bf9565b9050919050565b5f612c43826123ec565b9150612c4e836123ec565b9250828201905080821115612c6657612c65612a03565b5b92915050565b7f436f6e74726163743a20537570706c79204361702065786365656465640000005f82015250565b5f612ca0601d83612427565b9150612cab82612c6c565b602082019050919050565b5f6020820190508181035f830152612ccd81612c94565b9050919050565b5f604082019050612ce75f83018561293f565b612cf460208301846123f5565b9392505050565b5f612d0582612af5565b9050919050565b612d1581612cfb565b82525050565b5f606082019050612d2e5f830186612d0c565b612d3b60208301856123f5565b612d4860408301846123f5565b949350505050565b5f606082019050612d635f83018661293f565b612d7060208301856123f5565b612d7d604083018461293f565b949350505050565b7f4d696e74696e672064697361626c6564000000000000000000000000000000005f82015250565b5f612db9601083612427565b9150612dc482612d85565b602082019050919050565b5f6020820190508181035f830152612de681612dad565b9050919050565b7f436f6e74726163743a20537570706c792043617020746f6f206c6f77000000005f82015250565b5f612e21601c83612427565b9150612e2c82612ded565b602082019050919050565b5f6020820190508181035f830152612e4e81612e15565b9050919050565b5f602082019050612e685f83018461293f565b92915050565b5f604082019050612e815f83018561293f565b612e8e6020830184612672565b9392505050565b5f606082019050612ea85f83018661293f565b612eb560208301856123f5565b612ec260408301846123f5565b94935050505056fea2646970667358221220bff9d0013640c6ef3513800fbcca4bd42eee571afeaf7e5ad10ebf4b5198a3a364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH7 0x11C37937E08000 PUSH1 0x8 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x546F6B656E000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x544B4E0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x836 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x836 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH11 0x84595161401484A000000 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x9 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x9 PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x116 PUSH0 DUP1 SHL PUSH2 0x10B PUSH2 0x1FD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x204 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x154 PUSH32 0xAE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3 PUSH2 0x149 PUSH2 0x1FD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x204 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x192 PUSH32 0x8C66330D9D4F6ABA064F25EF2A307366EA6D917616F44C075AA60FA15E5CB1CB PUSH2 0x187 PUSH2 0x1FD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x204 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x1D0 PUSH32 0x9EDFAD36E7D4D9DA54B4F78F22BF97CB5B58BB7998294A4288DA41C15C647C45 PUSH2 0x1C5 PUSH2 0x1FD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x204 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x1F8 PUSH2 0x1E2 PUSH2 0x1FD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 PUSH2 0x2FA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xA1A JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x215 DUP4 DUP4 PUSH2 0x37F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x2F0 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x28D PUSH2 0x1FD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x2F4 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x36A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x361 SWAP2 SWAP1 PUSH2 0x944 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x37B PUSH0 DUP4 DUP4 PUSH2 0x3E3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x433 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x427 SWAP2 SWAP1 PUSH2 0x98A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x501 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x4BC JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x9CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x548 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x592 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x5EF SWAP2 SWAP1 PUSH2 0xA01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x677 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x68A JUMPI PUSH2 0x689 PUSH2 0x633 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x6EC PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x6F6 DUP7 DUP4 PUSH2 0x6B1 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x73A PUSH2 0x735 PUSH2 0x730 DUP5 PUSH2 0x70E JUMP JUMPDEST PUSH2 0x717 JUMP JUMPDEST PUSH2 0x70E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x753 DUP4 PUSH2 0x720 JUMP JUMPDEST PUSH2 0x767 PUSH2 0x75F DUP3 PUSH2 0x741 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x6BD JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x77B PUSH2 0x76F JUMP JUMPDEST PUSH2 0x786 DUP2 DUP5 DUP5 PUSH2 0x74A JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7A9 JUMPI PUSH2 0x79E PUSH0 DUP3 PUSH2 0x773 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x78C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x7EE JUMPI PUSH2 0x7BF DUP2 PUSH2 0x690 JUMP JUMPDEST PUSH2 0x7C8 DUP5 PUSH2 0x6A2 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x7D7 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x7EB PUSH2 0x7E3 DUP6 PUSH2 0x6A2 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x78B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x80E PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x7F3 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x826 DUP4 DUP4 PUSH2 0x7FF JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x83F DUP3 PUSH2 0x5FC JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x858 JUMPI PUSH2 0x857 PUSH2 0x606 JUMP JUMPDEST JUMPDEST PUSH2 0x862 DUP3 SLOAD PUSH2 0x660 JUMP JUMPDEST PUSH2 0x86D DUP3 DUP3 DUP6 PUSH2 0x7AD JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x89E JUMPI PUSH0 DUP5 ISZERO PUSH2 0x88C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x896 DUP6 DUP3 PUSH2 0x81B JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x8FD JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x8AC DUP7 PUSH2 0x690 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x8D3 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x8AE JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x8F0 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x8EC PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x7FF JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x92E DUP3 PUSH2 0x905 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x93E DUP2 PUSH2 0x924 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x957 PUSH0 DUP4 ADD DUP5 PUSH2 0x935 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x994 DUP3 PUSH2 0x70E JUMP JUMPDEST SWAP2 POP PUSH2 0x99F DUP4 PUSH2 0x70E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x9B7 JUMPI PUSH2 0x9B6 PUSH2 0x95D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9C6 DUP2 PUSH2 0x70E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x9DF PUSH0 DUP4 ADD DUP7 PUSH2 0x935 JUMP JUMPDEST PUSH2 0x9EC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x9BD JUMP JUMPDEST PUSH2 0x9F9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x9BD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA14 PUSH0 DUP4 ADD DUP5 PUSH2 0x9BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2F00 DUP1 PUSH2 0xA27 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x25C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79CC6790 GT PUSH2 0x144 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x85 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x712 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x72E JUMPI DUP1 PUSH4 0xDEB6DB36 EQ PUSH2 0x75E JUMPI DUP1 PUSH4 0xEA5CB532 EQ PUSH2 0x77A JUMPI DUP1 PUSH4 0xF05D16F7 EQ PUSH2 0x798 JUMPI DUP1 PUSH4 0xF2250D3D EQ PUSH2 0x7B4 JUMPI PUSH2 0x25C JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x65A JUMPI DUP1 PUSH4 0xB6A3F59A EQ PUSH2 0x68A JUMPI DUP1 PUSH4 0xC30796AB EQ PUSH2 0x6A6 JUMPI DUP1 PUSH4 0xCF820461 EQ PUSH2 0x6D6 JUMPI DUP1 PUSH4 0xD1C9F69B EQ PUSH2 0x6F4 JUMPI PUSH2 0x25C JUMP JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x5B4 JUMPI DUP1 PUSH4 0x956FECCF EQ PUSH2 0x5E4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x602 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x620 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x63C JUMPI PUSH2 0x25C JUMP JUMPDEST DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x520 JUMPI DUP1 PUSH4 0x7E92A7FD EQ PUSH2 0x53C JUMPI DUP1 PUSH4 0x8D580B9F EQ PUSH2 0x55A JUMPI DUP1 PUSH4 0x8EBED5B1 EQ PUSH2 0x578 JUMPI DUP1 PUSH4 0x8F770AD0 EQ PUSH2 0x596 JUMPI PUSH2 0x25C JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0x1DD JUMPI DUP1 PUSH4 0x48132F48 GT PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x48132F48 EQ PUSH2 0x45C JUMPI DUP1 PUSH4 0x51557289 EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0x53A4C31E EQ PUSH2 0x496 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x4B4 JUMPI DUP1 PUSH4 0x6BA77A38 EQ PUSH2 0x4D2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4F0 JUMPI PUSH2 0x25C JUMP JUMPDEST DUP1 PUSH4 0x36568ABE EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0x3F914AEF EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0x41F431FD EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0x449A52F8 EQ PUSH2 0x440 JUMPI PUSH2 0x25C JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x224 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3B2 JUMPI PUSH2 0x25C JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x60CF4E8 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x2FC JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x27A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x238E JUMP JUMPDEST PUSH2 0x7D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x23D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x298 PUSH2 0x849 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x2404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B6 PUSH2 0x84F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x248D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH2 0x8DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x23D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x2599 JUMP JUMPDEST PUSH2 0x901 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x320 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x2404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x350 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x25C4 JUMP JUMPDEST PUSH2 0x9DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x23D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x380 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x2647 JUMP JUMPDEST PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38D SWAP2 SWAP1 PUSH2 0x2681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AB SWAP2 SWAP1 PUSH2 0x269A JUMP JUMPDEST PUSH2 0xB06 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BA PUSH2 0xB28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x26F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E5 SWAP2 SWAP1 PUSH2 0x269A JUMP JUMPDEST PUSH2 0xB30 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x406 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x401 SWAP2 SWAP1 PUSH2 0x270C JUMP JUMPDEST PUSH2 0xBAB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x422 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41D SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST PUSH2 0xC9C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x43E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x439 SWAP2 SWAP1 PUSH2 0x27D5 JUMP JUMPDEST PUSH2 0xD44 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x45A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x455 SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH2 0xE12 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x476 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x471 SWAP2 SWAP1 PUSH2 0x283B JUMP JUMPDEST PUSH2 0xF7A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x480 PUSH2 0x1038 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48D SWAP2 SWAP1 PUSH2 0x2681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49E PUSH2 0x105C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AB SWAP2 SWAP1 PUSH2 0x2681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4BC PUSH2 0x1080 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C9 SWAP2 SWAP1 PUSH2 0x23D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4DA PUSH2 0x1092 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E7 SWAP2 SWAP1 PUSH2 0x2681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x50A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x505 SWAP2 SWAP1 PUSH2 0x2879 JUMP JUMPDEST PUSH2 0x10B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x517 SWAP2 SWAP1 PUSH2 0x2404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x53A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x535 SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH2 0x10FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x544 PUSH2 0x11C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x551 SWAP2 SWAP1 PUSH2 0x2681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x562 PUSH2 0x11E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56F SWAP2 SWAP1 PUSH2 0x2681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x580 PUSH2 0x120D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58D SWAP2 SWAP1 PUSH2 0x2681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59E PUSH2 0x1231 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5AB SWAP2 SWAP1 PUSH2 0x2404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C9 SWAP2 SWAP1 PUSH2 0x269A JUMP JUMPDEST PUSH2 0x123A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5DB SWAP2 SWAP1 PUSH2 0x23D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5EC PUSH2 0x129E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F9 SWAP2 SWAP1 PUSH2 0x23D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x60A PUSH2 0x12B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x617 SWAP2 SWAP1 PUSH2 0x248D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x63A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x635 SWAP2 SWAP1 PUSH2 0x27D5 JUMP JUMPDEST PUSH2 0x1341 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x644 PUSH2 0x14AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x651 SWAP2 SWAP1 PUSH2 0x2681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x674 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66F SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH2 0x14B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x681 SWAP2 SWAP1 PUSH2 0x23D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x69F SWAP2 SWAP1 PUSH2 0x27D5 JUMP JUMPDEST PUSH2 0x1551 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6BB SWAP2 SWAP1 PUSH2 0x2879 JUMP JUMPDEST PUSH2 0x165F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6CD SWAP2 SWAP1 PUSH2 0x23D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6DE PUSH2 0x167C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6EB SWAP2 SWAP1 PUSH2 0x2404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6FC PUSH2 0x1682 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x709 SWAP2 SWAP1 PUSH2 0x23D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x72C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x727 SWAP2 SWAP1 PUSH2 0x269A JUMP JUMPDEST PUSH2 0x1695 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x748 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x743 SWAP2 SWAP1 PUSH2 0x28A4 JUMP JUMPDEST PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x755 SWAP2 SWAP1 PUSH2 0x2404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x778 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x773 SWAP2 SWAP1 PUSH2 0x2599 JUMP JUMPDEST PUSH2 0x1739 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x782 PUSH2 0x180D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78F SWAP2 SWAP1 PUSH2 0x2681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7AD SWAP2 SWAP1 PUSH2 0x27D5 JUMP JUMPDEST PUSH2 0x1831 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C9 SWAP2 SWAP1 PUSH2 0x2599 JUMP JUMPDEST PUSH2 0x1866 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x842 JUMPI POP PUSH2 0x841 DUP3 PUSH2 0x193A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x85E SWAP1 PUSH2 0x290F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x88A SWAP1 PUSH2 0x290F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8AC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x8E9 PUSH2 0x19A3 JUMP JUMPDEST SWAP1 POP PUSH2 0x8F6 DUP2 DUP6 DUP6 PUSH2 0x19AA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xAE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3 PUSH2 0x92B DUP2 PUSH2 0x19BC JUMP JUMPDEST DUP2 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x98F JUMPI PUSH32 0xD8C9C5623123DF8E137854C59A08F9084B75609FE24584228D44FFDCE5AB920A NUMBER PUSH2 0x974 PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x982 SWAP3 SWAP2 SWAP1 PUSH2 0x294E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x9D0 JUMP JUMPDEST PUSH32 0x1E7A7234AD01ED7353BF129217F5C162773639A6CB22773E84BCD5A2B0EF362E NUMBER PUSH2 0x9B9 PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9C7 SWAP3 SWAP2 SWAP1 PUSH2 0x294E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x9E6 PUSH2 0x19D0 JUMP JUMPDEST PUSH0 PUSH2 0x9EF PUSH2 0x19A3 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x9FC DUP7 DUP4 PUSH2 0x16B7 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xA41 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA38 SWAP1 PUSH2 0x29E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA57 DUP7 DUP4 DUP7 DUP5 PUSH2 0xA52 SWAP2 SWAP1 PUSH2 0x2A30 JUMP JUMPDEST PUSH2 0x19AA JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xA PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0xABC JUMPI PUSH2 0xAB7 DUP7 DUP7 DUP7 PUSH2 0x1A16 JUMP JUMPDEST PUSH2 0xAD4 JUMP JUMPDEST PUSH2 0xAC7 DUP7 DUP7 DUP7 PUSH2 0x1A16 JUMP JUMPDEST PUSH2 0xAD3 DUP7 PUSH1 0x8 SLOAD PUSH2 0x1B06 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP3 POP POP POP PUSH2 0xAE2 PUSH2 0x1B85 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB0F DUP3 PUSH2 0xAE9 JUMP JUMPDEST PUSH2 0xB18 DUP2 PUSH2 0x19BC JUMP JUMPDEST PUSH2 0xB22 DUP4 DUP4 PUSH2 0x1B8F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB38 PUSH2 0x19A3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBA6 DUP3 DUP3 PUSH2 0x1C79 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0xAE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3 PUSH2 0xBD5 DUP2 PUSH2 0x19BC JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC43 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3A SWAP1 PUSH2 0x2AAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xA PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0xCA4 PUSH2 0x19D0 JUMP JUMPDEST PUSH32 0x508F8F8BE8F5DBCB88F4F4500430B8B3684C471ED936F31FEA912C78AD46A6B9 PUSH2 0xCCE DUP2 PUSH2 0x19BC JUMP JUMPDEST PUSH2 0xCF9 DUP4 DUP4 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D63 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x494215F965756BBC8B7F57ADDD2A0EBDBCE467A4999F8320C67ADC1771885D7B DUP5 NUMBER DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xD2E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0xD3F PUSH2 0x1B85 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD93 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD8A SWAP1 PUSH2 0x2BB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x9EDFAD36E7D4D9DA54B4F78F22BF97CB5B58BB7998294A4288DA41C15C647C45 PUSH2 0xDBD DUP2 PUSH2 0x19BC JUMP JUMPDEST PUSH32 0x63706707D038997D2210EB026BB1339397DEAB463921538A81BB98E69EE54CA8 DUP3 PUSH2 0xDE7 PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDF5 SWAP3 SWAP2 SWAP1 PUSH2 0x294E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xE0E PUSH2 0xE08 PUSH2 0x19A3 JUMP JUMPDEST DUP4 PUSH2 0x1B06 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xE61 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE58 SWAP1 PUSH2 0x2BB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xEB1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA8 SWAP1 PUSH2 0x2C1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x7D800F56A05ADCB6245DF540492A560D0E668AAC15EE6C7DD40668064913DA33 PUSH2 0xEDB DUP2 PUSH2 0x19BC JUMP JUMPDEST PUSH1 0x7 SLOAD DUP3 PUSH2 0xEE7 PUSH2 0x9D4 JUMP JUMPDEST PUSH2 0xEF1 SWAP2 SWAP1 PUSH2 0x2C39 JUMP JUMPDEST GT ISZERO PUSH2 0xF32 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF29 SWAP1 PUSH2 0x2CB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xE98063832B4FF0356868961B75F7F49B096B14EA066C9725301AD197F2F63147 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF63 SWAP3 SWAP2 SWAP1 PUSH2 0x2CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xF75 DUP4 DUP4 PUSH2 0x1DE2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xF82 PUSH2 0x19D0 JUMP JUMPDEST PUSH32 0x508F8F8BE8F5DBCB88F4F4500430B8B3684C471ED936F31FEA912C78AD46A6B9 PUSH2 0xFAC DUP2 PUSH2 0x19BC JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xFEF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH32 0x3B1C0368C81E47D03164182DC6F9FCF4F5E4B3BD9462D74960D729F73138CE36 DUP4 NUMBER DUP5 PUSH1 0x40 MLOAD PUSH2 0x1023 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0x1034 PUSH2 0x1B85 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0xAE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3 DUP2 JUMP JUMPDEST PUSH32 0x9EDFAD36E7D4D9DA54B4F78F22BF97CB5B58BB7998294A4288DA41C15C647C45 DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH32 0xC8A3BEFA5973FF6E159AFC769978D92F26BAE29C51A73D11C9112A05B68D25E6 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x114A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1141 SWAP1 PUSH2 0x2BB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xC8A3BEFA5973FF6E159AFC769978D92F26BAE29C51A73D11C9112A05B68D25E6 PUSH2 0x1174 DUP2 PUSH2 0x19BC JUMP JUMPDEST PUSH32 0xE419CE2AAB145A1FEAF5893BB6A9478F9282415BBD81C76D5CFFF2D4F13431DD DUP4 DUP4 PUSH2 0x119F PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11AE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x11C0 DUP4 DUP4 PUSH2 0x1B06 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x7D800F56A05ADCB6245DF540492A560D0E668AAC15EE6C7DD40668064913DA33 DUP2 JUMP JUMPDEST PUSH32 0x508F8F8BE8F5DBCB88F4F4500430B8B3684C471ED936F31FEA912C78AD46A6B9 DUP2 JUMP JUMPDEST PUSH32 0x8C66330D9D4F6ABA064F25EF2A307366EA6D917616F44C075AA60FA15E5CB1CB DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x12C0 SWAP1 PUSH2 0x290F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x12EC SWAP1 PUSH2 0x290F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1337 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x130E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1337 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x131A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1390 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1387 SWAP1 PUSH2 0x2BB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x13E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D7 SWAP1 PUSH2 0x2DCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x8C66330D9D4F6ABA064F25EF2A307366EA6D917616F44C075AA60FA15E5CB1CB PUSH2 0x140A DUP2 PUSH2 0x19BC JUMP JUMPDEST PUSH1 0x7 SLOAD DUP3 PUSH2 0x1416 PUSH2 0x9D4 JUMP JUMPDEST PUSH2 0x1420 SWAP2 SWAP1 PUSH2 0x2C39 JUMP JUMPDEST GT ISZERO PUSH2 0x1461 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1458 SWAP1 PUSH2 0x2CB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x772F66A00A405709C30E7F18FEADCC8F123B20C09C7260165D3EEC36C9F21372 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1490 SWAP2 SWAP1 PUSH2 0x2404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x14A9 PUSH2 0x14A3 PUSH2 0x19A3 JUMP JUMPDEST DUP4 PUSH2 0x1DE2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x14BC PUSH2 0x19D0 JUMP JUMPDEST PUSH0 PUSH2 0x14C5 PUSH2 0x19A3 JUMP JUMPDEST SWAP1 POP PUSH1 0xA PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1526 JUMPI PUSH2 0x1521 DUP2 DUP6 DUP6 PUSH2 0x1A16 JUMP JUMPDEST PUSH2 0x153E JUMP JUMPDEST PUSH2 0x1531 DUP2 DUP6 DUP6 PUSH2 0x1A16 JUMP JUMPDEST PUSH2 0x153D DUP2 PUSH1 0x8 SLOAD PUSH2 0x1B06 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x154B PUSH2 0x1B85 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x15A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1597 SWAP1 PUSH2 0x2BB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xEA4DEFABEB90FA1E79F929D6C8D482FEE8A115926A592B79634D39A67CCE3B62 PUSH2 0x15CA DUP2 PUSH2 0x19BC JUMP JUMPDEST PUSH2 0x15D2 PUSH2 0x9D4 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x1614 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x160B SWAP1 PUSH2 0x2E37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH32 0xA11CBDEB4D62442FAE7C8EC6286585B17C47ACB7B17BBCAB1BEADCE84BEFA300 DUP3 PUSH2 0x1645 PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1653 SWAP3 SWAP2 SWAP1 PUSH2 0x294E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x169E DUP3 PUSH2 0xAE9 JUMP JUMPDEST PUSH2 0x16A7 DUP2 PUSH2 0x19BC JUMP JUMPDEST PUSH2 0x16B1 DUP4 DUP4 PUSH2 0x1C79 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xAE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3 PUSH2 0x1763 DUP2 PUSH2 0x19BC JUMP JUMPDEST DUP2 PUSH1 0x9 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x17C8 JUMPI PUSH32 0x5668502CA8E7B393C09D1DAC964CA45A27870A78D7BA212B7A189450897CA05F NUMBER PUSH2 0x17AD PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17BB SWAP3 SWAP2 SWAP1 PUSH2 0x294E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1809 JUMP JUMPDEST PUSH32 0x98E05482FDB38DF5EB461FB932FA6E1AF90A3569939CE5A8D92D699B102D6402 NUMBER PUSH2 0x17F2 PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1800 SWAP3 SWAP2 SWAP1 PUSH2 0x294E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP JUMP JUMPDEST PUSH32 0xEA4DEFABEB90FA1E79F929D6C8D482FEE8A115926A592B79634D39A67CCE3B62 DUP2 JUMP JUMPDEST PUSH32 0xAE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3 PUSH2 0x185B DUP2 PUSH2 0x19BC JUMP JUMPDEST DUP2 PUSH1 0x8 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH32 0xAE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3 PUSH2 0x1890 DUP2 PUSH2 0x19BC JUMP JUMPDEST DUP2 PUSH1 0x9 PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x18F5 JUMPI PUSH32 0x218E25F0A7435729F5A66AAE50A9ED0084535A0080300C1C2E8366D8DF7136ED NUMBER PUSH2 0x18DA PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18E8 SWAP3 SWAP2 SWAP1 PUSH2 0x294E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1936 JUMP JUMPDEST PUSH32 0x41606E1DCEE38320F9EDBFCD642AEAA81BB2140C705DE9D4A7814024A1E9A314 NUMBER PUSH2 0x191F PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x192D SWAP3 SWAP2 SWAP1 PUSH2 0x294E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x19B7 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1E61 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x19CD DUP2 PUSH2 0x19C8 PUSH2 0x19A3 JUMP JUMPDEST PUSH2 0x2030 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x1A0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A86 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A7D SWAP2 SWAP1 PUSH2 0x2E55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AF6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AED SWAP2 SWAP1 PUSH2 0x2E55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B01 DUP4 DUP4 DUP4 PUSH2 0x2081 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B76 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B6D SWAP2 SWAP1 PUSH2 0x2E55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B81 DUP3 PUSH0 DUP4 PUSH2 0x2081 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B9A DUP4 DUP4 PUSH2 0x123A JUMP JUMPDEST PUSH2 0x1C6F JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1C0C PUSH2 0x19A3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1C73 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C84 DUP4 DUP4 PUSH2 0x123A JUMP JUMPDEST ISZERO PUSH2 0x1D59 JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1CF6 PUSH2 0x19A3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1D5D JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DDD DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1D96 SWAP3 SWAP2 SWAP1 PUSH2 0x2CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x229A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E52 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E49 SWAP2 SWAP1 PUSH2 0x2E55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E5D PUSH0 DUP4 DUP4 PUSH2 0x2081 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1ED1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EC8 SWAP2 SWAP1 PUSH2 0x2E55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F41 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F38 SWAP2 SWAP1 PUSH2 0x2E55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x202A JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2021 SWAP2 SWAP1 PUSH2 0x2404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x203A DUP3 DUP3 PUSH2 0x123A JUMP JUMPDEST PUSH2 0x207D JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2074 SWAP3 SWAP2 SWAP1 PUSH2 0x2E6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x20D1 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x20C5 SWAP2 SWAP1 PUSH2 0x2C39 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x219F JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x215A JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2151 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x21E6 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2230 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x228D SWAP2 SWAP1 PUSH2 0x2404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x22B9 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x22D2 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x22ED JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x232F JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2326 SWAP2 SWAP1 PUSH2 0x2E55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x236D DUP2 PUSH2 0x2339 JUMP JUMPDEST DUP2 EQ PUSH2 0x2377 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2388 DUP2 PUSH2 0x2364 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23A3 JUMPI PUSH2 0x23A2 PUSH2 0x2335 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23B0 DUP5 DUP3 DUP6 ADD PUSH2 0x237A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23CD DUP2 PUSH2 0x23B9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23E6 PUSH0 DUP4 ADD DUP5 PUSH2 0x23C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23FE DUP2 PUSH2 0x23EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2417 PUSH0 DUP4 ADD DUP5 PUSH2 0x23F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x245F DUP3 PUSH2 0x241D JUMP JUMPDEST PUSH2 0x2469 DUP2 DUP6 PUSH2 0x2427 JUMP JUMPDEST SWAP4 POP PUSH2 0x2479 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2437 JUMP JUMPDEST PUSH2 0x2482 DUP2 PUSH2 0x2445 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24A5 DUP2 DUP5 PUSH2 0x2455 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24D6 DUP3 PUSH2 0x24AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24E6 DUP2 PUSH2 0x24CC JUMP JUMPDEST DUP2 EQ PUSH2 0x24F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2501 DUP2 PUSH2 0x24DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2510 DUP2 PUSH2 0x23EC JUMP JUMPDEST DUP2 EQ PUSH2 0x251A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x252B DUP2 PUSH2 0x2507 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2547 JUMPI PUSH2 0x2546 PUSH2 0x2335 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2554 DUP6 DUP3 DUP7 ADD PUSH2 0x24F3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2565 DUP6 DUP3 DUP7 ADD PUSH2 0x251D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2578 DUP2 PUSH2 0x23B9 JUMP JUMPDEST DUP2 EQ PUSH2 0x2582 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2593 DUP2 PUSH2 0x256F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25AE JUMPI PUSH2 0x25AD PUSH2 0x2335 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25BB DUP5 DUP3 DUP6 ADD PUSH2 0x2585 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x25DB JUMPI PUSH2 0x25DA PUSH2 0x2335 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25E8 DUP7 DUP3 DUP8 ADD PUSH2 0x24F3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x25F9 DUP7 DUP3 DUP8 ADD PUSH2 0x24F3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x260A DUP7 DUP3 DUP8 ADD PUSH2 0x251D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2626 DUP2 PUSH2 0x2614 JUMP JUMPDEST DUP2 EQ PUSH2 0x2630 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2641 DUP2 PUSH2 0x261D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x265C JUMPI PUSH2 0x265B PUSH2 0x2335 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2669 DUP5 DUP3 DUP6 ADD PUSH2 0x2633 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x267B DUP2 PUSH2 0x2614 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2694 PUSH0 DUP4 ADD DUP5 PUSH2 0x2672 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26B0 JUMPI PUSH2 0x26AF PUSH2 0x2335 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x26BD DUP6 DUP3 DUP7 ADD PUSH2 0x2633 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x26CE DUP6 DUP3 DUP7 ADD PUSH2 0x24F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26ED DUP2 PUSH2 0x26D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2706 PUSH0 DUP4 ADD DUP5 PUSH2 0x26E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2722 JUMPI PUSH2 0x2721 PUSH2 0x2335 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x272F DUP6 DUP3 DUP7 ADD PUSH2 0x24F3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2740 DUP6 DUP3 DUP7 ADD PUSH2 0x2585 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2754 DUP3 PUSH2 0x24CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2764 DUP2 PUSH2 0x274A JUMP JUMPDEST DUP2 EQ PUSH2 0x276E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x277F DUP2 PUSH2 0x275B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x279C JUMPI PUSH2 0x279B PUSH2 0x2335 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x27A9 DUP7 DUP3 DUP8 ADD PUSH2 0x2771 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x27BA DUP7 DUP3 DUP8 ADD PUSH2 0x24F3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x27CB DUP7 DUP3 DUP8 ADD PUSH2 0x251D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27EA JUMPI PUSH2 0x27E9 PUSH2 0x2335 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x27F7 DUP5 DUP3 DUP6 ADD PUSH2 0x251D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x280A DUP3 PUSH2 0x24AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x281A DUP2 PUSH2 0x2800 JUMP JUMPDEST DUP2 EQ PUSH2 0x2824 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2835 DUP2 PUSH2 0x2811 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2851 JUMPI PUSH2 0x2850 PUSH2 0x2335 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x285E DUP6 DUP3 DUP7 ADD PUSH2 0x2827 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x286F DUP6 DUP3 DUP7 ADD PUSH2 0x251D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x288E JUMPI PUSH2 0x288D PUSH2 0x2335 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x289B DUP5 DUP3 DUP6 ADD PUSH2 0x24F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x28BA JUMPI PUSH2 0x28B9 PUSH2 0x2335 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x28C7 DUP6 DUP3 DUP7 ADD PUSH2 0x24F3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x28D8 DUP6 DUP3 DUP7 ADD PUSH2 0x24F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2926 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2939 JUMPI PUSH2 0x2938 PUSH2 0x28E2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2948 DUP2 PUSH2 0x24CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2961 PUSH0 DUP4 ADD DUP6 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x296E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x293F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH0 DUP3 ADD MSTORE PUSH32 0x6C6C6F77616E6365000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29CF PUSH1 0x28 DUP4 PUSH2 0x2427 JUMP JUMPDEST SWAP2 POP PUSH2 0x29DA DUP3 PUSH2 0x2975 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29FC DUP2 PUSH2 0x29C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2A3A DUP3 PUSH2 0x23EC JUMP JUMPDEST SWAP2 POP PUSH2 0x2A45 DUP4 PUSH2 0x23EC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2A5D JUMPI PUSH2 0x2A5C PUSH2 0x2A03 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A97 PUSH1 0xF DUP4 PUSH2 0x2427 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AA2 DUP3 PUSH2 0x2A63 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2AC4 DUP2 PUSH2 0x2A8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2AEE PUSH2 0x2AE9 PUSH2 0x2AE4 DUP5 PUSH2 0x24AD JUMP JUMPDEST PUSH2 0x2ACB JUMP JUMPDEST PUSH2 0x24AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2AFF DUP3 PUSH2 0x2AD4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2B10 DUP3 PUSH2 0x2AF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B20 DUP2 PUSH2 0x2B06 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2B39 PUSH0 DUP4 ADD DUP8 PUSH2 0x2B17 JUMP JUMPDEST PUSH2 0x2B46 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x2B53 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x293F JUMP JUMPDEST PUSH2 0x2B60 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x23F5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x436F6E74726163743A20436F6E74726163742069732050617573656400000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B9D PUSH1 0x1C DUP4 PUSH2 0x2427 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BA8 DUP3 PUSH2 0x2B69 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2BCA DUP2 PUSH2 0x2B91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D696E74696E6720746F2064697361626C656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C05 PUSH1 0x13 DUP4 PUSH2 0x2427 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C10 DUP3 PUSH2 0x2BD1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C32 DUP2 PUSH2 0x2BF9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2C43 DUP3 PUSH2 0x23EC JUMP JUMPDEST SWAP2 POP PUSH2 0x2C4E DUP4 PUSH2 0x23EC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2C66 JUMPI PUSH2 0x2C65 PUSH2 0x2A03 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6E74726163743A20537570706C7920436170206578636565646564000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2CA0 PUSH1 0x1D DUP4 PUSH2 0x2427 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CAB DUP3 PUSH2 0x2C6C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2CCD DUP2 PUSH2 0x2C94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2CE7 PUSH0 DUP4 ADD DUP6 PUSH2 0x293F JUMP JUMPDEST PUSH2 0x2CF4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x23F5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D05 DUP3 PUSH2 0x2AF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D15 DUP2 PUSH2 0x2CFB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2D2E PUSH0 DUP4 ADD DUP7 PUSH2 0x2D0C JUMP JUMPDEST PUSH2 0x2D3B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x2D48 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x23F5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2D63 PUSH0 DUP4 ADD DUP7 PUSH2 0x293F JUMP JUMPDEST PUSH2 0x2D70 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x2D7D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x293F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4D696E74696E672064697361626C656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2DB9 PUSH1 0x10 DUP4 PUSH2 0x2427 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DC4 DUP3 PUSH2 0x2D85 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2DE6 DUP2 PUSH2 0x2DAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6E74726163743A20537570706C792043617020746F6F206C6F7700000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E21 PUSH1 0x1C DUP4 PUSH2 0x2427 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E2C DUP3 PUSH2 0x2DED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2E4E DUP2 PUSH2 0x2E15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E68 PUSH0 DUP4 ADD DUP5 PUSH2 0x293F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2E81 PUSH0 DUP4 ADD DUP6 PUSH2 0x293F JUMP JUMPDEST PUSH2 0x2E8E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2672 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2EA8 PUSH0 DUP4 ADD DUP7 PUSH2 0x293F JUMP JUMPDEST PUSH2 0x2EB5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x2EC2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x23F5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF 0xF9 0xD0 ADD CALLDATASIZE BLOCKHASH 0xC6 0xEF CALLDATALOAD SGT DUP1 0xF 0xBC 0xCA 0x4B 0xD4 0x2E 0xEE JUMPI BYTE INVALID 0xAF PUSH31 0x5AD10EBF4B5198A3A364736F6C634300081A00330000000000000000000000 ",
							"sourceMap": "768:13365:16:-:0;;;2050:4;2030:24;;4505:625;;;;;;;;;;1601:113:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1857:1:13;2061:7;:21;;;;4558:4:16::1;4551;:11;;;;4656:5;4641:12;;:20;;;;;;;;;;;;;;;;;;4716:5;4699:14;;:22;;;;;;;;;;;;;;;;;;4781:44;2232:4:0;4792:18:16::0;::::1;4812:12;:10;;;:12;;:::i;:::-;4781:10;;;:44;;:::i;:::-;;4883:32;1645:19;4902:12;:10;;;:12;;:::i;:::-;4883:10;;;:32;;:::i;:::-;;4925:31;1026:18;4943:12;:10;;;:12;;:::i;:::-;4925:10;;;:31;;:::i;:::-;;4966;1268:18;4984:12;:10;;;:12;;:::i;:::-;4966:10;;;:31;;:::i;:::-;;5098:25;5104:12;:10;;;:12;;:::i;:::-;5118:4;5098:5;;;:25;;:::i;:::-;768:13365:::0;;656:96:11;709:7;735:10;728:17;;656:96;:::o;6179:316:0:-;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;7458:208:6:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;6008:1107:6:-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:17:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;5820:180::-;5868:77;5865:1;5858:88;5965:4;5962:1;5955:15;5989:4;5986:1;5979:15;6006:191;6046:3;6065:20;6083:1;6065:20;:::i;:::-;6060:25;;6099:20;6117:1;6099:20;:::i;:::-;6094:25;;6142:1;6139;6135:9;6128:16;;6163:3;6160:1;6157:10;6154:36;;;6170:18;;:::i;:::-;6154:36;6006:191;;;;:::o;6203:118::-;6290:24;6308:5;6290:24;:::i;:::-;6285:3;6278:37;6203:118;;:::o;6327:442::-;6476:4;6514:2;6503:9;6499:18;6491:26;;6527:71;6595:1;6584:9;6580:17;6571:6;6527:71;:::i;:::-;6608:72;6676:2;6665:9;6661:18;6652:6;6608:72;:::i;:::-;6690;6758:2;6747:9;6743:18;6734:6;6690:72;:::i;:::-;6327:442;;;;;;:::o;6775:222::-;6868:4;6906:2;6895:9;6891:18;6883:26;;6919:71;6987:1;6976:9;6972:17;6963:6;6919:71;:::i;:::-;6775:222;;;;:::o;768:13365:16:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": 5293,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_ADMIN_2110": {
									"entryPoint": 4152,
									"id": 2110,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_BURNFROM_2098": {
									"entryPoint": 4242,
									"id": 2098,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_BURN_2092": {
									"entryPoint": 4188,
									"id": 2092,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_MINTTO_2086": {
									"entryPoint": 4549,
									"id": 2086,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_MINT_2080": {
									"entryPoint": 4621,
									"id": 2080,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_RESCUE_2116": {
									"entryPoint": 4585,
									"id": 2116,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_SUPPLY_2104": {
									"entryPoint": 6157,
									"id": 2104,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1011": {
									"entryPoint": 6570,
									"id": 1011,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1071": {
									"entryPoint": 7777,
									"id": 1071,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_993": {
									"entryPoint": 6918,
									"id": 993,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_callOptionalReturn_1593": {
									"entryPoint": 8858,
									"id": 1593,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_cap_2119": {
									"entryPoint": 2121,
									"id": 2119,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 8240,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 6588,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 7055,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_960": {
									"entryPoint": 7650,
									"id": 960,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1906": {
									"entryPoint": 6563,
									"id": 1906,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_2003": {
									"entryPoint": 7045,
									"id": 2003,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_1995": {
									"entryPoint": 6608,
									"id": 1995,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revokeRole_294": {
									"entryPoint": 7289,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_transfer_850": {
									"entryPoint": 6678,
									"id": 850,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_927": {
									"entryPoint": 8321,
									"id": 927,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_747": {
									"entryPoint": 5815,
									"id": 747,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_771": {
									"entryPoint": 2271,
									"id": 771,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_706": {
									"entryPoint": 4278,
									"id": 706,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_2616": {
									"entryPoint": 4347,
									"id": 2616,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_2590": {
									"entryPoint": 3396,
									"id": 2590,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_684": {
									"entryPoint": 2856,
									"id": 684,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@disableMintTo_2415": {
									"entryPoint": 6246,
									"id": 2415,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@disableMint_2383": {
									"entryPoint": 5945,
									"id": 2383,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@ethRescue_2790": {
									"entryPoint": 3962,
									"id": 2790,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getRoleAdmin_128": {
									"entryPoint": 2793,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_147": {
									"entryPoint": 2822,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 4666,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mintDisabled_2129": {
									"entryPoint": 4766,
									"id": 2129,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mintToDisabled_2132": {
									"entryPoint": 5762,
									"id": 2132,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mintTo_2532": {
									"entryPoint": 3602,
									"id": 2532,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@mint_2566": {
									"entryPoint": 4929,
									"id": 2566,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@moveERC20_2763": {
									"entryPoint": 3228,
									"id": 2763,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@name_666": {
									"entryPoint": 2127,
									"id": 666,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paused_2126": {
									"entryPoint": 4224,
									"id": 2126,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceRole_189": {
									"entryPoint": 2864,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 5781,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransfer_1271": {
									"entryPoint": 7523,
									"id": 1271,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setPaused_2351": {
									"entryPoint": 2305,
									"id": 2351,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setSupplyCap_2445": {
									"entryPoint": 5457,
									"id": 2445,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTxFee_2496": {
									"entryPoint": 6193,
									"id": 2496,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setWhitelistAddress_2482": {
									"entryPoint": 2987,
									"id": 2482,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supplyCap_2454": {
									"entryPoint": 4657,
									"id": 2454,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@supportsInterface_2038": {
									"entryPoint": 6458,
									"id": 2038,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_62": {
									"entryPoint": 2000,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_675": {
									"entryPoint": 4785,
									"id": 675,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_693": {
									"entryPoint": 2516,
									"id": 693,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_2686": {
									"entryPoint": 2525,
									"id": 2686,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_2730": {
									"entryPoint": 5299,
									"id": 2730,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@txFee_2123": {
									"entryPoint": 5756,
									"id": 2123,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@whitelistedAddress_2235": {
									"entryPoint": 5727,
									"id": 2235,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 9459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 10279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 9605,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 9779,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 9082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$1198": {
									"entryPoint": 10097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 9501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 10361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payablet_uint256": {
									"entryPoint": 10299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 10404,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 9668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 9996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 9521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 9625,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 9799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 9882,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 9102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$1198t_addresst_uint256": {
									"entryPoint": 10117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 10197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_fromStack": {
									"entryPoint": 11532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 10559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 9156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 9842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$1198_to_t_address_fromStack": {
									"entryPoint": 11031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10891,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_14cda221cd50cc4488a50638b29b8104950f854aa06a190e98dcd3542f450149_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_77e086eba60b2e28f8cf4f0f10149625654a071ad569481f91828ddb6b36141b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11797,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10691,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9dc314731a2c8965068716b51a74d383c5485fe34630c16f5621cb0575192124_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ba2e9cd8d3fa598fea6366ddadf891a9cbec04b837294279cc52e9e496f33766_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 9205,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 9956,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 11861,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 11547,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 11886,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11476,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 11600,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 11925,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 9171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 9857,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$1198_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11046,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10925,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_14cda221cd50cc4488a50638b29b8104950f854aa06a190e98dcd3542f450149__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_77e086eba60b2e28f8cf4f0f10149625654a071ad569481f91828ddb6b36141b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9dc314731a2c8965068716b51a74d383c5485fe34630c16f5621cb0575192124__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ba2e9cd8d3fa598fea6366ddadf891a9cbec04b837294279cc52e9e496f33766__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11291,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 9220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 10574,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 9971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 9245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 9255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 11321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 10800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 9420,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 10240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 9145,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 9748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 9017,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$1198": {
									"entryPoint": 10058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 9389,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 9196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 9944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_address_payable_to_t_address": {
									"entryPoint": 11515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$1198_to_t_address": {
									"entryPoint": 11014,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 10997,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 10964,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 9271,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 10511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 10955,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 10755,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 10466,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 9013,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 9285,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79": {
									"entryPoint": 11372,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226": {
									"entryPoint": 10851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_14cda221cd50cc4488a50638b29b8104950f854aa06a190e98dcd3542f450149": {
									"entryPoint": 11113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_77e086eba60b2e28f8cf4f0f10149625654a071ad569481f91828ddb6b36141b": {
									"entryPoint": 11757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330": {
									"entryPoint": 10613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9dc314731a2c8965068716b51a74d383c5485fe34630c16f5621cb0575192124": {
									"entryPoint": 11653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ba2e9cd8d3fa598fea6366ddadf891a9cbec04b837294279cc52e9e496f33766": {
									"entryPoint": 11217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 9437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 10257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9583,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 9757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 9060,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$1198": {
									"entryPoint": 10075,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 9479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:23499:17",
										"nodeType": "YulBlock",
										"src": "0:23499:17",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:17",
													"nodeType": "YulBlock",
													"src": "47:35:17",
													"statements": [
														{
															"nativeSrc": "57:19:17",
															"nodeType": "YulAssignment",
															"src": "57:19:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:17",
																		"nodeType": "YulLiteral",
																		"src": "73:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:17"
																},
																"nativeSrc": "67:9:17",
																"nodeType": "YulFunctionCall",
																"src": "67:9:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:17"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:17",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:17",
														"nodeType": "YulTypedName",
														"src": "40:6:17",
														"type": ""
													}
												],
												"src": "7:75:17"
											},
											{
												"body": {
													"nativeSrc": "177:28:17",
													"nodeType": "YulBlock",
													"src": "177:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:17",
																		"nodeType": "YulLiteral",
																		"src": "194:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:17",
																		"nodeType": "YulLiteral",
																		"src": "197:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:17"
																},
																"nativeSrc": "187:12:17",
																"nodeType": "YulFunctionCall",
																"src": "187:12:17"
															},
															"nativeSrc": "187:12:17",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:17"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:17",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:17"
											},
											{
												"body": {
													"nativeSrc": "300:28:17",
													"nodeType": "YulBlock",
													"src": "300:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:17",
																		"nodeType": "YulLiteral",
																		"src": "317:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:17",
																		"nodeType": "YulLiteral",
																		"src": "320:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:17"
																},
																"nativeSrc": "310:12:17",
																"nodeType": "YulFunctionCall",
																"src": "310:12:17"
															},
															"nativeSrc": "310:12:17",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:17"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:17",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:17"
											},
											{
												"body": {
													"nativeSrc": "378:105:17",
													"nodeType": "YulBlock",
													"src": "378:105:17",
													"statements": [
														{
															"nativeSrc": "388:89:17",
															"nodeType": "YulAssignment",
															"src": "388:89:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:17",
																		"nodeType": "YulLiteral",
																		"src": "410:66:17",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:17"
																},
																"nativeSrc": "399:78:17",
																"nodeType": "YulFunctionCall",
																"src": "399:78:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:17",
														"nodeType": "YulTypedName",
														"src": "360:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:17",
														"nodeType": "YulTypedName",
														"src": "370:7:17",
														"type": ""
													}
												],
												"src": "334:149:17"
											},
											{
												"body": {
													"nativeSrc": "531:78:17",
													"nodeType": "YulBlock",
													"src": "531:78:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:17",
																"nodeType": "YulBlock",
																"src": "587:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:17",
																					"nodeType": "YulLiteral",
																					"src": "596:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:17",
																					"nodeType": "YulLiteral",
																					"src": "599:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:17"
																			},
																			"nativeSrc": "589:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:17"
																		},
																		"nativeSrc": "589:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:17",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:17"
																				},
																				"nativeSrc": "561:23:17",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:17"
																		},
																		"nativeSrc": "551:34:17",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:17"
																},
																"nativeSrc": "544:42:17",
																"nodeType": "YulFunctionCall",
																"src": "544:42:17"
															},
															"nativeSrc": "541:62:17",
															"nodeType": "YulIf",
															"src": "541:62:17"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:17",
														"nodeType": "YulTypedName",
														"src": "524:5:17",
														"type": ""
													}
												],
												"src": "489:120:17"
											},
											{
												"body": {
													"nativeSrc": "666:86:17",
													"nodeType": "YulBlock",
													"src": "666:86:17",
													"statements": [
														{
															"nativeSrc": "676:29:17",
															"nodeType": "YulAssignment",
															"src": "676:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:17"
																},
																"nativeSrc": "685:20:17",
																"nodeType": "YulFunctionCall",
																"src": "685:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:17",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:17"
																},
																"nativeSrc": "714:32:17",
																"nodeType": "YulFunctionCall",
																"src": "714:32:17"
															},
															"nativeSrc": "714:32:17",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:17"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:17",
														"nodeType": "YulTypedName",
														"src": "644:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:17",
														"nodeType": "YulTypedName",
														"src": "652:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:17",
														"nodeType": "YulTypedName",
														"src": "660:5:17",
														"type": ""
													}
												],
												"src": "615:137:17"
											},
											{
												"body": {
													"nativeSrc": "823:262:17",
													"nodeType": "YulBlock",
													"src": "823:262:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:17",
																"nodeType": "YulBlock",
																"src": "869:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:17"
																			},
																			"nativeSrc": "871:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:17"
																		},
																		"nativeSrc": "871:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:17"
																		},
																		"nativeSrc": "840:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:17",
																		"nodeType": "YulLiteral",
																		"src": "865:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:17"
																},
																"nativeSrc": "836:32:17",
																"nodeType": "YulFunctionCall",
																"src": "836:32:17"
															},
															"nativeSrc": "833:119:17",
															"nodeType": "YulIf",
															"src": "833:119:17"
														},
														{
															"nativeSrc": "962:116:17",
															"nodeType": "YulBlock",
															"src": "962:116:17",
															"statements": [
																{
																	"nativeSrc": "977:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:17",
																		"nodeType": "YulLiteral",
																		"src": "991:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:17",
																			"nodeType": "YulTypedName",
																			"src": "981:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:17",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:17"
																				},
																				"nativeSrc": "1036:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:17",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:17"
																		},
																		"nativeSrc": "1016:52:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:17",
														"nodeType": "YulTypedName",
														"src": "793:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:17",
														"nodeType": "YulTypedName",
														"src": "804:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:17",
														"nodeType": "YulTypedName",
														"src": "816:6:17",
														"type": ""
													}
												],
												"src": "758:327:17"
											},
											{
												"body": {
													"nativeSrc": "1133:48:17",
													"nodeType": "YulBlock",
													"src": "1133:48:17",
													"statements": [
														{
															"nativeSrc": "1143:32:17",
															"nodeType": "YulAssignment",
															"src": "1143:32:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:17"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:17"
																		},
																		"nativeSrc": "1161:13:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:17"
																},
																"nativeSrc": "1154:21:17",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:17",
														"nodeType": "YulTypedName",
														"src": "1115:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:17",
														"nodeType": "YulTypedName",
														"src": "1125:7:17",
														"type": ""
													}
												],
												"src": "1091:90:17"
											},
											{
												"body": {
													"nativeSrc": "1246:50:17",
													"nodeType": "YulBlock",
													"src": "1246:50:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:17",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:17"
																		},
																		"nativeSrc": "1268:21:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:17"
																},
																"nativeSrc": "1256:34:17",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:17"
															},
															"nativeSrc": "1256:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:17"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:17",
														"nodeType": "YulTypedName",
														"src": "1234:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:17",
														"nodeType": "YulTypedName",
														"src": "1241:3:17",
														"type": ""
													}
												],
												"src": "1187:109:17"
											},
											{
												"body": {
													"nativeSrc": "1394:118:17",
													"nodeType": "YulBlock",
													"src": "1394:118:17",
													"statements": [
														{
															"nativeSrc": "1404:26:17",
															"nodeType": "YulAssignment",
															"src": "1404:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:17"
																},
																"nativeSrc": "1412:18:17",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:17",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:17"
																		},
																		"nativeSrc": "1487:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:17",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:17"
																},
																"nativeSrc": "1440:65:17",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:17"
															},
															"nativeSrc": "1440:65:17",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:17",
														"nodeType": "YulTypedName",
														"src": "1366:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:17",
														"nodeType": "YulTypedName",
														"src": "1378:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:17",
														"nodeType": "YulTypedName",
														"src": "1389:4:17",
														"type": ""
													}
												],
												"src": "1302:210:17"
											},
											{
												"body": {
													"nativeSrc": "1563:32:17",
													"nodeType": "YulBlock",
													"src": "1563:32:17",
													"statements": [
														{
															"nativeSrc": "1573:16:17",
															"nodeType": "YulAssignment",
															"src": "1573:16:17",
															"value": {
																"name": "value",
																"nativeSrc": "1584:5:17",
																"nodeType": "YulIdentifier",
																"src": "1584:5:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1518:77:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:17",
														"nodeType": "YulTypedName",
														"src": "1545:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:17",
														"nodeType": "YulTypedName",
														"src": "1555:7:17",
														"type": ""
													}
												],
												"src": "1518:77:17"
											},
											{
												"body": {
													"nativeSrc": "1666:53:17",
													"nodeType": "YulBlock",
													"src": "1666:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1683:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "1683:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1706:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "1706:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1688:17:17",
																			"nodeType": "YulIdentifier",
																			"src": "1688:17:17"
																		},
																		"nativeSrc": "1688:24:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1688:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1676:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1676:6:17"
																},
																"nativeSrc": "1676:37:17",
																"nodeType": "YulFunctionCall",
																"src": "1676:37:17"
															},
															"nativeSrc": "1676:37:17",
															"nodeType": "YulExpressionStatement",
															"src": "1676:37:17"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1601:118:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1654:5:17",
														"nodeType": "YulTypedName",
														"src": "1654:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1661:3:17",
														"nodeType": "YulTypedName",
														"src": "1661:3:17",
														"type": ""
													}
												],
												"src": "1601:118:17"
											},
											{
												"body": {
													"nativeSrc": "1823:124:17",
													"nodeType": "YulBlock",
													"src": "1823:124:17",
													"statements": [
														{
															"nativeSrc": "1833:26:17",
															"nodeType": "YulAssignment",
															"src": "1833:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1845:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1845:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1856:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1856:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1841:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1841:3:17"
																},
																"nativeSrc": "1841:18:17",
																"nodeType": "YulFunctionCall",
																"src": "1841:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1833:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "1833:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1913:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1913:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1926:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "1926:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1937:1:17",
																				"nodeType": "YulLiteral",
																				"src": "1937:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1922:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1922:3:17"
																		},
																		"nativeSrc": "1922:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1922:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1869:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "1869:43:17"
																},
																"nativeSrc": "1869:71:17",
																"nodeType": "YulFunctionCall",
																"src": "1869:71:17"
															},
															"nativeSrc": "1869:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "1869:71:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1725:222:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1795:9:17",
														"nodeType": "YulTypedName",
														"src": "1795:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1807:6:17",
														"nodeType": "YulTypedName",
														"src": "1807:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1818:4:17",
														"nodeType": "YulTypedName",
														"src": "1818:4:17",
														"type": ""
													}
												],
												"src": "1725:222:17"
											},
											{
												"body": {
													"nativeSrc": "2012:40:17",
													"nodeType": "YulBlock",
													"src": "2012:40:17",
													"statements": [
														{
															"nativeSrc": "2023:22:17",
															"nodeType": "YulAssignment",
															"src": "2023:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2039:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "2039:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2033:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "2033:5:17"
																},
																"nativeSrc": "2033:12:17",
																"nodeType": "YulFunctionCall",
																"src": "2033:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2023:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2023:6:17"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1953:99:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1995:5:17",
														"nodeType": "YulTypedName",
														"src": "1995:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2005:6:17",
														"nodeType": "YulTypedName",
														"src": "2005:6:17",
														"type": ""
													}
												],
												"src": "1953:99:17"
											},
											{
												"body": {
													"nativeSrc": "2154:73:17",
													"nodeType": "YulBlock",
													"src": "2154:73:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2171:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2164:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2164:6:17"
																},
																"nativeSrc": "2164:19:17",
																"nodeType": "YulFunctionCall",
																"src": "2164:19:17"
															},
															"nativeSrc": "2164:19:17",
															"nodeType": "YulExpressionStatement",
															"src": "2164:19:17"
														},
														{
															"nativeSrc": "2192:29:17",
															"nodeType": "YulAssignment",
															"src": "2192:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2211:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "2211:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2216:4:17",
																		"nodeType": "YulLiteral",
																		"src": "2216:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2207:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2207:3:17"
																},
																"nativeSrc": "2207:14:17",
																"nodeType": "YulFunctionCall",
																"src": "2207:14:17"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2192:11:17",
																	"nodeType": "YulIdentifier",
																	"src": "2192:11:17"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2058:169:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2126:3:17",
														"nodeType": "YulTypedName",
														"src": "2126:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2131:6:17",
														"nodeType": "YulTypedName",
														"src": "2131:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2142:11:17",
														"nodeType": "YulTypedName",
														"src": "2142:11:17",
														"type": ""
													}
												],
												"src": "2058:169:17"
											},
											{
												"body": {
													"nativeSrc": "2295:77:17",
													"nodeType": "YulBlock",
													"src": "2295:77:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2312:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "2312:3:17"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "2317:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "2317:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2322:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "2322:6:17"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "2306:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "2306:5:17"
																},
																"nativeSrc": "2306:23:17",
																"nodeType": "YulFunctionCall",
																"src": "2306:23:17"
															},
															"nativeSrc": "2306:23:17",
															"nodeType": "YulExpressionStatement",
															"src": "2306:23:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2349:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "2349:3:17"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2354:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2354:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2345:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2345:3:17"
																		},
																		"nativeSrc": "2345:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2345:16:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2363:1:17",
																		"nodeType": "YulLiteral",
																		"src": "2363:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2338:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2338:6:17"
																},
																"nativeSrc": "2338:27:17",
																"nodeType": "YulFunctionCall",
																"src": "2338:27:17"
															},
															"nativeSrc": "2338:27:17",
															"nodeType": "YulExpressionStatement",
															"src": "2338:27:17"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "2233:139:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2277:3:17",
														"nodeType": "YulTypedName",
														"src": "2277:3:17",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2282:3:17",
														"nodeType": "YulTypedName",
														"src": "2282:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2287:6:17",
														"nodeType": "YulTypedName",
														"src": "2287:6:17",
														"type": ""
													}
												],
												"src": "2233:139:17"
											},
											{
												"body": {
													"nativeSrc": "2426:54:17",
													"nodeType": "YulBlock",
													"src": "2426:54:17",
													"statements": [
														{
															"nativeSrc": "2436:38:17",
															"nodeType": "YulAssignment",
															"src": "2436:38:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2454:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "2454:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2461:2:17",
																				"nodeType": "YulLiteral",
																				"src": "2461:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2450:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2450:3:17"
																		},
																		"nativeSrc": "2450:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2450:14:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2470:2:17",
																				"nodeType": "YulLiteral",
																				"src": "2470:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2466:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2466:3:17"
																		},
																		"nativeSrc": "2466:7:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2466:7:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2446:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2446:3:17"
																},
																"nativeSrc": "2446:28:17",
																"nodeType": "YulFunctionCall",
																"src": "2446:28:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2436:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2436:6:17"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2378:102:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2409:5:17",
														"nodeType": "YulTypedName",
														"src": "2409:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2419:6:17",
														"nodeType": "YulTypedName",
														"src": "2419:6:17",
														"type": ""
													}
												],
												"src": "2378:102:17"
											},
											{
												"body": {
													"nativeSrc": "2578:285:17",
													"nodeType": "YulBlock",
													"src": "2578:285:17",
													"statements": [
														{
															"nativeSrc": "2588:53:17",
															"nodeType": "YulVariableDeclaration",
															"src": "2588:53:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2635:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "2635:5:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2602:32:17",
																	"nodeType": "YulIdentifier",
																	"src": "2602:32:17"
																},
																"nativeSrc": "2602:39:17",
																"nodeType": "YulFunctionCall",
																"src": "2602:39:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2592:6:17",
																	"nodeType": "YulTypedName",
																	"src": "2592:6:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2650:78:17",
															"nodeType": "YulAssignment",
															"src": "2650:78:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2716:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "2716:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2721:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "2721:6:17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2657:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "2657:58:17"
																},
																"nativeSrc": "2657:71:17",
																"nodeType": "YulFunctionCall",
																"src": "2657:71:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2650:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2650:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2776:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "2776:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2783:4:17",
																				"nodeType": "YulLiteral",
																				"src": "2783:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2772:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2772:3:17"
																		},
																		"nativeSrc": "2772:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2772:16:17"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2790:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "2790:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2795:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "2795:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2737:34:17",
																	"nodeType": "YulIdentifier",
																	"src": "2737:34:17"
																},
																"nativeSrc": "2737:65:17",
																"nodeType": "YulFunctionCall",
																"src": "2737:65:17"
															},
															"nativeSrc": "2737:65:17",
															"nodeType": "YulExpressionStatement",
															"src": "2737:65:17"
														},
														{
															"nativeSrc": "2811:46:17",
															"nodeType": "YulAssignment",
															"src": "2811:46:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2822:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "2822:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2849:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2849:6:17"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2827:21:17",
																			"nodeType": "YulIdentifier",
																			"src": "2827:21:17"
																		},
																		"nativeSrc": "2827:29:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2827:29:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2818:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2818:3:17"
																},
																"nativeSrc": "2818:39:17",
																"nodeType": "YulFunctionCall",
																"src": "2818:39:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2811:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2811:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2486:377:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2559:5:17",
														"nodeType": "YulTypedName",
														"src": "2559:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2566:3:17",
														"nodeType": "YulTypedName",
														"src": "2566:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2574:3:17",
														"nodeType": "YulTypedName",
														"src": "2574:3:17",
														"type": ""
													}
												],
												"src": "2486:377:17"
											},
											{
												"body": {
													"nativeSrc": "2987:195:17",
													"nodeType": "YulBlock",
													"src": "2987:195:17",
													"statements": [
														{
															"nativeSrc": "2997:26:17",
															"nodeType": "YulAssignment",
															"src": "2997:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3009:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "3009:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3020:2:17",
																		"nodeType": "YulLiteral",
																		"src": "3020:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3005:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3005:3:17"
																},
																"nativeSrc": "3005:18:17",
																"nodeType": "YulFunctionCall",
																"src": "3005:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2997:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "2997:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3044:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3044:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3055:1:17",
																				"nodeType": "YulLiteral",
																				"src": "3055:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3040:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3040:3:17"
																		},
																		"nativeSrc": "3040:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3040:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3063:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "3063:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3069:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3069:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3059:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3059:3:17"
																		},
																		"nativeSrc": "3059:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3059:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3033:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3033:6:17"
																},
																"nativeSrc": "3033:47:17",
																"nodeType": "YulFunctionCall",
																"src": "3033:47:17"
															},
															"nativeSrc": "3033:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "3033:47:17"
														},
														{
															"nativeSrc": "3089:86:17",
															"nodeType": "YulAssignment",
															"src": "3089:86:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3161:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "3161:6:17"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "3170:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "3170:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3097:63:17",
																	"nodeType": "YulIdentifier",
																	"src": "3097:63:17"
																},
																"nativeSrc": "3097:78:17",
																"nodeType": "YulFunctionCall",
																"src": "3097:78:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3089:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "3089:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2869:313:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2959:9:17",
														"nodeType": "YulTypedName",
														"src": "2959:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2971:6:17",
														"nodeType": "YulTypedName",
														"src": "2971:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2982:4:17",
														"nodeType": "YulTypedName",
														"src": "2982:4:17",
														"type": ""
													}
												],
												"src": "2869:313:17"
											},
											{
												"body": {
													"nativeSrc": "3233:81:17",
													"nodeType": "YulBlock",
													"src": "3233:81:17",
													"statements": [
														{
															"nativeSrc": "3243:65:17",
															"nodeType": "YulAssignment",
															"src": "3243:65:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3258:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "3258:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3265:42:17",
																		"nodeType": "YulLiteral",
																		"src": "3265:42:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3254:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3254:3:17"
																},
																"nativeSrc": "3254:54:17",
																"nodeType": "YulFunctionCall",
																"src": "3254:54:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3243:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "3243:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3188:126:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3215:5:17",
														"nodeType": "YulTypedName",
														"src": "3215:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3225:7:17",
														"nodeType": "YulTypedName",
														"src": "3225:7:17",
														"type": ""
													}
												],
												"src": "3188:126:17"
											},
											{
												"body": {
													"nativeSrc": "3365:51:17",
													"nodeType": "YulBlock",
													"src": "3365:51:17",
													"statements": [
														{
															"nativeSrc": "3375:35:17",
															"nodeType": "YulAssignment",
															"src": "3375:35:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3404:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "3404:5:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3386:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "3386:17:17"
																},
																"nativeSrc": "3386:24:17",
																"nodeType": "YulFunctionCall",
																"src": "3386:24:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3375:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "3375:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3320:96:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3347:5:17",
														"nodeType": "YulTypedName",
														"src": "3347:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3357:7:17",
														"nodeType": "YulTypedName",
														"src": "3357:7:17",
														"type": ""
													}
												],
												"src": "3320:96:17"
											},
											{
												"body": {
													"nativeSrc": "3465:79:17",
													"nodeType": "YulBlock",
													"src": "3465:79:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "3522:16:17",
																"nodeType": "YulBlock",
																"src": "3522:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3531:1:17",
																					"nodeType": "YulLiteral",
																					"src": "3531:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3534:1:17",
																					"nodeType": "YulLiteral",
																					"src": "3534:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3524:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "3524:6:17"
																			},
																			"nativeSrc": "3524:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3524:12:17"
																		},
																		"nativeSrc": "3524:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "3524:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3488:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "3488:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3513:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "3513:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3495:17:17",
																					"nodeType": "YulIdentifier",
																					"src": "3495:17:17"
																				},
																				"nativeSrc": "3495:24:17",
																				"nodeType": "YulFunctionCall",
																				"src": "3495:24:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3485:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "3485:2:17"
																		},
																		"nativeSrc": "3485:35:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3485:35:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3478:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3478:6:17"
																},
																"nativeSrc": "3478:43:17",
																"nodeType": "YulFunctionCall",
																"src": "3478:43:17"
															},
															"nativeSrc": "3475:63:17",
															"nodeType": "YulIf",
															"src": "3475:63:17"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3422:122:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3458:5:17",
														"nodeType": "YulTypedName",
														"src": "3458:5:17",
														"type": ""
													}
												],
												"src": "3422:122:17"
											},
											{
												"body": {
													"nativeSrc": "3602:87:17",
													"nodeType": "YulBlock",
													"src": "3602:87:17",
													"statements": [
														{
															"nativeSrc": "3612:29:17",
															"nodeType": "YulAssignment",
															"src": "3612:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3634:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "3634:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3621:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "3621:12:17"
																},
																"nativeSrc": "3621:20:17",
																"nodeType": "YulFunctionCall",
																"src": "3621:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3612:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "3612:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3677:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "3677:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3650:26:17",
																	"nodeType": "YulIdentifier",
																	"src": "3650:26:17"
																},
																"nativeSrc": "3650:33:17",
																"nodeType": "YulFunctionCall",
																"src": "3650:33:17"
															},
															"nativeSrc": "3650:33:17",
															"nodeType": "YulExpressionStatement",
															"src": "3650:33:17"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3550:139:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3580:6:17",
														"nodeType": "YulTypedName",
														"src": "3580:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3588:3:17",
														"nodeType": "YulTypedName",
														"src": "3588:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3596:5:17",
														"nodeType": "YulTypedName",
														"src": "3596:5:17",
														"type": ""
													}
												],
												"src": "3550:139:17"
											},
											{
												"body": {
													"nativeSrc": "3738:79:17",
													"nodeType": "YulBlock",
													"src": "3738:79:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "3795:16:17",
																"nodeType": "YulBlock",
																"src": "3795:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3804:1:17",
																					"nodeType": "YulLiteral",
																					"src": "3804:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3807:1:17",
																					"nodeType": "YulLiteral",
																					"src": "3807:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3797:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "3797:6:17"
																			},
																			"nativeSrc": "3797:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3797:12:17"
																		},
																		"nativeSrc": "3797:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "3797:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3761:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "3761:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3786:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "3786:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3768:17:17",
																					"nodeType": "YulIdentifier",
																					"src": "3768:17:17"
																				},
																				"nativeSrc": "3768:24:17",
																				"nodeType": "YulFunctionCall",
																				"src": "3768:24:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3758:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "3758:2:17"
																		},
																		"nativeSrc": "3758:35:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3758:35:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3751:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3751:6:17"
																},
																"nativeSrc": "3751:43:17",
																"nodeType": "YulFunctionCall",
																"src": "3751:43:17"
															},
															"nativeSrc": "3748:63:17",
															"nodeType": "YulIf",
															"src": "3748:63:17"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3695:122:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3731:5:17",
														"nodeType": "YulTypedName",
														"src": "3731:5:17",
														"type": ""
													}
												],
												"src": "3695:122:17"
											},
											{
												"body": {
													"nativeSrc": "3875:87:17",
													"nodeType": "YulBlock",
													"src": "3875:87:17",
													"statements": [
														{
															"nativeSrc": "3885:29:17",
															"nodeType": "YulAssignment",
															"src": "3885:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3907:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "3907:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3894:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "3894:12:17"
																},
																"nativeSrc": "3894:20:17",
																"nodeType": "YulFunctionCall",
																"src": "3894:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3885:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "3885:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3950:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "3950:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3923:26:17",
																	"nodeType": "YulIdentifier",
																	"src": "3923:26:17"
																},
																"nativeSrc": "3923:33:17",
																"nodeType": "YulFunctionCall",
																"src": "3923:33:17"
															},
															"nativeSrc": "3923:33:17",
															"nodeType": "YulExpressionStatement",
															"src": "3923:33:17"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3823:139:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3853:6:17",
														"nodeType": "YulTypedName",
														"src": "3853:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3861:3:17",
														"nodeType": "YulTypedName",
														"src": "3861:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3869:5:17",
														"nodeType": "YulTypedName",
														"src": "3869:5:17",
														"type": ""
													}
												],
												"src": "3823:139:17"
											},
											{
												"body": {
													"nativeSrc": "4051:391:17",
													"nodeType": "YulBlock",
													"src": "4051:391:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "4097:83:17",
																"nodeType": "YulBlock",
																"src": "4097:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4099:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "4099:77:17"
																			},
																			"nativeSrc": "4099:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "4099:79:17"
																		},
																		"nativeSrc": "4099:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "4099:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4072:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "4072:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4081:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "4081:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4068:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4068:3:17"
																		},
																		"nativeSrc": "4068:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4068:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4093:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4093:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4064:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4064:3:17"
																},
																"nativeSrc": "4064:32:17",
																"nodeType": "YulFunctionCall",
																"src": "4064:32:17"
															},
															"nativeSrc": "4061:119:17",
															"nodeType": "YulIf",
															"src": "4061:119:17"
														},
														{
															"nativeSrc": "4190:117:17",
															"nodeType": "YulBlock",
															"src": "4190:117:17",
															"statements": [
																{
																	"nativeSrc": "4205:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4205:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4219:1:17",
																		"nodeType": "YulLiteral",
																		"src": "4219:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4209:6:17",
																			"nodeType": "YulTypedName",
																			"src": "4209:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4234:63:17",
																	"nodeType": "YulAssignment",
																	"src": "4234:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4269:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "4269:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4280:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "4280:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4265:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "4265:3:17"
																				},
																				"nativeSrc": "4265:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4265:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4289:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "4289:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4244:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "4244:20:17"
																		},
																		"nativeSrc": "4244:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4244:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4234:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "4234:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4317:118:17",
															"nodeType": "YulBlock",
															"src": "4317:118:17",
															"statements": [
																{
																	"nativeSrc": "4332:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4332:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4346:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4346:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4336:6:17",
																			"nodeType": "YulTypedName",
																			"src": "4336:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4362:63:17",
																	"nodeType": "YulAssignment",
																	"src": "4362:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4397:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "4397:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4408:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "4408:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4393:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "4393:3:17"
																				},
																				"nativeSrc": "4393:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4393:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4417:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "4417:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4372:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "4372:20:17"
																		},
																		"nativeSrc": "4372:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4372:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4362:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "4362:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3968:474:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4013:9:17",
														"nodeType": "YulTypedName",
														"src": "4013:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4024:7:17",
														"nodeType": "YulTypedName",
														"src": "4024:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4036:6:17",
														"nodeType": "YulTypedName",
														"src": "4036:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4044:6:17",
														"nodeType": "YulTypedName",
														"src": "4044:6:17",
														"type": ""
													}
												],
												"src": "3968:474:17"
											},
											{
												"body": {
													"nativeSrc": "4488:76:17",
													"nodeType": "YulBlock",
													"src": "4488:76:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "4542:16:17",
																"nodeType": "YulBlock",
																"src": "4542:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4551:1:17",
																					"nodeType": "YulLiteral",
																					"src": "4551:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4554:1:17",
																					"nodeType": "YulLiteral",
																					"src": "4554:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4544:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "4544:6:17"
																			},
																			"nativeSrc": "4544:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "4544:12:17"
																		},
																		"nativeSrc": "4544:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "4544:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4511:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "4511:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4533:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "4533:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "4518:14:17",
																					"nodeType": "YulIdentifier",
																					"src": "4518:14:17"
																				},
																				"nativeSrc": "4518:21:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4518:21:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4508:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "4508:2:17"
																		},
																		"nativeSrc": "4508:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4508:32:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4501:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4501:6:17"
																},
																"nativeSrc": "4501:40:17",
																"nodeType": "YulFunctionCall",
																"src": "4501:40:17"
															},
															"nativeSrc": "4498:60:17",
															"nodeType": "YulIf",
															"src": "4498:60:17"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "4448:116:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4481:5:17",
														"nodeType": "YulTypedName",
														"src": "4481:5:17",
														"type": ""
													}
												],
												"src": "4448:116:17"
											},
											{
												"body": {
													"nativeSrc": "4619:84:17",
													"nodeType": "YulBlock",
													"src": "4619:84:17",
													"statements": [
														{
															"nativeSrc": "4629:29:17",
															"nodeType": "YulAssignment",
															"src": "4629:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4651:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "4651:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4638:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "4638:12:17"
																},
																"nativeSrc": "4638:20:17",
																"nodeType": "YulFunctionCall",
																"src": "4638:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4629:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "4629:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4691:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "4691:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "4667:23:17",
																	"nodeType": "YulIdentifier",
																	"src": "4667:23:17"
																},
																"nativeSrc": "4667:30:17",
																"nodeType": "YulFunctionCall",
																"src": "4667:30:17"
															},
															"nativeSrc": "4667:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "4667:30:17"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "4570:133:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4597:6:17",
														"nodeType": "YulTypedName",
														"src": "4597:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4605:3:17",
														"nodeType": "YulTypedName",
														"src": "4605:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4613:5:17",
														"nodeType": "YulTypedName",
														"src": "4613:5:17",
														"type": ""
													}
												],
												"src": "4570:133:17"
											},
											{
												"body": {
													"nativeSrc": "4772:260:17",
													"nodeType": "YulBlock",
													"src": "4772:260:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "4818:83:17",
																"nodeType": "YulBlock",
																"src": "4818:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4820:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "4820:77:17"
																			},
																			"nativeSrc": "4820:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "4820:79:17"
																		},
																		"nativeSrc": "4820:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "4820:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4793:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "4793:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4802:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "4802:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4789:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4789:3:17"
																		},
																		"nativeSrc": "4789:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4789:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4814:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4814:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4785:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4785:3:17"
																},
																"nativeSrc": "4785:32:17",
																"nodeType": "YulFunctionCall",
																"src": "4785:32:17"
															},
															"nativeSrc": "4782:119:17",
															"nodeType": "YulIf",
															"src": "4782:119:17"
														},
														{
															"nativeSrc": "4911:114:17",
															"nodeType": "YulBlock",
															"src": "4911:114:17",
															"statements": [
																{
																	"nativeSrc": "4926:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4926:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4940:1:17",
																		"nodeType": "YulLiteral",
																		"src": "4940:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4930:6:17",
																			"nodeType": "YulTypedName",
																			"src": "4930:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4955:60:17",
																	"nodeType": "YulAssignment",
																	"src": "4955:60:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4987:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "4987:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4998:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "4998:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4983:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "4983:3:17"
																				},
																				"nativeSrc": "4983:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4983:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5007:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "5007:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "4965:17:17",
																			"nodeType": "YulIdentifier",
																			"src": "4965:17:17"
																		},
																		"nativeSrc": "4965:50:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4965:50:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4955:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "4955:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nativeSrc": "4709:323:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4742:9:17",
														"nodeType": "YulTypedName",
														"src": "4742:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4753:7:17",
														"nodeType": "YulTypedName",
														"src": "4753:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4765:6:17",
														"nodeType": "YulTypedName",
														"src": "4765:6:17",
														"type": ""
													}
												],
												"src": "4709:323:17"
											},
											{
												"body": {
													"nativeSrc": "5138:519:17",
													"nodeType": "YulBlock",
													"src": "5138:519:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "5184:83:17",
																"nodeType": "YulBlock",
																"src": "5184:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5186:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "5186:77:17"
																			},
																			"nativeSrc": "5186:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "5186:79:17"
																		},
																		"nativeSrc": "5186:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "5186:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5159:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "5159:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5168:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5168:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5155:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5155:3:17"
																		},
																		"nativeSrc": "5155:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5155:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5180:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5180:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5151:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5151:3:17"
																},
																"nativeSrc": "5151:32:17",
																"nodeType": "YulFunctionCall",
																"src": "5151:32:17"
															},
															"nativeSrc": "5148:119:17",
															"nodeType": "YulIf",
															"src": "5148:119:17"
														},
														{
															"nativeSrc": "5277:117:17",
															"nodeType": "YulBlock",
															"src": "5277:117:17",
															"statements": [
																{
																	"nativeSrc": "5292:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5292:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5306:1:17",
																		"nodeType": "YulLiteral",
																		"src": "5306:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5296:6:17",
																			"nodeType": "YulTypedName",
																			"src": "5296:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5321:63:17",
																	"nodeType": "YulAssignment",
																	"src": "5321:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5356:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "5356:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5367:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "5367:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5352:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "5352:3:17"
																				},
																				"nativeSrc": "5352:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "5352:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5376:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "5376:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5331:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "5331:20:17"
																		},
																		"nativeSrc": "5331:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5331:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5321:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "5321:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5404:118:17",
															"nodeType": "YulBlock",
															"src": "5404:118:17",
															"statements": [
																{
																	"nativeSrc": "5419:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5419:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5433:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5433:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5423:6:17",
																			"nodeType": "YulTypedName",
																			"src": "5423:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5449:63:17",
																	"nodeType": "YulAssignment",
																	"src": "5449:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5484:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "5484:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5495:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "5495:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5480:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "5480:3:17"
																				},
																				"nativeSrc": "5480:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "5480:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5504:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "5504:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5459:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "5459:20:17"
																		},
																		"nativeSrc": "5459:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5459:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5449:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "5449:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5532:118:17",
															"nodeType": "YulBlock",
															"src": "5532:118:17",
															"statements": [
																{
																	"nativeSrc": "5547:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5547:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5561:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5561:2:17",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5551:6:17",
																			"nodeType": "YulTypedName",
																			"src": "5551:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5577:63:17",
																	"nodeType": "YulAssignment",
																	"src": "5577:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5612:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "5612:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5623:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "5623:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5608:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "5608:3:17"
																				},
																				"nativeSrc": "5608:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "5608:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5632:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "5632:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5587:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "5587:20:17"
																		},
																		"nativeSrc": "5587:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5587:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5577:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "5577:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "5038:619:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5092:9:17",
														"nodeType": "YulTypedName",
														"src": "5092:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5103:7:17",
														"nodeType": "YulTypedName",
														"src": "5103:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5115:6:17",
														"nodeType": "YulTypedName",
														"src": "5115:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5123:6:17",
														"nodeType": "YulTypedName",
														"src": "5123:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5131:6:17",
														"nodeType": "YulTypedName",
														"src": "5131:6:17",
														"type": ""
													}
												],
												"src": "5038:619:17"
											},
											{
												"body": {
													"nativeSrc": "5708:32:17",
													"nodeType": "YulBlock",
													"src": "5708:32:17",
													"statements": [
														{
															"nativeSrc": "5718:16:17",
															"nodeType": "YulAssignment",
															"src": "5718:16:17",
															"value": {
																"name": "value",
																"nativeSrc": "5729:5:17",
																"nodeType": "YulIdentifier",
																"src": "5729:5:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5718:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "5718:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "5663:77:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5690:5:17",
														"nodeType": "YulTypedName",
														"src": "5690:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5700:7:17",
														"nodeType": "YulTypedName",
														"src": "5700:7:17",
														"type": ""
													}
												],
												"src": "5663:77:17"
											},
											{
												"body": {
													"nativeSrc": "5789:79:17",
													"nodeType": "YulBlock",
													"src": "5789:79:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "5846:16:17",
																"nodeType": "YulBlock",
																"src": "5846:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5855:1:17",
																					"nodeType": "YulLiteral",
																					"src": "5855:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5858:1:17",
																					"nodeType": "YulLiteral",
																					"src": "5858:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5848:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "5848:6:17"
																			},
																			"nativeSrc": "5848:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "5848:12:17"
																		},
																		"nativeSrc": "5848:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "5848:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5812:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "5812:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5837:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "5837:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "5819:17:17",
																					"nodeType": "YulIdentifier",
																					"src": "5819:17:17"
																				},
																				"nativeSrc": "5819:24:17",
																				"nodeType": "YulFunctionCall",
																				"src": "5819:24:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5809:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "5809:2:17"
																		},
																		"nativeSrc": "5809:35:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5809:35:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5802:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5802:6:17"
																},
																"nativeSrc": "5802:43:17",
																"nodeType": "YulFunctionCall",
																"src": "5802:43:17"
															},
															"nativeSrc": "5799:63:17",
															"nodeType": "YulIf",
															"src": "5799:63:17"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "5746:122:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5782:5:17",
														"nodeType": "YulTypedName",
														"src": "5782:5:17",
														"type": ""
													}
												],
												"src": "5746:122:17"
											},
											{
												"body": {
													"nativeSrc": "5926:87:17",
													"nodeType": "YulBlock",
													"src": "5926:87:17",
													"statements": [
														{
															"nativeSrc": "5936:29:17",
															"nodeType": "YulAssignment",
															"src": "5936:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5958:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "5958:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5945:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "5945:12:17"
																},
																"nativeSrc": "5945:20:17",
																"nodeType": "YulFunctionCall",
																"src": "5945:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5936:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "5936:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6001:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "6001:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "5974:26:17",
																	"nodeType": "YulIdentifier",
																	"src": "5974:26:17"
																},
																"nativeSrc": "5974:33:17",
																"nodeType": "YulFunctionCall",
																"src": "5974:33:17"
															},
															"nativeSrc": "5974:33:17",
															"nodeType": "YulExpressionStatement",
															"src": "5974:33:17"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "5874:139:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5904:6:17",
														"nodeType": "YulTypedName",
														"src": "5904:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5912:3:17",
														"nodeType": "YulTypedName",
														"src": "5912:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5920:5:17",
														"nodeType": "YulTypedName",
														"src": "5920:5:17",
														"type": ""
													}
												],
												"src": "5874:139:17"
											},
											{
												"body": {
													"nativeSrc": "6085:263:17",
													"nodeType": "YulBlock",
													"src": "6085:263:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "6131:83:17",
																"nodeType": "YulBlock",
																"src": "6131:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6133:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "6133:77:17"
																			},
																			"nativeSrc": "6133:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "6133:79:17"
																		},
																		"nativeSrc": "6133:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "6133:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6106:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "6106:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6115:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "6115:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6102:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6102:3:17"
																		},
																		"nativeSrc": "6102:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6102:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6127:2:17",
																		"nodeType": "YulLiteral",
																		"src": "6127:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6098:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6098:3:17"
																},
																"nativeSrc": "6098:32:17",
																"nodeType": "YulFunctionCall",
																"src": "6098:32:17"
															},
															"nativeSrc": "6095:119:17",
															"nodeType": "YulIf",
															"src": "6095:119:17"
														},
														{
															"nativeSrc": "6224:117:17",
															"nodeType": "YulBlock",
															"src": "6224:117:17",
															"statements": [
																{
																	"nativeSrc": "6239:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6239:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6253:1:17",
																		"nodeType": "YulLiteral",
																		"src": "6253:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6243:6:17",
																			"nodeType": "YulTypedName",
																			"src": "6243:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6268:63:17",
																	"nodeType": "YulAssignment",
																	"src": "6268:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6303:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "6303:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6314:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "6314:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6299:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "6299:3:17"
																				},
																				"nativeSrc": "6299:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "6299:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6323:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "6323:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "6278:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "6278:20:17"
																		},
																		"nativeSrc": "6278:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6278:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6268:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "6268:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "6019:329:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6055:9:17",
														"nodeType": "YulTypedName",
														"src": "6055:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6066:7:17",
														"nodeType": "YulTypedName",
														"src": "6066:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6078:6:17",
														"nodeType": "YulTypedName",
														"src": "6078:6:17",
														"type": ""
													}
												],
												"src": "6019:329:17"
											},
											{
												"body": {
													"nativeSrc": "6419:53:17",
													"nodeType": "YulBlock",
													"src": "6419:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6436:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "6436:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6459:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "6459:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "6441:17:17",
																			"nodeType": "YulIdentifier",
																			"src": "6441:17:17"
																		},
																		"nativeSrc": "6441:24:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6441:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6429:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6429:6:17"
																},
																"nativeSrc": "6429:37:17",
																"nodeType": "YulFunctionCall",
																"src": "6429:37:17"
															},
															"nativeSrc": "6429:37:17",
															"nodeType": "YulExpressionStatement",
															"src": "6429:37:17"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "6354:118:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6407:5:17",
														"nodeType": "YulTypedName",
														"src": "6407:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6414:3:17",
														"nodeType": "YulTypedName",
														"src": "6414:3:17",
														"type": ""
													}
												],
												"src": "6354:118:17"
											},
											{
												"body": {
													"nativeSrc": "6576:124:17",
													"nodeType": "YulBlock",
													"src": "6576:124:17",
													"statements": [
														{
															"nativeSrc": "6586:26:17",
															"nodeType": "YulAssignment",
															"src": "6586:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6598:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "6598:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6609:2:17",
																		"nodeType": "YulLiteral",
																		"src": "6609:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6594:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6594:3:17"
																},
																"nativeSrc": "6594:18:17",
																"nodeType": "YulFunctionCall",
																"src": "6594:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6586:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "6586:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6666:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "6666:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6679:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "6679:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6690:1:17",
																				"nodeType": "YulLiteral",
																				"src": "6690:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6675:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6675:3:17"
																		},
																		"nativeSrc": "6675:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6675:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6622:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "6622:43:17"
																},
																"nativeSrc": "6622:71:17",
																"nodeType": "YulFunctionCall",
																"src": "6622:71:17"
															},
															"nativeSrc": "6622:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "6622:71:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "6478:222:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6548:9:17",
														"nodeType": "YulTypedName",
														"src": "6548:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6560:6:17",
														"nodeType": "YulTypedName",
														"src": "6560:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6571:4:17",
														"nodeType": "YulTypedName",
														"src": "6571:4:17",
														"type": ""
													}
												],
												"src": "6478:222:17"
											},
											{
												"body": {
													"nativeSrc": "6789:391:17",
													"nodeType": "YulBlock",
													"src": "6789:391:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "6835:83:17",
																"nodeType": "YulBlock",
																"src": "6835:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6837:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "6837:77:17"
																			},
																			"nativeSrc": "6837:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "6837:79:17"
																		},
																		"nativeSrc": "6837:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "6837:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6810:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "6810:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6819:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "6819:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6806:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6806:3:17"
																		},
																		"nativeSrc": "6806:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6806:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6831:2:17",
																		"nodeType": "YulLiteral",
																		"src": "6831:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6802:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6802:3:17"
																},
																"nativeSrc": "6802:32:17",
																"nodeType": "YulFunctionCall",
																"src": "6802:32:17"
															},
															"nativeSrc": "6799:119:17",
															"nodeType": "YulIf",
															"src": "6799:119:17"
														},
														{
															"nativeSrc": "6928:117:17",
															"nodeType": "YulBlock",
															"src": "6928:117:17",
															"statements": [
																{
																	"nativeSrc": "6943:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6943:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6957:1:17",
																		"nodeType": "YulLiteral",
																		"src": "6957:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6947:6:17",
																			"nodeType": "YulTypedName",
																			"src": "6947:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6972:63:17",
																	"nodeType": "YulAssignment",
																	"src": "6972:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7007:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "7007:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7018:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "7018:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7003:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "7003:3:17"
																				},
																				"nativeSrc": "7003:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "7003:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7027:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "7027:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "6982:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "6982:20:17"
																		},
																		"nativeSrc": "6982:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6982:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6972:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "6972:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7055:118:17",
															"nodeType": "YulBlock",
															"src": "7055:118:17",
															"statements": [
																{
																	"nativeSrc": "7070:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7070:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7084:2:17",
																		"nodeType": "YulLiteral",
																		"src": "7084:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7074:6:17",
																			"nodeType": "YulTypedName",
																			"src": "7074:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7100:63:17",
																	"nodeType": "YulAssignment",
																	"src": "7100:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7135:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "7135:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7146:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "7146:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7131:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "7131:3:17"
																				},
																				"nativeSrc": "7131:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "7131:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7155:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "7155:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7110:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "7110:20:17"
																		},
																		"nativeSrc": "7110:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7110:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7100:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "7100:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "6706:474:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6751:9:17",
														"nodeType": "YulTypedName",
														"src": "6751:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6762:7:17",
														"nodeType": "YulTypedName",
														"src": "6762:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6774:6:17",
														"nodeType": "YulTypedName",
														"src": "6774:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6782:6:17",
														"nodeType": "YulTypedName",
														"src": "6782:6:17",
														"type": ""
													}
												],
												"src": "6706:474:17"
											},
											{
												"body": {
													"nativeSrc": "7229:43:17",
													"nodeType": "YulBlock",
													"src": "7229:43:17",
													"statements": [
														{
															"nativeSrc": "7239:27:17",
															"nodeType": "YulAssignment",
															"src": "7239:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7254:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "7254:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7261:4:17",
																		"nodeType": "YulLiteral",
																		"src": "7261:4:17",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7250:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7250:3:17"
																},
																"nativeSrc": "7250:16:17",
																"nodeType": "YulFunctionCall",
																"src": "7250:16:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7239:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "7239:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "7186:86:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7211:5:17",
														"nodeType": "YulTypedName",
														"src": "7211:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7221:7:17",
														"nodeType": "YulTypedName",
														"src": "7221:7:17",
														"type": ""
													}
												],
												"src": "7186:86:17"
											},
											{
												"body": {
													"nativeSrc": "7339:51:17",
													"nodeType": "YulBlock",
													"src": "7339:51:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7356:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "7356:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7377:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "7377:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "7361:15:17",
																			"nodeType": "YulIdentifier",
																			"src": "7361:15:17"
																		},
																		"nativeSrc": "7361:22:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7361:22:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7349:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7349:6:17"
																},
																"nativeSrc": "7349:35:17",
																"nodeType": "YulFunctionCall",
																"src": "7349:35:17"
															},
															"nativeSrc": "7349:35:17",
															"nodeType": "YulExpressionStatement",
															"src": "7349:35:17"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "7278:112:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7327:5:17",
														"nodeType": "YulTypedName",
														"src": "7327:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7334:3:17",
														"nodeType": "YulTypedName",
														"src": "7334:3:17",
														"type": ""
													}
												],
												"src": "7278:112:17"
											},
											{
												"body": {
													"nativeSrc": "7490:120:17",
													"nodeType": "YulBlock",
													"src": "7490:120:17",
													"statements": [
														{
															"nativeSrc": "7500:26:17",
															"nodeType": "YulAssignment",
															"src": "7500:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7512:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "7512:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7523:2:17",
																		"nodeType": "YulLiteral",
																		"src": "7523:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7508:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7508:3:17"
																},
																"nativeSrc": "7508:18:17",
																"nodeType": "YulFunctionCall",
																"src": "7508:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7500:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "7500:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7576:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "7576:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7589:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "7589:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7600:1:17",
																				"nodeType": "YulLiteral",
																				"src": "7600:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7585:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7585:3:17"
																		},
																		"nativeSrc": "7585:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7585:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "7536:39:17",
																	"nodeType": "YulIdentifier",
																	"src": "7536:39:17"
																},
																"nativeSrc": "7536:67:17",
																"nodeType": "YulFunctionCall",
																"src": "7536:67:17"
															},
															"nativeSrc": "7536:67:17",
															"nodeType": "YulExpressionStatement",
															"src": "7536:67:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "7396:214:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7462:9:17",
														"nodeType": "YulTypedName",
														"src": "7462:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7474:6:17",
														"nodeType": "YulTypedName",
														"src": "7474:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7485:4:17",
														"nodeType": "YulTypedName",
														"src": "7485:4:17",
														"type": ""
													}
												],
												"src": "7396:214:17"
											},
											{
												"body": {
													"nativeSrc": "7696:388:17",
													"nodeType": "YulBlock",
													"src": "7696:388:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "7742:83:17",
																"nodeType": "YulBlock",
																"src": "7742:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7744:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "7744:77:17"
																			},
																			"nativeSrc": "7744:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7744:79:17"
																		},
																		"nativeSrc": "7744:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "7744:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7717:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "7717:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7726:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "7726:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7713:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7713:3:17"
																		},
																		"nativeSrc": "7713:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7713:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7738:2:17",
																		"nodeType": "YulLiteral",
																		"src": "7738:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7709:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7709:3:17"
																},
																"nativeSrc": "7709:32:17",
																"nodeType": "YulFunctionCall",
																"src": "7709:32:17"
															},
															"nativeSrc": "7706:119:17",
															"nodeType": "YulIf",
															"src": "7706:119:17"
														},
														{
															"nativeSrc": "7835:117:17",
															"nodeType": "YulBlock",
															"src": "7835:117:17",
															"statements": [
																{
																	"nativeSrc": "7850:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7850:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7864:1:17",
																		"nodeType": "YulLiteral",
																		"src": "7864:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7854:6:17",
																			"nodeType": "YulTypedName",
																			"src": "7854:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7879:63:17",
																	"nodeType": "YulAssignment",
																	"src": "7879:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7914:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "7914:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7925:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "7925:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7910:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "7910:3:17"
																				},
																				"nativeSrc": "7910:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "7910:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7934:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "7934:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7889:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "7889:20:17"
																		},
																		"nativeSrc": "7889:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7889:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7879:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "7879:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7962:115:17",
															"nodeType": "YulBlock",
															"src": "7962:115:17",
															"statements": [
																{
																	"nativeSrc": "7977:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7977:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7991:2:17",
																		"nodeType": "YulLiteral",
																		"src": "7991:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7981:6:17",
																			"nodeType": "YulTypedName",
																			"src": "7981:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8007:60:17",
																	"nodeType": "YulAssignment",
																	"src": "8007:60:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8039:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "8039:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8050:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "8050:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8035:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "8035:3:17"
																				},
																				"nativeSrc": "8035:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "8035:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8059:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "8059:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "8017:17:17",
																			"nodeType": "YulIdentifier",
																			"src": "8017:17:17"
																		},
																		"nativeSrc": "8017:50:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8017:50:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8007:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "8007:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "7616:468:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7658:9:17",
														"nodeType": "YulTypedName",
														"src": "7658:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7669:7:17",
														"nodeType": "YulTypedName",
														"src": "7669:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7681:6:17",
														"nodeType": "YulTypedName",
														"src": "7681:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7689:6:17",
														"nodeType": "YulTypedName",
														"src": "7689:6:17",
														"type": ""
													}
												],
												"src": "7616:468:17"
											},
											{
												"body": {
													"nativeSrc": "8150:51:17",
													"nodeType": "YulBlock",
													"src": "8150:51:17",
													"statements": [
														{
															"nativeSrc": "8160:35:17",
															"nodeType": "YulAssignment",
															"src": "8160:35:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8189:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "8189:5:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "8171:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "8171:17:17"
																},
																"nativeSrc": "8171:24:17",
																"nodeType": "YulFunctionCall",
																"src": "8171:24:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8160:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "8160:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$1198",
												"nativeSrc": "8090:111:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8132:5:17",
														"nodeType": "YulTypedName",
														"src": "8132:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8142:7:17",
														"nodeType": "YulTypedName",
														"src": "8142:7:17",
														"type": ""
													}
												],
												"src": "8090:111:17"
											},
											{
												"body": {
													"nativeSrc": "8265:94:17",
													"nodeType": "YulBlock",
													"src": "8265:94:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "8337:16:17",
																"nodeType": "YulBlock",
																"src": "8337:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8346:1:17",
																					"nodeType": "YulLiteral",
																					"src": "8346:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8349:1:17",
																					"nodeType": "YulLiteral",
																					"src": "8349:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8339:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "8339:6:17"
																			},
																			"nativeSrc": "8339:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "8339:12:17"
																		},
																		"nativeSrc": "8339:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "8339:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8288:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "8288:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8328:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "8328:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$1198",
																					"nativeSrc": "8295:32:17",
																					"nodeType": "YulIdentifier",
																					"src": "8295:32:17"
																				},
																				"nativeSrc": "8295:39:17",
																				"nodeType": "YulFunctionCall",
																				"src": "8295:39:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8285:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "8285:2:17"
																		},
																		"nativeSrc": "8285:50:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8285:50:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8278:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8278:6:17"
																},
																"nativeSrc": "8278:58:17",
																"nodeType": "YulFunctionCall",
																"src": "8278:58:17"
															},
															"nativeSrc": "8275:78:17",
															"nodeType": "YulIf",
															"src": "8275:78:17"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$1198",
												"nativeSrc": "8207:152:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8258:5:17",
														"nodeType": "YulTypedName",
														"src": "8258:5:17",
														"type": ""
													}
												],
												"src": "8207:152:17"
											},
											{
												"body": {
													"nativeSrc": "8432:102:17",
													"nodeType": "YulBlock",
													"src": "8432:102:17",
													"statements": [
														{
															"nativeSrc": "8442:29:17",
															"nodeType": "YulAssignment",
															"src": "8442:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8464:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "8464:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8451:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "8451:12:17"
																},
																"nativeSrc": "8451:20:17",
																"nodeType": "YulFunctionCall",
																"src": "8451:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8442:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "8442:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8522:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "8522:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$1198",
																	"nativeSrc": "8480:41:17",
																	"nodeType": "YulIdentifier",
																	"src": "8480:41:17"
																},
																"nativeSrc": "8480:48:17",
																"nodeType": "YulFunctionCall",
																"src": "8480:48:17"
															},
															"nativeSrc": "8480:48:17",
															"nodeType": "YulExpressionStatement",
															"src": "8480:48:17"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$1198",
												"nativeSrc": "8365:169:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8410:6:17",
														"nodeType": "YulTypedName",
														"src": "8410:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8418:3:17",
														"nodeType": "YulTypedName",
														"src": "8418:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8426:5:17",
														"nodeType": "YulTypedName",
														"src": "8426:5:17",
														"type": ""
													}
												],
												"src": "8365:169:17"
											},
											{
												"body": {
													"nativeSrc": "8655:534:17",
													"nodeType": "YulBlock",
													"src": "8655:534:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "8701:83:17",
																"nodeType": "YulBlock",
																"src": "8701:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8703:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "8703:77:17"
																			},
																			"nativeSrc": "8703:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "8703:79:17"
																		},
																		"nativeSrc": "8703:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "8703:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8676:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "8676:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8685:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8685:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8672:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8672:3:17"
																		},
																		"nativeSrc": "8672:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8672:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8697:2:17",
																		"nodeType": "YulLiteral",
																		"src": "8697:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8668:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "8668:3:17"
																},
																"nativeSrc": "8668:32:17",
																"nodeType": "YulFunctionCall",
																"src": "8668:32:17"
															},
															"nativeSrc": "8665:119:17",
															"nodeType": "YulIf",
															"src": "8665:119:17"
														},
														{
															"nativeSrc": "8794:132:17",
															"nodeType": "YulBlock",
															"src": "8794:132:17",
															"statements": [
																{
																	"nativeSrc": "8809:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8809:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8823:1:17",
																		"nodeType": "YulLiteral",
																		"src": "8823:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8813:6:17",
																			"nodeType": "YulTypedName",
																			"src": "8813:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8838:78:17",
																	"nodeType": "YulAssignment",
																	"src": "8838:78:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8888:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "8888:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8899:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "8899:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8884:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "8884:3:17"
																				},
																				"nativeSrc": "8884:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "8884:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8908:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "8908:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$1198",
																			"nativeSrc": "8848:35:17",
																			"nodeType": "YulIdentifier",
																			"src": "8848:35:17"
																		},
																		"nativeSrc": "8848:68:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8848:68:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8838:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "8838:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8936:118:17",
															"nodeType": "YulBlock",
															"src": "8936:118:17",
															"statements": [
																{
																	"nativeSrc": "8951:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8951:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8965:2:17",
																		"nodeType": "YulLiteral",
																		"src": "8965:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8955:6:17",
																			"nodeType": "YulTypedName",
																			"src": "8955:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8981:63:17",
																	"nodeType": "YulAssignment",
																	"src": "8981:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9016:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "9016:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9027:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "9027:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9012:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "9012:3:17"
																				},
																				"nativeSrc": "9012:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "9012:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9036:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "9036:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8991:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "8991:20:17"
																		},
																		"nativeSrc": "8991:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8991:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8981:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "8981:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9064:118:17",
															"nodeType": "YulBlock",
															"src": "9064:118:17",
															"statements": [
																{
																	"nativeSrc": "9079:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9079:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9093:2:17",
																		"nodeType": "YulLiteral",
																		"src": "9093:2:17",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9083:6:17",
																			"nodeType": "YulTypedName",
																			"src": "9083:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9109:63:17",
																	"nodeType": "YulAssignment",
																	"src": "9109:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9144:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "9144:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9155:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "9155:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9140:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "9140:3:17"
																				},
																				"nativeSrc": "9140:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "9140:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9164:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "9164:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9119:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "9119:20:17"
																		},
																		"nativeSrc": "9119:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9119:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9109:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "9109:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$1198t_addresst_uint256",
												"nativeSrc": "8540:649:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8609:9:17",
														"nodeType": "YulTypedName",
														"src": "8609:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8620:7:17",
														"nodeType": "YulTypedName",
														"src": "8620:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8632:6:17",
														"nodeType": "YulTypedName",
														"src": "8632:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8640:6:17",
														"nodeType": "YulTypedName",
														"src": "8640:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8648:6:17",
														"nodeType": "YulTypedName",
														"src": "8648:6:17",
														"type": ""
													}
												],
												"src": "8540:649:17"
											},
											{
												"body": {
													"nativeSrc": "9261:263:17",
													"nodeType": "YulBlock",
													"src": "9261:263:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "9307:83:17",
																"nodeType": "YulBlock",
																"src": "9307:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9309:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "9309:77:17"
																			},
																			"nativeSrc": "9309:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "9309:79:17"
																		},
																		"nativeSrc": "9309:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "9309:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9282:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "9282:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9291:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "9291:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9278:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9278:3:17"
																		},
																		"nativeSrc": "9278:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9278:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9303:2:17",
																		"nodeType": "YulLiteral",
																		"src": "9303:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9274:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "9274:3:17"
																},
																"nativeSrc": "9274:32:17",
																"nodeType": "YulFunctionCall",
																"src": "9274:32:17"
															},
															"nativeSrc": "9271:119:17",
															"nodeType": "YulIf",
															"src": "9271:119:17"
														},
														{
															"nativeSrc": "9400:117:17",
															"nodeType": "YulBlock",
															"src": "9400:117:17",
															"statements": [
																{
																	"nativeSrc": "9415:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9415:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9429:1:17",
																		"nodeType": "YulLiteral",
																		"src": "9429:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9419:6:17",
																			"nodeType": "YulTypedName",
																			"src": "9419:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9444:63:17",
																	"nodeType": "YulAssignment",
																	"src": "9444:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9479:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "9479:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9490:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "9490:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9475:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "9475:3:17"
																				},
																				"nativeSrc": "9475:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "9475:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9499:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "9499:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9454:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "9454:20:17"
																		},
																		"nativeSrc": "9454:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9454:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9444:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "9444:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "9195:329:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9231:9:17",
														"nodeType": "YulTypedName",
														"src": "9231:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9242:7:17",
														"nodeType": "YulTypedName",
														"src": "9242:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9254:6:17",
														"nodeType": "YulTypedName",
														"src": "9254:6:17",
														"type": ""
													}
												],
												"src": "9195:329:17"
											},
											{
												"body": {
													"nativeSrc": "9583:51:17",
													"nodeType": "YulBlock",
													"src": "9583:51:17",
													"statements": [
														{
															"nativeSrc": "9593:35:17",
															"nodeType": "YulAssignment",
															"src": "9593:35:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9622:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "9622:5:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "9604:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "9604:17:17"
																},
																"nativeSrc": "9604:24:17",
																"nodeType": "YulFunctionCall",
																"src": "9604:24:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9593:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "9593:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "9530:104:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9565:5:17",
														"nodeType": "YulTypedName",
														"src": "9565:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9575:7:17",
														"nodeType": "YulTypedName",
														"src": "9575:7:17",
														"type": ""
													}
												],
												"src": "9530:104:17"
											},
											{
												"body": {
													"nativeSrc": "9691:87:17",
													"nodeType": "YulBlock",
													"src": "9691:87:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "9756:16:17",
																"nodeType": "YulBlock",
																"src": "9756:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9765:1:17",
																					"nodeType": "YulLiteral",
																					"src": "9765:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9768:1:17",
																					"nodeType": "YulLiteral",
																					"src": "9768:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9758:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "9758:6:17"
																			},
																			"nativeSrc": "9758:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "9758:12:17"
																		},
																		"nativeSrc": "9758:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "9758:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9714:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "9714:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9747:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "9747:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nativeSrc": "9721:25:17",
																					"nodeType": "YulIdentifier",
																					"src": "9721:25:17"
																				},
																				"nativeSrc": "9721:32:17",
																				"nodeType": "YulFunctionCall",
																				"src": "9721:32:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9711:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "9711:2:17"
																		},
																		"nativeSrc": "9711:43:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9711:43:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9704:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9704:6:17"
																},
																"nativeSrc": "9704:51:17",
																"nodeType": "YulFunctionCall",
																"src": "9704:51:17"
															},
															"nativeSrc": "9701:71:17",
															"nodeType": "YulIf",
															"src": "9701:71:17"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nativeSrc": "9640:138:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9684:5:17",
														"nodeType": "YulTypedName",
														"src": "9684:5:17",
														"type": ""
													}
												],
												"src": "9640:138:17"
											},
											{
												"body": {
													"nativeSrc": "9844:95:17",
													"nodeType": "YulBlock",
													"src": "9844:95:17",
													"statements": [
														{
															"nativeSrc": "9854:29:17",
															"nodeType": "YulAssignment",
															"src": "9854:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9876:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "9876:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9863:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "9863:12:17"
																},
																"nativeSrc": "9863:20:17",
																"nodeType": "YulFunctionCall",
																"src": "9863:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9854:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "9854:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9927:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "9927:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nativeSrc": "9892:34:17",
																	"nodeType": "YulIdentifier",
																	"src": "9892:34:17"
																},
																"nativeSrc": "9892:41:17",
																"nodeType": "YulFunctionCall",
																"src": "9892:41:17"
															},
															"nativeSrc": "9892:41:17",
															"nodeType": "YulExpressionStatement",
															"src": "9892:41:17"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nativeSrc": "9784:155:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9822:6:17",
														"nodeType": "YulTypedName",
														"src": "9822:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9830:3:17",
														"nodeType": "YulTypedName",
														"src": "9830:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9838:5:17",
														"nodeType": "YulTypedName",
														"src": "9838:5:17",
														"type": ""
													}
												],
												"src": "9784:155:17"
											},
											{
												"body": {
													"nativeSrc": "10036:399:17",
													"nodeType": "YulBlock",
													"src": "10036:399:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "10082:83:17",
																"nodeType": "YulBlock",
																"src": "10082:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10084:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "10084:77:17"
																			},
																			"nativeSrc": "10084:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "10084:79:17"
																		},
																		"nativeSrc": "10084:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "10084:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10057:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "10057:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10066:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "10066:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10053:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10053:3:17"
																		},
																		"nativeSrc": "10053:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10053:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10078:2:17",
																		"nodeType": "YulLiteral",
																		"src": "10078:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10049:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "10049:3:17"
																},
																"nativeSrc": "10049:32:17",
																"nodeType": "YulFunctionCall",
																"src": "10049:32:17"
															},
															"nativeSrc": "10046:119:17",
															"nodeType": "YulIf",
															"src": "10046:119:17"
														},
														{
															"nativeSrc": "10175:125:17",
															"nodeType": "YulBlock",
															"src": "10175:125:17",
															"statements": [
																{
																	"nativeSrc": "10190:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10190:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10204:1:17",
																		"nodeType": "YulLiteral",
																		"src": "10204:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10194:6:17",
																			"nodeType": "YulTypedName",
																			"src": "10194:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10219:71:17",
																	"nodeType": "YulAssignment",
																	"src": "10219:71:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10262:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "10262:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10273:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "10273:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10258:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "10258:3:17"
																				},
																				"nativeSrc": "10258:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "10258:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10282:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "10282:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nativeSrc": "10229:28:17",
																			"nodeType": "YulIdentifier",
																			"src": "10229:28:17"
																		},
																		"nativeSrc": "10229:61:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10229:61:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10219:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "10219:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10310:118:17",
															"nodeType": "YulBlock",
															"src": "10310:118:17",
															"statements": [
																{
																	"nativeSrc": "10325:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10325:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10339:2:17",
																		"nodeType": "YulLiteral",
																		"src": "10339:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10329:6:17",
																			"nodeType": "YulTypedName",
																			"src": "10329:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10355:63:17",
																	"nodeType": "YulAssignment",
																	"src": "10355:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10390:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "10390:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10401:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "10401:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10386:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "10386:3:17"
																				},
																				"nativeSrc": "10386:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "10386:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10410:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "10410:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10365:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "10365:20:17"
																		},
																		"nativeSrc": "10365:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10365:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10355:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "10355:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_uint256",
												"nativeSrc": "9945:490:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9998:9:17",
														"nodeType": "YulTypedName",
														"src": "9998:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10009:7:17",
														"nodeType": "YulTypedName",
														"src": "10009:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10021:6:17",
														"nodeType": "YulTypedName",
														"src": "10021:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10029:6:17",
														"nodeType": "YulTypedName",
														"src": "10029:6:17",
														"type": ""
													}
												],
												"src": "9945:490:17"
											},
											{
												"body": {
													"nativeSrc": "10507:263:17",
													"nodeType": "YulBlock",
													"src": "10507:263:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "10553:83:17",
																"nodeType": "YulBlock",
																"src": "10553:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10555:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "10555:77:17"
																			},
																			"nativeSrc": "10555:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "10555:79:17"
																		},
																		"nativeSrc": "10555:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "10555:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10528:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "10528:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10537:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "10537:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10524:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10524:3:17"
																		},
																		"nativeSrc": "10524:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10524:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10549:2:17",
																		"nodeType": "YulLiteral",
																		"src": "10549:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10520:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "10520:3:17"
																},
																"nativeSrc": "10520:32:17",
																"nodeType": "YulFunctionCall",
																"src": "10520:32:17"
															},
															"nativeSrc": "10517:119:17",
															"nodeType": "YulIf",
															"src": "10517:119:17"
														},
														{
															"nativeSrc": "10646:117:17",
															"nodeType": "YulBlock",
															"src": "10646:117:17",
															"statements": [
																{
																	"nativeSrc": "10661:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10661:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10675:1:17",
																		"nodeType": "YulLiteral",
																		"src": "10675:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10665:6:17",
																			"nodeType": "YulTypedName",
																			"src": "10665:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10690:63:17",
																	"nodeType": "YulAssignment",
																	"src": "10690:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10725:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "10725:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10736:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "10736:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10721:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "10721:3:17"
																				},
																				"nativeSrc": "10721:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "10721:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10745:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "10745:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10700:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "10700:20:17"
																		},
																		"nativeSrc": "10700:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10700:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10690:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "10690:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "10441:329:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10477:9:17",
														"nodeType": "YulTypedName",
														"src": "10477:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10488:7:17",
														"nodeType": "YulTypedName",
														"src": "10488:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10500:6:17",
														"nodeType": "YulTypedName",
														"src": "10500:6:17",
														"type": ""
													}
												],
												"src": "10441:329:17"
											},
											{
												"body": {
													"nativeSrc": "10859:391:17",
													"nodeType": "YulBlock",
													"src": "10859:391:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "10905:83:17",
																"nodeType": "YulBlock",
																"src": "10905:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10907:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "10907:77:17"
																			},
																			"nativeSrc": "10907:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "10907:79:17"
																		},
																		"nativeSrc": "10907:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "10907:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10880:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "10880:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10889:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "10889:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10876:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10876:3:17"
																		},
																		"nativeSrc": "10876:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10876:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10901:2:17",
																		"nodeType": "YulLiteral",
																		"src": "10901:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10872:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "10872:3:17"
																},
																"nativeSrc": "10872:32:17",
																"nodeType": "YulFunctionCall",
																"src": "10872:32:17"
															},
															"nativeSrc": "10869:119:17",
															"nodeType": "YulIf",
															"src": "10869:119:17"
														},
														{
															"nativeSrc": "10998:117:17",
															"nodeType": "YulBlock",
															"src": "10998:117:17",
															"statements": [
																{
																	"nativeSrc": "11013:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11013:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11027:1:17",
																		"nodeType": "YulLiteral",
																		"src": "11027:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11017:6:17",
																			"nodeType": "YulTypedName",
																			"src": "11017:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11042:63:17",
																	"nodeType": "YulAssignment",
																	"src": "11042:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11077:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "11077:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11088:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "11088:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11073:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "11073:3:17"
																				},
																				"nativeSrc": "11073:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "11073:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11097:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "11097:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11052:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "11052:20:17"
																		},
																		"nativeSrc": "11052:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11052:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11042:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "11042:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11125:118:17",
															"nodeType": "YulBlock",
															"src": "11125:118:17",
															"statements": [
																{
																	"nativeSrc": "11140:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11140:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11154:2:17",
																		"nodeType": "YulLiteral",
																		"src": "11154:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11144:6:17",
																			"nodeType": "YulTypedName",
																			"src": "11144:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11170:63:17",
																	"nodeType": "YulAssignment",
																	"src": "11170:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11205:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "11205:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11216:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "11216:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11201:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "11201:3:17"
																				},
																				"nativeSrc": "11201:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "11201:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11225:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "11225:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11180:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "11180:20:17"
																		},
																		"nativeSrc": "11180:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11180:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11170:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "11170:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "10776:474:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10821:9:17",
														"nodeType": "YulTypedName",
														"src": "10821:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10832:7:17",
														"nodeType": "YulTypedName",
														"src": "10832:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10844:6:17",
														"nodeType": "YulTypedName",
														"src": "10844:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10852:6:17",
														"nodeType": "YulTypedName",
														"src": "10852:6:17",
														"type": ""
													}
												],
												"src": "10776:474:17"
											},
											{
												"body": {
													"nativeSrc": "11284:152:17",
													"nodeType": "YulBlock",
													"src": "11284:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11301:1:17",
																		"nodeType": "YulLiteral",
																		"src": "11301:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11304:77:17",
																		"nodeType": "YulLiteral",
																		"src": "11304:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11294:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "11294:6:17"
																},
																"nativeSrc": "11294:88:17",
																"nodeType": "YulFunctionCall",
																"src": "11294:88:17"
															},
															"nativeSrc": "11294:88:17",
															"nodeType": "YulExpressionStatement",
															"src": "11294:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11398:1:17",
																		"nodeType": "YulLiteral",
																		"src": "11398:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11401:4:17",
																		"nodeType": "YulLiteral",
																		"src": "11401:4:17",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11391:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "11391:6:17"
																},
																"nativeSrc": "11391:15:17",
																"nodeType": "YulFunctionCall",
																"src": "11391:15:17"
															},
															"nativeSrc": "11391:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "11391:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11422:1:17",
																		"nodeType": "YulLiteral",
																		"src": "11422:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11425:4:17",
																		"nodeType": "YulLiteral",
																		"src": "11425:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11415:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "11415:6:17"
																},
																"nativeSrc": "11415:15:17",
																"nodeType": "YulFunctionCall",
																"src": "11415:15:17"
															},
															"nativeSrc": "11415:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "11415:15:17"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "11256:180:17",
												"nodeType": "YulFunctionDefinition",
												"src": "11256:180:17"
											},
											{
												"body": {
													"nativeSrc": "11493:269:17",
													"nodeType": "YulBlock",
													"src": "11493:269:17",
													"statements": [
														{
															"nativeSrc": "11503:22:17",
															"nodeType": "YulAssignment",
															"src": "11503:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11517:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "11517:4:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11523:1:17",
																		"nodeType": "YulLiteral",
																		"src": "11523:1:17",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11513:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "11513:3:17"
																},
																"nativeSrc": "11513:12:17",
																"nodeType": "YulFunctionCall",
																"src": "11513:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11503:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "11503:6:17"
																}
															]
														},
														{
															"nativeSrc": "11534:38:17",
															"nodeType": "YulVariableDeclaration",
															"src": "11534:38:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11564:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "11564:4:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11570:1:17",
																		"nodeType": "YulLiteral",
																		"src": "11570:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11560:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "11560:3:17"
																},
																"nativeSrc": "11560:12:17",
																"nodeType": "YulFunctionCall",
																"src": "11560:12:17"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "11538:18:17",
																	"nodeType": "YulTypedName",
																	"src": "11538:18:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11611:51:17",
																"nodeType": "YulBlock",
																"src": "11611:51:17",
																"statements": [
																	{
																		"nativeSrc": "11625:27:17",
																		"nodeType": "YulAssignment",
																		"src": "11625:27:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "11639:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "11639:6:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11647:4:17",
																					"nodeType": "YulLiteral",
																					"src": "11647:4:17",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "11635:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "11635:3:17"
																			},
																			"nativeSrc": "11635:17:17",
																			"nodeType": "YulFunctionCall",
																			"src": "11635:17:17"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "11625:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "11625:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11591:18:17",
																		"nodeType": "YulIdentifier",
																		"src": "11591:18:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11584:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "11584:6:17"
																},
																"nativeSrc": "11584:26:17",
																"nodeType": "YulFunctionCall",
																"src": "11584:26:17"
															},
															"nativeSrc": "11581:81:17",
															"nodeType": "YulIf",
															"src": "11581:81:17"
														},
														{
															"body": {
																"nativeSrc": "11714:42:17",
																"nodeType": "YulBlock",
																"src": "11714:42:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "11728:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "11728:16:17"
																			},
																			"nativeSrc": "11728:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "11728:18:17"
																		},
																		"nativeSrc": "11728:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "11728:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11678:18:17",
																		"nodeType": "YulIdentifier",
																		"src": "11678:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11701:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "11701:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11709:2:17",
																				"nodeType": "YulLiteral",
																				"src": "11709:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "11698:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "11698:2:17"
																		},
																		"nativeSrc": "11698:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11698:14:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "11675:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "11675:2:17"
																},
																"nativeSrc": "11675:38:17",
																"nodeType": "YulFunctionCall",
																"src": "11675:38:17"
															},
															"nativeSrc": "11672:84:17",
															"nodeType": "YulIf",
															"src": "11672:84:17"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "11442:320:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "11477:4:17",
														"nodeType": "YulTypedName",
														"src": "11477:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "11486:6:17",
														"nodeType": "YulTypedName",
														"src": "11486:6:17",
														"type": ""
													}
												],
												"src": "11442:320:17"
											},
											{
												"body": {
													"nativeSrc": "11833:53:17",
													"nodeType": "YulBlock",
													"src": "11833:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11850:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "11850:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11873:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "11873:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "11855:17:17",
																			"nodeType": "YulIdentifier",
																			"src": "11855:17:17"
																		},
																		"nativeSrc": "11855:24:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11855:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11843:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "11843:6:17"
																},
																"nativeSrc": "11843:37:17",
																"nodeType": "YulFunctionCall",
																"src": "11843:37:17"
															},
															"nativeSrc": "11843:37:17",
															"nodeType": "YulExpressionStatement",
															"src": "11843:37:17"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "11768:118:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11821:5:17",
														"nodeType": "YulTypedName",
														"src": "11821:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11828:3:17",
														"nodeType": "YulTypedName",
														"src": "11828:3:17",
														"type": ""
													}
												],
												"src": "11768:118:17"
											},
											{
												"body": {
													"nativeSrc": "12018:206:17",
													"nodeType": "YulBlock",
													"src": "12018:206:17",
													"statements": [
														{
															"nativeSrc": "12028:26:17",
															"nodeType": "YulAssignment",
															"src": "12028:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12040:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "12040:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12051:2:17",
																		"nodeType": "YulLiteral",
																		"src": "12051:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12036:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "12036:3:17"
																},
																"nativeSrc": "12036:18:17",
																"nodeType": "YulFunctionCall",
																"src": "12036:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12028:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "12028:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12108:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "12108:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12121:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "12121:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12132:1:17",
																				"nodeType": "YulLiteral",
																				"src": "12132:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12117:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "12117:3:17"
																		},
																		"nativeSrc": "12117:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12117:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12064:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "12064:43:17"
																},
																"nativeSrc": "12064:71:17",
																"nodeType": "YulFunctionCall",
																"src": "12064:71:17"
															},
															"nativeSrc": "12064:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "12064:71:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12189:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "12189:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12202:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "12202:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12213:2:17",
																				"nodeType": "YulLiteral",
																				"src": "12213:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12198:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "12198:3:17"
																		},
																		"nativeSrc": "12198:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12198:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12145:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "12145:43:17"
																},
																"nativeSrc": "12145:72:17",
																"nodeType": "YulFunctionCall",
																"src": "12145:72:17"
															},
															"nativeSrc": "12145:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "12145:72:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "11892:332:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11982:9:17",
														"nodeType": "YulTypedName",
														"src": "11982:9:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11994:6:17",
														"nodeType": "YulTypedName",
														"src": "11994:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12002:6:17",
														"nodeType": "YulTypedName",
														"src": "12002:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12013:4:17",
														"nodeType": "YulTypedName",
														"src": "12013:4:17",
														"type": ""
													}
												],
												"src": "11892:332:17"
											},
											{
												"body": {
													"nativeSrc": "12336:121:17",
													"nodeType": "YulBlock",
													"src": "12336:121:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12358:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "12358:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12366:1:17",
																				"nodeType": "YulLiteral",
																				"src": "12366:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12354:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "12354:3:17"
																		},
																		"nativeSrc": "12354:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12354:14:17"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
																		"kind": "string",
																		"nativeSrc": "12370:34:17",
																		"nodeType": "YulLiteral",
																		"src": "12370:34:17",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12347:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "12347:6:17"
																},
																"nativeSrc": "12347:58:17",
																"nodeType": "YulFunctionCall",
																"src": "12347:58:17"
															},
															"nativeSrc": "12347:58:17",
															"nodeType": "YulExpressionStatement",
															"src": "12347:58:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12426:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "12426:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12434:2:17",
																				"nodeType": "YulLiteral",
																				"src": "12434:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12422:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "12422:3:17"
																		},
																		"nativeSrc": "12422:15:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12422:15:17"
																	},
																	{
																		"hexValue": "6c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "12439:10:17",
																		"nodeType": "YulLiteral",
																		"src": "12439:10:17",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12415:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "12415:6:17"
																},
																"nativeSrc": "12415:35:17",
																"nodeType": "YulFunctionCall",
																"src": "12415:35:17"
															},
															"nativeSrc": "12415:35:17",
															"nodeType": "YulExpressionStatement",
															"src": "12415:35:17"
														}
													]
												},
												"name": "store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
												"nativeSrc": "12230:227:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12328:6:17",
														"nodeType": "YulTypedName",
														"src": "12328:6:17",
														"type": ""
													}
												],
												"src": "12230:227:17"
											},
											{
												"body": {
													"nativeSrc": "12609:220:17",
													"nodeType": "YulBlock",
													"src": "12609:220:17",
													"statements": [
														{
															"nativeSrc": "12619:74:17",
															"nodeType": "YulAssignment",
															"src": "12619:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12685:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "12685:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12690:2:17",
																		"nodeType": "YulLiteral",
																		"src": "12690:2:17",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12626:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "12626:58:17"
																},
																"nativeSrc": "12626:67:17",
																"nodeType": "YulFunctionCall",
																"src": "12626:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12619:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "12619:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12791:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "12791:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																	"nativeSrc": "12702:88:17",
																	"nodeType": "YulIdentifier",
																	"src": "12702:88:17"
																},
																"nativeSrc": "12702:93:17",
																"nodeType": "YulFunctionCall",
																"src": "12702:93:17"
															},
															"nativeSrc": "12702:93:17",
															"nodeType": "YulExpressionStatement",
															"src": "12702:93:17"
														},
														{
															"nativeSrc": "12804:19:17",
															"nodeType": "YulAssignment",
															"src": "12804:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12815:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "12815:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12820:2:17",
																		"nodeType": "YulLiteral",
																		"src": "12820:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12811:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "12811:3:17"
																},
																"nativeSrc": "12811:12:17",
																"nodeType": "YulFunctionCall",
																"src": "12811:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12804:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "12804:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12463:366:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12597:3:17",
														"nodeType": "YulTypedName",
														"src": "12597:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12605:3:17",
														"nodeType": "YulTypedName",
														"src": "12605:3:17",
														"type": ""
													}
												],
												"src": "12463:366:17"
											},
											{
												"body": {
													"nativeSrc": "13006:248:17",
													"nodeType": "YulBlock",
													"src": "13006:248:17",
													"statements": [
														{
															"nativeSrc": "13016:26:17",
															"nodeType": "YulAssignment",
															"src": "13016:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13028:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "13028:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13039:2:17",
																		"nodeType": "YulLiteral",
																		"src": "13039:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13024:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "13024:3:17"
																},
																"nativeSrc": "13024:18:17",
																"nodeType": "YulFunctionCall",
																"src": "13024:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13016:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "13016:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13063:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "13063:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13074:1:17",
																				"nodeType": "YulLiteral",
																				"src": "13074:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13059:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "13059:3:17"
																		},
																		"nativeSrc": "13059:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "13059:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13082:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "13082:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13088:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "13088:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13078:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "13078:3:17"
																		},
																		"nativeSrc": "13078:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "13078:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13052:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "13052:6:17"
																},
																"nativeSrc": "13052:47:17",
																"nodeType": "YulFunctionCall",
																"src": "13052:47:17"
															},
															"nativeSrc": "13052:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "13052:47:17"
														},
														{
															"nativeSrc": "13108:139:17",
															"nodeType": "YulAssignment",
															"src": "13108:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13242:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "13242:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13116:124:17",
																	"nodeType": "YulIdentifier",
																	"src": "13116:124:17"
																},
																"nativeSrc": "13116:131:17",
																"nodeType": "YulFunctionCall",
																"src": "13116:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13108:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "13108:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12835:419:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12986:9:17",
														"nodeType": "YulTypedName",
														"src": "12986:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13001:4:17",
														"nodeType": "YulTypedName",
														"src": "13001:4:17",
														"type": ""
													}
												],
												"src": "12835:419:17"
											},
											{
												"body": {
													"nativeSrc": "13288:152:17",
													"nodeType": "YulBlock",
													"src": "13288:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13305:1:17",
																		"nodeType": "YulLiteral",
																		"src": "13305:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13308:77:17",
																		"nodeType": "YulLiteral",
																		"src": "13308:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13298:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "13298:6:17"
																},
																"nativeSrc": "13298:88:17",
																"nodeType": "YulFunctionCall",
																"src": "13298:88:17"
															},
															"nativeSrc": "13298:88:17",
															"nodeType": "YulExpressionStatement",
															"src": "13298:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13402:1:17",
																		"nodeType": "YulLiteral",
																		"src": "13402:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13405:4:17",
																		"nodeType": "YulLiteral",
																		"src": "13405:4:17",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13395:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "13395:6:17"
																},
																"nativeSrc": "13395:15:17",
																"nodeType": "YulFunctionCall",
																"src": "13395:15:17"
															},
															"nativeSrc": "13395:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "13395:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13426:1:17",
																		"nodeType": "YulLiteral",
																		"src": "13426:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13429:4:17",
																		"nodeType": "YulLiteral",
																		"src": "13429:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13419:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "13419:6:17"
																},
																"nativeSrc": "13419:15:17",
																"nodeType": "YulFunctionCall",
																"src": "13419:15:17"
															},
															"nativeSrc": "13419:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "13419:15:17"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "13260:180:17",
												"nodeType": "YulFunctionDefinition",
												"src": "13260:180:17"
											},
											{
												"body": {
													"nativeSrc": "13491:149:17",
													"nodeType": "YulBlock",
													"src": "13491:149:17",
													"statements": [
														{
															"nativeSrc": "13501:25:17",
															"nodeType": "YulAssignment",
															"src": "13501:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13524:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "13524:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13506:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "13506:17:17"
																},
																"nativeSrc": "13506:20:17",
																"nodeType": "YulFunctionCall",
																"src": "13506:20:17"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13501:1:17",
																	"nodeType": "YulIdentifier",
																	"src": "13501:1:17"
																}
															]
														},
														{
															"nativeSrc": "13535:25:17",
															"nodeType": "YulAssignment",
															"src": "13535:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13558:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "13558:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13540:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "13540:17:17"
																},
																"nativeSrc": "13540:20:17",
																"nodeType": "YulFunctionCall",
																"src": "13540:20:17"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13535:1:17",
																	"nodeType": "YulIdentifier",
																	"src": "13535:1:17"
																}
															]
														},
														{
															"nativeSrc": "13569:17:17",
															"nodeType": "YulAssignment",
															"src": "13569:17:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13581:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "13581:1:17"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13584:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "13584:1:17"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "13577:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "13577:3:17"
																},
																"nativeSrc": "13577:9:17",
																"nodeType": "YulFunctionCall",
																"src": "13577:9:17"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "13569:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "13569:4:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13611:22:17",
																"nodeType": "YulBlock",
																"src": "13611:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13613:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "13613:16:17"
																			},
																			"nativeSrc": "13613:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "13613:18:17"
																		},
																		"nativeSrc": "13613:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "13613:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "13602:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "13602:4:17"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "13608:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "13608:1:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13599:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "13599:2:17"
																},
																"nativeSrc": "13599:11:17",
																"nodeType": "YulFunctionCall",
																"src": "13599:11:17"
															},
															"nativeSrc": "13596:37:17",
															"nodeType": "YulIf",
															"src": "13596:37:17"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "13446:194:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13477:1:17",
														"nodeType": "YulTypedName",
														"src": "13477:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13480:1:17",
														"nodeType": "YulTypedName",
														"src": "13480:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "13486:4:17",
														"nodeType": "YulTypedName",
														"src": "13486:4:17",
														"type": ""
													}
												],
												"src": "13446:194:17"
											},
											{
												"body": {
													"nativeSrc": "13752:59:17",
													"nodeType": "YulBlock",
													"src": "13752:59:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13774:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "13774:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13782:1:17",
																				"nodeType": "YulLiteral",
																				"src": "13782:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13770:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "13770:3:17"
																		},
																		"nativeSrc": "13770:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "13770:14:17"
																	},
																	{
																		"hexValue": "496e76616c69642061646472657373",
																		"kind": "string",
																		"nativeSrc": "13786:17:17",
																		"nodeType": "YulLiteral",
																		"src": "13786:17:17",
																		"type": "",
																		"value": "Invalid address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13763:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "13763:6:17"
																},
																"nativeSrc": "13763:41:17",
																"nodeType": "YulFunctionCall",
																"src": "13763:41:17"
															},
															"nativeSrc": "13763:41:17",
															"nodeType": "YulExpressionStatement",
															"src": "13763:41:17"
														}
													]
												},
												"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
												"nativeSrc": "13646:165:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13744:6:17",
														"nodeType": "YulTypedName",
														"src": "13744:6:17",
														"type": ""
													}
												],
												"src": "13646:165:17"
											},
											{
												"body": {
													"nativeSrc": "13963:220:17",
													"nodeType": "YulBlock",
													"src": "13963:220:17",
													"statements": [
														{
															"nativeSrc": "13973:74:17",
															"nodeType": "YulAssignment",
															"src": "13973:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14039:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "14039:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14044:2:17",
																		"nodeType": "YulLiteral",
																		"src": "14044:2:17",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13980:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "13980:58:17"
																},
																"nativeSrc": "13980:67:17",
																"nodeType": "YulFunctionCall",
																"src": "13980:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13973:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "13973:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14145:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "14145:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																	"nativeSrc": "14056:88:17",
																	"nodeType": "YulIdentifier",
																	"src": "14056:88:17"
																},
																"nativeSrc": "14056:93:17",
																"nodeType": "YulFunctionCall",
																"src": "14056:93:17"
															},
															"nativeSrc": "14056:93:17",
															"nodeType": "YulExpressionStatement",
															"src": "14056:93:17"
														},
														{
															"nativeSrc": "14158:19:17",
															"nodeType": "YulAssignment",
															"src": "14158:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14169:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "14169:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14174:2:17",
																		"nodeType": "YulLiteral",
																		"src": "14174:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14165:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "14165:3:17"
																},
																"nativeSrc": "14165:12:17",
																"nodeType": "YulFunctionCall",
																"src": "14165:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14158:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "14158:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13817:366:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13951:3:17",
														"nodeType": "YulTypedName",
														"src": "13951:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13959:3:17",
														"nodeType": "YulTypedName",
														"src": "13959:3:17",
														"type": ""
													}
												],
												"src": "13817:366:17"
											},
											{
												"body": {
													"nativeSrc": "14360:248:17",
													"nodeType": "YulBlock",
													"src": "14360:248:17",
													"statements": [
														{
															"nativeSrc": "14370:26:17",
															"nodeType": "YulAssignment",
															"src": "14370:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14382:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "14382:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14393:2:17",
																		"nodeType": "YulLiteral",
																		"src": "14393:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14378:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "14378:3:17"
																},
																"nativeSrc": "14378:18:17",
																"nodeType": "YulFunctionCall",
																"src": "14378:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14370:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "14370:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14417:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "14417:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14428:1:17",
																				"nodeType": "YulLiteral",
																				"src": "14428:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14413:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "14413:3:17"
																		},
																		"nativeSrc": "14413:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14413:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14436:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "14436:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14442:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "14442:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14432:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "14432:3:17"
																		},
																		"nativeSrc": "14432:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14432:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14406:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "14406:6:17"
																},
																"nativeSrc": "14406:47:17",
																"nodeType": "YulFunctionCall",
																"src": "14406:47:17"
															},
															"nativeSrc": "14406:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "14406:47:17"
														},
														{
															"nativeSrc": "14462:139:17",
															"nodeType": "YulAssignment",
															"src": "14462:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14596:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "14596:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14470:124:17",
																	"nodeType": "YulIdentifier",
																	"src": "14470:124:17"
																},
																"nativeSrc": "14470:131:17",
																"nodeType": "YulFunctionCall",
																"src": "14470:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14462:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "14462:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14189:419:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14340:9:17",
														"nodeType": "YulTypedName",
														"src": "14340:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14355:4:17",
														"nodeType": "YulTypedName",
														"src": "14355:4:17",
														"type": ""
													}
												],
												"src": "14189:419:17"
											},
											{
												"body": {
													"nativeSrc": "14646:28:17",
													"nodeType": "YulBlock",
													"src": "14646:28:17",
													"statements": [
														{
															"nativeSrc": "14656:12:17",
															"nodeType": "YulAssignment",
															"src": "14656:12:17",
															"value": {
																"name": "value",
																"nativeSrc": "14663:5:17",
																"nodeType": "YulIdentifier",
																"src": "14663:5:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "14656:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "14656:3:17"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "14614:60:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14632:5:17",
														"nodeType": "YulTypedName",
														"src": "14632:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "14642:3:17",
														"nodeType": "YulTypedName",
														"src": "14642:3:17",
														"type": ""
													}
												],
												"src": "14614:60:17"
											},
											{
												"body": {
													"nativeSrc": "14740:82:17",
													"nodeType": "YulBlock",
													"src": "14740:82:17",
													"statements": [
														{
															"nativeSrc": "14750:66:17",
															"nodeType": "YulAssignment",
															"src": "14750:66:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14808:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "14808:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "14790:17:17",
																					"nodeType": "YulIdentifier",
																					"src": "14790:17:17"
																				},
																				"nativeSrc": "14790:24:17",
																				"nodeType": "YulFunctionCall",
																				"src": "14790:24:17"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "14781:8:17",
																			"nodeType": "YulIdentifier",
																			"src": "14781:8:17"
																		},
																		"nativeSrc": "14781:34:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14781:34:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "14763:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "14763:17:17"
																},
																"nativeSrc": "14763:53:17",
																"nodeType": "YulFunctionCall",
																"src": "14763:53:17"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "14750:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "14750:9:17"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "14680:142:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14720:5:17",
														"nodeType": "YulTypedName",
														"src": "14720:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "14730:9:17",
														"nodeType": "YulTypedName",
														"src": "14730:9:17",
														"type": ""
													}
												],
												"src": "14680:142:17"
											},
											{
												"body": {
													"nativeSrc": "14888:66:17",
													"nodeType": "YulBlock",
													"src": "14888:66:17",
													"statements": [
														{
															"nativeSrc": "14898:50:17",
															"nodeType": "YulAssignment",
															"src": "14898:50:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14942:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "14942:5:17"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "14911:30:17",
																	"nodeType": "YulIdentifier",
																	"src": "14911:30:17"
																},
																"nativeSrc": "14911:37:17",
																"nodeType": "YulFunctionCall",
																"src": "14911:37:17"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "14898:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "14898:9:17"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "14828:126:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14868:5:17",
														"nodeType": "YulTypedName",
														"src": "14868:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "14878:9:17",
														"nodeType": "YulTypedName",
														"src": "14878:9:17",
														"type": ""
													}
												],
												"src": "14828:126:17"
											},
											{
												"body": {
													"nativeSrc": "15035:66:17",
													"nodeType": "YulBlock",
													"src": "15035:66:17",
													"statements": [
														{
															"nativeSrc": "15045:50:17",
															"nodeType": "YulAssignment",
															"src": "15045:50:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15089:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "15089:5:17"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "15058:30:17",
																	"nodeType": "YulIdentifier",
																	"src": "15058:30:17"
																},
																"nativeSrc": "15058:37:17",
																"nodeType": "YulFunctionCall",
																"src": "15058:37:17"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "15045:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "15045:9:17"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$1198_to_t_address",
												"nativeSrc": "14960:141:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15015:5:17",
														"nodeType": "YulTypedName",
														"src": "15015:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "15025:9:17",
														"nodeType": "YulTypedName",
														"src": "15025:9:17",
														"type": ""
													}
												],
												"src": "14960:141:17"
											},
											{
												"body": {
													"nativeSrc": "15187:81:17",
													"nodeType": "YulBlock",
													"src": "15187:81:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15204:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "15204:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15255:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "15255:5:17"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$1198_to_t_address",
																			"nativeSrc": "15209:45:17",
																			"nodeType": "YulIdentifier",
																			"src": "15209:45:17"
																		},
																		"nativeSrc": "15209:52:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15209:52:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15197:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "15197:6:17"
																},
																"nativeSrc": "15197:65:17",
																"nodeType": "YulFunctionCall",
																"src": "15197:65:17"
															},
															"nativeSrc": "15197:65:17",
															"nodeType": "YulExpressionStatement",
															"src": "15197:65:17"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$1198_to_t_address_fromStack",
												"nativeSrc": "15107:161:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15175:5:17",
														"nodeType": "YulTypedName",
														"src": "15175:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15182:3:17",
														"nodeType": "YulTypedName",
														"src": "15182:3:17",
														"type": ""
													}
												],
												"src": "15107:161:17"
											},
											{
												"body": {
													"nativeSrc": "15471:386:17",
													"nodeType": "YulBlock",
													"src": "15471:386:17",
													"statements": [
														{
															"nativeSrc": "15481:27:17",
															"nodeType": "YulAssignment",
															"src": "15481:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15493:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "15493:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15504:3:17",
																		"nodeType": "YulLiteral",
																		"src": "15504:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15489:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "15489:3:17"
																},
																"nativeSrc": "15489:19:17",
																"nodeType": "YulFunctionCall",
																"src": "15489:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15481:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "15481:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15577:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "15577:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15590:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "15590:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15601:1:17",
																				"nodeType": "YulLiteral",
																				"src": "15601:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15586:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "15586:3:17"
																		},
																		"nativeSrc": "15586:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15586:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$1198_to_t_address_fromStack",
																	"nativeSrc": "15518:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "15518:58:17"
																},
																"nativeSrc": "15518:86:17",
																"nodeType": "YulFunctionCall",
																"src": "15518:86:17"
															},
															"nativeSrc": "15518:86:17",
															"nodeType": "YulExpressionStatement",
															"src": "15518:86:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15658:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "15658:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15671:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "15671:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15682:2:17",
																				"nodeType": "YulLiteral",
																				"src": "15682:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15667:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "15667:3:17"
																		},
																		"nativeSrc": "15667:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15667:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15614:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "15614:43:17"
																},
																"nativeSrc": "15614:72:17",
																"nodeType": "YulFunctionCall",
																"src": "15614:72:17"
															},
															"nativeSrc": "15614:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "15614:72:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15740:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "15740:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15753:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "15753:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15764:2:17",
																				"nodeType": "YulLiteral",
																				"src": "15764:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15749:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "15749:3:17"
																		},
																		"nativeSrc": "15749:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15749:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15696:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "15696:43:17"
																},
																"nativeSrc": "15696:72:17",
																"nodeType": "YulFunctionCall",
																"src": "15696:72:17"
															},
															"nativeSrc": "15696:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "15696:72:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "15822:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "15822:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15835:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "15835:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15846:2:17",
																				"nodeType": "YulLiteral",
																				"src": "15846:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15831:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "15831:3:17"
																		},
																		"nativeSrc": "15831:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15831:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15778:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "15778:43:17"
																},
																"nativeSrc": "15778:72:17",
																"nodeType": "YulFunctionCall",
																"src": "15778:72:17"
															},
															"nativeSrc": "15778:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "15778:72:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$1198_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "15274:583:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15419:9:17",
														"nodeType": "YulTypedName",
														"src": "15419:9:17",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "15431:6:17",
														"nodeType": "YulTypedName",
														"src": "15431:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15439:6:17",
														"nodeType": "YulTypedName",
														"src": "15439:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15447:6:17",
														"nodeType": "YulTypedName",
														"src": "15447:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15455:6:17",
														"nodeType": "YulTypedName",
														"src": "15455:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15466:4:17",
														"nodeType": "YulTypedName",
														"src": "15466:4:17",
														"type": ""
													}
												],
												"src": "15274:583:17"
											},
											{
												"body": {
													"nativeSrc": "15969:72:17",
													"nodeType": "YulBlock",
													"src": "15969:72:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15991:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "15991:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15999:1:17",
																				"nodeType": "YulLiteral",
																				"src": "15999:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15987:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "15987:3:17"
																		},
																		"nativeSrc": "15987:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15987:14:17"
																	},
																	{
																		"hexValue": "436f6e74726163743a20436f6e747261637420697320506175736564",
																		"kind": "string",
																		"nativeSrc": "16003:30:17",
																		"nodeType": "YulLiteral",
																		"src": "16003:30:17",
																		"type": "",
																		"value": "Contract: Contract is Paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15980:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "15980:6:17"
																},
																"nativeSrc": "15980:54:17",
																"nodeType": "YulFunctionCall",
																"src": "15980:54:17"
															},
															"nativeSrc": "15980:54:17",
															"nodeType": "YulExpressionStatement",
															"src": "15980:54:17"
														}
													]
												},
												"name": "store_literal_in_memory_14cda221cd50cc4488a50638b29b8104950f854aa06a190e98dcd3542f450149",
												"nativeSrc": "15863:178:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15961:6:17",
														"nodeType": "YulTypedName",
														"src": "15961:6:17",
														"type": ""
													}
												],
												"src": "15863:178:17"
											},
											{
												"body": {
													"nativeSrc": "16193:220:17",
													"nodeType": "YulBlock",
													"src": "16193:220:17",
													"statements": [
														{
															"nativeSrc": "16203:74:17",
															"nodeType": "YulAssignment",
															"src": "16203:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16269:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "16269:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16274:2:17",
																		"nodeType": "YulLiteral",
																		"src": "16274:2:17",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16210:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "16210:58:17"
																},
																"nativeSrc": "16210:67:17",
																"nodeType": "YulFunctionCall",
																"src": "16210:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16203:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "16203:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16375:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "16375:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_14cda221cd50cc4488a50638b29b8104950f854aa06a190e98dcd3542f450149",
																	"nativeSrc": "16286:88:17",
																	"nodeType": "YulIdentifier",
																	"src": "16286:88:17"
																},
																"nativeSrc": "16286:93:17",
																"nodeType": "YulFunctionCall",
																"src": "16286:93:17"
															},
															"nativeSrc": "16286:93:17",
															"nodeType": "YulExpressionStatement",
															"src": "16286:93:17"
														},
														{
															"nativeSrc": "16388:19:17",
															"nodeType": "YulAssignment",
															"src": "16388:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16399:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "16399:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16404:2:17",
																		"nodeType": "YulLiteral",
																		"src": "16404:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16395:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "16395:3:17"
																},
																"nativeSrc": "16395:12:17",
																"nodeType": "YulFunctionCall",
																"src": "16395:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16388:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "16388:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_14cda221cd50cc4488a50638b29b8104950f854aa06a190e98dcd3542f450149_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16047:366:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16181:3:17",
														"nodeType": "YulTypedName",
														"src": "16181:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16189:3:17",
														"nodeType": "YulTypedName",
														"src": "16189:3:17",
														"type": ""
													}
												],
												"src": "16047:366:17"
											},
											{
												"body": {
													"nativeSrc": "16590:248:17",
													"nodeType": "YulBlock",
													"src": "16590:248:17",
													"statements": [
														{
															"nativeSrc": "16600:26:17",
															"nodeType": "YulAssignment",
															"src": "16600:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16612:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "16612:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16623:2:17",
																		"nodeType": "YulLiteral",
																		"src": "16623:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16608:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "16608:3:17"
																},
																"nativeSrc": "16608:18:17",
																"nodeType": "YulFunctionCall",
																"src": "16608:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16600:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "16600:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16647:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "16647:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16658:1:17",
																				"nodeType": "YulLiteral",
																				"src": "16658:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16643:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "16643:3:17"
																		},
																		"nativeSrc": "16643:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "16643:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16666:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "16666:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16672:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "16672:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16662:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "16662:3:17"
																		},
																		"nativeSrc": "16662:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "16662:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16636:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "16636:6:17"
																},
																"nativeSrc": "16636:47:17",
																"nodeType": "YulFunctionCall",
																"src": "16636:47:17"
															},
															"nativeSrc": "16636:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "16636:47:17"
														},
														{
															"nativeSrc": "16692:139:17",
															"nodeType": "YulAssignment",
															"src": "16692:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16826:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "16826:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_14cda221cd50cc4488a50638b29b8104950f854aa06a190e98dcd3542f450149_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16700:124:17",
																	"nodeType": "YulIdentifier",
																	"src": "16700:124:17"
																},
																"nativeSrc": "16700:131:17",
																"nodeType": "YulFunctionCall",
																"src": "16700:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16692:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "16692:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_14cda221cd50cc4488a50638b29b8104950f854aa06a190e98dcd3542f450149__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16419:419:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16570:9:17",
														"nodeType": "YulTypedName",
														"src": "16570:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16585:4:17",
														"nodeType": "YulTypedName",
														"src": "16585:4:17",
														"type": ""
													}
												],
												"src": "16419:419:17"
											},
											{
												"body": {
													"nativeSrc": "16950:63:17",
													"nodeType": "YulBlock",
													"src": "16950:63:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16972:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "16972:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16980:1:17",
																				"nodeType": "YulLiteral",
																				"src": "16980:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16968:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "16968:3:17"
																		},
																		"nativeSrc": "16968:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "16968:14:17"
																	},
																	{
																		"hexValue": "4d696e74696e6720746f2064697361626c6564",
																		"kind": "string",
																		"nativeSrc": "16984:21:17",
																		"nodeType": "YulLiteral",
																		"src": "16984:21:17",
																		"type": "",
																		"value": "Minting to disabled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16961:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "16961:6:17"
																},
																"nativeSrc": "16961:45:17",
																"nodeType": "YulFunctionCall",
																"src": "16961:45:17"
															},
															"nativeSrc": "16961:45:17",
															"nodeType": "YulExpressionStatement",
															"src": "16961:45:17"
														}
													]
												},
												"name": "store_literal_in_memory_ba2e9cd8d3fa598fea6366ddadf891a9cbec04b837294279cc52e9e496f33766",
												"nativeSrc": "16844:169:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16942:6:17",
														"nodeType": "YulTypedName",
														"src": "16942:6:17",
														"type": ""
													}
												],
												"src": "16844:169:17"
											},
											{
												"body": {
													"nativeSrc": "17165:220:17",
													"nodeType": "YulBlock",
													"src": "17165:220:17",
													"statements": [
														{
															"nativeSrc": "17175:74:17",
															"nodeType": "YulAssignment",
															"src": "17175:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17241:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "17241:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17246:2:17",
																		"nodeType": "YulLiteral",
																		"src": "17246:2:17",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17182:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "17182:58:17"
																},
																"nativeSrc": "17182:67:17",
																"nodeType": "YulFunctionCall",
																"src": "17182:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17175:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "17175:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17347:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "17347:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ba2e9cd8d3fa598fea6366ddadf891a9cbec04b837294279cc52e9e496f33766",
																	"nativeSrc": "17258:88:17",
																	"nodeType": "YulIdentifier",
																	"src": "17258:88:17"
																},
																"nativeSrc": "17258:93:17",
																"nodeType": "YulFunctionCall",
																"src": "17258:93:17"
															},
															"nativeSrc": "17258:93:17",
															"nodeType": "YulExpressionStatement",
															"src": "17258:93:17"
														},
														{
															"nativeSrc": "17360:19:17",
															"nodeType": "YulAssignment",
															"src": "17360:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17371:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "17371:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17376:2:17",
																		"nodeType": "YulLiteral",
																		"src": "17376:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17367:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "17367:3:17"
																},
																"nativeSrc": "17367:12:17",
																"nodeType": "YulFunctionCall",
																"src": "17367:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17360:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "17360:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ba2e9cd8d3fa598fea6366ddadf891a9cbec04b837294279cc52e9e496f33766_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17019:366:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17153:3:17",
														"nodeType": "YulTypedName",
														"src": "17153:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17161:3:17",
														"nodeType": "YulTypedName",
														"src": "17161:3:17",
														"type": ""
													}
												],
												"src": "17019:366:17"
											},
											{
												"body": {
													"nativeSrc": "17562:248:17",
													"nodeType": "YulBlock",
													"src": "17562:248:17",
													"statements": [
														{
															"nativeSrc": "17572:26:17",
															"nodeType": "YulAssignment",
															"src": "17572:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17584:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "17584:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17595:2:17",
																		"nodeType": "YulLiteral",
																		"src": "17595:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17580:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "17580:3:17"
																},
																"nativeSrc": "17580:18:17",
																"nodeType": "YulFunctionCall",
																"src": "17580:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17572:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "17572:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17619:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "17619:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17630:1:17",
																				"nodeType": "YulLiteral",
																				"src": "17630:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17615:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "17615:3:17"
																		},
																		"nativeSrc": "17615:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "17615:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17638:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "17638:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17644:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "17644:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17634:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "17634:3:17"
																		},
																		"nativeSrc": "17634:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "17634:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17608:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "17608:6:17"
																},
																"nativeSrc": "17608:47:17",
																"nodeType": "YulFunctionCall",
																"src": "17608:47:17"
															},
															"nativeSrc": "17608:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "17608:47:17"
														},
														{
															"nativeSrc": "17664:139:17",
															"nodeType": "YulAssignment",
															"src": "17664:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17798:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "17798:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ba2e9cd8d3fa598fea6366ddadf891a9cbec04b837294279cc52e9e496f33766_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17672:124:17",
																	"nodeType": "YulIdentifier",
																	"src": "17672:124:17"
																},
																"nativeSrc": "17672:131:17",
																"nodeType": "YulFunctionCall",
																"src": "17672:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17664:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "17664:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ba2e9cd8d3fa598fea6366ddadf891a9cbec04b837294279cc52e9e496f33766__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17391:419:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17542:9:17",
														"nodeType": "YulTypedName",
														"src": "17542:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17557:4:17",
														"nodeType": "YulTypedName",
														"src": "17557:4:17",
														"type": ""
													}
												],
												"src": "17391:419:17"
											},
											{
												"body": {
													"nativeSrc": "17860:147:17",
													"nodeType": "YulBlock",
													"src": "17860:147:17",
													"statements": [
														{
															"nativeSrc": "17870:25:17",
															"nodeType": "YulAssignment",
															"src": "17870:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17893:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "17893:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17875:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "17875:17:17"
																},
																"nativeSrc": "17875:20:17",
																"nodeType": "YulFunctionCall",
																"src": "17875:20:17"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17870:1:17",
																	"nodeType": "YulIdentifier",
																	"src": "17870:1:17"
																}
															]
														},
														{
															"nativeSrc": "17904:25:17",
															"nodeType": "YulAssignment",
															"src": "17904:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17927:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "17927:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17909:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "17909:17:17"
																},
																"nativeSrc": "17909:20:17",
																"nodeType": "YulFunctionCall",
																"src": "17909:20:17"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "17904:1:17",
																	"nodeType": "YulIdentifier",
																	"src": "17904:1:17"
																}
															]
														},
														{
															"nativeSrc": "17938:16:17",
															"nodeType": "YulAssignment",
															"src": "17938:16:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17949:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "17949:1:17"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17952:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "17952:1:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17945:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "17945:3:17"
																},
																"nativeSrc": "17945:9:17",
																"nodeType": "YulFunctionCall",
																"src": "17945:9:17"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "17938:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "17938:3:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17978:22:17",
																"nodeType": "YulBlock",
																"src": "17978:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17980:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "17980:16:17"
																			},
																			"nativeSrc": "17980:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "17980:18:17"
																		},
																		"nativeSrc": "17980:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "17980:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17970:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "17970:1:17"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "17973:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "17973:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17967:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "17967:2:17"
																},
																"nativeSrc": "17967:10:17",
																"nodeType": "YulFunctionCall",
																"src": "17967:10:17"
															},
															"nativeSrc": "17964:36:17",
															"nodeType": "YulIf",
															"src": "17964:36:17"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "17816:191:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17847:1:17",
														"nodeType": "YulTypedName",
														"src": "17847:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17850:1:17",
														"nodeType": "YulTypedName",
														"src": "17850:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "17856:3:17",
														"nodeType": "YulTypedName",
														"src": "17856:3:17",
														"type": ""
													}
												],
												"src": "17816:191:17"
											},
											{
												"body": {
													"nativeSrc": "18119:73:17",
													"nodeType": "YulBlock",
													"src": "18119:73:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18141:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "18141:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18149:1:17",
																				"nodeType": "YulLiteral",
																				"src": "18149:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18137:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "18137:3:17"
																		},
																		"nativeSrc": "18137:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "18137:14:17"
																	},
																	{
																		"hexValue": "436f6e74726163743a20537570706c7920436170206578636565646564",
																		"kind": "string",
																		"nativeSrc": "18153:31:17",
																		"nodeType": "YulLiteral",
																		"src": "18153:31:17",
																		"type": "",
																		"value": "Contract: Supply Cap exceeded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18130:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "18130:6:17"
																},
																"nativeSrc": "18130:55:17",
																"nodeType": "YulFunctionCall",
																"src": "18130:55:17"
															},
															"nativeSrc": "18130:55:17",
															"nodeType": "YulExpressionStatement",
															"src": "18130:55:17"
														}
													]
												},
												"name": "store_literal_in_memory_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79",
												"nativeSrc": "18013:179:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18111:6:17",
														"nodeType": "YulTypedName",
														"src": "18111:6:17",
														"type": ""
													}
												],
												"src": "18013:179:17"
											},
											{
												"body": {
													"nativeSrc": "18344:220:17",
													"nodeType": "YulBlock",
													"src": "18344:220:17",
													"statements": [
														{
															"nativeSrc": "18354:74:17",
															"nodeType": "YulAssignment",
															"src": "18354:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18420:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "18420:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18425:2:17",
																		"nodeType": "YulLiteral",
																		"src": "18425:2:17",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18361:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "18361:58:17"
																},
																"nativeSrc": "18361:67:17",
																"nodeType": "YulFunctionCall",
																"src": "18361:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18354:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "18354:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18526:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "18526:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79",
																	"nativeSrc": "18437:88:17",
																	"nodeType": "YulIdentifier",
																	"src": "18437:88:17"
																},
																"nativeSrc": "18437:93:17",
																"nodeType": "YulFunctionCall",
																"src": "18437:93:17"
															},
															"nativeSrc": "18437:93:17",
															"nodeType": "YulExpressionStatement",
															"src": "18437:93:17"
														},
														{
															"nativeSrc": "18539:19:17",
															"nodeType": "YulAssignment",
															"src": "18539:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18550:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "18550:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18555:2:17",
																		"nodeType": "YulLiteral",
																		"src": "18555:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18546:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "18546:3:17"
																},
																"nativeSrc": "18546:12:17",
																"nodeType": "YulFunctionCall",
																"src": "18546:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18539:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "18539:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18198:366:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18332:3:17",
														"nodeType": "YulTypedName",
														"src": "18332:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18340:3:17",
														"nodeType": "YulTypedName",
														"src": "18340:3:17",
														"type": ""
													}
												],
												"src": "18198:366:17"
											},
											{
												"body": {
													"nativeSrc": "18741:248:17",
													"nodeType": "YulBlock",
													"src": "18741:248:17",
													"statements": [
														{
															"nativeSrc": "18751:26:17",
															"nodeType": "YulAssignment",
															"src": "18751:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18763:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "18763:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18774:2:17",
																		"nodeType": "YulLiteral",
																		"src": "18774:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18759:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "18759:3:17"
																},
																"nativeSrc": "18759:18:17",
																"nodeType": "YulFunctionCall",
																"src": "18759:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18751:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "18751:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18798:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "18798:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18809:1:17",
																				"nodeType": "YulLiteral",
																				"src": "18809:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18794:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "18794:3:17"
																		},
																		"nativeSrc": "18794:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "18794:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18817:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "18817:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18823:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "18823:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18813:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "18813:3:17"
																		},
																		"nativeSrc": "18813:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "18813:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18787:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "18787:6:17"
																},
																"nativeSrc": "18787:47:17",
																"nodeType": "YulFunctionCall",
																"src": "18787:47:17"
															},
															"nativeSrc": "18787:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "18787:47:17"
														},
														{
															"nativeSrc": "18843:139:17",
															"nodeType": "YulAssignment",
															"src": "18843:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18977:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "18977:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18851:124:17",
																	"nodeType": "YulIdentifier",
																	"src": "18851:124:17"
																},
																"nativeSrc": "18851:131:17",
																"nodeType": "YulFunctionCall",
																"src": "18851:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18843:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "18843:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18570:419:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18721:9:17",
														"nodeType": "YulTypedName",
														"src": "18721:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18736:4:17",
														"nodeType": "YulTypedName",
														"src": "18736:4:17",
														"type": ""
													}
												],
												"src": "18570:419:17"
											},
											{
												"body": {
													"nativeSrc": "19121:206:17",
													"nodeType": "YulBlock",
													"src": "19121:206:17",
													"statements": [
														{
															"nativeSrc": "19131:26:17",
															"nodeType": "YulAssignment",
															"src": "19131:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19143:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "19143:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19154:2:17",
																		"nodeType": "YulLiteral",
																		"src": "19154:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19139:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "19139:3:17"
																},
																"nativeSrc": "19139:18:17",
																"nodeType": "YulFunctionCall",
																"src": "19139:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19131:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "19131:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19211:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "19211:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19224:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "19224:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19235:1:17",
																				"nodeType": "YulLiteral",
																				"src": "19235:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19220:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "19220:3:17"
																		},
																		"nativeSrc": "19220:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "19220:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19167:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "19167:43:17"
																},
																"nativeSrc": "19167:71:17",
																"nodeType": "YulFunctionCall",
																"src": "19167:71:17"
															},
															"nativeSrc": "19167:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "19167:71:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19292:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "19292:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19305:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "19305:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19316:2:17",
																				"nodeType": "YulLiteral",
																				"src": "19316:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19301:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "19301:3:17"
																		},
																		"nativeSrc": "19301:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "19301:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19248:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "19248:43:17"
																},
																"nativeSrc": "19248:72:17",
																"nodeType": "YulFunctionCall",
																"src": "19248:72:17"
															},
															"nativeSrc": "19248:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "19248:72:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "18995:332:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19085:9:17",
														"nodeType": "YulTypedName",
														"src": "19085:9:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19097:6:17",
														"nodeType": "YulTypedName",
														"src": "19097:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19105:6:17",
														"nodeType": "YulTypedName",
														"src": "19105:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19116:4:17",
														"nodeType": "YulTypedName",
														"src": "19116:4:17",
														"type": ""
													}
												],
												"src": "18995:332:17"
											},
											{
												"body": {
													"nativeSrc": "19401:66:17",
													"nodeType": "YulBlock",
													"src": "19401:66:17",
													"statements": [
														{
															"nativeSrc": "19411:50:17",
															"nodeType": "YulAssignment",
															"src": "19411:50:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19455:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "19455:5:17"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "19424:30:17",
																	"nodeType": "YulIdentifier",
																	"src": "19424:30:17"
																},
																"nativeSrc": "19424:37:17",
																"nodeType": "YulFunctionCall",
																"src": "19424:37:17"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "19411:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "19411:9:17"
																}
															]
														}
													]
												},
												"name": "convert_t_address_payable_to_t_address",
												"nativeSrc": "19333:134:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19381:5:17",
														"nodeType": "YulTypedName",
														"src": "19381:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "19391:9:17",
														"nodeType": "YulTypedName",
														"src": "19391:9:17",
														"type": ""
													}
												],
												"src": "19333:134:17"
											},
											{
												"body": {
													"nativeSrc": "19546:74:17",
													"nodeType": "YulBlock",
													"src": "19546:74:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19563:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "19563:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "19607:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "19607:5:17"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_address_payable_to_t_address",
																			"nativeSrc": "19568:38:17",
																			"nodeType": "YulIdentifier",
																			"src": "19568:38:17"
																		},
																		"nativeSrc": "19568:45:17",
																		"nodeType": "YulFunctionCall",
																		"src": "19568:45:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19556:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "19556:6:17"
																},
																"nativeSrc": "19556:58:17",
																"nodeType": "YulFunctionCall",
																"src": "19556:58:17"
															},
															"nativeSrc": "19556:58:17",
															"nodeType": "YulExpressionStatement",
															"src": "19556:58:17"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_fromStack",
												"nativeSrc": "19473:147:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19534:5:17",
														"nodeType": "YulTypedName",
														"src": "19534:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "19541:3:17",
														"nodeType": "YulTypedName",
														"src": "19541:3:17",
														"type": ""
													}
												],
												"src": "19473:147:17"
											},
											{
												"body": {
													"nativeSrc": "19788:296:17",
													"nodeType": "YulBlock",
													"src": "19788:296:17",
													"statements": [
														{
															"nativeSrc": "19798:26:17",
															"nodeType": "YulAssignment",
															"src": "19798:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19810:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "19810:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19821:2:17",
																		"nodeType": "YulLiteral",
																		"src": "19821:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19806:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "19806:3:17"
																},
																"nativeSrc": "19806:18:17",
																"nodeType": "YulFunctionCall",
																"src": "19806:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19798:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "19798:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19886:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "19886:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19899:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "19899:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19910:1:17",
																				"nodeType": "YulLiteral",
																				"src": "19910:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19895:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "19895:3:17"
																		},
																		"nativeSrc": "19895:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "19895:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_fromStack",
																	"nativeSrc": "19834:51:17",
																	"nodeType": "YulIdentifier",
																	"src": "19834:51:17"
																},
																"nativeSrc": "19834:79:17",
																"nodeType": "YulFunctionCall",
																"src": "19834:79:17"
															},
															"nativeSrc": "19834:79:17",
															"nodeType": "YulExpressionStatement",
															"src": "19834:79:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19967:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "19967:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19980:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "19980:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19991:2:17",
																				"nodeType": "YulLiteral",
																				"src": "19991:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19976:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "19976:3:17"
																		},
																		"nativeSrc": "19976:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "19976:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19923:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "19923:43:17"
																},
																"nativeSrc": "19923:72:17",
																"nodeType": "YulFunctionCall",
																"src": "19923:72:17"
															},
															"nativeSrc": "19923:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "19923:72:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "20049:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "20049:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20062:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "20062:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20073:2:17",
																				"nodeType": "YulLiteral",
																				"src": "20073:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20058:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "20058:3:17"
																		},
																		"nativeSrc": "20058:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "20058:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20005:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "20005:43:17"
																},
																"nativeSrc": "20005:72:17",
																"nodeType": "YulFunctionCall",
																"src": "20005:72:17"
															},
															"nativeSrc": "20005:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "20005:72:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "19626:458:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19744:9:17",
														"nodeType": "YulTypedName",
														"src": "19744:9:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "19756:6:17",
														"nodeType": "YulTypedName",
														"src": "19756:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19764:6:17",
														"nodeType": "YulTypedName",
														"src": "19764:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19772:6:17",
														"nodeType": "YulTypedName",
														"src": "19772:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19783:4:17",
														"nodeType": "YulTypedName",
														"src": "19783:4:17",
														"type": ""
													}
												],
												"src": "19626:458:17"
											},
											{
												"body": {
													"nativeSrc": "20244:288:17",
													"nodeType": "YulBlock",
													"src": "20244:288:17",
													"statements": [
														{
															"nativeSrc": "20254:26:17",
															"nodeType": "YulAssignment",
															"src": "20254:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20266:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "20266:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20277:2:17",
																		"nodeType": "YulLiteral",
																		"src": "20277:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20262:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "20262:3:17"
																},
																"nativeSrc": "20262:18:17",
																"nodeType": "YulFunctionCall",
																"src": "20262:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20254:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "20254:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20334:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "20334:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20347:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "20347:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20358:1:17",
																				"nodeType": "YulLiteral",
																				"src": "20358:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20343:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "20343:3:17"
																		},
																		"nativeSrc": "20343:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "20343:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20290:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "20290:43:17"
																},
																"nativeSrc": "20290:71:17",
																"nodeType": "YulFunctionCall",
																"src": "20290:71:17"
															},
															"nativeSrc": "20290:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "20290:71:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20415:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "20415:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20428:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "20428:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20439:2:17",
																				"nodeType": "YulLiteral",
																				"src": "20439:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20424:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "20424:3:17"
																		},
																		"nativeSrc": "20424:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "20424:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20371:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "20371:43:17"
																},
																"nativeSrc": "20371:72:17",
																"nodeType": "YulFunctionCall",
																"src": "20371:72:17"
															},
															"nativeSrc": "20371:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "20371:72:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "20497:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "20497:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20510:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "20510:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20521:2:17",
																				"nodeType": "YulLiteral",
																				"src": "20521:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20506:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "20506:3:17"
																		},
																		"nativeSrc": "20506:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "20506:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20453:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "20453:43:17"
																},
																"nativeSrc": "20453:72:17",
																"nodeType": "YulFunctionCall",
																"src": "20453:72:17"
															},
															"nativeSrc": "20453:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "20453:72:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "20090:442:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20200:9:17",
														"nodeType": "YulTypedName",
														"src": "20200:9:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "20212:6:17",
														"nodeType": "YulTypedName",
														"src": "20212:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20220:6:17",
														"nodeType": "YulTypedName",
														"src": "20220:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20228:6:17",
														"nodeType": "YulTypedName",
														"src": "20228:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20239:4:17",
														"nodeType": "YulTypedName",
														"src": "20239:4:17",
														"type": ""
													}
												],
												"src": "20090:442:17"
											},
											{
												"body": {
													"nativeSrc": "20644:60:17",
													"nodeType": "YulBlock",
													"src": "20644:60:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20666:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "20666:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20674:1:17",
																				"nodeType": "YulLiteral",
																				"src": "20674:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20662:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "20662:3:17"
																		},
																		"nativeSrc": "20662:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "20662:14:17"
																	},
																	{
																		"hexValue": "4d696e74696e672064697361626c6564",
																		"kind": "string",
																		"nativeSrc": "20678:18:17",
																		"nodeType": "YulLiteral",
																		"src": "20678:18:17",
																		"type": "",
																		"value": "Minting disabled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20655:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "20655:6:17"
																},
																"nativeSrc": "20655:42:17",
																"nodeType": "YulFunctionCall",
																"src": "20655:42:17"
															},
															"nativeSrc": "20655:42:17",
															"nodeType": "YulExpressionStatement",
															"src": "20655:42:17"
														}
													]
												},
												"name": "store_literal_in_memory_9dc314731a2c8965068716b51a74d383c5485fe34630c16f5621cb0575192124",
												"nativeSrc": "20538:166:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20636:6:17",
														"nodeType": "YulTypedName",
														"src": "20636:6:17",
														"type": ""
													}
												],
												"src": "20538:166:17"
											},
											{
												"body": {
													"nativeSrc": "20856:220:17",
													"nodeType": "YulBlock",
													"src": "20856:220:17",
													"statements": [
														{
															"nativeSrc": "20866:74:17",
															"nodeType": "YulAssignment",
															"src": "20866:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20932:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "20932:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20937:2:17",
																		"nodeType": "YulLiteral",
																		"src": "20937:2:17",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20873:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "20873:58:17"
																},
																"nativeSrc": "20873:67:17",
																"nodeType": "YulFunctionCall",
																"src": "20873:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20866:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "20866:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21038:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "21038:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9dc314731a2c8965068716b51a74d383c5485fe34630c16f5621cb0575192124",
																	"nativeSrc": "20949:88:17",
																	"nodeType": "YulIdentifier",
																	"src": "20949:88:17"
																},
																"nativeSrc": "20949:93:17",
																"nodeType": "YulFunctionCall",
																"src": "20949:93:17"
															},
															"nativeSrc": "20949:93:17",
															"nodeType": "YulExpressionStatement",
															"src": "20949:93:17"
														},
														{
															"nativeSrc": "21051:19:17",
															"nodeType": "YulAssignment",
															"src": "21051:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21062:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "21062:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21067:2:17",
																		"nodeType": "YulLiteral",
																		"src": "21067:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21058:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "21058:3:17"
																},
																"nativeSrc": "21058:12:17",
																"nodeType": "YulFunctionCall",
																"src": "21058:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21051:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "21051:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9dc314731a2c8965068716b51a74d383c5485fe34630c16f5621cb0575192124_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20710:366:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20844:3:17",
														"nodeType": "YulTypedName",
														"src": "20844:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20852:3:17",
														"nodeType": "YulTypedName",
														"src": "20852:3:17",
														"type": ""
													}
												],
												"src": "20710:366:17"
											},
											{
												"body": {
													"nativeSrc": "21253:248:17",
													"nodeType": "YulBlock",
													"src": "21253:248:17",
													"statements": [
														{
															"nativeSrc": "21263:26:17",
															"nodeType": "YulAssignment",
															"src": "21263:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21275:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "21275:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21286:2:17",
																		"nodeType": "YulLiteral",
																		"src": "21286:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21271:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "21271:3:17"
																},
																"nativeSrc": "21271:18:17",
																"nodeType": "YulFunctionCall",
																"src": "21271:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21263:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "21263:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21310:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "21310:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21321:1:17",
																				"nodeType": "YulLiteral",
																				"src": "21321:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21306:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "21306:3:17"
																		},
																		"nativeSrc": "21306:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "21306:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21329:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "21329:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21335:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "21335:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21325:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "21325:3:17"
																		},
																		"nativeSrc": "21325:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "21325:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21299:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "21299:6:17"
																},
																"nativeSrc": "21299:47:17",
																"nodeType": "YulFunctionCall",
																"src": "21299:47:17"
															},
															"nativeSrc": "21299:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "21299:47:17"
														},
														{
															"nativeSrc": "21355:139:17",
															"nodeType": "YulAssignment",
															"src": "21355:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21489:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "21489:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9dc314731a2c8965068716b51a74d383c5485fe34630c16f5621cb0575192124_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21363:124:17",
																	"nodeType": "YulIdentifier",
																	"src": "21363:124:17"
																},
																"nativeSrc": "21363:131:17",
																"nodeType": "YulFunctionCall",
																"src": "21363:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21355:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "21355:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9dc314731a2c8965068716b51a74d383c5485fe34630c16f5621cb0575192124__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21082:419:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21233:9:17",
														"nodeType": "YulTypedName",
														"src": "21233:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21248:4:17",
														"nodeType": "YulTypedName",
														"src": "21248:4:17",
														"type": ""
													}
												],
												"src": "21082:419:17"
											},
											{
												"body": {
													"nativeSrc": "21613:72:17",
													"nodeType": "YulBlock",
													"src": "21613:72:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21635:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "21635:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21643:1:17",
																				"nodeType": "YulLiteral",
																				"src": "21643:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21631:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "21631:3:17"
																		},
																		"nativeSrc": "21631:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "21631:14:17"
																	},
																	{
																		"hexValue": "436f6e74726163743a20537570706c792043617020746f6f206c6f77",
																		"kind": "string",
																		"nativeSrc": "21647:30:17",
																		"nodeType": "YulLiteral",
																		"src": "21647:30:17",
																		"type": "",
																		"value": "Contract: Supply Cap too low"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21624:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "21624:6:17"
																},
																"nativeSrc": "21624:54:17",
																"nodeType": "YulFunctionCall",
																"src": "21624:54:17"
															},
															"nativeSrc": "21624:54:17",
															"nodeType": "YulExpressionStatement",
															"src": "21624:54:17"
														}
													]
												},
												"name": "store_literal_in_memory_77e086eba60b2e28f8cf4f0f10149625654a071ad569481f91828ddb6b36141b",
												"nativeSrc": "21507:178:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21605:6:17",
														"nodeType": "YulTypedName",
														"src": "21605:6:17",
														"type": ""
													}
												],
												"src": "21507:178:17"
											},
											{
												"body": {
													"nativeSrc": "21837:220:17",
													"nodeType": "YulBlock",
													"src": "21837:220:17",
													"statements": [
														{
															"nativeSrc": "21847:74:17",
															"nodeType": "YulAssignment",
															"src": "21847:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21913:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "21913:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21918:2:17",
																		"nodeType": "YulLiteral",
																		"src": "21918:2:17",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21854:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "21854:58:17"
																},
																"nativeSrc": "21854:67:17",
																"nodeType": "YulFunctionCall",
																"src": "21854:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21847:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "21847:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22019:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "22019:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_77e086eba60b2e28f8cf4f0f10149625654a071ad569481f91828ddb6b36141b",
																	"nativeSrc": "21930:88:17",
																	"nodeType": "YulIdentifier",
																	"src": "21930:88:17"
																},
																"nativeSrc": "21930:93:17",
																"nodeType": "YulFunctionCall",
																"src": "21930:93:17"
															},
															"nativeSrc": "21930:93:17",
															"nodeType": "YulExpressionStatement",
															"src": "21930:93:17"
														},
														{
															"nativeSrc": "22032:19:17",
															"nodeType": "YulAssignment",
															"src": "22032:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22043:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "22043:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22048:2:17",
																		"nodeType": "YulLiteral",
																		"src": "22048:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22039:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "22039:3:17"
																},
																"nativeSrc": "22039:12:17",
																"nodeType": "YulFunctionCall",
																"src": "22039:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22032:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "22032:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_77e086eba60b2e28f8cf4f0f10149625654a071ad569481f91828ddb6b36141b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21691:366:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21825:3:17",
														"nodeType": "YulTypedName",
														"src": "21825:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21833:3:17",
														"nodeType": "YulTypedName",
														"src": "21833:3:17",
														"type": ""
													}
												],
												"src": "21691:366:17"
											},
											{
												"body": {
													"nativeSrc": "22234:248:17",
													"nodeType": "YulBlock",
													"src": "22234:248:17",
													"statements": [
														{
															"nativeSrc": "22244:26:17",
															"nodeType": "YulAssignment",
															"src": "22244:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22256:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "22256:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22267:2:17",
																		"nodeType": "YulLiteral",
																		"src": "22267:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22252:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "22252:3:17"
																},
																"nativeSrc": "22252:18:17",
																"nodeType": "YulFunctionCall",
																"src": "22252:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22244:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "22244:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22291:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "22291:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22302:1:17",
																				"nodeType": "YulLiteral",
																				"src": "22302:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22287:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "22287:3:17"
																		},
																		"nativeSrc": "22287:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "22287:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22310:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "22310:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22316:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "22316:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22306:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "22306:3:17"
																		},
																		"nativeSrc": "22306:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "22306:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22280:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "22280:6:17"
																},
																"nativeSrc": "22280:47:17",
																"nodeType": "YulFunctionCall",
																"src": "22280:47:17"
															},
															"nativeSrc": "22280:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "22280:47:17"
														},
														{
															"nativeSrc": "22336:139:17",
															"nodeType": "YulAssignment",
															"src": "22336:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22470:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "22470:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_77e086eba60b2e28f8cf4f0f10149625654a071ad569481f91828ddb6b36141b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22344:124:17",
																	"nodeType": "YulIdentifier",
																	"src": "22344:124:17"
																},
																"nativeSrc": "22344:131:17",
																"nodeType": "YulFunctionCall",
																"src": "22344:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22336:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "22336:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_77e086eba60b2e28f8cf4f0f10149625654a071ad569481f91828ddb6b36141b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22063:419:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22214:9:17",
														"nodeType": "YulTypedName",
														"src": "22214:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22229:4:17",
														"nodeType": "YulTypedName",
														"src": "22229:4:17",
														"type": ""
													}
												],
												"src": "22063:419:17"
											},
											{
												"body": {
													"nativeSrc": "22586:124:17",
													"nodeType": "YulBlock",
													"src": "22586:124:17",
													"statements": [
														{
															"nativeSrc": "22596:26:17",
															"nodeType": "YulAssignment",
															"src": "22596:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22608:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "22608:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22619:2:17",
																		"nodeType": "YulLiteral",
																		"src": "22619:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22604:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "22604:3:17"
																},
																"nativeSrc": "22604:18:17",
																"nodeType": "YulFunctionCall",
																"src": "22604:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22596:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "22596:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22676:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "22676:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22689:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "22689:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22700:1:17",
																				"nodeType": "YulLiteral",
																				"src": "22700:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22685:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "22685:3:17"
																		},
																		"nativeSrc": "22685:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "22685:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22632:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "22632:43:17"
																},
																"nativeSrc": "22632:71:17",
																"nodeType": "YulFunctionCall",
																"src": "22632:71:17"
															},
															"nativeSrc": "22632:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "22632:71:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "22488:222:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22558:9:17",
														"nodeType": "YulTypedName",
														"src": "22558:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22570:6:17",
														"nodeType": "YulTypedName",
														"src": "22570:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22581:4:17",
														"nodeType": "YulTypedName",
														"src": "22581:4:17",
														"type": ""
													}
												],
												"src": "22488:222:17"
											},
											{
												"body": {
													"nativeSrc": "22842:206:17",
													"nodeType": "YulBlock",
													"src": "22842:206:17",
													"statements": [
														{
															"nativeSrc": "22852:26:17",
															"nodeType": "YulAssignment",
															"src": "22852:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22864:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "22864:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22875:2:17",
																		"nodeType": "YulLiteral",
																		"src": "22875:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22860:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "22860:3:17"
																},
																"nativeSrc": "22860:18:17",
																"nodeType": "YulFunctionCall",
																"src": "22860:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22852:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "22852:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22932:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "22932:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22945:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "22945:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22956:1:17",
																				"nodeType": "YulLiteral",
																				"src": "22956:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22941:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "22941:3:17"
																		},
																		"nativeSrc": "22941:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "22941:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22888:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "22888:43:17"
																},
																"nativeSrc": "22888:71:17",
																"nodeType": "YulFunctionCall",
																"src": "22888:71:17"
															},
															"nativeSrc": "22888:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "22888:71:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "23013:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "23013:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23026:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "23026:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23037:2:17",
																				"nodeType": "YulLiteral",
																				"src": "23037:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23022:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "23022:3:17"
																		},
																		"nativeSrc": "23022:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "23022:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "22969:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "22969:43:17"
																},
																"nativeSrc": "22969:72:17",
																"nodeType": "YulFunctionCall",
																"src": "22969:72:17"
															},
															"nativeSrc": "22969:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "22969:72:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "22716:332:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22806:9:17",
														"nodeType": "YulTypedName",
														"src": "22806:9:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22818:6:17",
														"nodeType": "YulTypedName",
														"src": "22818:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22826:6:17",
														"nodeType": "YulTypedName",
														"src": "22826:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22837:4:17",
														"nodeType": "YulTypedName",
														"src": "22837:4:17",
														"type": ""
													}
												],
												"src": "22716:332:17"
											},
											{
												"body": {
													"nativeSrc": "23208:288:17",
													"nodeType": "YulBlock",
													"src": "23208:288:17",
													"statements": [
														{
															"nativeSrc": "23218:26:17",
															"nodeType": "YulAssignment",
															"src": "23218:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23230:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "23230:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23241:2:17",
																		"nodeType": "YulLiteral",
																		"src": "23241:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23226:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "23226:3:17"
																},
																"nativeSrc": "23226:18:17",
																"nodeType": "YulFunctionCall",
																"src": "23226:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23218:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "23218:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23298:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "23298:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23311:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "23311:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23322:1:17",
																				"nodeType": "YulLiteral",
																				"src": "23322:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23307:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "23307:3:17"
																		},
																		"nativeSrc": "23307:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "23307:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "23254:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "23254:43:17"
																},
																"nativeSrc": "23254:71:17",
																"nodeType": "YulFunctionCall",
																"src": "23254:71:17"
															},
															"nativeSrc": "23254:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "23254:71:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "23379:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "23379:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23392:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "23392:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23403:2:17",
																				"nodeType": "YulLiteral",
																				"src": "23403:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23388:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "23388:3:17"
																		},
																		"nativeSrc": "23388:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "23388:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23335:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "23335:43:17"
																},
																"nativeSrc": "23335:72:17",
																"nodeType": "YulFunctionCall",
																"src": "23335:72:17"
															},
															"nativeSrc": "23335:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "23335:72:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "23461:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "23461:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23474:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "23474:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23485:2:17",
																				"nodeType": "YulLiteral",
																				"src": "23485:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23470:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "23470:3:17"
																		},
																		"nativeSrc": "23470:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "23470:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23417:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "23417:43:17"
																},
																"nativeSrc": "23417:72:17",
																"nodeType": "YulFunctionCall",
																"src": "23417:72:17"
															},
															"nativeSrc": "23417:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "23417:72:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "23054:442:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23164:9:17",
														"nodeType": "YulTypedName",
														"src": "23164:9:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "23176:6:17",
														"nodeType": "YulTypedName",
														"src": "23176:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "23184:6:17",
														"nodeType": "YulTypedName",
														"src": "23184:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23192:6:17",
														"nodeType": "YulTypedName",
														"src": "23192:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23203:4:17",
														"nodeType": "YulTypedName",
														"src": "23203:4:17",
														"type": ""
													}
												],
												"src": "23054:442:17"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_contract$_IERC20_$1198(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$1198(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$1198(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$1198(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$1198(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$1198t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$1198(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds a\")\n\n        mstore(add(memPtr, 32), \"llowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid address\")\n\n    }\n\n    function abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$1198_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$1198_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$1198_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$1198_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_contract$_IERC20_$1198_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_14cda221cd50cc4488a50638b29b8104950f854aa06a190e98dcd3542f450149(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract: Contract is Paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_14cda221cd50cc4488a50638b29b8104950f854aa06a190e98dcd3542f450149_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_14cda221cd50cc4488a50638b29b8104950f854aa06a190e98dcd3542f450149(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_14cda221cd50cc4488a50638b29b8104950f854aa06a190e98dcd3542f450149__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_14cda221cd50cc4488a50638b29b8104950f854aa06a190e98dcd3542f450149_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ba2e9cd8d3fa598fea6366ddadf891a9cbec04b837294279cc52e9e496f33766(memPtr) {\n\n        mstore(add(memPtr, 0), \"Minting to disabled\")\n\n    }\n\n    function abi_encode_t_stringliteral_ba2e9cd8d3fa598fea6366ddadf891a9cbec04b837294279cc52e9e496f33766_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_ba2e9cd8d3fa598fea6366ddadf891a9cbec04b837294279cc52e9e496f33766(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ba2e9cd8d3fa598fea6366ddadf891a9cbec04b837294279cc52e9e496f33766__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ba2e9cd8d3fa598fea6366ddadf891a9cbec04b837294279cc52e9e496f33766_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract: Supply Cap exceeded\")\n\n    }\n\n    function abi_encode_t_stringliteral_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_payable_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_9dc314731a2c8965068716b51a74d383c5485fe34630c16f5621cb0575192124(memPtr) {\n\n        mstore(add(memPtr, 0), \"Minting disabled\")\n\n    }\n\n    function abi_encode_t_stringliteral_9dc314731a2c8965068716b51a74d383c5485fe34630c16f5621cb0575192124_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_9dc314731a2c8965068716b51a74d383c5485fe34630c16f5621cb0575192124(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9dc314731a2c8965068716b51a74d383c5485fe34630c16f5621cb0575192124__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9dc314731a2c8965068716b51a74d383c5485fe34630c16f5621cb0575192124_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_77e086eba60b2e28f8cf4f0f10149625654a071ad569481f91828ddb6b36141b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract: Supply Cap too low\")\n\n    }\n\n    function abi_encode_t_stringliteral_77e086eba60b2e28f8cf4f0f10149625654a071ad569481f91828ddb6b36141b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_77e086eba60b2e28f8cf4f0f10149625654a071ad569481f91828ddb6b36141b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_77e086eba60b2e28f8cf4f0f10149625654a071ad569481f91828ddb6b36141b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_77e086eba60b2e28f8cf4f0f10149625654a071ad569481f91828ddb6b36141b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061025c575f3560e01c806379cc679011610144578063a9059cbb116100c1578063d547741f11610085578063d547741f14610712578063dd62ed3e1461072e578063deb6db361461075e578063ea5cb5321461077a578063f05d16f714610798578063f2250d3d146107b45761025c565b8063a9059cbb1461065a578063b6a3f59a1461068a578063c30796ab146106a6578063cf820461146106d6578063d1c9f69b146106f45761025c565b806391d148541161010857806391d14854146105b4578063956feccf146105e457806395d89b4114610602578063a0712d6814610620578063a217fddf1461063c5761025c565b806379cc6790146105205780637e92a7fd1461053c5780638d580b9f1461055a5780638ebed5b1146105785780638f770ad0146105965761025c565b806336568abe116101dd57806348132f48116101a157806348132f481461045c578063515572891461047857806353a4c31e146104965780635c975abb146104b45780636ba77a38146104d257806370a08231146104f05761025c565b806336568abe146103d05780633f914aef146103ec57806341f431fd1461040857806342966c6814610424578063449a52f8146104405761025c565b806318160ddd1161022457806318160ddd1461031857806323b872dd14610336578063248a9ca3146103665780632f2ff15d14610396578063313ce567146103b25761025c565b806301ffc9a714610260578063060cf4e81461029057806306fdde03146102ae578063095ea7b3146102cc57806316c38b3c146102fc575b5f80fd5b61027a6004803603810190610275919061238e565b6107d0565b60405161028791906123d3565b60405180910390f35b610298610849565b6040516102a59190612404565b60405180910390f35b6102b661084f565b6040516102c3919061248d565b60405180910390f35b6102e660048036038101906102e19190612531565b6108df565b6040516102f391906123d3565b60405180910390f35b61031660048036038101906103119190612599565b610901565b005b6103206109d4565b60405161032d9190612404565b60405180910390f35b610350600480360381019061034b91906125c4565b6109dd565b60405161035d91906123d3565b60405180910390f35b610380600480360381019061037b9190612647565b610ae9565b60405161038d9190612681565b60405180910390f35b6103b060048036038101906103ab919061269a565b610b06565b005b6103ba610b28565b6040516103c791906126f3565b60405180910390f35b6103ea60048036038101906103e5919061269a565b610b30565b005b6104066004803603810190610401919061270c565b610bab565b005b610422600480360381019061041d9190612785565b610c9c565b005b61043e600480360381019061043991906127d5565b610d44565b005b61045a60048036038101906104559190612531565b610e12565b005b6104766004803603810190610471919061283b565b610f7a565b005b610480611038565b60405161048d9190612681565b60405180910390f35b61049e61105c565b6040516104ab9190612681565b60405180910390f35b6104bc611080565b6040516104c991906123d3565b60405180910390f35b6104da611092565b6040516104e79190612681565b60405180910390f35b61050a60048036038101906105059190612879565b6110b6565b6040516105179190612404565b60405180910390f35b61053a60048036038101906105359190612531565b6110fb565b005b6105446111c5565b6040516105519190612681565b60405180910390f35b6105626111e9565b60405161056f9190612681565b60405180910390f35b61058061120d565b60405161058d9190612681565b60405180910390f35b61059e611231565b6040516105ab9190612404565b60405180910390f35b6105ce60048036038101906105c9919061269a565b61123a565b6040516105db91906123d3565b60405180910390f35b6105ec61129e565b6040516105f991906123d3565b60405180910390f35b61060a6112b1565b604051610617919061248d565b60405180910390f35b61063a600480360381019061063591906127d5565b611341565b005b6106446114ad565b6040516106519190612681565b60405180910390f35b610674600480360381019061066f9190612531565b6114b3565b60405161068191906123d3565b60405180910390f35b6106a4600480360381019061069f91906127d5565b611551565b005b6106c060048036038101906106bb9190612879565b61165f565b6040516106cd91906123d3565b60405180910390f35b6106de61167c565b6040516106eb9190612404565b60405180910390f35b6106fc611682565b60405161070991906123d3565b60405180910390f35b61072c6004803603810190610727919061269a565b611695565b005b610748600480360381019061074391906128a4565b6116b7565b6040516107559190612404565b60405180910390f35b61077860048036038101906107739190612599565b611739565b005b61078261180d565b60405161078f9190612681565b60405180910390f35b6107b260048036038101906107ad91906127d5565b611831565b005b6107ce60048036038101906107c99190612599565b611866565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061084257506108418261193a565b5b9050919050565b60075481565b60606003805461085e9061290f565b80601f016020809104026020016040519081016040528092919081815260200182805461088a9061290f565b80156108d55780601f106108ac576101008083540402835291602001916108d5565b820191905f5260205f20905b8154815290600101906020018083116108b857829003601f168201915b5050505050905090565b5f806108e96119a3565b90506108f68185856119aa565b600191505092915050565b7fae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d361092b816119bc565b8160095f6101000a81548160ff021916908315150217905550811561098f577fd8c9c5623123df8e137854c59a08f9084b75609fe24584228d44ffdce5ab920a436109746119a3565b60405161098292919061294e565b60405180910390a16109d0565b7f1e7a7234ad01ed7353bf129217f5c162773639a6cb22773e84bcd5a2b0ef362e436109b96119a3565b6040516109c792919061294e565b60405180910390a15b5050565b5f600254905090565b5f6109e66119d0565b5f6109ef6119a3565b90505f6109fc86836116b7565b905083811015610a41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a38906129e5565b60405180910390fd5b610a5786838684610a529190612a30565b6119aa565b60011515600a5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16151503610abc57610ab7868686611a16565b610ad4565b610ac7868686611a16565b610ad386600854611b06565b5b600192505050610ae2611b85565b9392505050565b5f60055f8381526020019081526020015f20600101549050919050565b610b0f82610ae9565b610b18816119bc565b610b228383611b8f565b50505050565b5f6012905090565b610b386119a3565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610b9c576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ba68282611c79565b505050565b7fae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d3610bd5816119bc565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3a90612aad565b60405180910390fd5b81600a5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550505050565b610ca46119d0565b7f508f8f8be8f5dbcb88f4f4500430b8b3684c471ed936f31fea912c78ad46a6b9610cce816119bc565b610cf983838673ffffffffffffffffffffffffffffffffffffffff16611d639092919063ffffffff16565b7f494215f965756bbc8b7f57addd2a0ebdbce467a4999f8320c67adc1771885d7b84438585604051610d2e9493929190612b26565b60405180910390a150610d3f611b85565b505050565b60095f9054906101000a900460ff1615610d93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8a90612bb3565b60405180910390fd5b7f9edfad36e7d4d9da54b4f78f22bf97cb5b58bb7998294a4288da41c15c647c45610dbd816119bc565b7f63706707d038997d2210eb026bb1339397deab463921538a81bb98e69ee54ca882610de76119a3565b604051610df592919061294e565b60405180910390a1610e0e610e086119a3565b83611b06565b5050565b60095f9054906101000a900460ff1615610e61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5890612bb3565b60405180910390fd5b600960029054906101000a900460ff1615610eb1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea890612c1b565b60405180910390fd5b7f7d800f56a05adcb6245df540492a560d0e668aac15ee6c7dd40668064913da33610edb816119bc565b60075482610ee76109d4565b610ef19190612c39565b1115610f32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2990612cb6565b60405180910390fd5b7fe98063832b4ff0356868961b75f7f49b096b14ea066c9725301ad197f2f631478383604051610f63929190612cd4565b60405180910390a1610f758383611de2565b505050565b610f826119d0565b7f508f8f8be8f5dbcb88f4f4500430b8b3684c471ed936f31fea912c78ad46a6b9610fac816119bc565b8273ffffffffffffffffffffffffffffffffffffffff166108fc8390811502906040515f60405180830381858888f19350505050158015610fef573d5f803e3d5ffd5b507f3b1c0368c81e47d03164182dc6f9fcf4f5e4b3bd9462d74960d729f73138ce3683438460405161102393929190612d1b565b60405180910390a150611034611b85565b5050565b7fae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d381565b7f9edfad36e7d4d9da54b4f78f22bf97cb5b58bb7998294a4288da41c15c647c4581565b60095f9054906101000a900460ff1681565b7fc8a3befa5973ff6e159afc769978d92f26bae29c51a73d11c9112a05b68d25e681565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60095f9054906101000a900460ff161561114a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114190612bb3565b60405180910390fd5b7fc8a3befa5973ff6e159afc769978d92f26bae29c51a73d11c9112a05b68d25e6611174816119bc565b7fe419ce2aab145a1feaf5893bb6a9478f9282415bbd81c76d5cfff2d4f13431dd838361119f6119a3565b6040516111ae93929190612d50565b60405180910390a16111c08383611b06565b505050565b7f7d800f56a05adcb6245df540492a560d0e668aac15ee6c7dd40668064913da3381565b7f508f8f8be8f5dbcb88f4f4500430b8b3684c471ed936f31fea912c78ad46a6b981565b7f8c66330d9d4f6aba064f25ef2a307366ea6d917616f44c075aa60fa15e5cb1cb81565b5f600754905090565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b600960019054906101000a900460ff1681565b6060600480546112c09061290f565b80601f01602080910402602001604051908101604052809291908181526020018280546112ec9061290f565b80156113375780601f1061130e57610100808354040283529160200191611337565b820191905f5260205f20905b81548152906001019060200180831161131a57829003601f168201915b5050505050905090565b60095f9054906101000a900460ff1615611390576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161138790612bb3565b60405180910390fd5b600960019054906101000a900460ff16156113e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113d790612dcf565b60405180910390fd5b7f8c66330d9d4f6aba064f25ef2a307366ea6d917616f44c075aa60fa15e5cb1cb61140a816119bc565b600754826114166109d4565b6114209190612c39565b1115611461576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161145890612cb6565b60405180910390fd5b7f772f66a00a405709c30e7f18feadcc8f123b20c09c7260165d3eec36c9f21372826040516114909190612404565b60405180910390a16114a96114a36119a3565b83611de2565b5050565b5f801b81565b5f6114bc6119d0565b5f6114c56119a3565b9050600a5f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161561152657611521818585611a16565b61153e565b611531818585611a16565b61153d81600854611b06565b5b600191505061154b611b85565b92915050565b60095f9054906101000a900460ff16156115a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159790612bb3565b60405180910390fd5b7fea4defabeb90fa1e79f929d6c8d482fee8a115926a592b79634d39a67cce3b626115ca816119bc565b6115d26109d4565b821015611614576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161160b90612e37565b60405180910390fd5b816007819055507fa11cbdeb4d62442fae7c8ec6286585b17c47acb7b17bbcab1beadce84befa300826116456119a3565b60405161165392919061294e565b60405180910390a15050565b600a602052805f5260405f205f915054906101000a900460ff1681565b60085481565b600960029054906101000a900460ff1681565b61169e82610ae9565b6116a7816119bc565b6116b18383611c79565b50505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b7fae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d3611763816119bc565b81600960016101000a81548160ff02191690831515021790555081156117c8577f5668502ca8e7b393c09d1dac964ca45a27870a78d7ba212b7a189450897ca05f436117ad6119a3565b6040516117bb92919061294e565b60405180910390a1611809565b7f98e05482fdb38df5eb461fb932fa6e1af90a3569939ce5a8d92d699b102d6402436117f26119a3565b60405161180092919061294e565b60405180910390a15b5050565b7fea4defabeb90fa1e79f929d6c8d482fee8a115926a592b79634d39a67cce3b6281565b7fae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d361185b816119bc565b816008819055505050565b7fae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d3611890816119bc565b81600960026101000a81548160ff02191690831515021790555081156118f5577f218e25f0a7435729f5a66aae50a9ed0084535a0080300c1c2e8366d8df7136ed436118da6119a3565b6040516118e892919061294e565b60405180910390a1611936565b7f41606e1dcee38320f9edbfcd642aeaa81bb2140c705de9d4a7814024a1e9a3144361191f6119a3565b60405161192d92919061294e565b60405180910390a15b5050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b6119b78383836001611e61565b505050565b6119cd816119c86119a3565b612030565b50565b600260065403611a0c576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600681905550565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a86575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611a7d9190612e55565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611af6575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611aed9190612e55565b60405180910390fd5b611b01838383612081565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611b76575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611b6d9190612e55565b60405180910390fd5b611b81825f83612081565b5050565b6001600681905550565b5f611b9a838361123a565b611c6f57600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611c0c6119a3565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050611c73565b5f90505b92915050565b5f611c84838361123a565b15611d59575f60055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611cf66119a3565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611d5d565b5f90505b92915050565b611ddd838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611d96929190612cd4565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061229a565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611e52575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611e499190612e55565b60405180910390fd5b611e5d5f8383612081565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611ed1575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611ec89190612e55565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611f41575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611f389190612e55565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561202a578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516120219190612404565b60405180910390a35b50505050565b61203a828261123a565b61207d5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401612074929190612e6e565b60405180910390fd5b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036120d1578060025f8282546120c59190612c39565b9250508190555061219f565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561215a578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161215193929190612e95565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036121e6578060025f8282540392505081905550612230565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161228d9190612404565b60405180910390a3505050565b5f8060205f8451602086015f885af1806122b9576040513d5f823e3d81fd5b3d92505f519150505f82146122d25760018114156122ed565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561232f57836040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016123269190612e55565b60405180910390fd5b50505050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61236d81612339565b8114612377575f80fd5b50565b5f8135905061238881612364565b92915050565b5f602082840312156123a3576123a2612335565b5b5f6123b08482850161237a565b91505092915050565b5f8115159050919050565b6123cd816123b9565b82525050565b5f6020820190506123e65f8301846123c4565b92915050565b5f819050919050565b6123fe816123ec565b82525050565b5f6020820190506124175f8301846123f5565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61245f8261241d565b6124698185612427565b9350612479818560208601612437565b61248281612445565b840191505092915050565b5f6020820190508181035f8301526124a58184612455565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6124d6826124ad565b9050919050565b6124e6816124cc565b81146124f0575f80fd5b50565b5f81359050612501816124dd565b92915050565b612510816123ec565b811461251a575f80fd5b50565b5f8135905061252b81612507565b92915050565b5f806040838503121561254757612546612335565b5b5f612554858286016124f3565b92505060206125658582860161251d565b9150509250929050565b612578816123b9565b8114612582575f80fd5b50565b5f813590506125938161256f565b92915050565b5f602082840312156125ae576125ad612335565b5b5f6125bb84828501612585565b91505092915050565b5f805f606084860312156125db576125da612335565b5b5f6125e8868287016124f3565b93505060206125f9868287016124f3565b925050604061260a8682870161251d565b9150509250925092565b5f819050919050565b61262681612614565b8114612630575f80fd5b50565b5f813590506126418161261d565b92915050565b5f6020828403121561265c5761265b612335565b5b5f61266984828501612633565b91505092915050565b61267b81612614565b82525050565b5f6020820190506126945f830184612672565b92915050565b5f80604083850312156126b0576126af612335565b5b5f6126bd85828601612633565b92505060206126ce858286016124f3565b9150509250929050565b5f60ff82169050919050565b6126ed816126d8565b82525050565b5f6020820190506127065f8301846126e4565b92915050565b5f806040838503121561272257612721612335565b5b5f61272f858286016124f3565b925050602061274085828601612585565b9150509250929050565b5f612754826124cc565b9050919050565b6127648161274a565b811461276e575f80fd5b50565b5f8135905061277f8161275b565b92915050565b5f805f6060848603121561279c5761279b612335565b5b5f6127a986828701612771565b93505060206127ba868287016124f3565b92505060406127cb8682870161251d565b9150509250925092565b5f602082840312156127ea576127e9612335565b5b5f6127f78482850161251d565b91505092915050565b5f61280a826124ad565b9050919050565b61281a81612800565b8114612824575f80fd5b50565b5f8135905061283581612811565b92915050565b5f806040838503121561285157612850612335565b5b5f61285e85828601612827565b925050602061286f8582860161251d565b9150509250929050565b5f6020828403121561288e5761288d612335565b5b5f61289b848285016124f3565b91505092915050565b5f80604083850312156128ba576128b9612335565b5b5f6128c7858286016124f3565b92505060206128d8858286016124f3565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061292657607f821691505b602082108103612939576129386128e2565b5b50919050565b612948816124cc565b82525050565b5f6040820190506129615f8301856123f5565b61296e602083018461293f565b9392505050565b7f45524332303a207472616e7366657220616d6f756e74206578636565647320615f8201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b5f6129cf602883612427565b91506129da82612975565b604082019050919050565b5f6020820190508181035f8301526129fc816129c3565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612a3a826123ec565b9150612a45836123ec565b9250828203905081811115612a5d57612a5c612a03565b5b92915050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f612a97600f83612427565b9150612aa282612a63565b602082019050919050565b5f6020820190508181035f830152612ac481612a8b565b9050919050565b5f819050919050565b5f612aee612ae9612ae4846124ad565b612acb565b6124ad565b9050919050565b5f612aff82612ad4565b9050919050565b5f612b1082612af5565b9050919050565b612b2081612b06565b82525050565b5f608082019050612b395f830187612b17565b612b4660208301866123f5565b612b53604083018561293f565b612b6060608301846123f5565b95945050505050565b7f436f6e74726163743a20436f6e747261637420697320506175736564000000005f82015250565b5f612b9d601c83612427565b9150612ba882612b69565b602082019050919050565b5f6020820190508181035f830152612bca81612b91565b9050919050565b7f4d696e74696e6720746f2064697361626c6564000000000000000000000000005f82015250565b5f612c05601383612427565b9150612c1082612bd1565b602082019050919050565b5f6020820190508181035f830152612c3281612bf9565b9050919050565b5f612c43826123ec565b9150612c4e836123ec565b9250828201905080821115612c6657612c65612a03565b5b92915050565b7f436f6e74726163743a20537570706c79204361702065786365656465640000005f82015250565b5f612ca0601d83612427565b9150612cab82612c6c565b602082019050919050565b5f6020820190508181035f830152612ccd81612c94565b9050919050565b5f604082019050612ce75f83018561293f565b612cf460208301846123f5565b9392505050565b5f612d0582612af5565b9050919050565b612d1581612cfb565b82525050565b5f606082019050612d2e5f830186612d0c565b612d3b60208301856123f5565b612d4860408301846123f5565b949350505050565b5f606082019050612d635f83018661293f565b612d7060208301856123f5565b612d7d604083018461293f565b949350505050565b7f4d696e74696e672064697361626c6564000000000000000000000000000000005f82015250565b5f612db9601083612427565b9150612dc482612d85565b602082019050919050565b5f6020820190508181035f830152612de681612dad565b9050919050565b7f436f6e74726163743a20537570706c792043617020746f6f206c6f77000000005f82015250565b5f612e21601c83612427565b9150612e2c82612ded565b602082019050919050565b5f6020820190508181035f830152612e4e81612e15565b9050919050565b5f602082019050612e685f83018461293f565b92915050565b5f604082019050612e815f83018561293f565b612e8e6020830184612672565b9392505050565b5f606082019050612ea85f83018661293f565b612eb560208301856123f5565b612ec260408301846123f5565b94935050505056fea2646970667358221220bff9d0013640c6ef3513800fbcca4bd42eee571afeaf7e5ad10ebf4b5198a3a364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x25C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79CC6790 GT PUSH2 0x144 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x85 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x712 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x72E JUMPI DUP1 PUSH4 0xDEB6DB36 EQ PUSH2 0x75E JUMPI DUP1 PUSH4 0xEA5CB532 EQ PUSH2 0x77A JUMPI DUP1 PUSH4 0xF05D16F7 EQ PUSH2 0x798 JUMPI DUP1 PUSH4 0xF2250D3D EQ PUSH2 0x7B4 JUMPI PUSH2 0x25C JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x65A JUMPI DUP1 PUSH4 0xB6A3F59A EQ PUSH2 0x68A JUMPI DUP1 PUSH4 0xC30796AB EQ PUSH2 0x6A6 JUMPI DUP1 PUSH4 0xCF820461 EQ PUSH2 0x6D6 JUMPI DUP1 PUSH4 0xD1C9F69B EQ PUSH2 0x6F4 JUMPI PUSH2 0x25C JUMP JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x5B4 JUMPI DUP1 PUSH4 0x956FECCF EQ PUSH2 0x5E4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x602 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x620 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x63C JUMPI PUSH2 0x25C JUMP JUMPDEST DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x520 JUMPI DUP1 PUSH4 0x7E92A7FD EQ PUSH2 0x53C JUMPI DUP1 PUSH4 0x8D580B9F EQ PUSH2 0x55A JUMPI DUP1 PUSH4 0x8EBED5B1 EQ PUSH2 0x578 JUMPI DUP1 PUSH4 0x8F770AD0 EQ PUSH2 0x596 JUMPI PUSH2 0x25C JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0x1DD JUMPI DUP1 PUSH4 0x48132F48 GT PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x48132F48 EQ PUSH2 0x45C JUMPI DUP1 PUSH4 0x51557289 EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0x53A4C31E EQ PUSH2 0x496 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x4B4 JUMPI DUP1 PUSH4 0x6BA77A38 EQ PUSH2 0x4D2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4F0 JUMPI PUSH2 0x25C JUMP JUMPDEST DUP1 PUSH4 0x36568ABE EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0x3F914AEF EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0x41F431FD EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0x449A52F8 EQ PUSH2 0x440 JUMPI PUSH2 0x25C JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x224 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3B2 JUMPI PUSH2 0x25C JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x60CF4E8 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x2FC JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x27A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x238E JUMP JUMPDEST PUSH2 0x7D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x23D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x298 PUSH2 0x849 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x2404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B6 PUSH2 0x84F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x248D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH2 0x8DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x23D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x2599 JUMP JUMPDEST PUSH2 0x901 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x320 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x2404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x350 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x25C4 JUMP JUMPDEST PUSH2 0x9DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x23D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x380 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x2647 JUMP JUMPDEST PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38D SWAP2 SWAP1 PUSH2 0x2681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AB SWAP2 SWAP1 PUSH2 0x269A JUMP JUMPDEST PUSH2 0xB06 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BA PUSH2 0xB28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x26F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E5 SWAP2 SWAP1 PUSH2 0x269A JUMP JUMPDEST PUSH2 0xB30 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x406 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x401 SWAP2 SWAP1 PUSH2 0x270C JUMP JUMPDEST PUSH2 0xBAB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x422 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41D SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST PUSH2 0xC9C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x43E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x439 SWAP2 SWAP1 PUSH2 0x27D5 JUMP JUMPDEST PUSH2 0xD44 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x45A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x455 SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH2 0xE12 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x476 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x471 SWAP2 SWAP1 PUSH2 0x283B JUMP JUMPDEST PUSH2 0xF7A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x480 PUSH2 0x1038 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48D SWAP2 SWAP1 PUSH2 0x2681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49E PUSH2 0x105C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AB SWAP2 SWAP1 PUSH2 0x2681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4BC PUSH2 0x1080 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C9 SWAP2 SWAP1 PUSH2 0x23D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4DA PUSH2 0x1092 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E7 SWAP2 SWAP1 PUSH2 0x2681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x50A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x505 SWAP2 SWAP1 PUSH2 0x2879 JUMP JUMPDEST PUSH2 0x10B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x517 SWAP2 SWAP1 PUSH2 0x2404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x53A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x535 SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH2 0x10FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x544 PUSH2 0x11C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x551 SWAP2 SWAP1 PUSH2 0x2681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x562 PUSH2 0x11E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56F SWAP2 SWAP1 PUSH2 0x2681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x580 PUSH2 0x120D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58D SWAP2 SWAP1 PUSH2 0x2681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59E PUSH2 0x1231 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5AB SWAP2 SWAP1 PUSH2 0x2404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C9 SWAP2 SWAP1 PUSH2 0x269A JUMP JUMPDEST PUSH2 0x123A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5DB SWAP2 SWAP1 PUSH2 0x23D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5EC PUSH2 0x129E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F9 SWAP2 SWAP1 PUSH2 0x23D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x60A PUSH2 0x12B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x617 SWAP2 SWAP1 PUSH2 0x248D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x63A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x635 SWAP2 SWAP1 PUSH2 0x27D5 JUMP JUMPDEST PUSH2 0x1341 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x644 PUSH2 0x14AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x651 SWAP2 SWAP1 PUSH2 0x2681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x674 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66F SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH2 0x14B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x681 SWAP2 SWAP1 PUSH2 0x23D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x69F SWAP2 SWAP1 PUSH2 0x27D5 JUMP JUMPDEST PUSH2 0x1551 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6BB SWAP2 SWAP1 PUSH2 0x2879 JUMP JUMPDEST PUSH2 0x165F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6CD SWAP2 SWAP1 PUSH2 0x23D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6DE PUSH2 0x167C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6EB SWAP2 SWAP1 PUSH2 0x2404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6FC PUSH2 0x1682 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x709 SWAP2 SWAP1 PUSH2 0x23D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x72C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x727 SWAP2 SWAP1 PUSH2 0x269A JUMP JUMPDEST PUSH2 0x1695 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x748 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x743 SWAP2 SWAP1 PUSH2 0x28A4 JUMP JUMPDEST PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x755 SWAP2 SWAP1 PUSH2 0x2404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x778 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x773 SWAP2 SWAP1 PUSH2 0x2599 JUMP JUMPDEST PUSH2 0x1739 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x782 PUSH2 0x180D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78F SWAP2 SWAP1 PUSH2 0x2681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7AD SWAP2 SWAP1 PUSH2 0x27D5 JUMP JUMPDEST PUSH2 0x1831 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C9 SWAP2 SWAP1 PUSH2 0x2599 JUMP JUMPDEST PUSH2 0x1866 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x842 JUMPI POP PUSH2 0x841 DUP3 PUSH2 0x193A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x85E SWAP1 PUSH2 0x290F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x88A SWAP1 PUSH2 0x290F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8AC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x8E9 PUSH2 0x19A3 JUMP JUMPDEST SWAP1 POP PUSH2 0x8F6 DUP2 DUP6 DUP6 PUSH2 0x19AA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xAE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3 PUSH2 0x92B DUP2 PUSH2 0x19BC JUMP JUMPDEST DUP2 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x98F JUMPI PUSH32 0xD8C9C5623123DF8E137854C59A08F9084B75609FE24584228D44FFDCE5AB920A NUMBER PUSH2 0x974 PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x982 SWAP3 SWAP2 SWAP1 PUSH2 0x294E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x9D0 JUMP JUMPDEST PUSH32 0x1E7A7234AD01ED7353BF129217F5C162773639A6CB22773E84BCD5A2B0EF362E NUMBER PUSH2 0x9B9 PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9C7 SWAP3 SWAP2 SWAP1 PUSH2 0x294E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x9E6 PUSH2 0x19D0 JUMP JUMPDEST PUSH0 PUSH2 0x9EF PUSH2 0x19A3 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x9FC DUP7 DUP4 PUSH2 0x16B7 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xA41 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA38 SWAP1 PUSH2 0x29E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA57 DUP7 DUP4 DUP7 DUP5 PUSH2 0xA52 SWAP2 SWAP1 PUSH2 0x2A30 JUMP JUMPDEST PUSH2 0x19AA JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0xA PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0xABC JUMPI PUSH2 0xAB7 DUP7 DUP7 DUP7 PUSH2 0x1A16 JUMP JUMPDEST PUSH2 0xAD4 JUMP JUMPDEST PUSH2 0xAC7 DUP7 DUP7 DUP7 PUSH2 0x1A16 JUMP JUMPDEST PUSH2 0xAD3 DUP7 PUSH1 0x8 SLOAD PUSH2 0x1B06 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP3 POP POP POP PUSH2 0xAE2 PUSH2 0x1B85 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB0F DUP3 PUSH2 0xAE9 JUMP JUMPDEST PUSH2 0xB18 DUP2 PUSH2 0x19BC JUMP JUMPDEST PUSH2 0xB22 DUP4 DUP4 PUSH2 0x1B8F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB38 PUSH2 0x19A3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBA6 DUP3 DUP3 PUSH2 0x1C79 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0xAE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3 PUSH2 0xBD5 DUP2 PUSH2 0x19BC JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC43 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3A SWAP1 PUSH2 0x2AAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xA PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0xCA4 PUSH2 0x19D0 JUMP JUMPDEST PUSH32 0x508F8F8BE8F5DBCB88F4F4500430B8B3684C471ED936F31FEA912C78AD46A6B9 PUSH2 0xCCE DUP2 PUSH2 0x19BC JUMP JUMPDEST PUSH2 0xCF9 DUP4 DUP4 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D63 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x494215F965756BBC8B7F57ADDD2A0EBDBCE467A4999F8320C67ADC1771885D7B DUP5 NUMBER DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xD2E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0xD3F PUSH2 0x1B85 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD93 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD8A SWAP1 PUSH2 0x2BB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x9EDFAD36E7D4D9DA54B4F78F22BF97CB5B58BB7998294A4288DA41C15C647C45 PUSH2 0xDBD DUP2 PUSH2 0x19BC JUMP JUMPDEST PUSH32 0x63706707D038997D2210EB026BB1339397DEAB463921538A81BB98E69EE54CA8 DUP3 PUSH2 0xDE7 PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDF5 SWAP3 SWAP2 SWAP1 PUSH2 0x294E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xE0E PUSH2 0xE08 PUSH2 0x19A3 JUMP JUMPDEST DUP4 PUSH2 0x1B06 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xE61 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE58 SWAP1 PUSH2 0x2BB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xEB1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA8 SWAP1 PUSH2 0x2C1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x7D800F56A05ADCB6245DF540492A560D0E668AAC15EE6C7DD40668064913DA33 PUSH2 0xEDB DUP2 PUSH2 0x19BC JUMP JUMPDEST PUSH1 0x7 SLOAD DUP3 PUSH2 0xEE7 PUSH2 0x9D4 JUMP JUMPDEST PUSH2 0xEF1 SWAP2 SWAP1 PUSH2 0x2C39 JUMP JUMPDEST GT ISZERO PUSH2 0xF32 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF29 SWAP1 PUSH2 0x2CB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xE98063832B4FF0356868961B75F7F49B096B14EA066C9725301AD197F2F63147 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF63 SWAP3 SWAP2 SWAP1 PUSH2 0x2CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xF75 DUP4 DUP4 PUSH2 0x1DE2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xF82 PUSH2 0x19D0 JUMP JUMPDEST PUSH32 0x508F8F8BE8F5DBCB88F4F4500430B8B3684C471ED936F31FEA912C78AD46A6B9 PUSH2 0xFAC DUP2 PUSH2 0x19BC JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xFEF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH32 0x3B1C0368C81E47D03164182DC6F9FCF4F5E4B3BD9462D74960D729F73138CE36 DUP4 NUMBER DUP5 PUSH1 0x40 MLOAD PUSH2 0x1023 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0x1034 PUSH2 0x1B85 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0xAE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3 DUP2 JUMP JUMPDEST PUSH32 0x9EDFAD36E7D4D9DA54B4F78F22BF97CB5B58BB7998294A4288DA41C15C647C45 DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH32 0xC8A3BEFA5973FF6E159AFC769978D92F26BAE29C51A73D11C9112A05B68D25E6 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x114A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1141 SWAP1 PUSH2 0x2BB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xC8A3BEFA5973FF6E159AFC769978D92F26BAE29C51A73D11C9112A05B68D25E6 PUSH2 0x1174 DUP2 PUSH2 0x19BC JUMP JUMPDEST PUSH32 0xE419CE2AAB145A1FEAF5893BB6A9478F9282415BBD81C76D5CFFF2D4F13431DD DUP4 DUP4 PUSH2 0x119F PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11AE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x11C0 DUP4 DUP4 PUSH2 0x1B06 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x7D800F56A05ADCB6245DF540492A560D0E668AAC15EE6C7DD40668064913DA33 DUP2 JUMP JUMPDEST PUSH32 0x508F8F8BE8F5DBCB88F4F4500430B8B3684C471ED936F31FEA912C78AD46A6B9 DUP2 JUMP JUMPDEST PUSH32 0x8C66330D9D4F6ABA064F25EF2A307366EA6D917616F44C075AA60FA15E5CB1CB DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x12C0 SWAP1 PUSH2 0x290F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x12EC SWAP1 PUSH2 0x290F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1337 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x130E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1337 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x131A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1390 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1387 SWAP1 PUSH2 0x2BB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x13E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D7 SWAP1 PUSH2 0x2DCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x8C66330D9D4F6ABA064F25EF2A307366EA6D917616F44C075AA60FA15E5CB1CB PUSH2 0x140A DUP2 PUSH2 0x19BC JUMP JUMPDEST PUSH1 0x7 SLOAD DUP3 PUSH2 0x1416 PUSH2 0x9D4 JUMP JUMPDEST PUSH2 0x1420 SWAP2 SWAP1 PUSH2 0x2C39 JUMP JUMPDEST GT ISZERO PUSH2 0x1461 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1458 SWAP1 PUSH2 0x2CB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x772F66A00A405709C30E7F18FEADCC8F123B20C09C7260165D3EEC36C9F21372 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1490 SWAP2 SWAP1 PUSH2 0x2404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x14A9 PUSH2 0x14A3 PUSH2 0x19A3 JUMP JUMPDEST DUP4 PUSH2 0x1DE2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x14BC PUSH2 0x19D0 JUMP JUMPDEST PUSH0 PUSH2 0x14C5 PUSH2 0x19A3 JUMP JUMPDEST SWAP1 POP PUSH1 0xA PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1526 JUMPI PUSH2 0x1521 DUP2 DUP6 DUP6 PUSH2 0x1A16 JUMP JUMPDEST PUSH2 0x153E JUMP JUMPDEST PUSH2 0x1531 DUP2 DUP6 DUP6 PUSH2 0x1A16 JUMP JUMPDEST PUSH2 0x153D DUP2 PUSH1 0x8 SLOAD PUSH2 0x1B06 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x154B PUSH2 0x1B85 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x15A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1597 SWAP1 PUSH2 0x2BB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xEA4DEFABEB90FA1E79F929D6C8D482FEE8A115926A592B79634D39A67CCE3B62 PUSH2 0x15CA DUP2 PUSH2 0x19BC JUMP JUMPDEST PUSH2 0x15D2 PUSH2 0x9D4 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x1614 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x160B SWAP1 PUSH2 0x2E37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH32 0xA11CBDEB4D62442FAE7C8EC6286585B17C47ACB7B17BBCAB1BEADCE84BEFA300 DUP3 PUSH2 0x1645 PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1653 SWAP3 SWAP2 SWAP1 PUSH2 0x294E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x169E DUP3 PUSH2 0xAE9 JUMP JUMPDEST PUSH2 0x16A7 DUP2 PUSH2 0x19BC JUMP JUMPDEST PUSH2 0x16B1 DUP4 DUP4 PUSH2 0x1C79 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xAE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3 PUSH2 0x1763 DUP2 PUSH2 0x19BC JUMP JUMPDEST DUP2 PUSH1 0x9 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x17C8 JUMPI PUSH32 0x5668502CA8E7B393C09D1DAC964CA45A27870A78D7BA212B7A189450897CA05F NUMBER PUSH2 0x17AD PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17BB SWAP3 SWAP2 SWAP1 PUSH2 0x294E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1809 JUMP JUMPDEST PUSH32 0x98E05482FDB38DF5EB461FB932FA6E1AF90A3569939CE5A8D92D699B102D6402 NUMBER PUSH2 0x17F2 PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1800 SWAP3 SWAP2 SWAP1 PUSH2 0x294E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP JUMP JUMPDEST PUSH32 0xEA4DEFABEB90FA1E79F929D6C8D482FEE8A115926A592B79634D39A67CCE3B62 DUP2 JUMP JUMPDEST PUSH32 0xAE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3 PUSH2 0x185B DUP2 PUSH2 0x19BC JUMP JUMPDEST DUP2 PUSH1 0x8 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH32 0xAE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3 PUSH2 0x1890 DUP2 PUSH2 0x19BC JUMP JUMPDEST DUP2 PUSH1 0x9 PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x18F5 JUMPI PUSH32 0x218E25F0A7435729F5A66AAE50A9ED0084535A0080300C1C2E8366D8DF7136ED NUMBER PUSH2 0x18DA PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18E8 SWAP3 SWAP2 SWAP1 PUSH2 0x294E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1936 JUMP JUMPDEST PUSH32 0x41606E1DCEE38320F9EDBFCD642AEAA81BB2140C705DE9D4A7814024A1E9A314 NUMBER PUSH2 0x191F PUSH2 0x19A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x192D SWAP3 SWAP2 SWAP1 PUSH2 0x294E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x19B7 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1E61 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x19CD DUP2 PUSH2 0x19C8 PUSH2 0x19A3 JUMP JUMPDEST PUSH2 0x2030 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x1A0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A86 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A7D SWAP2 SWAP1 PUSH2 0x2E55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AF6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AED SWAP2 SWAP1 PUSH2 0x2E55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B01 DUP4 DUP4 DUP4 PUSH2 0x2081 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B76 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B6D SWAP2 SWAP1 PUSH2 0x2E55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B81 DUP3 PUSH0 DUP4 PUSH2 0x2081 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B9A DUP4 DUP4 PUSH2 0x123A JUMP JUMPDEST PUSH2 0x1C6F JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1C0C PUSH2 0x19A3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1C73 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C84 DUP4 DUP4 PUSH2 0x123A JUMP JUMPDEST ISZERO PUSH2 0x1D59 JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1CF6 PUSH2 0x19A3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1D5D JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DDD DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1D96 SWAP3 SWAP2 SWAP1 PUSH2 0x2CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x229A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E52 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E49 SWAP2 SWAP1 PUSH2 0x2E55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E5D PUSH0 DUP4 DUP4 PUSH2 0x2081 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1ED1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EC8 SWAP2 SWAP1 PUSH2 0x2E55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F41 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F38 SWAP2 SWAP1 PUSH2 0x2E55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x202A JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2021 SWAP2 SWAP1 PUSH2 0x2404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x203A DUP3 DUP3 PUSH2 0x123A JUMP JUMPDEST PUSH2 0x207D JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2074 SWAP3 SWAP2 SWAP1 PUSH2 0x2E6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x20D1 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x20C5 SWAP2 SWAP1 PUSH2 0x2C39 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x219F JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x215A JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2151 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x21E6 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2230 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x228D SWAP2 SWAP1 PUSH2 0x2404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x22B9 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x22D2 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x22ED JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x232F JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2326 SWAP2 SWAP1 PUSH2 0x2E55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x236D DUP2 PUSH2 0x2339 JUMP JUMPDEST DUP2 EQ PUSH2 0x2377 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2388 DUP2 PUSH2 0x2364 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23A3 JUMPI PUSH2 0x23A2 PUSH2 0x2335 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23B0 DUP5 DUP3 DUP6 ADD PUSH2 0x237A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23CD DUP2 PUSH2 0x23B9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23E6 PUSH0 DUP4 ADD DUP5 PUSH2 0x23C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23FE DUP2 PUSH2 0x23EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2417 PUSH0 DUP4 ADD DUP5 PUSH2 0x23F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x245F DUP3 PUSH2 0x241D JUMP JUMPDEST PUSH2 0x2469 DUP2 DUP6 PUSH2 0x2427 JUMP JUMPDEST SWAP4 POP PUSH2 0x2479 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2437 JUMP JUMPDEST PUSH2 0x2482 DUP2 PUSH2 0x2445 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24A5 DUP2 DUP5 PUSH2 0x2455 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24D6 DUP3 PUSH2 0x24AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24E6 DUP2 PUSH2 0x24CC JUMP JUMPDEST DUP2 EQ PUSH2 0x24F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2501 DUP2 PUSH2 0x24DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2510 DUP2 PUSH2 0x23EC JUMP JUMPDEST DUP2 EQ PUSH2 0x251A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x252B DUP2 PUSH2 0x2507 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2547 JUMPI PUSH2 0x2546 PUSH2 0x2335 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2554 DUP6 DUP3 DUP7 ADD PUSH2 0x24F3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2565 DUP6 DUP3 DUP7 ADD PUSH2 0x251D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2578 DUP2 PUSH2 0x23B9 JUMP JUMPDEST DUP2 EQ PUSH2 0x2582 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2593 DUP2 PUSH2 0x256F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25AE JUMPI PUSH2 0x25AD PUSH2 0x2335 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25BB DUP5 DUP3 DUP6 ADD PUSH2 0x2585 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x25DB JUMPI PUSH2 0x25DA PUSH2 0x2335 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25E8 DUP7 DUP3 DUP8 ADD PUSH2 0x24F3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x25F9 DUP7 DUP3 DUP8 ADD PUSH2 0x24F3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x260A DUP7 DUP3 DUP8 ADD PUSH2 0x251D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2626 DUP2 PUSH2 0x2614 JUMP JUMPDEST DUP2 EQ PUSH2 0x2630 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2641 DUP2 PUSH2 0x261D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x265C JUMPI PUSH2 0x265B PUSH2 0x2335 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2669 DUP5 DUP3 DUP6 ADD PUSH2 0x2633 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x267B DUP2 PUSH2 0x2614 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2694 PUSH0 DUP4 ADD DUP5 PUSH2 0x2672 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26B0 JUMPI PUSH2 0x26AF PUSH2 0x2335 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x26BD DUP6 DUP3 DUP7 ADD PUSH2 0x2633 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x26CE DUP6 DUP3 DUP7 ADD PUSH2 0x24F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26ED DUP2 PUSH2 0x26D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2706 PUSH0 DUP4 ADD DUP5 PUSH2 0x26E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2722 JUMPI PUSH2 0x2721 PUSH2 0x2335 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x272F DUP6 DUP3 DUP7 ADD PUSH2 0x24F3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2740 DUP6 DUP3 DUP7 ADD PUSH2 0x2585 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2754 DUP3 PUSH2 0x24CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2764 DUP2 PUSH2 0x274A JUMP JUMPDEST DUP2 EQ PUSH2 0x276E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x277F DUP2 PUSH2 0x275B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x279C JUMPI PUSH2 0x279B PUSH2 0x2335 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x27A9 DUP7 DUP3 DUP8 ADD PUSH2 0x2771 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x27BA DUP7 DUP3 DUP8 ADD PUSH2 0x24F3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x27CB DUP7 DUP3 DUP8 ADD PUSH2 0x251D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27EA JUMPI PUSH2 0x27E9 PUSH2 0x2335 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x27F7 DUP5 DUP3 DUP6 ADD PUSH2 0x251D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x280A DUP3 PUSH2 0x24AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x281A DUP2 PUSH2 0x2800 JUMP JUMPDEST DUP2 EQ PUSH2 0x2824 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2835 DUP2 PUSH2 0x2811 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2851 JUMPI PUSH2 0x2850 PUSH2 0x2335 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x285E DUP6 DUP3 DUP7 ADD PUSH2 0x2827 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x286F DUP6 DUP3 DUP7 ADD PUSH2 0x251D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x288E JUMPI PUSH2 0x288D PUSH2 0x2335 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x289B DUP5 DUP3 DUP6 ADD PUSH2 0x24F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x28BA JUMPI PUSH2 0x28B9 PUSH2 0x2335 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x28C7 DUP6 DUP3 DUP7 ADD PUSH2 0x24F3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x28D8 DUP6 DUP3 DUP7 ADD PUSH2 0x24F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2926 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2939 JUMPI PUSH2 0x2938 PUSH2 0x28E2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2948 DUP2 PUSH2 0x24CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2961 PUSH0 DUP4 ADD DUP6 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x296E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x293F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH0 DUP3 ADD MSTORE PUSH32 0x6C6C6F77616E6365000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29CF PUSH1 0x28 DUP4 PUSH2 0x2427 JUMP JUMPDEST SWAP2 POP PUSH2 0x29DA DUP3 PUSH2 0x2975 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29FC DUP2 PUSH2 0x29C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2A3A DUP3 PUSH2 0x23EC JUMP JUMPDEST SWAP2 POP PUSH2 0x2A45 DUP4 PUSH2 0x23EC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2A5D JUMPI PUSH2 0x2A5C PUSH2 0x2A03 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A97 PUSH1 0xF DUP4 PUSH2 0x2427 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AA2 DUP3 PUSH2 0x2A63 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2AC4 DUP2 PUSH2 0x2A8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2AEE PUSH2 0x2AE9 PUSH2 0x2AE4 DUP5 PUSH2 0x24AD JUMP JUMPDEST PUSH2 0x2ACB JUMP JUMPDEST PUSH2 0x24AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2AFF DUP3 PUSH2 0x2AD4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2B10 DUP3 PUSH2 0x2AF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B20 DUP2 PUSH2 0x2B06 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2B39 PUSH0 DUP4 ADD DUP8 PUSH2 0x2B17 JUMP JUMPDEST PUSH2 0x2B46 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x2B53 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x293F JUMP JUMPDEST PUSH2 0x2B60 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x23F5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x436F6E74726163743A20436F6E74726163742069732050617573656400000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B9D PUSH1 0x1C DUP4 PUSH2 0x2427 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BA8 DUP3 PUSH2 0x2B69 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2BCA DUP2 PUSH2 0x2B91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D696E74696E6720746F2064697361626C656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C05 PUSH1 0x13 DUP4 PUSH2 0x2427 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C10 DUP3 PUSH2 0x2BD1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C32 DUP2 PUSH2 0x2BF9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2C43 DUP3 PUSH2 0x23EC JUMP JUMPDEST SWAP2 POP PUSH2 0x2C4E DUP4 PUSH2 0x23EC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2C66 JUMPI PUSH2 0x2C65 PUSH2 0x2A03 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6E74726163743A20537570706C7920436170206578636565646564000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2CA0 PUSH1 0x1D DUP4 PUSH2 0x2427 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CAB DUP3 PUSH2 0x2C6C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2CCD DUP2 PUSH2 0x2C94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2CE7 PUSH0 DUP4 ADD DUP6 PUSH2 0x293F JUMP JUMPDEST PUSH2 0x2CF4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x23F5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D05 DUP3 PUSH2 0x2AF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D15 DUP2 PUSH2 0x2CFB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2D2E PUSH0 DUP4 ADD DUP7 PUSH2 0x2D0C JUMP JUMPDEST PUSH2 0x2D3B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x2D48 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x23F5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2D63 PUSH0 DUP4 ADD DUP7 PUSH2 0x293F JUMP JUMPDEST PUSH2 0x2D70 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x2D7D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x293F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4D696E74696E672064697361626C656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2DB9 PUSH1 0x10 DUP4 PUSH2 0x2427 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DC4 DUP3 PUSH2 0x2D85 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2DE6 DUP2 PUSH2 0x2DAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6E74726163743A20537570706C792043617020746F6F206C6F7700000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E21 PUSH1 0x1C DUP4 PUSH2 0x2427 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E2C DUP3 PUSH2 0x2DED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2E4E DUP2 PUSH2 0x2E15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E68 PUSH0 DUP4 ADD DUP5 PUSH2 0x293F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2E81 PUSH0 DUP4 ADD DUP6 PUSH2 0x293F JUMP JUMPDEST PUSH2 0x2E8E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2672 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2EA8 PUSH0 DUP4 ADD DUP7 PUSH2 0x293F JUMP JUMPDEST PUSH2 0x2EB5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x2EC2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x23F5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF 0xF9 0xD0 ADD CALLDATASIZE BLOCKHASH 0xC6 0xEF CALLDATALOAD SGT DUP1 0xF 0xBC 0xCA 0x4B 0xD4 0x2E 0xEE JUMPI BYTE INVALID 0xAF PUSH31 0x5AD10EBF4B5198A3A364736F6C634300081A00330000000000000000000000 ",
							"sourceMap": "768:13365:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1924:16:16;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6175:267:16;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2849:97:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11514:746:16;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4226:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2707:82:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5328:245:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8507:208:16;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;13397:241;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10400:155;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9364:248;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;13922:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1612:52;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1236:50;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2117:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1368:58;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10843:181:16;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1124:54;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1733;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;994:50;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8055:76;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2182:24:16;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9852:231:16;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2187:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12542:435:16;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7701:241;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4168:50;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2030:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2275:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3551:140:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6665:298:16;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1494:54;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8889:93;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7232:303;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2565:202:0;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;1924:16:16:-;;;;:::o;1779:89:6:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;6175:267:16:-;1645:19;2464:16:0;2475:4;2464:10;:16::i;:::-;6253:7:16::1;6244:6;;:16;;;;;;;;;;;;;;;;;;6275:7;6271:165;;;6303:42;6318:12;6332;:10;:12::i;:::-;6303:42;;;;;;;:::i;:::-;;;;;;;;6271:165;;;6381:44;6398:12;6412;:10;:12::i;:::-;6381:44;;;;;;;:::i;:::-;;;;;;;;6271:165;6175:267:::0;;:::o;2849:97:6:-;2901:7;2927:12;;2920:19;;2849:97;:::o;11514:746:16:-;11623:4;2500:21:13;:19;:21::i;:::-;11639:15:16::1;11657:12;:10;:12::i;:::-;11639:30;;11679:24;11706;11716:4;11722:7;11706:9;:24::i;:::-;11679:51;;11768:5;11748:16;:25;;11740:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;11894:49;11903:4;11909:7;11937:5;11918:16;:24;;;;:::i;:::-;11894:8;:49::i;:::-;11989:4;11958:35;;:18;:27;11977:7;11958:27;;;;;;;;;;;;;;;;;;;;;;;;;:35;;::::0;11954:278:::1;;12009:26;12019:4;12025:2;12029:5;12009:9;:26::i;:::-;11954:278;;;12113:26;12123:4;12129:2;12133:5;12113:9;:26::i;:::-;12203:18;12209:4;12215:5;;12203;:18::i;:::-;11954:278;12249:4;12242:11;;;;2542:20:13::0;:18;:20::i;:::-;11514:746:16;;;;;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;4226:136::-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;2707:82:6:-;2756:5;2780:2;2773:9;;2707:82;:::o;5328:245:0:-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;8507:208:16:-;1645:19;2464:16:0;2475:4;2464:10;:16::i;:::-;8636:1:16::1;8614:24;;:10;:24;;::::0;8606:52:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;8701:7;8668:18;:30;8687:10;8668:30;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;8507:208:::0;;;:::o;13397:241::-;2500:21:13;:19;:21::i;:::-;1767:20:16::1;2464:16:0;2475:4;2464:10;:16::i;:::-;13513:48:16::2;13541:5;13548:12;13520:6;13513:27;;;;:48;;;;;:::i;:::-;13576:55;13589:6;13597:12;13611:5;13618:12;13576:55;;;;;;;;;:::i;:::-;;;;;;;;2531:1:13::1;2542:20:::0;:18;:20::i;:::-;13397:241:16;;;:::o;10400:155::-;5358:6;;;;;;;;;;;5357:7;5349:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;1268:18:::1;2464:16:0;2475:4;2464:10;:16::i;:::-;10475:35:16::2;10488:7;10497:12;:10;:12::i;:::-;10475:35;;;;;;;:::i;:::-;;;;;;;;10520:28;10526:12;:10;:12::i;:::-;10540:7;10520:5;:28::i;:::-;5407:1:::1;10400:155:::0;:::o;9364:248::-;5358:6;;;;;;;;;;;5357:7;5349:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;5800:14:::1;;;;;;;;;;;5799:15;5791:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;1158:20:::2;2464:16:0;2475:4;2464:10;:16::i;:::-;9495:4:16::3;;9484:7;9468:13;:11;:13::i;:::-;:23;;;;:::i;:::-;:31;;9460:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;9548:28;9563:3;9568:7;9548:28;;;;;;;:::i;:::-;;;;;;;;9586:19;9592:3;9597:7;9586:5;:19::i;:::-;5848:1:::2;9364:248:::0;;:::o;13922:204::-;2500:21:13;:19;:21::i;:::-;1767:20:16::1;2464:16:0;2475:4;2464:10;:16::i;:::-;14031:5:16::2;:14;;:28;14046:12;14031:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;14074:45;14085:5;14092:12;14106;14074:45;;;;;;;;:::i;:::-;;;;;;;;2531:1:13::1;2542:20:::0;:18;:20::i;:::-;13922:204:16;;:::o;1612:52::-;1645:19;1612:52;:::o;1236:50::-;1268:18;1236:50;:::o;2117:18::-;;;;;;;;;;;;;:::o;1368:58::-;1404:22;1368:58;:::o;3004:116:6:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;10843:181:16:-;5358:6;;;;;;;;;;;5357:7;5349:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;1404:22:::1;2464:16:0;2475:4;2464:10;:16::i;:::-;10940:46:16::2;10957:5;10964:7;10973:12;:10;:12::i;:::-;10940:46;;;;;;;;:::i;:::-;;;;;;;;10996:21;11002:5;11009:7;10996:5;:21::i;:::-;5407:1:::1;10843:181:::0;;:::o;1124:54::-;1158:20;1124:54;:::o;1733:::-;1767:20;1733:54;:::o;994:50::-;1026:18;994:50;:::o;8055:76::-;8097:4;8120;;8113:11;;8055:76;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;2182:24:16:-;;;;;;;;;;;;;:::o;1981:93:6:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;9852:231:16:-;5358:6;;;;;;;;;;;5357:7;5349:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;5570:12:::1;;;;;;;;;;;5569:13;5561:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;1026:18:::2;2464:16:0;2475:4;2464:10;:16::i;:::-;9964:4:16::3;;9953:7;9937:13;:11;:13::i;:::-;:23;;;;:::i;:::-;:31;;9929:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;10017:21;10030:7;10017:21;;;;;;:::i;:::-;;;;;;;;10048:28;10054:12;:10;:12::i;:::-;10068:7;10048:5;:28::i;:::-;5613:1:::2;9852:231:::0;:::o;2187:49:0:-;2232:4;2187:49;;;:::o;12542:435:16:-;12633:4;2500:21:13;:19;:21::i;:::-;12649:13:16::1;12665:12;:10;:12::i;:::-;12649:28;;12692:18;:25;12711:5;12692:25;;;;;;;;;;;;;;;;;;;;;;;;;12688:261;;;12733:27;12743:5;12750:2;12754:5;12733:9;:27::i;:::-;12688:261;;;12840:27;12850:5;12857:2;12861:5;12840:9;:27::i;:::-;12881:19;12887:5;12894;;12881;:19::i;:::-;12688:261;12966:4;12959:11;;;2542:20:13::0;:18;:20::i;:::-;12542:435:16;;;;:::o;7701:241::-;5358:6;;;;;;;;;;;5357:7;5349:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;1528:20:::1;2464:16:0;2475:4;2464:10;:16::i;:::-;7805:13:16::2;:11;:13::i;:::-;7791:10;:27;;7783:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7868:10;7861:4;:17;;;;7893:42;7910:10;7922:12;:10;:12::i;:::-;7893:42;;;;;;;:::i;:::-;;;;;;;;5407:1:::1;7701:241:::0;:::o;4168:50::-;;;;;;;;;;;;;;;;;;;;;;:::o;2030:24::-;;;;:::o;2275:26::-;;;;;;;;;;;;;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;3551:140:6:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;6665:298:16:-;1645:19;2464:16:0;2475:4;2464:10;:16::i;:::-;6759:15:16::1;6744:12;;:30;;;;;;;;;;;;;;;;;;6789:15;6785:172;;;6825:43;6841:12;6855;:10;:12::i;:::-;6825:43;;;;;;;:::i;:::-;;;;;;;;6785:172;;;6904:42;6919:12;6933;:10;:12::i;:::-;6904:42;;;;;;;:::i;:::-;;;;;;;;6785:172;6665:298:::0;;:::o;1494:54::-;1528:20;1494:54;:::o;8889:93::-;1645:19;2464:16:0;2475:4;2464:10;:16::i;:::-;8968:7:16::1;8960:5;:15;;;;8889:93:::0;;:::o;7232:303::-;1645:19;2464:16:0;2475:4;2464:10;:16::i;:::-;7329:14:16::1;7312;;:31;;;;;;;;;;;;;;;;;;7358:14;7354:175;;;7393:45;7411:12;7425;:10;:12::i;:::-;7393:45;;;;;;;:::i;:::-;;;;;;;;7354:175;;;7474:44;7491:12;7505;:10;:12::i;:::-;7474:44;;;;;;;:::i;:::-;;;;;;;;7354:175;7232:303:::0;;:::o;763:146:14:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;656:96:11:-;709:7;735:10;728:17;;656:96;:::o;8726:128:6:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;2575:307:13:-;1899:1;2702:7;;:18;2698:86;;2743:30;;;;;;;;;;;;;;2698:86;1899:1;2858:7;:17;;;;2575:307::o;5393:300:6:-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;7984:206::-;8073:1;8054:21;;:7;:21;;;8050:89;;8125:1;8098:30;;;;;;;;;;;:::i;:::-;;;;;;;;8050:89;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;:::-;7984:206;;:::o;2888:208:13:-;1857:1;3068:7;:21;;;;2888:208::o;6179:316:0:-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;6730:317::-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;1271:160:9:-;1353:71;1373:5;1395;:14;;;1412:2;1416:5;1380:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1353:19;:71::i;:::-;1271:160;;;:::o;7458:208:6:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;6008:1107:6:-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7738:720:9:-;7818:18;7846:19;7984:4;7981:1;7974:4;7968:11;7961:4;7955;7951:15;7948:1;7941:5;7934;7929:60;8041:7;8031:176;;8085:4;8079:11;8130:16;8127:1;8122:3;8107:40;8176:16;8171:3;8164:29;8031:176;8234:16;8220:30;;8284:1;8278:8;8263:23;;7900:396;8324:1;8310:10;:15;:68;;8377:1;8362:11;:16;;8310:68;;;8358:1;8336:5;8328:26;;;:31;8310:68;8306:146;;;8434:5;8401:40;;;;;;;;;;;:::i;:::-;;;;;;;;8306:146;7808:650;;7738:720;;:::o;88:117:17:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:118::-;1688:24;1706:5;1688:24;:::i;:::-;1683:3;1676:37;1601:118;;:::o;1725:222::-;1818:4;1856:2;1845:9;1841:18;1833:26;;1869:71;1937:1;1926:9;1922:17;1913:6;1869:71;:::i;:::-;1725:222;;;;:::o;1953:99::-;2005:6;2039:5;2033:12;2023:22;;1953:99;;;:::o;2058:169::-;2142:11;2176:6;2171:3;2164:19;2216:4;2211:3;2207:14;2192:29;;2058:169;;;;:::o;2233:139::-;2322:6;2317:3;2312;2306:23;2363:1;2354:6;2349:3;2345:16;2338:27;2233:139;;;:::o;2378:102::-;2419:6;2470:2;2466:7;2461:2;2454:5;2450:14;2446:28;2436:38;;2378:102;;;:::o;2486:377::-;2574:3;2602:39;2635:5;2602:39;:::i;:::-;2657:71;2721:6;2716:3;2657:71;:::i;:::-;2650:78;;2737:65;2795:6;2790:3;2783:4;2776:5;2772:16;2737:65;:::i;:::-;2827:29;2849:6;2827:29;:::i;:::-;2822:3;2818:39;2811:46;;2578:285;2486:377;;;;:::o;2869:313::-;2982:4;3020:2;3009:9;3005:18;2997:26;;3069:9;3063:4;3059:20;3055:1;3044:9;3040:17;3033:47;3097:78;3170:4;3161:6;3097:78;:::i;:::-;3089:86;;2869:313;;;;:::o;3188:126::-;3225:7;3265:42;3258:5;3254:54;3243:65;;3188:126;;;:::o;3320:96::-;3357:7;3386:24;3404:5;3386:24;:::i;:::-;3375:35;;3320:96;;;:::o;3422:122::-;3495:24;3513:5;3495:24;:::i;:::-;3488:5;3485:35;3475:63;;3534:1;3531;3524:12;3475:63;3422:122;:::o;3550:139::-;3596:5;3634:6;3621:20;3612:29;;3650:33;3677:5;3650:33;:::i;:::-;3550:139;;;;:::o;3695:122::-;3768:24;3786:5;3768:24;:::i;:::-;3761:5;3758:35;3748:63;;3807:1;3804;3797:12;3748:63;3695:122;:::o;3823:139::-;3869:5;3907:6;3894:20;3885:29;;3923:33;3950:5;3923:33;:::i;:::-;3823:139;;;;:::o;3968:474::-;4036:6;4044;4093:2;4081:9;4072:7;4068:23;4064:32;4061:119;;;4099:79;;:::i;:::-;4061:119;4219:1;4244:53;4289:7;4280:6;4269:9;4265:22;4244:53;:::i;:::-;4234:63;;4190:117;4346:2;4372:53;4417:7;4408:6;4397:9;4393:22;4372:53;:::i;:::-;4362:63;;4317:118;3968:474;;;;;:::o;4448:116::-;4518:21;4533:5;4518:21;:::i;:::-;4511:5;4508:32;4498:60;;4554:1;4551;4544:12;4498:60;4448:116;:::o;4570:133::-;4613:5;4651:6;4638:20;4629:29;;4667:30;4691:5;4667:30;:::i;:::-;4570:133;;;;:::o;4709:323::-;4765:6;4814:2;4802:9;4793:7;4789:23;4785:32;4782:119;;;4820:79;;:::i;:::-;4782:119;4940:1;4965:50;5007:7;4998:6;4987:9;4983:22;4965:50;:::i;:::-;4955:60;;4911:114;4709:323;;;;:::o;5038:619::-;5115:6;5123;5131;5180:2;5168:9;5159:7;5155:23;5151:32;5148:119;;;5186:79;;:::i;:::-;5148:119;5306:1;5331:53;5376:7;5367:6;5356:9;5352:22;5331:53;:::i;:::-;5321:63;;5277:117;5433:2;5459:53;5504:7;5495:6;5484:9;5480:22;5459:53;:::i;:::-;5449:63;;5404:118;5561:2;5587:53;5632:7;5623:6;5612:9;5608:22;5587:53;:::i;:::-;5577:63;;5532:118;5038:619;;;;;:::o;5663:77::-;5700:7;5729:5;5718:16;;5663:77;;;:::o;5746:122::-;5819:24;5837:5;5819:24;:::i;:::-;5812:5;5809:35;5799:63;;5858:1;5855;5848:12;5799:63;5746:122;:::o;5874:139::-;5920:5;5958:6;5945:20;5936:29;;5974:33;6001:5;5974:33;:::i;:::-;5874:139;;;;:::o;6019:329::-;6078:6;6127:2;6115:9;6106:7;6102:23;6098:32;6095:119;;;6133:79;;:::i;:::-;6095:119;6253:1;6278:53;6323:7;6314:6;6303:9;6299:22;6278:53;:::i;:::-;6268:63;;6224:117;6019:329;;;;:::o;6354:118::-;6441:24;6459:5;6441:24;:::i;:::-;6436:3;6429:37;6354:118;;:::o;6478:222::-;6571:4;6609:2;6598:9;6594:18;6586:26;;6622:71;6690:1;6679:9;6675:17;6666:6;6622:71;:::i;:::-;6478:222;;;;:::o;6706:474::-;6774:6;6782;6831:2;6819:9;6810:7;6806:23;6802:32;6799:119;;;6837:79;;:::i;:::-;6799:119;6957:1;6982:53;7027:7;7018:6;7007:9;7003:22;6982:53;:::i;:::-;6972:63;;6928:117;7084:2;7110:53;7155:7;7146:6;7135:9;7131:22;7110:53;:::i;:::-;7100:63;;7055:118;6706:474;;;;;:::o;7186:86::-;7221:7;7261:4;7254:5;7250:16;7239:27;;7186:86;;;:::o;7278:112::-;7361:22;7377:5;7361:22;:::i;:::-;7356:3;7349:35;7278:112;;:::o;7396:214::-;7485:4;7523:2;7512:9;7508:18;7500:26;;7536:67;7600:1;7589:9;7585:17;7576:6;7536:67;:::i;:::-;7396:214;;;;:::o;7616:468::-;7681:6;7689;7738:2;7726:9;7717:7;7713:23;7709:32;7706:119;;;7744:79;;:::i;:::-;7706:119;7864:1;7889:53;7934:7;7925:6;7914:9;7910:22;7889:53;:::i;:::-;7879:63;;7835:117;7991:2;8017:50;8059:7;8050:6;8039:9;8035:22;8017:50;:::i;:::-;8007:60;;7962:115;7616:468;;;;;:::o;8090:111::-;8142:7;8171:24;8189:5;8171:24;:::i;:::-;8160:35;;8090:111;;;:::o;8207:152::-;8295:39;8328:5;8295:39;:::i;:::-;8288:5;8285:50;8275:78;;8349:1;8346;8339:12;8275:78;8207:152;:::o;8365:169::-;8426:5;8464:6;8451:20;8442:29;;8480:48;8522:5;8480:48;:::i;:::-;8365:169;;;;:::o;8540:649::-;8632:6;8640;8648;8697:2;8685:9;8676:7;8672:23;8668:32;8665:119;;;8703:79;;:::i;:::-;8665:119;8823:1;8848:68;8908:7;8899:6;8888:9;8884:22;8848:68;:::i;:::-;8838:78;;8794:132;8965:2;8991:53;9036:7;9027:6;9016:9;9012:22;8991:53;:::i;:::-;8981:63;;8936:118;9093:2;9119:53;9164:7;9155:6;9144:9;9140:22;9119:53;:::i;:::-;9109:63;;9064:118;8540:649;;;;;:::o;9195:329::-;9254:6;9303:2;9291:9;9282:7;9278:23;9274:32;9271:119;;;9309:79;;:::i;:::-;9271:119;9429:1;9454:53;9499:7;9490:6;9479:9;9475:22;9454:53;:::i;:::-;9444:63;;9400:117;9195:329;;;;:::o;9530:104::-;9575:7;9604:24;9622:5;9604:24;:::i;:::-;9593:35;;9530:104;;;:::o;9640:138::-;9721:32;9747:5;9721:32;:::i;:::-;9714:5;9711:43;9701:71;;9768:1;9765;9758:12;9701:71;9640:138;:::o;9784:155::-;9838:5;9876:6;9863:20;9854:29;;9892:41;9927:5;9892:41;:::i;:::-;9784:155;;;;:::o;9945:490::-;10021:6;10029;10078:2;10066:9;10057:7;10053:23;10049:32;10046:119;;;10084:79;;:::i;:::-;10046:119;10204:1;10229:61;10282:7;10273:6;10262:9;10258:22;10229:61;:::i;:::-;10219:71;;10175:125;10339:2;10365:53;10410:7;10401:6;10390:9;10386:22;10365:53;:::i;:::-;10355:63;;10310:118;9945:490;;;;;:::o;10441:329::-;10500:6;10549:2;10537:9;10528:7;10524:23;10520:32;10517:119;;;10555:79;;:::i;:::-;10517:119;10675:1;10700:53;10745:7;10736:6;10725:9;10721:22;10700:53;:::i;:::-;10690:63;;10646:117;10441:329;;;;:::o;10776:474::-;10844:6;10852;10901:2;10889:9;10880:7;10876:23;10872:32;10869:119;;;10907:79;;:::i;:::-;10869:119;11027:1;11052:53;11097:7;11088:6;11077:9;11073:22;11052:53;:::i;:::-;11042:63;;10998:117;11154:2;11180:53;11225:7;11216:6;11205:9;11201:22;11180:53;:::i;:::-;11170:63;;11125:118;10776:474;;;;;:::o;11256:180::-;11304:77;11301:1;11294:88;11401:4;11398:1;11391:15;11425:4;11422:1;11415:15;11442:320;11486:6;11523:1;11517:4;11513:12;11503:22;;11570:1;11564:4;11560:12;11591:18;11581:81;;11647:4;11639:6;11635:17;11625:27;;11581:81;11709:2;11701:6;11698:14;11678:18;11675:38;11672:84;;11728:18;;:::i;:::-;11672:84;11493:269;11442:320;;;:::o;11768:118::-;11855:24;11873:5;11855:24;:::i;:::-;11850:3;11843:37;11768:118;;:::o;11892:332::-;12013:4;12051:2;12040:9;12036:18;12028:26;;12064:71;12132:1;12121:9;12117:17;12108:6;12064:71;:::i;:::-;12145:72;12213:2;12202:9;12198:18;12189:6;12145:72;:::i;:::-;11892:332;;;;;:::o;12230:227::-;12370:34;12366:1;12358:6;12354:14;12347:58;12439:10;12434:2;12426:6;12422:15;12415:35;12230:227;:::o;12463:366::-;12605:3;12626:67;12690:2;12685:3;12626:67;:::i;:::-;12619:74;;12702:93;12791:3;12702:93;:::i;:::-;12820:2;12815:3;12811:12;12804:19;;12463:366;;;:::o;12835:419::-;13001:4;13039:2;13028:9;13024:18;13016:26;;13088:9;13082:4;13078:20;13074:1;13063:9;13059:17;13052:47;13116:131;13242:4;13116:131;:::i;:::-;13108:139;;12835:419;;;:::o;13260:180::-;13308:77;13305:1;13298:88;13405:4;13402:1;13395:15;13429:4;13426:1;13419:15;13446:194;13486:4;13506:20;13524:1;13506:20;:::i;:::-;13501:25;;13540:20;13558:1;13540:20;:::i;:::-;13535:25;;13584:1;13581;13577:9;13569:17;;13608:1;13602:4;13599:11;13596:37;;;13613:18;;:::i;:::-;13596:37;13446:194;;;;:::o;13646:165::-;13786:17;13782:1;13774:6;13770:14;13763:41;13646:165;:::o;13817:366::-;13959:3;13980:67;14044:2;14039:3;13980:67;:::i;:::-;13973:74;;14056:93;14145:3;14056:93;:::i;:::-;14174:2;14169:3;14165:12;14158:19;;13817:366;;;:::o;14189:419::-;14355:4;14393:2;14382:9;14378:18;14370:26;;14442:9;14436:4;14432:20;14428:1;14417:9;14413:17;14406:47;14470:131;14596:4;14470:131;:::i;:::-;14462:139;;14189:419;;;:::o;14614:60::-;14642:3;14663:5;14656:12;;14614:60;;;:::o;14680:142::-;14730:9;14763:53;14781:34;14790:24;14808:5;14790:24;:::i;:::-;14781:34;:::i;:::-;14763:53;:::i;:::-;14750:66;;14680:142;;;:::o;14828:126::-;14878:9;14911:37;14942:5;14911:37;:::i;:::-;14898:50;;14828:126;;;:::o;14960:141::-;15025:9;15058:37;15089:5;15058:37;:::i;:::-;15045:50;;14960:141;;;:::o;15107:161::-;15209:52;15255:5;15209:52;:::i;:::-;15204:3;15197:65;15107:161;;:::o;15274:583::-;15466:4;15504:3;15493:9;15489:19;15481:27;;15518:86;15601:1;15590:9;15586:17;15577:6;15518:86;:::i;:::-;15614:72;15682:2;15671:9;15667:18;15658:6;15614:72;:::i;:::-;15696;15764:2;15753:9;15749:18;15740:6;15696:72;:::i;:::-;15778;15846:2;15835:9;15831:18;15822:6;15778:72;:::i;:::-;15274:583;;;;;;;:::o;15863:178::-;16003:30;15999:1;15991:6;15987:14;15980:54;15863:178;:::o;16047:366::-;16189:3;16210:67;16274:2;16269:3;16210:67;:::i;:::-;16203:74;;16286:93;16375:3;16286:93;:::i;:::-;16404:2;16399:3;16395:12;16388:19;;16047:366;;;:::o;16419:419::-;16585:4;16623:2;16612:9;16608:18;16600:26;;16672:9;16666:4;16662:20;16658:1;16647:9;16643:17;16636:47;16700:131;16826:4;16700:131;:::i;:::-;16692:139;;16419:419;;;:::o;16844:169::-;16984:21;16980:1;16972:6;16968:14;16961:45;16844:169;:::o;17019:366::-;17161:3;17182:67;17246:2;17241:3;17182:67;:::i;:::-;17175:74;;17258:93;17347:3;17258:93;:::i;:::-;17376:2;17371:3;17367:12;17360:19;;17019:366;;;:::o;17391:419::-;17557:4;17595:2;17584:9;17580:18;17572:26;;17644:9;17638:4;17634:20;17630:1;17619:9;17615:17;17608:47;17672:131;17798:4;17672:131;:::i;:::-;17664:139;;17391:419;;;:::o;17816:191::-;17856:3;17875:20;17893:1;17875:20;:::i;:::-;17870:25;;17909:20;17927:1;17909:20;:::i;:::-;17904:25;;17952:1;17949;17945:9;17938:16;;17973:3;17970:1;17967:10;17964:36;;;17980:18;;:::i;:::-;17964:36;17816:191;;;;:::o;18013:179::-;18153:31;18149:1;18141:6;18137:14;18130:55;18013:179;:::o;18198:366::-;18340:3;18361:67;18425:2;18420:3;18361:67;:::i;:::-;18354:74;;18437:93;18526:3;18437:93;:::i;:::-;18555:2;18550:3;18546:12;18539:19;;18198:366;;;:::o;18570:419::-;18736:4;18774:2;18763:9;18759:18;18751:26;;18823:9;18817:4;18813:20;18809:1;18798:9;18794:17;18787:47;18851:131;18977:4;18851:131;:::i;:::-;18843:139;;18570:419;;;:::o;18995:332::-;19116:4;19154:2;19143:9;19139:18;19131:26;;19167:71;19235:1;19224:9;19220:17;19211:6;19167:71;:::i;:::-;19248:72;19316:2;19305:9;19301:18;19292:6;19248:72;:::i;:::-;18995:332;;;;;:::o;19333:134::-;19391:9;19424:37;19455:5;19424:37;:::i;:::-;19411:50;;19333:134;;;:::o;19473:147::-;19568:45;19607:5;19568:45;:::i;:::-;19563:3;19556:58;19473:147;;:::o;19626:458::-;19783:4;19821:2;19810:9;19806:18;19798:26;;19834:79;19910:1;19899:9;19895:17;19886:6;19834:79;:::i;:::-;19923:72;19991:2;19980:9;19976:18;19967:6;19923:72;:::i;:::-;20005;20073:2;20062:9;20058:18;20049:6;20005:72;:::i;:::-;19626:458;;;;;;:::o;20090:442::-;20239:4;20277:2;20266:9;20262:18;20254:26;;20290:71;20358:1;20347:9;20343:17;20334:6;20290:71;:::i;:::-;20371:72;20439:2;20428:9;20424:18;20415:6;20371:72;:::i;:::-;20453;20521:2;20510:9;20506:18;20497:6;20453:72;:::i;:::-;20090:442;;;;;;:::o;20538:166::-;20678:18;20674:1;20666:6;20662:14;20655:42;20538:166;:::o;20710:366::-;20852:3;20873:67;20937:2;20932:3;20873:67;:::i;:::-;20866:74;;20949:93;21038:3;20949:93;:::i;:::-;21067:2;21062:3;21058:12;21051:19;;20710:366;;;:::o;21082:419::-;21248:4;21286:2;21275:9;21271:18;21263:26;;21335:9;21329:4;21325:20;21321:1;21310:9;21306:17;21299:47;21363:131;21489:4;21363:131;:::i;:::-;21355:139;;21082:419;;;:::o;21507:178::-;21647:30;21643:1;21635:6;21631:14;21624:54;21507:178;:::o;21691:366::-;21833:3;21854:67;21918:2;21913:3;21854:67;:::i;:::-;21847:74;;21930:93;22019:3;21930:93;:::i;:::-;22048:2;22043:3;22039:12;22032:19;;21691:366;;;:::o;22063:419::-;22229:4;22267:2;22256:9;22252:18;22244:26;;22316:9;22310:4;22306:20;22302:1;22291:9;22287:17;22280:47;22344:131;22470:4;22344:131;:::i;:::-;22336:139;;22063:419;;;:::o;22488:222::-;22581:4;22619:2;22608:9;22604:18;22596:26;;22632:71;22700:1;22689:9;22685:17;22676:6;22632:71;:::i;:::-;22488:222;;;;:::o;22716:332::-;22837:4;22875:2;22864:9;22860:18;22852:26;;22888:71;22956:1;22945:9;22941:17;22932:6;22888:71;:::i;:::-;22969:72;23037:2;23026:9;23022:18;23013:6;22969:72;:::i;:::-;22716:332;;;;;:::o;23054:442::-;23203:4;23241:2;23230:9;23226:18;23218:26;;23254:71;23322:1;23311:9;23307:17;23298:6;23254:71;:::i;:::-;23335:72;23403:2;23392:9;23388:18;23379:6;23335:72;:::i;:::-;23417;23485:2;23474:9;23470:18;23461:6;23417:72;:::i;:::-;23054:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2406400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "463",
								"_ADMIN()": "392",
								"_BURN()": "414",
								"_BURNFROM()": "458",
								"_MINT()": "437",
								"_MINTTO()": "393",
								"_RESCUE()": "415",
								"_SUPPLY()": "435",
								"_cap()": "2494",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2984",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "472",
								"disableMint(bool)": "infinite",
								"disableMintTo(bool)": "infinite",
								"ethRescue(address,uint256)": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3167",
								"mint(uint256)": "infinite",
								"mintDisabled()": "2584",
								"mintTo(address,uint256)": "infinite",
								"mintToDisabled()": "2650",
								"moveERC20(address,address,uint256)": "infinite",
								"name()": "infinite",
								"paused()": "2577",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"setPaused(bool)": "infinite",
								"setSupplyCap(uint256)": "infinite",
								"setTxFee(uint256)": "25116",
								"setWhitelistAddress(address,bool)": "infinite",
								"supplyCap()": "2566",
								"supportsInterface(bytes4)": "764",
								"symbol()": "infinite",
								"totalSupply()": "2478",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"txFee()": "2536",
								"whitelistedAddress(address)": "2922"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 768,
									"end": 14133,
									"name": "PUSH",
									"source": 16,
									"value": "80"
								},
								{
									"begin": 768,
									"end": 14133,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 768,
									"end": 14133,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 2050,
									"end": 2054,
									"name": "PUSH",
									"source": 16,
									"value": "11C37937E08000"
								},
								{
									"begin": 2030,
									"end": 2054,
									"name": "PUSH",
									"source": 16,
									"value": "8"
								},
								{
									"begin": 2030,
									"end": 2054,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 4505,
									"end": 5130,
									"name": "CALLVALUE",
									"source": 16
								},
								{
									"begin": 4505,
									"end": 5130,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 4505,
									"end": 5130,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 4505,
									"end": 5130,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 4505,
									"end": 5130,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 4505,
									"end": 5130,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 4505,
									"end": 5130,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 4505,
									"end": 5130,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 4505,
									"end": 5130,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 4505,
									"end": 5130,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4505,
									"end": 5130,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 6,
									"value": "546F6B656E000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 6,
									"value": "544B4E0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1857,
									"end": 1858,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 2061,
									"end": 2068,
									"name": "PUSH",
									"source": 13,
									"value": "6"
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4558,
									"end": 4562,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "84595161401484A000000"
								},
								{
									"begin": 4551,
									"end": 4555,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "7"
								},
								{
									"begin": 4551,
									"end": 4562,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 4551,
									"end": 4562,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4551,
									"end": 4562,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 4551,
									"end": 4562,
									"modifierDepth": 1,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4656,
									"end": 4661,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 4641,
									"end": 4653,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "9"
								},
								{
									"begin": 4641,
									"end": 4653,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 4641,
									"end": 4661,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "100"
								},
								{
									"begin": 4641,
									"end": 4661,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 16
								},
								{
									"begin": 4641,
									"end": 4661,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 4641,
									"end": 4661,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 16
								},
								{
									"begin": 4641,
									"end": 4661,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 4641,
									"end": 4661,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "FF"
								},
								{
									"begin": 4641,
									"end": 4661,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 16
								},
								{
									"begin": 4641,
									"end": 4661,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 4641,
									"end": 4661,
									"modifierDepth": 1,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 4641,
									"end": 4661,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4641,
									"end": 4661,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 4641,
									"end": 4661,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 4641,
									"end": 4661,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 4641,
									"end": 4661,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 16
								},
								{
									"begin": 4641,
									"end": 4661,
									"modifierDepth": 1,
									"name": "OR",
									"source": 16
								},
								{
									"begin": 4641,
									"end": 4661,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4641,
									"end": 4661,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 4641,
									"end": 4661,
									"modifierDepth": 1,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4716,
									"end": 4721,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 4699,
									"end": 4713,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "9"
								},
								{
									"begin": 4699,
									"end": 4713,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "2"
								},
								{
									"begin": 4699,
									"end": 4721,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "100"
								},
								{
									"begin": 4699,
									"end": 4721,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 16
								},
								{
									"begin": 4699,
									"end": 4721,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 4699,
									"end": 4721,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 16
								},
								{
									"begin": 4699,
									"end": 4721,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 4699,
									"end": 4721,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "FF"
								},
								{
									"begin": 4699,
									"end": 4721,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 16
								},
								{
									"begin": 4699,
									"end": 4721,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 4699,
									"end": 4721,
									"modifierDepth": 1,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 4699,
									"end": 4721,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4699,
									"end": 4721,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 4699,
									"end": 4721,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 4699,
									"end": 4721,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 4699,
									"end": 4721,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 16
								},
								{
									"begin": 4699,
									"end": 4721,
									"modifierDepth": 1,
									"name": "OR",
									"source": 16
								},
								{
									"begin": 4699,
									"end": 4721,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4699,
									"end": 4721,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 4699,
									"end": 4721,
									"modifierDepth": 1,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4781,
									"end": 4825,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "11"
								},
								{
									"begin": 2232,
									"end": 2236,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4792,
									"end": 4810,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 4792,
									"end": 4810,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 4812,
									"end": 4824,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "12"
								},
								{
									"begin": 4812,
									"end": 4822,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "13"
								},
								{
									"begin": 4812,
									"end": 4822,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4812,
									"end": 4822,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 4812,
									"end": 4824,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4812,
									"end": 4824,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 4812,
									"end": 4824,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4812,
									"end": 4824,
									"modifierDepth": 1,
									"name": "tag",
									"source": 16,
									"value": "12"
								},
								{
									"begin": 4812,
									"end": 4824,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4781,
									"end": 4791,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "14"
								},
								{
									"begin": 4781,
									"end": 4791,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4781,
									"end": 4791,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 4781,
									"end": 4825,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4781,
									"end": 4825,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 4781,
									"end": 4825,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4781,
									"end": 4825,
									"modifierDepth": 1,
									"name": "tag",
									"source": 16,
									"value": "11"
								},
								{
									"begin": 4781,
									"end": 4825,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4781,
									"end": 4825,
									"modifierDepth": 1,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4883,
									"end": 4915,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "15"
								},
								{
									"begin": 1645,
									"end": 1664,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "AE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3"
								},
								{
									"begin": 4902,
									"end": 4914,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "16"
								},
								{
									"begin": 4902,
									"end": 4912,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "13"
								},
								{
									"begin": 4902,
									"end": 4912,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4902,
									"end": 4912,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 4902,
									"end": 4914,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4902,
									"end": 4914,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 4902,
									"end": 4914,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4902,
									"end": 4914,
									"modifierDepth": 1,
									"name": "tag",
									"source": 16,
									"value": "16"
								},
								{
									"begin": 4902,
									"end": 4914,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4883,
									"end": 4893,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "14"
								},
								{
									"begin": 4883,
									"end": 4893,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4883,
									"end": 4893,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 4883,
									"end": 4915,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4883,
									"end": 4915,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 4883,
									"end": 4915,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4883,
									"end": 4915,
									"modifierDepth": 1,
									"name": "tag",
									"source": 16,
									"value": "15"
								},
								{
									"begin": 4883,
									"end": 4915,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4883,
									"end": 4915,
									"modifierDepth": 1,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4925,
									"end": 4956,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "17"
								},
								{
									"begin": 1026,
									"end": 1044,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "8C66330D9D4F6ABA064F25EF2A307366EA6D917616F44C075AA60FA15E5CB1CB"
								},
								{
									"begin": 4943,
									"end": 4955,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "18"
								},
								{
									"begin": 4943,
									"end": 4953,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "13"
								},
								{
									"begin": 4943,
									"end": 4953,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4943,
									"end": 4953,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 4943,
									"end": 4955,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4943,
									"end": 4955,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 4943,
									"end": 4955,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4943,
									"end": 4955,
									"modifierDepth": 1,
									"name": "tag",
									"source": 16,
									"value": "18"
								},
								{
									"begin": 4943,
									"end": 4955,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4925,
									"end": 4935,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "14"
								},
								{
									"begin": 4925,
									"end": 4935,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4925,
									"end": 4935,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 4925,
									"end": 4956,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4925,
									"end": 4956,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 4925,
									"end": 4956,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4925,
									"end": 4956,
									"modifierDepth": 1,
									"name": "tag",
									"source": 16,
									"value": "17"
								},
								{
									"begin": 4925,
									"end": 4956,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4925,
									"end": 4956,
									"modifierDepth": 1,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4966,
									"end": 4997,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "19"
								},
								{
									"begin": 1268,
									"end": 1286,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "9EDFAD36E7D4D9DA54B4F78F22BF97CB5B58BB7998294A4288DA41C15C647C45"
								},
								{
									"begin": 4984,
									"end": 4996,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4984,
									"end": 4994,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "13"
								},
								{
									"begin": 4984,
									"end": 4994,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4984,
									"end": 4994,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 4984,
									"end": 4996,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4984,
									"end": 4996,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 4984,
									"end": 4996,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4984,
									"end": 4996,
									"modifierDepth": 1,
									"name": "tag",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4984,
									"end": 4996,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4966,
									"end": 4976,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "14"
								},
								{
									"begin": 4966,
									"end": 4976,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4966,
									"end": 4976,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 4966,
									"end": 4997,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4966,
									"end": 4997,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 4966,
									"end": 4997,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4966,
									"end": 4997,
									"modifierDepth": 1,
									"name": "tag",
									"source": 16,
									"value": "19"
								},
								{
									"begin": 4966,
									"end": 4997,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4966,
									"end": 4997,
									"modifierDepth": 1,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5098,
									"end": 5123,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "21"
								},
								{
									"begin": 5104,
									"end": 5116,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 5104,
									"end": 5114,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "13"
								},
								{
									"begin": 5104,
									"end": 5114,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 5104,
									"end": 5114,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 5104,
									"end": 5116,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 5104,
									"end": 5116,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 5104,
									"end": 5116,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5104,
									"end": 5116,
									"modifierDepth": 1,
									"name": "tag",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 5104,
									"end": 5116,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5118,
									"end": 5122,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "D3C21BCECCEDA1000000"
								},
								{
									"begin": 5098,
									"end": 5103,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "23"
								},
								{
									"begin": 5098,
									"end": 5103,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 5098,
									"end": 5103,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 5098,
									"end": 5123,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 5098,
									"end": 5123,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 5098,
									"end": 5123,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5098,
									"end": 5123,
									"modifierDepth": 1,
									"name": "tag",
									"source": 16,
									"value": "21"
								},
								{
									"begin": 5098,
									"end": 5123,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 768,
									"end": 14133,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 768,
									"end": 14133,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 6285,
									"end": 6289,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6298,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6322,
									"end": 6326,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6336,
									"end": 6343,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7547,
									"end": 7548,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 6,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 7572,
									"end": 7604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2931,
									"end": 2935,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2961,
									"end": 2965,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2975,
									"end": 2982,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6113,
									"end": 6114,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6097,
									"end": 6101,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6316,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6321,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6340,
									"end": 6351,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6411,
									"end": 6415,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6417,
									"end": 6428,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6430,
									"end": 6435,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 6,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 6386,
									"end": 6436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6603,
									"end": 6608,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6589,
									"end": 6600,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6271,
									"end": 6633,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6661,
									"end": 6662,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6647,
									"end": 6649,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6826,
									"end": 6831,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7038,
									"end": 7043,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 7031,
									"end": 7033,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 6,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 7083,
									"end": 7108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 6
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 17,
									"value": "51"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 17,
									"value": "52"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 17,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 17,
									"value": "53"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 17,
									"value": "54"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 17,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 17
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "81"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 17,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 17,
									"value": "81"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 17
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "82"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "83"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "53"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 17,
									"value": "83"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 17,
									"value": "82"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 17,
									"value": "55"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 17
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 17,
									"value": "56"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 17
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 17,
									"value": "57"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 17,
									"value": "58"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 17,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "88"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "57"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 17,
									"value": "88"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "89"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "57"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 17,
									"value": "89"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 17
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 17
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 17
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 17
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 17,
									"value": "59"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 17,
									"value": "60"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 17,
									"value": "61"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "93"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "94"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "95"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "59"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 17,
									"value": "95"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "60"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 17,
									"value": "94"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "59"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 17,
									"value": "93"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 17,
									"value": "62"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 17,
									"value": "63"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "98"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "61"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 17,
									"value": "98"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "99"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "100"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "62"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 17,
									"value": "100"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 17
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "58"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 17,
									"value": "99"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 17,
									"value": "64"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 17,
									"value": "65"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "103"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "64"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 17,
									"value": "103"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "104"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "63"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 17,
									"value": "104"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 17,
									"value": "66"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 17,
									"value": "106"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "108"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "109"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "65"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 17,
									"value": "109"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "106"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 17,
									"value": "108"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 17,
									"value": "67"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "111"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "112"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "55"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 17,
									"value": "112"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "113"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "56"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 17,
									"value": "113"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "114"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 17,
									"value": "114"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "115"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "116"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "56"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 17,
									"value": "116"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "66"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 17,
									"value": "115"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 17,
									"value": "111"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 17,
									"value": "68"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 17,
									"value": "69"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "119"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 17,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "68"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 17,
									"value": "119"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 17,
									"value": "70"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "121"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "69"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 17,
									"value": "121"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 17,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 17
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 17,
									"value": "7"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "123"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "51"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 17,
									"value": "123"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "124"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "125"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "52"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 17,
									"value": "125"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 17,
									"value": "124"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "126"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 17
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "54"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 17,
									"value": "126"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "127"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "67"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 17,
									"value": "127"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "129"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "130"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 17
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 17,
									"value": "130"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "131"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "70"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 17,
									"value": "131"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "128"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 17,
									"value": "129"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "132"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "55"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 17,
									"value": "132"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 17,
									"value": "133"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "135"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 17
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 17
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "133"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 17,
									"value": "135"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "136"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 17
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "137"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 17
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "69"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 17,
									"value": "137"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 17,
									"value": "136"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 17,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 17
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 17
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 17,
									"value": "128"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "tag",
									"source": 17,
									"value": "71"
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5271,
									"end": 5278,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 5311,
									"end": 5353,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5304,
									"end": 5309,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 5300,
									"end": 5354,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5234,
									"end": 5360,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "tag",
									"source": 17,
									"value": "72"
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5403,
									"end": 5410,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "140"
								},
								{
									"begin": 5450,
									"end": 5455,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "71"
								},
								{
									"begin": 5432,
									"end": 5456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "tag",
									"source": 17,
									"value": "140"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5366,
									"end": 5462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "tag",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "142"
								},
								{
									"begin": 5573,
									"end": 5578,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "72"
								},
								{
									"begin": 5555,
									"end": 5579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "tag",
									"source": 17,
									"value": "142"
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5550,
									"end": 5553,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 5543,
									"end": 5580,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5468,
									"end": 5586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "tag",
									"source": 17,
									"value": "35"
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5685,
									"end": 5689,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 5723,
									"end": 5725,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 5712,
									"end": 5721,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 5708,
									"end": 5726,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "144"
								},
								{
									"begin": 5804,
									"end": 5805,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 5793,
									"end": 5802,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 5789,
									"end": 5806,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 5780,
									"end": 5786,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 5736,
									"end": 5807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "tag",
									"source": 17,
									"value": "144"
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5592,
									"end": 5814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5820,
									"end": 6000,
									"name": "tag",
									"source": 17,
									"value": "74"
								},
								{
									"begin": 5820,
									"end": 6000,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5868,
									"end": 5945,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5865,
									"end": 5866,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 5858,
									"end": 5946,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 5965,
									"end": 5969,
									"name": "PUSH",
									"source": 17,
									"value": "11"
								},
								{
									"begin": 5962,
									"end": 5963,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 5955,
									"end": 5970,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 5989,
									"end": 5993,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 5986,
									"end": 5987,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 5979,
									"end": 5994,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "tag",
									"source": 17,
									"value": "42"
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6046,
									"end": 6049,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "147"
								},
								{
									"begin": 6083,
									"end": 6084,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "59"
								},
								{
									"begin": 6065,
									"end": 6085,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "tag",
									"source": 17,
									"value": "147"
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6060,
									"end": 6085,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 6060,
									"end": 6085,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "148"
								},
								{
									"begin": 6117,
									"end": 6118,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "59"
								},
								{
									"begin": 6099,
									"end": 6119,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "tag",
									"source": 17,
									"value": "148"
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6094,
									"end": 6119,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 6094,
									"end": 6119,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6142,
									"end": 6143,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 6139,
									"end": 6140,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 6135,
									"end": 6144,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 6128,
									"end": 6144,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 6128,
									"end": 6144,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6163,
									"end": 6166,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 6160,
									"end": 6161,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 6157,
									"end": 6167,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "149"
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "150"
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "74"
								},
								{
									"begin": 6170,
									"end": 6188,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "tag",
									"source": 17,
									"value": "150"
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "tag",
									"source": 17,
									"value": "149"
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6006,
									"end": 6197,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "tag",
									"source": 17,
									"value": "75"
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "152"
								},
								{
									"begin": 6308,
									"end": 6313,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "59"
								},
								{
									"begin": 6290,
									"end": 6314,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "tag",
									"source": 17,
									"value": "152"
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6285,
									"end": 6288,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 6278,
									"end": 6315,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6203,
									"end": 6321,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "tag",
									"source": 17,
									"value": "46"
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6476,
									"end": 6480,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 6514,
									"end": 6516,
									"name": "PUSH",
									"source": 17,
									"value": "60"
								},
								{
									"begin": 6503,
									"end": 6512,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 6499,
									"end": 6517,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 6491,
									"end": 6517,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 6491,
									"end": 6517,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "154"
								},
								{
									"begin": 6595,
									"end": 6596,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 6584,
									"end": 6593,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 6580,
									"end": 6597,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 6571,
									"end": 6577,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 6527,
									"end": 6598,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "tag",
									"source": 17,
									"value": "154"
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "155"
								},
								{
									"begin": 6676,
									"end": 6678,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 6665,
									"end": 6674,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 6661,
									"end": 6679,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 6652,
									"end": 6658,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "75"
								},
								{
									"begin": 6608,
									"end": 6680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "tag",
									"source": 17,
									"value": "155"
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "156"
								},
								{
									"begin": 6758,
									"end": 6760,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 6747,
									"end": 6756,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 6743,
									"end": 6761,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 6734,
									"end": 6740,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "75"
								},
								{
									"begin": 6690,
									"end": 6762,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "tag",
									"source": 17,
									"value": "156"
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "SWAP5",
									"source": 17
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "SWAP4",
									"source": 17
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6327,
									"end": 6769,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "tag",
									"source": 17,
									"value": "50"
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6868,
									"end": 6872,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 6906,
									"end": 6908,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 6895,
									"end": 6904,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 6891,
									"end": 6909,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 6883,
									"end": 6909,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 6883,
									"end": 6909,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "158"
								},
								{
									"begin": 6987,
									"end": 6988,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 6976,
									"end": 6985,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 6972,
									"end": 6989,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 6963,
									"end": 6969,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "75"
								},
								{
									"begin": 6919,
									"end": 6990,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "tag",
									"source": 17,
									"value": "158"
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6775,
									"end": 6997,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 768,
									"end": 14133,
									"name": "tag",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 768,
									"end": 14133,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 768,
									"end": 14133,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 768,
									"end": 14133,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 768,
									"end": 14133,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 768,
									"end": 14133,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 768,
									"end": 14133,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 768,
									"end": 14133,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 768,
									"end": 14133,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bff9d0013640c6ef3513800fbcca4bd42eee571afeaf7e5ad10ebf4b5198a3a364736f6c634300081a0033",
									".code": [
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "tag",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "79CC6790"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "45"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "A9059CBB"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "46"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "D547741F"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "47"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "D547741F"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "39"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "DD62ED3E"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "DEB6DB36"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "41"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "EA5CB532"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "42"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "F05D16F7"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "43"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "F2250D3D"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "tag",
											"source": 16,
											"value": "47"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "A9059CBB"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "34"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "B6A3F59A"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "35"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "C30796AB"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "36"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "CF820461"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "37"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "D1C9F69B"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "38"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "tag",
											"source": 16,
											"value": "46"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "91D14854"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "48"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "91D14854"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "29"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "956FECCF"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "30"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "95D89B41"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "31"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "A0712D68"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "A217FDDF"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "33"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "tag",
											"source": 16,
											"value": "48"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "79CC6790"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "7E92A7FD"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "25"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "8D580B9F"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "26"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "8EBED5B1"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "27"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "8F770AD0"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "28"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "tag",
											"source": 16,
											"value": "45"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "36568ABE"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "49"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "48132F48"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "50"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "48132F48"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "18"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "51557289"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "19"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "53A4C31E"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "5C975ABB"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "21"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "6BA77A38"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "70A08231"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "23"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "tag",
											"source": 16,
											"value": "50"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "36568ABE"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "13"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "3F914AEF"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "14"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "41F431FD"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "15"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "42966C68"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "16"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "449A52F8"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "17"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "tag",
											"source": 16,
											"value": "49"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "18160DDD"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "51"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "18160DDD"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "23B872DD"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "248A9CA3"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "10"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "2F2FF15D"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "313CE567"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "12"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "tag",
											"source": 16,
											"value": "51"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "1FFC9A7"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "60CF4E8"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "6FDDE03"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "95EA7B3"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "6"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "16C38B3C"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "7"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "tag",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 768,
											"end": 14133,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "tag",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "58"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "59"
										},
										{
											"begin": 1924,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "tag",
											"source": 16,
											"value": "58"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "61"
										},
										{
											"begin": 1924,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "tag",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 6175,
											"end": 6442,
											"name": "tag",
											"source": 16,
											"value": "7"
										},
										{
											"begin": 6175,
											"end": 6442,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6175,
											"end": 6442,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "71"
										},
										{
											"begin": 6175,
											"end": 6442,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 6175,
											"end": 6442,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6175,
											"end": 6442,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 6175,
											"end": 6442,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 6175,
											"end": 6442,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6175,
											"end": 6442,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6175,
											"end": 6442,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6175,
											"end": 6442,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "72"
										},
										{
											"begin": 6175,
											"end": 6442,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6175,
											"end": 6442,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6175,
											"end": 6442,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "73"
										},
										{
											"begin": 6175,
											"end": 6442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6175,
											"end": 6442,
											"name": "tag",
											"source": 16,
											"value": "72"
										},
										{
											"begin": 6175,
											"end": 6442,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6175,
											"end": 6442,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "74"
										},
										{
											"begin": 6175,
											"end": 6442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6175,
											"end": 6442,
											"name": "tag",
											"source": 16,
											"value": "71"
										},
										{
											"begin": 6175,
											"end": 6442,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6175,
											"end": 6442,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 11514,
											"end": 12260,
											"name": "tag",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 11514,
											"end": 12260,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11514,
											"end": 12260,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "78"
										},
										{
											"begin": 11514,
											"end": 12260,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 11514,
											"end": 12260,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 11514,
											"end": 12260,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 11514,
											"end": 12260,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 11514,
											"end": 12260,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11514,
											"end": 12260,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11514,
											"end": 12260,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11514,
											"end": 12260,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "79"
										},
										{
											"begin": 11514,
											"end": 12260,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11514,
											"end": 12260,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11514,
											"end": 12260,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 11514,
											"end": 12260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11514,
											"end": 12260,
											"name": "tag",
											"source": 16,
											"value": "79"
										},
										{
											"begin": 11514,
											"end": 12260,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11514,
											"end": 12260,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "81"
										},
										{
											"begin": 11514,
											"end": 12260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11514,
											"end": 12260,
											"name": "tag",
											"source": 16,
											"value": "78"
										},
										{
											"begin": 11514,
											"end": 12260,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11514,
											"end": 12260,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 11514,
											"end": 12260,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 11514,
											"end": 12260,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "82"
										},
										{
											"begin": 11514,
											"end": 12260,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11514,
											"end": 12260,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11514,
											"end": 12260,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "57"
										},
										{
											"begin": 11514,
											"end": 12260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11514,
											"end": 12260,
											"name": "tag",
											"source": 16,
											"value": "82"
										},
										{
											"begin": 11514,
											"end": 12260,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11514,
											"end": 12260,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 11514,
											"end": 12260,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 11514,
											"end": 12260,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 11514,
											"end": 12260,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11514,
											"end": 12260,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 11514,
											"end": 12260,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11514,
											"end": 12260,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 8507,
											"end": 8715,
											"name": "tag",
											"source": 16,
											"value": "14"
										},
										{
											"begin": 8507,
											"end": 8715,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8507,
											"end": 8715,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 8507,
											"end": 8715,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 8507,
											"end": 8715,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8507,
											"end": 8715,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 8507,
											"end": 8715,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 8507,
											"end": 8715,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8507,
											"end": 8715,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8507,
											"end": 8715,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8507,
											"end": 8715,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "101"
										},
										{
											"begin": 8507,
											"end": 8715,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8507,
											"end": 8715,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8507,
											"end": 8715,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "102"
										},
										{
											"begin": 8507,
											"end": 8715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8507,
											"end": 8715,
											"name": "tag",
											"source": 16,
											"value": "101"
										},
										{
											"begin": 8507,
											"end": 8715,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8507,
											"end": 8715,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "103"
										},
										{
											"begin": 8507,
											"end": 8715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8507,
											"end": 8715,
											"name": "tag",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 8507,
											"end": 8715,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8507,
											"end": 8715,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 13397,
											"end": 13638,
											"name": "tag",
											"source": 16,
											"value": "15"
										},
										{
											"begin": 13397,
											"end": 13638,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13397,
											"end": 13638,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "104"
										},
										{
											"begin": 13397,
											"end": 13638,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 13397,
											"end": 13638,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 13397,
											"end": 13638,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 13397,
											"end": 13638,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 13397,
											"end": 13638,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13397,
											"end": 13638,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13397,
											"end": 13638,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13397,
											"end": 13638,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "105"
										},
										{
											"begin": 13397,
											"end": 13638,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13397,
											"end": 13638,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13397,
											"end": 13638,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "106"
										},
										{
											"begin": 13397,
											"end": 13638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13397,
											"end": 13638,
											"name": "tag",
											"source": 16,
											"value": "105"
										},
										{
											"begin": 13397,
											"end": 13638,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13397,
											"end": 13638,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "107"
										},
										{
											"begin": 13397,
											"end": 13638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13397,
											"end": 13638,
											"name": "tag",
											"source": 16,
											"value": "104"
										},
										{
											"begin": 13397,
											"end": 13638,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13397,
											"end": 13638,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 10400,
											"end": 10555,
											"name": "tag",
											"source": 16,
											"value": "16"
										},
										{
											"begin": 10400,
											"end": 10555,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10400,
											"end": 10555,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "108"
										},
										{
											"begin": 10400,
											"end": 10555,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 10400,
											"end": 10555,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 10400,
											"end": 10555,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 10400,
											"end": 10555,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 10400,
											"end": 10555,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10400,
											"end": 10555,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10400,
											"end": 10555,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10400,
											"end": 10555,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "109"
										},
										{
											"begin": 10400,
											"end": 10555,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10400,
											"end": 10555,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10400,
											"end": 10555,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "110"
										},
										{
											"begin": 10400,
											"end": 10555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10400,
											"end": 10555,
											"name": "tag",
											"source": 16,
											"value": "109"
										},
										{
											"begin": 10400,
											"end": 10555,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10400,
											"end": 10555,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "111"
										},
										{
											"begin": 10400,
											"end": 10555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10400,
											"end": 10555,
											"name": "tag",
											"source": 16,
											"value": "108"
										},
										{
											"begin": 10400,
											"end": 10555,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10400,
											"end": 10555,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 9364,
											"end": 9612,
											"name": "tag",
											"source": 16,
											"value": "17"
										},
										{
											"begin": 9364,
											"end": 9612,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9364,
											"end": 9612,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "112"
										},
										{
											"begin": 9364,
											"end": 9612,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 9364,
											"end": 9612,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 9364,
											"end": 9612,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 9364,
											"end": 9612,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 9364,
											"end": 9612,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9364,
											"end": 9612,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9364,
											"end": 9612,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9364,
											"end": 9612,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "113"
										},
										{
											"begin": 9364,
											"end": 9612,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9364,
											"end": 9612,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9364,
											"end": 9612,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "68"
										},
										{
											"begin": 9364,
											"end": 9612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9364,
											"end": 9612,
											"name": "tag",
											"source": 16,
											"value": "113"
										},
										{
											"begin": 9364,
											"end": 9612,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9364,
											"end": 9612,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "114"
										},
										{
											"begin": 9364,
											"end": 9612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9364,
											"end": 9612,
											"name": "tag",
											"source": 16,
											"value": "112"
										},
										{
											"begin": 9364,
											"end": 9612,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9364,
											"end": 9612,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 13922,
											"end": 14126,
											"name": "tag",
											"source": 16,
											"value": "18"
										},
										{
											"begin": 13922,
											"end": 14126,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13922,
											"end": 14126,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "115"
										},
										{
											"begin": 13922,
											"end": 14126,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 13922,
											"end": 14126,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 13922,
											"end": 14126,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 13922,
											"end": 14126,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 13922,
											"end": 14126,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13922,
											"end": 14126,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13922,
											"end": 14126,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13922,
											"end": 14126,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "116"
										},
										{
											"begin": 13922,
											"end": 14126,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13922,
											"end": 14126,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13922,
											"end": 14126,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "117"
										},
										{
											"begin": 13922,
											"end": 14126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13922,
											"end": 14126,
											"name": "tag",
											"source": 16,
											"value": "116"
										},
										{
											"begin": 13922,
											"end": 14126,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13922,
											"end": 14126,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "118"
										},
										{
											"begin": 13922,
											"end": 14126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13922,
											"end": 14126,
											"name": "tag",
											"source": 16,
											"value": "115"
										},
										{
											"begin": 13922,
											"end": 14126,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13922,
											"end": 14126,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 1612,
											"end": 1664,
											"name": "tag",
											"source": 16,
											"value": "19"
										},
										{
											"begin": 1612,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1612,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "119"
										},
										{
											"begin": 1612,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "120"
										},
										{
											"begin": 1612,
											"end": 1664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1612,
											"end": 1664,
											"name": "tag",
											"source": 16,
											"value": "119"
										},
										{
											"begin": 1612,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1612,
											"end": 1664,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1612,
											"end": 1664,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1612,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "121"
										},
										{
											"begin": 1612,
											"end": 1664,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1612,
											"end": 1664,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1612,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "88"
										},
										{
											"begin": 1612,
											"end": 1664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1612,
											"end": 1664,
											"name": "tag",
											"source": 16,
											"value": "121"
										},
										{
											"begin": 1612,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1612,
											"end": 1664,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1612,
											"end": 1664,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1612,
											"end": 1664,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1612,
											"end": 1664,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1612,
											"end": 1664,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1612,
											"end": 1664,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1612,
											"end": 1664,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 1236,
											"end": 1286,
											"name": "tag",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1236,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1236,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "122"
										},
										{
											"begin": 1236,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "123"
										},
										{
											"begin": 1236,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1236,
											"end": 1286,
											"name": "tag",
											"source": 16,
											"value": "122"
										},
										{
											"begin": 1236,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1236,
											"end": 1286,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1286,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1236,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "124"
										},
										{
											"begin": 1236,
											"end": 1286,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1236,
											"end": 1286,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1236,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "88"
										},
										{
											"begin": 1236,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1236,
											"end": 1286,
											"name": "tag",
											"source": 16,
											"value": "124"
										},
										{
											"begin": 1236,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1236,
											"end": 1286,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1286,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1236,
											"end": 1286,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1236,
											"end": 1286,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1236,
											"end": 1286,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1236,
											"end": 1286,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1236,
											"end": 1286,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "tag",
											"source": 16,
											"value": "21"
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "125"
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "126"
										},
										{
											"begin": 2117,
											"end": 2135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "tag",
											"source": 16,
											"value": "125"
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "127"
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "57"
										},
										{
											"begin": 2117,
											"end": 2135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "tag",
											"source": 16,
											"value": "127"
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "tag",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "128"
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "129"
										},
										{
											"begin": 1368,
											"end": 1426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "tag",
											"source": 16,
											"value": "128"
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "130"
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "88"
										},
										{
											"begin": 1368,
											"end": 1426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "tag",
											"source": 16,
											"value": "130"
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 10843,
											"end": 11024,
											"name": "tag",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 10843,
											"end": 11024,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10843,
											"end": 11024,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "136"
										},
										{
											"begin": 10843,
											"end": 11024,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 10843,
											"end": 11024,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 10843,
											"end": 11024,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 10843,
											"end": 11024,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 10843,
											"end": 11024,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10843,
											"end": 11024,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10843,
											"end": 11024,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10843,
											"end": 11024,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "137"
										},
										{
											"begin": 10843,
											"end": 11024,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10843,
											"end": 11024,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10843,
											"end": 11024,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "68"
										},
										{
											"begin": 10843,
											"end": 11024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10843,
											"end": 11024,
											"name": "tag",
											"source": 16,
											"value": "137"
										},
										{
											"begin": 10843,
											"end": 11024,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10843,
											"end": 11024,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "138"
										},
										{
											"begin": 10843,
											"end": 11024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10843,
											"end": 11024,
											"name": "tag",
											"source": 16,
											"value": "136"
										},
										{
											"begin": 10843,
											"end": 11024,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10843,
											"end": 11024,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 1124,
											"end": 1178,
											"name": "tag",
											"source": 16,
											"value": "25"
										},
										{
											"begin": 1124,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1124,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "139"
										},
										{
											"begin": 1124,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "140"
										},
										{
											"begin": 1124,
											"end": 1178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1124,
											"end": 1178,
											"name": "tag",
											"source": 16,
											"value": "139"
										},
										{
											"begin": 1124,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1124,
											"end": 1178,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1124,
											"end": 1178,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1124,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "141"
										},
										{
											"begin": 1124,
											"end": 1178,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1124,
											"end": 1178,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1124,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "88"
										},
										{
											"begin": 1124,
											"end": 1178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1124,
											"end": 1178,
											"name": "tag",
											"source": 16,
											"value": "141"
										},
										{
											"begin": 1124,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1124,
											"end": 1178,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1124,
											"end": 1178,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1124,
											"end": 1178,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1124,
											"end": 1178,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1124,
											"end": 1178,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1124,
											"end": 1178,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1124,
											"end": 1178,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 1733,
											"end": 1787,
											"name": "tag",
											"source": 16,
											"value": "26"
										},
										{
											"begin": 1733,
											"end": 1787,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1733,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "142"
										},
										{
											"begin": 1733,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "143"
										},
										{
											"begin": 1733,
											"end": 1787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1733,
											"end": 1787,
											"name": "tag",
											"source": 16,
											"value": "142"
										},
										{
											"begin": 1733,
											"end": 1787,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1733,
											"end": 1787,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1733,
											"end": 1787,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1733,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "144"
										},
										{
											"begin": 1733,
											"end": 1787,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1733,
											"end": 1787,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1733,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "88"
										},
										{
											"begin": 1733,
											"end": 1787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1733,
											"end": 1787,
											"name": "tag",
											"source": 16,
											"value": "144"
										},
										{
											"begin": 1733,
											"end": 1787,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1733,
											"end": 1787,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1733,
											"end": 1787,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1733,
											"end": 1787,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1733,
											"end": 1787,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1733,
											"end": 1787,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1733,
											"end": 1787,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1733,
											"end": 1787,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 994,
											"end": 1044,
											"name": "tag",
											"source": 16,
											"value": "27"
										},
										{
											"begin": 994,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 994,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "145"
										},
										{
											"begin": 994,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "146"
										},
										{
											"begin": 994,
											"end": 1044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 994,
											"end": 1044,
											"name": "tag",
											"source": 16,
											"value": "145"
										},
										{
											"begin": 994,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 994,
											"end": 1044,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 994,
											"end": 1044,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 994,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "147"
										},
										{
											"begin": 994,
											"end": 1044,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 994,
											"end": 1044,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 994,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "88"
										},
										{
											"begin": 994,
											"end": 1044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 994,
											"end": 1044,
											"name": "tag",
											"source": 16,
											"value": "147"
										},
										{
											"begin": 994,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 994,
											"end": 1044,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 994,
											"end": 1044,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 994,
											"end": 1044,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 994,
											"end": 1044,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 994,
											"end": 1044,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 994,
											"end": 1044,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 994,
											"end": 1044,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 8055,
											"end": 8131,
											"name": "tag",
											"source": 16,
											"value": "28"
										},
										{
											"begin": 8055,
											"end": 8131,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8055,
											"end": 8131,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "148"
										},
										{
											"begin": 8055,
											"end": 8131,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "149"
										},
										{
											"begin": 8055,
											"end": 8131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8055,
											"end": 8131,
											"name": "tag",
											"source": 16,
											"value": "148"
										},
										{
											"begin": 8055,
											"end": 8131,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8055,
											"end": 8131,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 8055,
											"end": 8131,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 8055,
											"end": 8131,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "150"
										},
										{
											"begin": 8055,
											"end": 8131,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8055,
											"end": 8131,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8055,
											"end": 8131,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "61"
										},
										{
											"begin": 8055,
											"end": 8131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8055,
											"end": 8131,
											"name": "tag",
											"source": 16,
											"value": "150"
										},
										{
											"begin": 8055,
											"end": 8131,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8055,
											"end": 8131,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 8055,
											"end": 8131,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 8055,
											"end": 8131,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8055,
											"end": 8131,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8055,
											"end": 8131,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 8055,
											"end": 8131,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8055,
											"end": 8131,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2182,
											"end": 2206,
											"name": "tag",
											"source": 16,
											"value": "30"
										},
										{
											"begin": 2182,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2182,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "155"
										},
										{
											"begin": 2182,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "156"
										},
										{
											"begin": 2182,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2182,
											"end": 2206,
											"name": "tag",
											"source": 16,
											"value": "155"
										},
										{
											"begin": 2182,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2182,
											"end": 2206,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2182,
											"end": 2206,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2182,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "157"
										},
										{
											"begin": 2182,
											"end": 2206,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2182,
											"end": 2206,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2182,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "57"
										},
										{
											"begin": 2182,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2182,
											"end": 2206,
											"name": "tag",
											"source": 16,
											"value": "157"
										},
										{
											"begin": 2182,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2182,
											"end": 2206,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2182,
											"end": 2206,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2182,
											"end": 2206,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2182,
											"end": 2206,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2182,
											"end": 2206,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2182,
											"end": 2206,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2182,
											"end": 2206,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 9852,
											"end": 10083,
											"name": "tag",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 9852,
											"end": 10083,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9852,
											"end": 10083,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "161"
										},
										{
											"begin": 9852,
											"end": 10083,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 9852,
											"end": 10083,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 9852,
											"end": 10083,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 9852,
											"end": 10083,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 9852,
											"end": 10083,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9852,
											"end": 10083,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9852,
											"end": 10083,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9852,
											"end": 10083,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "162"
										},
										{
											"begin": 9852,
											"end": 10083,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9852,
											"end": 10083,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9852,
											"end": 10083,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "110"
										},
										{
											"begin": 9852,
											"end": 10083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9852,
											"end": 10083,
											"name": "tag",
											"source": 16,
											"value": "162"
										},
										{
											"begin": 9852,
											"end": 10083,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9852,
											"end": 10083,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "163"
										},
										{
											"begin": 9852,
											"end": 10083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9852,
											"end": 10083,
											"name": "tag",
											"source": 16,
											"value": "161"
										},
										{
											"begin": 9852,
											"end": 10083,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9852,
											"end": 10083,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12977,
											"name": "tag",
											"source": 16,
											"value": "34"
										},
										{
											"begin": 12542,
											"end": 12977,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12542,
											"end": 12977,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "167"
										},
										{
											"begin": 12542,
											"end": 12977,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 12542,
											"end": 12977,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 12542,
											"end": 12977,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 12542,
											"end": 12977,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 12542,
											"end": 12977,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12542,
											"end": 12977,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12542,
											"end": 12977,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12542,
											"end": 12977,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "168"
										},
										{
											"begin": 12542,
											"end": 12977,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12542,
											"end": 12977,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12542,
											"end": 12977,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "68"
										},
										{
											"begin": 12542,
											"end": 12977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12542,
											"end": 12977,
											"name": "tag",
											"source": 16,
											"value": "168"
										},
										{
											"begin": 12542,
											"end": 12977,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12542,
											"end": 12977,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "169"
										},
										{
											"begin": 12542,
											"end": 12977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12542,
											"end": 12977,
											"name": "tag",
											"source": 16,
											"value": "167"
										},
										{
											"begin": 12542,
											"end": 12977,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12542,
											"end": 12977,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 12542,
											"end": 12977,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 12542,
											"end": 12977,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "170"
										},
										{
											"begin": 12542,
											"end": 12977,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12542,
											"end": 12977,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12542,
											"end": 12977,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "57"
										},
										{
											"begin": 12542,
											"end": 12977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12542,
											"end": 12977,
											"name": "tag",
											"source": 16,
											"value": "170"
										},
										{
											"begin": 12542,
											"end": 12977,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12542,
											"end": 12977,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 12542,
											"end": 12977,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 12542,
											"end": 12977,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 12542,
											"end": 12977,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12542,
											"end": 12977,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 12542,
											"end": 12977,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12542,
											"end": 12977,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 7701,
											"end": 7942,
											"name": "tag",
											"source": 16,
											"value": "35"
										},
										{
											"begin": 7701,
											"end": 7942,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7701,
											"end": 7942,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "171"
										},
										{
											"begin": 7701,
											"end": 7942,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 7701,
											"end": 7942,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7701,
											"end": 7942,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 7701,
											"end": 7942,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 7701,
											"end": 7942,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7701,
											"end": 7942,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7701,
											"end": 7942,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7701,
											"end": 7942,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "172"
										},
										{
											"begin": 7701,
											"end": 7942,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7701,
											"end": 7942,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7701,
											"end": 7942,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "110"
										},
										{
											"begin": 7701,
											"end": 7942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7701,
											"end": 7942,
											"name": "tag",
											"source": 16,
											"value": "172"
										},
										{
											"begin": 7701,
											"end": 7942,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7701,
											"end": 7942,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "173"
										},
										{
											"begin": 7701,
											"end": 7942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7701,
											"end": 7942,
											"name": "tag",
											"source": 16,
											"value": "171"
										},
										{
											"begin": 7701,
											"end": 7942,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7701,
											"end": 7942,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "tag",
											"source": 16,
											"value": "36"
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "174"
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "175"
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "133"
										},
										{
											"begin": 4168,
											"end": 4218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "tag",
											"source": 16,
											"value": "175"
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "176"
										},
										{
											"begin": 4168,
											"end": 4218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "tag",
											"source": 16,
											"value": "174"
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "177"
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "57"
										},
										{
											"begin": 4168,
											"end": 4218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "tag",
											"source": 16,
											"value": "177"
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 2030,
											"end": 2054,
											"name": "tag",
											"source": 16,
											"value": "37"
										},
										{
											"begin": 2030,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2030,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "178"
										},
										{
											"begin": 2030,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "179"
										},
										{
											"begin": 2030,
											"end": 2054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2030,
											"end": 2054,
											"name": "tag",
											"source": 16,
											"value": "178"
										},
										{
											"begin": 2030,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2030,
											"end": 2054,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2030,
											"end": 2054,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2030,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "180"
										},
										{
											"begin": 2030,
											"end": 2054,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2030,
											"end": 2054,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2030,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "61"
										},
										{
											"begin": 2030,
											"end": 2054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2030,
											"end": 2054,
											"name": "tag",
											"source": 16,
											"value": "180"
										},
										{
											"begin": 2030,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2030,
											"end": 2054,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2030,
											"end": 2054,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2030,
											"end": 2054,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2030,
											"end": 2054,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2030,
											"end": 2054,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2030,
											"end": 2054,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2030,
											"end": 2054,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 2275,
											"end": 2301,
											"name": "tag",
											"source": 16,
											"value": "38"
										},
										{
											"begin": 2275,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2275,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "181"
										},
										{
											"begin": 2275,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "182"
										},
										{
											"begin": 2275,
											"end": 2301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2275,
											"end": 2301,
											"name": "tag",
											"source": 16,
											"value": "181"
										},
										{
											"begin": 2275,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2275,
											"end": 2301,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2275,
											"end": 2301,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2275,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "183"
										},
										{
											"begin": 2275,
											"end": 2301,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2275,
											"end": 2301,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2275,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "57"
										},
										{
											"begin": 2275,
											"end": 2301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2275,
											"end": 2301,
											"name": "tag",
											"source": 16,
											"value": "183"
										},
										{
											"begin": 2275,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2275,
											"end": 2301,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2275,
											"end": 2301,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2275,
											"end": 2301,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2275,
											"end": 2301,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2275,
											"end": 2301,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2275,
											"end": 2301,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2275,
											"end": 2301,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 6665,
											"end": 6963,
											"name": "tag",
											"source": 16,
											"value": "41"
										},
										{
											"begin": 6665,
											"end": 6963,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6665,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "192"
										},
										{
											"begin": 6665,
											"end": 6963,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 6665,
											"end": 6963,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6665,
											"end": 6963,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 6665,
											"end": 6963,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 6665,
											"end": 6963,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6665,
											"end": 6963,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6665,
											"end": 6963,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6665,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "193"
										},
										{
											"begin": 6665,
											"end": 6963,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6665,
											"end": 6963,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6665,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "73"
										},
										{
											"begin": 6665,
											"end": 6963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6665,
											"end": 6963,
											"name": "tag",
											"source": 16,
											"value": "193"
										},
										{
											"begin": 6665,
											"end": 6963,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6665,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "194"
										},
										{
											"begin": 6665,
											"end": 6963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6665,
											"end": 6963,
											"name": "tag",
											"source": 16,
											"value": "192"
										},
										{
											"begin": 6665,
											"end": 6963,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6665,
											"end": 6963,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 1494,
											"end": 1548,
											"name": "tag",
											"source": 16,
											"value": "42"
										},
										{
											"begin": 1494,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1494,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "195"
										},
										{
											"begin": 1494,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "196"
										},
										{
											"begin": 1494,
											"end": 1548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1494,
											"end": 1548,
											"name": "tag",
											"source": 16,
											"value": "195"
										},
										{
											"begin": 1494,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1494,
											"end": 1548,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1494,
											"end": 1548,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1494,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "197"
										},
										{
											"begin": 1494,
											"end": 1548,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1494,
											"end": 1548,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1494,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "88"
										},
										{
											"begin": 1494,
											"end": 1548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1494,
											"end": 1548,
											"name": "tag",
											"source": 16,
											"value": "197"
										},
										{
											"begin": 1494,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1494,
											"end": 1548,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1494,
											"end": 1548,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1494,
											"end": 1548,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1494,
											"end": 1548,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1494,
											"end": 1548,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1494,
											"end": 1548,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1494,
											"end": 1548,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 8889,
											"end": 8982,
											"name": "tag",
											"source": 16,
											"value": "43"
										},
										{
											"begin": 8889,
											"end": 8982,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8889,
											"end": 8982,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "198"
										},
										{
											"begin": 8889,
											"end": 8982,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 8889,
											"end": 8982,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8889,
											"end": 8982,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 8889,
											"end": 8982,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 8889,
											"end": 8982,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8889,
											"end": 8982,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8889,
											"end": 8982,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8889,
											"end": 8982,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "199"
										},
										{
											"begin": 8889,
											"end": 8982,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8889,
											"end": 8982,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8889,
											"end": 8982,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "110"
										},
										{
											"begin": 8889,
											"end": 8982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8889,
											"end": 8982,
											"name": "tag",
											"source": 16,
											"value": "199"
										},
										{
											"begin": 8889,
											"end": 8982,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8889,
											"end": 8982,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "200"
										},
										{
											"begin": 8889,
											"end": 8982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8889,
											"end": 8982,
											"name": "tag",
											"source": 16,
											"value": "198"
										},
										{
											"begin": 8889,
											"end": 8982,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8889,
											"end": 8982,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 7232,
											"end": 7535,
											"name": "tag",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 7232,
											"end": 7535,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7232,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "201"
										},
										{
											"begin": 7232,
											"end": 7535,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 7232,
											"end": 7535,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7232,
											"end": 7535,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 7232,
											"end": 7535,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 7232,
											"end": 7535,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7232,
											"end": 7535,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7232,
											"end": 7535,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7232,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "202"
										},
										{
											"begin": 7232,
											"end": 7535,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7232,
											"end": 7535,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7232,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "73"
										},
										{
											"begin": 7232,
											"end": 7535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7232,
											"end": 7535,
											"name": "tag",
											"source": 16,
											"value": "202"
										},
										{
											"begin": 7232,
											"end": 7535,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7232,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "203"
										},
										{
											"begin": 7232,
											"end": 7535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7232,
											"end": 7535,
											"name": "tag",
											"source": 16,
											"value": "201"
										},
										{
											"begin": 7232,
											"end": 7535,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7232,
											"end": 7535,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2748,
											"end": 2759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 2724,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "tag",
											"source": 16,
											"value": "59"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "PUSH",
											"source": 16,
											"value": "7"
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1924,
											"end": 1940,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1924,
											"end": 1940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6175,
											"end": 6442,
											"name": "tag",
											"source": 16,
											"value": "74"
										},
										{
											"begin": 6175,
											"end": 6442,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1645,
											"end": 1664,
											"name": "PUSH",
											"source": 16,
											"value": "AE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6253,
											"end": 6260,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6244,
											"end": 6250,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 6244,
											"end": 6250,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6244,
											"end": 6260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 6244,
											"end": 6260,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 6244,
											"end": 6260,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6244,
											"end": 6260,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 6244,
											"end": 6260,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6244,
											"end": 6260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 6244,
											"end": 6260,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 6244,
											"end": 6260,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 6244,
											"end": 6260,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6244,
											"end": 6260,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6244,
											"end": 6260,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6244,
											"end": 6260,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6244,
											"end": 6260,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6244,
											"end": 6260,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 6244,
											"end": 6260,
											"modifierDepth": 1,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 6244,
											"end": 6260,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6244,
											"end": 6260,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 6244,
											"end": 6260,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6275,
											"end": 6282,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6271,
											"end": 6436,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6271,
											"end": 6436,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "224"
										},
										{
											"begin": 6271,
											"end": 6436,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6303,
											"end": 6345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "D8C9C5623123DF8E137854C59A08F9084B75609FE24584228D44FFDCE5AB920A"
										},
										{
											"begin": 6318,
											"end": 6330,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 16
										},
										{
											"begin": 6332,
											"end": 6344,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "225"
										},
										{
											"begin": 6332,
											"end": 6342,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "217"
										},
										{
											"begin": 6332,
											"end": 6344,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6332,
											"end": 6344,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "225"
										},
										{
											"begin": 6332,
											"end": 6344,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6303,
											"end": 6345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6303,
											"end": 6345,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6303,
											"end": 6345,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "226"
										},
										{
											"begin": 6303,
											"end": 6345,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6303,
											"end": 6345,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6303,
											"end": 6345,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6303,
											"end": 6345,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "227"
										},
										{
											"begin": 6303,
											"end": 6345,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6303,
											"end": 6345,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "226"
										},
										{
											"begin": 6303,
											"end": 6345,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6303,
											"end": 6345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6303,
											"end": 6345,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6303,
											"end": 6345,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6303,
											"end": 6345,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6303,
											"end": 6345,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 6303,
											"end": 6345,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6303,
											"end": 6345,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 16
										},
										{
											"begin": 6271,
											"end": 6436,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "228"
										},
										{
											"begin": 6271,
											"end": 6436,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6271,
											"end": 6436,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "224"
										},
										{
											"begin": 6271,
											"end": 6436,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6381,
											"end": 6425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1E7A7234AD01ED7353BF129217F5C162773639A6CB22773E84BCD5A2B0EF362E"
										},
										{
											"begin": 6398,
											"end": 6410,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 16
										},
										{
											"begin": 6412,
											"end": 6424,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "229"
										},
										{
											"begin": 6412,
											"end": 6422,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "217"
										},
										{
											"begin": 6412,
											"end": 6424,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6412,
											"end": 6424,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "229"
										},
										{
											"begin": 6412,
											"end": 6424,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6381,
											"end": 6425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6381,
											"end": 6425,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6381,
											"end": 6425,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "230"
										},
										{
											"begin": 6381,
											"end": 6425,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6381,
											"end": 6425,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6381,
											"end": 6425,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6381,
											"end": 6425,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "227"
										},
										{
											"begin": 6381,
											"end": 6425,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6381,
											"end": 6425,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "230"
										},
										{
											"begin": 6381,
											"end": 6425,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6381,
											"end": 6425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6381,
											"end": 6425,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6381,
											"end": 6425,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6381,
											"end": 6425,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6381,
											"end": 6425,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 6381,
											"end": 6425,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6381,
											"end": 6425,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 16
										},
										{
											"begin": 6271,
											"end": 6436,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "228"
										},
										{
											"begin": 6271,
											"end": 6436,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6175,
											"end": 6442,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6175,
											"end": 6442,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6175,
											"end": 6442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11514,
											"end": 12260,
											"name": "tag",
											"source": 16,
											"value": "81"
										},
										{
											"begin": 11514,
											"end": 12260,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11623,
											"end": 11627,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "tag",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11639,
											"end": 11654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11657,
											"end": 11669,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "236"
										},
										{
											"begin": 11657,
											"end": 11667,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "217"
										},
										{
											"begin": 11657,
											"end": 11669,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11657,
											"end": 11669,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "236"
										},
										{
											"begin": 11657,
											"end": 11669,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11639,
											"end": 11669,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11639,
											"end": 11669,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11679,
											"end": 11703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11706,
											"end": 11730,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "237"
										},
										{
											"begin": 11716,
											"end": 11720,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 11722,
											"end": 11729,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 11706,
											"end": 11715,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "190"
										},
										{
											"begin": 11706,
											"end": 11730,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11706,
											"end": 11730,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "237"
										},
										{
											"begin": 11706,
											"end": 11730,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11679,
											"end": 11730,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11679,
											"end": 11730,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11768,
											"end": 11773,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 11748,
											"end": 11764,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11748,
											"end": 11773,
											"modifierDepth": 1,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 11748,
											"end": 11773,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 11740,
											"end": 11818,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "238"
										},
										{
											"begin": 11740,
											"end": 11818,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 11740,
											"end": 11818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 11740,
											"end": 11818,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 11740,
											"end": 11818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11740,
											"end": 11818,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11740,
											"end": 11818,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11740,
											"end": 11818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 11740,
											"end": 11818,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11740,
											"end": 11818,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "239"
										},
										{
											"begin": 11740,
											"end": 11818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11740,
											"end": 11818,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "240"
										},
										{
											"begin": 11740,
											"end": 11818,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11740,
											"end": 11818,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "239"
										},
										{
											"begin": 11740,
											"end": 11818,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11740,
											"end": 11818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 11740,
											"end": 11818,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 11740,
											"end": 11818,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 11740,
											"end": 11818,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11740,
											"end": 11818,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 11740,
											"end": 11818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11740,
											"end": 11818,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 11740,
											"end": 11818,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "238"
										},
										{
											"begin": 11740,
											"end": 11818,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11894,
											"end": 11943,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "241"
										},
										{
											"begin": 11903,
											"end": 11907,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 11909,
											"end": 11916,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 11937,
											"end": 11942,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 11918,
											"end": 11934,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 11918,
											"end": 11942,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "242"
										},
										{
											"begin": 11918,
											"end": 11942,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11918,
											"end": 11942,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11918,
											"end": 11942,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "243"
										},
										{
											"begin": 11918,
											"end": 11942,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11918,
											"end": 11942,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "242"
										},
										{
											"begin": 11918,
											"end": 11942,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11894,
											"end": 11902,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "219"
										},
										{
											"begin": 11894,
											"end": 11943,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11894,
											"end": 11943,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "241"
										},
										{
											"begin": 11894,
											"end": 11943,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11989,
											"end": 11993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 11958,
											"end": 11993,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 11958,
											"end": 11993,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 11958,
											"end": 11976,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "A"
										},
										{
											"begin": 11958,
											"end": 11985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11977,
											"end": 11984,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 11958,
											"end": 11985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11958,
											"end": 11985,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 11958,
											"end": 11985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11958,
											"end": 11985,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 11958,
											"end": 11985,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11958,
											"end": 11985,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11958,
											"end": 11985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 11958,
											"end": 11985,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11958,
											"end": 11985,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11958,
											"end": 11985,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11958,
											"end": 11985,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11958,
											"end": 11985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 11958,
											"end": 11985,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11958,
											"end": 11985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11958,
											"end": 11985,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 11958,
											"end": 11985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11958,
											"end": 11985,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11958,
											"end": 11985,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 11958,
											"end": 11985,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11958,
											"end": 11985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 11958,
											"end": 11985,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 11958,
											"end": 11985,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11958,
											"end": 11985,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 11958,
											"end": 11985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 11958,
											"end": 11985,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 11958,
											"end": 11993,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 11958,
											"end": 11993,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 11958,
											"end": 11993,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 11954,
											"end": 12232,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "244"
										},
										{
											"begin": 11954,
											"end": 12232,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12009,
											"end": 12035,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "245"
										},
										{
											"begin": 12019,
											"end": 12023,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 12025,
											"end": 12027,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 12029,
											"end": 12034,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 12009,
											"end": 12018,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "246"
										},
										{
											"begin": 12009,
											"end": 12035,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12009,
											"end": 12035,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "245"
										},
										{
											"begin": 12009,
											"end": 12035,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11954,
											"end": 12232,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "247"
										},
										{
											"begin": 11954,
											"end": 12232,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11954,
											"end": 12232,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "244"
										},
										{
											"begin": 11954,
											"end": 12232,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12113,
											"end": 12139,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "248"
										},
										{
											"begin": 12123,
											"end": 12127,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 12129,
											"end": 12131,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 12133,
											"end": 12138,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 12113,
											"end": 12122,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "246"
										},
										{
											"begin": 12113,
											"end": 12139,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12113,
											"end": 12139,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "248"
										},
										{
											"begin": 12113,
											"end": 12139,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12203,
											"end": 12221,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "249"
										},
										{
											"begin": 12209,
											"end": 12213,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 12215,
											"end": 12220,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 12215,
											"end": 12220,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 12203,
											"end": 12208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "250"
										},
										{
											"begin": 12203,
											"end": 12221,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12203,
											"end": 12221,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "249"
										},
										{
											"begin": 12203,
											"end": 12221,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11954,
											"end": 12232,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "247"
										},
										{
											"begin": 11954,
											"end": 12232,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12249,
											"end": 12253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 12242,
											"end": 12253,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12242,
											"end": 12253,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12242,
											"end": 12253,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12242,
											"end": 12253,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 2542,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 2542,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "tag",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11514,
											"end": 12260,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 11514,
											"end": 12260,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 11514,
											"end": 12260,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11514,
											"end": 12260,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11514,
											"end": 12260,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11514,
											"end": 12260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4300,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 5443,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8507,
											"end": 8715,
											"name": "tag",
											"source": 16,
											"value": "103"
										},
										{
											"begin": 8507,
											"end": 8715,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1645,
											"end": 1664,
											"name": "PUSH",
											"source": 16,
											"value": "AE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8636,
											"end": 8637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8614,
											"end": 8638,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8614,
											"end": 8638,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 8614,
											"end": 8624,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8614,
											"end": 8638,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8614,
											"end": 8638,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 8614,
											"end": 8638,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 8606,
											"end": 8658,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "269"
										},
										{
											"begin": 8606,
											"end": 8658,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 8606,
											"end": 8658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 8606,
											"end": 8658,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 8606,
											"end": 8658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8606,
											"end": 8658,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8606,
											"end": 8658,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8606,
											"end": 8658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 8606,
											"end": 8658,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8606,
											"end": 8658,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "270"
										},
										{
											"begin": 8606,
											"end": 8658,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8606,
											"end": 8658,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "271"
										},
										{
											"begin": 8606,
											"end": 8658,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8606,
											"end": 8658,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "270"
										},
										{
											"begin": 8606,
											"end": 8658,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8606,
											"end": 8658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 8606,
											"end": 8658,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 8606,
											"end": 8658,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8606,
											"end": 8658,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8606,
											"end": 8658,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 8606,
											"end": 8658,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8606,
											"end": 8658,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 8606,
											"end": 8658,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "269"
										},
										{
											"begin": 8606,
											"end": 8658,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8701,
											"end": 8708,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8668,
											"end": 8686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "A"
										},
										{
											"begin": 8668,
											"end": 8698,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8687,
											"end": 8697,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 8668,
											"end": 8698,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8668,
											"end": 8698,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 8668,
											"end": 8698,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8668,
											"end": 8698,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 8668,
											"end": 8698,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8668,
											"end": 8698,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8668,
											"end": 8698,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8668,
											"end": 8698,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8668,
											"end": 8698,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8668,
											"end": 8698,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8668,
											"end": 8698,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8668,
											"end": 8698,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8668,
											"end": 8698,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8668,
											"end": 8698,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8668,
											"end": 8698,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 8668,
											"end": 8698,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8668,
											"end": 8708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 8668,
											"end": 8708,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 8668,
											"end": 8708,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8668,
											"end": 8708,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 8668,
											"end": 8708,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8668,
											"end": 8708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 8668,
											"end": 8708,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 8668,
											"end": 8708,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 8668,
											"end": 8708,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 8668,
											"end": 8708,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8668,
											"end": 8708,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8668,
											"end": 8708,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8668,
											"end": 8708,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8668,
											"end": 8708,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 8668,
											"end": 8708,
											"modifierDepth": 1,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 8668,
											"end": 8708,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8668,
											"end": 8708,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 8668,
											"end": 8708,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8507,
											"end": 8715,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8507,
											"end": 8715,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8507,
											"end": 8715,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8507,
											"end": 8715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13397,
											"end": 13638,
											"name": "tag",
											"source": 16,
											"value": "107"
										},
										{
											"begin": 13397,
											"end": 13638,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "tag",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1767,
											"end": 1787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "508F8F8BE8F5DBCB88F4F4500430B8B3684C471ED936F31FEA912C78AD46A6B9"
										},
										{
											"begin": 2464,
											"end": 2480,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 2475,
											"end": 2479,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 2464,
											"end": 2480,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13513,
											"end": 13561,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "277"
										},
										{
											"begin": 13541,
											"end": 13546,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13548,
											"end": 13560,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13520,
											"end": 13526,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 13513,
											"end": 13540,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13513,
											"end": 13540,
											"modifierDepth": 2,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 13513,
											"end": 13540,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "278"
										},
										{
											"begin": 13513,
											"end": 13540,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13513,
											"end": 13561,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 13513,
											"end": 13561,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13513,
											"end": 13561,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13513,
											"end": 13561,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13513,
											"end": 13561,
											"modifierDepth": 2,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 13513,
											"end": 13561,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13513,
											"end": 13561,
											"modifierDepth": 2,
											"name": "tag",
											"source": 16,
											"value": "277"
										},
										{
											"begin": 13513,
											"end": 13561,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13576,
											"end": 13631,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 16,
											"value": "494215F965756BBC8B7F57ADDD2A0EBDBCE467A4999F8320C67ADC1771885D7B"
										},
										{
											"begin": 13589,
											"end": 13595,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 13597,
											"end": 13609,
											"modifierDepth": 2,
											"name": "NUMBER",
											"source": 16
										},
										{
											"begin": 13611,
											"end": 13616,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 13618,
											"end": 13630,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 13576,
											"end": 13631,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 13576,
											"end": 13631,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 13576,
											"end": 13631,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "279"
										},
										{
											"begin": 13576,
											"end": 13631,
											"modifierDepth": 2,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 13576,
											"end": 13631,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 13576,
											"end": 13631,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 13576,
											"end": 13631,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13576,
											"end": 13631,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13576,
											"end": 13631,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "280"
										},
										{
											"begin": 13576,
											"end": 13631,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13576,
											"end": 13631,
											"modifierDepth": 2,
											"name": "tag",
											"source": 16,
											"value": "279"
										},
										{
											"begin": 13576,
											"end": 13631,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13576,
											"end": 13631,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 13576,
											"end": 13631,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 13576,
											"end": 13631,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 13576,
											"end": 13631,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13576,
											"end": 13631,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 13576,
											"end": 13631,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13576,
											"end": 13631,
											"modifierDepth": 2,
											"name": "LOG1",
											"source": 16
										},
										{
											"begin": 2531,
											"end": 2532,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 2542,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 2542,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "tag",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13397,
											"end": 13638,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13397,
											"end": 13638,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13397,
											"end": 13638,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13397,
											"end": 13638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10400,
											"end": 10555,
											"name": "tag",
											"source": 16,
											"value": "111"
										},
										{
											"begin": 10400,
											"end": 10555,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "PUSH",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 5357,
											"end": 5364,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "283"
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "284"
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "285"
										},
										{
											"begin": 5349,
											"end": 5397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "tag",
											"source": 16,
											"value": "284"
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "tag",
											"source": 16,
											"value": "283"
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1268,
											"end": 1286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "9EDFAD36E7D4D9DA54B4F78F22BF97CB5B58BB7998294A4288DA41C15C647C45"
										},
										{
											"begin": 2464,
											"end": 2480,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 2475,
											"end": 2479,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 2464,
											"end": 2480,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10475,
											"end": 10510,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 16,
											"value": "63706707D038997D2210EB026BB1339397DEAB463921538A81BB98E69EE54CA8"
										},
										{
											"begin": 10488,
											"end": 10495,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10497,
											"end": 10509,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "289"
										},
										{
											"begin": 10497,
											"end": 10507,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "217"
										},
										{
											"begin": 10497,
											"end": 10509,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10497,
											"end": 10509,
											"modifierDepth": 2,
											"name": "tag",
											"source": 16,
											"value": "289"
										},
										{
											"begin": 10497,
											"end": 10509,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10475,
											"end": 10510,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 10475,
											"end": 10510,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 10475,
											"end": 10510,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "290"
										},
										{
											"begin": 10475,
											"end": 10510,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 10475,
											"end": 10510,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10475,
											"end": 10510,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10475,
											"end": 10510,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "227"
										},
										{
											"begin": 10475,
											"end": 10510,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10475,
											"end": 10510,
											"modifierDepth": 2,
											"name": "tag",
											"source": 16,
											"value": "290"
										},
										{
											"begin": 10475,
											"end": 10510,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10475,
											"end": 10510,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 10475,
											"end": 10510,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 10475,
											"end": 10510,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 10475,
											"end": 10510,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10475,
											"end": 10510,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 10475,
											"end": 10510,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10475,
											"end": 10510,
											"modifierDepth": 2,
											"name": "LOG1",
											"source": 16
										},
										{
											"begin": 10520,
											"end": 10548,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "291"
										},
										{
											"begin": 10526,
											"end": 10538,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "292"
										},
										{
											"begin": 10526,
											"end": 10536,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "217"
										},
										{
											"begin": 10526,
											"end": 10538,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10526,
											"end": 10538,
											"modifierDepth": 2,
											"name": "tag",
											"source": 16,
											"value": "292"
										},
										{
											"begin": 10526,
											"end": 10538,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10540,
											"end": 10547,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10520,
											"end": 10525,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "250"
										},
										{
											"begin": 10520,
											"end": 10548,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10520,
											"end": 10548,
											"modifierDepth": 2,
											"name": "tag",
											"source": 16,
											"value": "291"
										},
										{
											"begin": 10520,
											"end": 10548,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5407,
											"end": 5408,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10400,
											"end": 10555,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10400,
											"end": 10555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9364,
											"end": 9612,
											"name": "tag",
											"source": 16,
											"value": "114"
										},
										{
											"begin": 9364,
											"end": 9612,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "PUSH",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 5357,
											"end": 5364,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "294"
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "295"
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "285"
										},
										{
											"begin": 5349,
											"end": 5397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "tag",
											"source": 16,
											"value": "295"
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "tag",
											"source": 16,
											"value": "294"
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5800,
											"end": 5814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 5800,
											"end": 5814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 5800,
											"end": 5814,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5800,
											"end": 5814,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 5800,
											"end": 5814,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5800,
											"end": 5814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 5800,
											"end": 5814,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 5800,
											"end": 5814,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5800,
											"end": 5814,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 5800,
											"end": 5814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 5800,
											"end": 5814,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 5799,
											"end": 5814,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5791,
											"end": 5838,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "297"
										},
										{
											"begin": 5791,
											"end": 5838,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5791,
											"end": 5838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5791,
											"end": 5838,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5791,
											"end": 5838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5791,
											"end": 5838,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5791,
											"end": 5838,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5791,
											"end": 5838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 5791,
											"end": 5838,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5791,
											"end": 5838,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "298"
										},
										{
											"begin": 5791,
											"end": 5838,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5791,
											"end": 5838,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "299"
										},
										{
											"begin": 5791,
											"end": 5838,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5791,
											"end": 5838,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "298"
										},
										{
											"begin": 5791,
											"end": 5838,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5791,
											"end": 5838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5791,
											"end": 5838,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5791,
											"end": 5838,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5791,
											"end": 5838,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5791,
											"end": 5838,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 5791,
											"end": 5838,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5791,
											"end": 5838,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5791,
											"end": 5838,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "297"
										},
										{
											"begin": 5791,
											"end": 5838,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 16,
											"value": "7D800F56A05ADCB6245DF540492A560D0E668AAC15EE6C7DD40668064913DA33"
										},
										{
											"begin": 2464,
											"end": 2480,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 2475,
											"end": 2479,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 2464,
											"end": 2480,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9495,
											"end": 9499,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 16,
											"value": "7"
										},
										{
											"begin": 9495,
											"end": 9499,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 9484,
											"end": 9491,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9468,
											"end": 9481,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "303"
										},
										{
											"begin": 9468,
											"end": 9479,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "76"
										},
										{
											"begin": 9468,
											"end": 9481,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9468,
											"end": 9481,
											"modifierDepth": 3,
											"name": "tag",
											"source": 16,
											"value": "303"
										},
										{
											"begin": 9468,
											"end": 9481,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9468,
											"end": 9491,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 9468,
											"end": 9491,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9468,
											"end": 9491,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9468,
											"end": 9491,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "305"
										},
										{
											"begin": 9468,
											"end": 9491,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9468,
											"end": 9491,
											"modifierDepth": 3,
											"name": "tag",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 9468,
											"end": 9491,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9468,
											"end": 9499,
											"modifierDepth": 3,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 9468,
											"end": 9499,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 9460,
											"end": 9533,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "306"
										},
										{
											"begin": 9460,
											"end": 9533,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 9460,
											"end": 9533,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 9460,
											"end": 9533,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 9460,
											"end": 9533,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9460,
											"end": 9533,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9460,
											"end": 9533,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9460,
											"end": 9533,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 9460,
											"end": 9533,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9460,
											"end": 9533,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "307"
										},
										{
											"begin": 9460,
											"end": 9533,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9460,
											"end": 9533,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 9460,
											"end": 9533,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9460,
											"end": 9533,
											"modifierDepth": 3,
											"name": "tag",
											"source": 16,
											"value": "307"
										},
										{
											"begin": 9460,
											"end": 9533,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9460,
											"end": 9533,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 9460,
											"end": 9533,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 9460,
											"end": 9533,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 9460,
											"end": 9533,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9460,
											"end": 9533,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 9460,
											"end": 9533,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9460,
											"end": 9533,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 9460,
											"end": 9533,
											"modifierDepth": 3,
											"name": "tag",
											"source": 16,
											"value": "306"
										},
										{
											"begin": 9460,
											"end": 9533,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9548,
											"end": 9576,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 16,
											"value": "E98063832B4FF0356868961B75F7F49B096B14EA066C9725301AD197F2F63147"
										},
										{
											"begin": 9563,
											"end": 9566,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 9568,
											"end": 9575,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 9548,
											"end": 9576,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 9548,
											"end": 9576,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 9548,
											"end": 9576,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "309"
										},
										{
											"begin": 9548,
											"end": 9576,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 9548,
											"end": 9576,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9548,
											"end": 9576,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9548,
											"end": 9576,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "310"
										},
										{
											"begin": 9548,
											"end": 9576,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9548,
											"end": 9576,
											"modifierDepth": 3,
											"name": "tag",
											"source": 16,
											"value": "309"
										},
										{
											"begin": 9548,
											"end": 9576,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9548,
											"end": 9576,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 9548,
											"end": 9576,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 9548,
											"end": 9576,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 9548,
											"end": 9576,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9548,
											"end": 9576,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 9548,
											"end": 9576,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9548,
											"end": 9576,
											"modifierDepth": 3,
											"name": "LOG1",
											"source": 16
										},
										{
											"begin": 9586,
											"end": 9605,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "311"
										},
										{
											"begin": 9592,
											"end": 9595,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 9597,
											"end": 9604,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 9586,
											"end": 9591,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "312"
										},
										{
											"begin": 9586,
											"end": 9605,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9586,
											"end": 9605,
											"modifierDepth": 3,
											"name": "tag",
											"source": 16,
											"value": "311"
										},
										{
											"begin": 9586,
											"end": 9605,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5848,
											"end": 5849,
											"modifierDepth": 2,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9364,
											"end": 9612,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9364,
											"end": 9612,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9364,
											"end": 9612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13922,
											"end": 14126,
											"name": "tag",
											"source": 16,
											"value": "118"
										},
										{
											"begin": 13922,
											"end": 14126,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "tag",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1767,
											"end": 1787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "508F8F8BE8F5DBCB88F4F4500430B8B3684C471ED936F31FEA912C78AD46A6B9"
										},
										{
											"begin": 2464,
											"end": 2480,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 2475,
											"end": 2479,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 2464,
											"end": 2480,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14031,
											"end": 14036,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14031,
											"end": 14045,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14031,
											"end": 14045,
											"modifierDepth": 2,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 14031,
											"end": 14059,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 16,
											"value": "8FC"
										},
										{
											"begin": 14046,
											"end": 14058,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 14031,
											"end": 14059,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14031,
											"end": 14059,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14031,
											"end": 14059,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 14031,
											"end": 14059,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 14031,
											"end": 14059,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14031,
											"end": 14059,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 14031,
											"end": 14059,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 14031,
											"end": 14059,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14031,
											"end": 14059,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 14031,
											"end": 14059,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 14031,
											"end": 14059,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 14031,
											"end": 14059,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 14031,
											"end": 14059,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 14031,
											"end": 14059,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14031,
											"end": 14059,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 14031,
											"end": 14059,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 14031,
											"end": 14059,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 14031,
											"end": 14059,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 16
										},
										{
											"begin": 14031,
											"end": 14059,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 14031,
											"end": 14059,
											"modifierDepth": 2,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14031,
											"end": 14059,
											"modifierDepth": 2,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14031,
											"end": 14059,
											"modifierDepth": 2,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14031,
											"end": 14059,
											"modifierDepth": 2,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14031,
											"end": 14059,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 14031,
											"end": 14059,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 14031,
											"end": 14059,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 14031,
											"end": 14059,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "319"
										},
										{
											"begin": 14031,
											"end": 14059,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 14031,
											"end": 14059,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 14031,
											"end": 14059,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14031,
											"end": 14059,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 14031,
											"end": 14059,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 14031,
											"end": 14059,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 14031,
											"end": 14059,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14031,
											"end": 14059,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 14031,
											"end": 14059,
											"modifierDepth": 2,
											"name": "tag",
											"source": 16,
											"value": "319"
										},
										{
											"begin": 14031,
											"end": 14059,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14031,
											"end": 14059,
											"modifierDepth": 2,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14074,
											"end": 14119,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 16,
											"value": "3B1C0368C81E47D03164182DC6F9FCF4F5E4B3BD9462D74960D729F73138CE36"
										},
										{
											"begin": 14085,
											"end": 14090,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 14092,
											"end": 14104,
											"modifierDepth": 2,
											"name": "NUMBER",
											"source": 16
										},
										{
											"begin": 14106,
											"end": 14118,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 14074,
											"end": 14119,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 14074,
											"end": 14119,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 14074,
											"end": 14119,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "320"
										},
										{
											"begin": 14074,
											"end": 14119,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 14074,
											"end": 14119,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 14074,
											"end": 14119,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14074,
											"end": 14119,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14074,
											"end": 14119,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "321"
										},
										{
											"begin": 14074,
											"end": 14119,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14074,
											"end": 14119,
											"modifierDepth": 2,
											"name": "tag",
											"source": 16,
											"value": "320"
										},
										{
											"begin": 14074,
											"end": 14119,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14074,
											"end": 14119,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 14074,
											"end": 14119,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 14074,
											"end": 14119,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 14074,
											"end": 14119,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14074,
											"end": 14119,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 14074,
											"end": 14119,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14074,
											"end": 14119,
											"modifierDepth": 2,
											"name": "LOG1",
											"source": 16
										},
										{
											"begin": 2531,
											"end": 2532,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 2542,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 2542,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "tag",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13922,
											"end": 14126,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13922,
											"end": 14126,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13922,
											"end": 14126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1612,
											"end": 1664,
											"name": "tag",
											"source": 16,
											"value": "120"
										},
										{
											"begin": 1612,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1645,
											"end": 1664,
											"name": "PUSH",
											"source": 16,
											"value": "AE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3"
										},
										{
											"begin": 1612,
											"end": 1664,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1612,
											"end": 1664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1236,
											"end": 1286,
											"name": "tag",
											"source": 16,
											"value": "123"
										},
										{
											"begin": 1236,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1268,
											"end": 1286,
											"name": "PUSH",
											"source": 16,
											"value": "9EDFAD36E7D4D9DA54B4F78F22BF97CB5B58BB7998294A4288DA41C15C647C45"
										},
										{
											"begin": 1236,
											"end": 1286,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1236,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "tag",
											"source": 16,
											"value": "126"
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "PUSH",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2117,
											"end": 2135,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2117,
											"end": 2135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "tag",
											"source": 16,
											"value": "129"
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1404,
											"end": 1426,
											"name": "PUSH",
											"source": 16,
											"value": "C8A3BEFA5973FF6E159AFC769978D92F26BAE29C51A73D11C9112A05B68D25E6"
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1368,
											"end": 1426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10843,
											"end": 11024,
											"name": "tag",
											"source": 16,
											"value": "138"
										},
										{
											"begin": 10843,
											"end": 11024,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "PUSH",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 5357,
											"end": 5364,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "325"
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "326"
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "285"
										},
										{
											"begin": 5349,
											"end": 5397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "tag",
											"source": 16,
											"value": "326"
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "tag",
											"source": 16,
											"value": "325"
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1404,
											"end": 1426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "C8A3BEFA5973FF6E159AFC769978D92F26BAE29C51A73D11C9112A05B68D25E6"
										},
										{
											"begin": 2464,
											"end": 2480,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 2475,
											"end": 2479,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 2464,
											"end": 2480,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10940,
											"end": 10986,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 16,
											"value": "E419CE2AAB145A1FEAF5893BB6A9478F9282415BBD81C76D5CFFF2D4F13431DD"
										},
										{
											"begin": 10957,
											"end": 10962,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10964,
											"end": 10971,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10973,
											"end": 10985,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "330"
										},
										{
											"begin": 10973,
											"end": 10983,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "217"
										},
										{
											"begin": 10973,
											"end": 10985,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10973,
											"end": 10985,
											"modifierDepth": 2,
											"name": "tag",
											"source": 16,
											"value": "330"
										},
										{
											"begin": 10973,
											"end": 10985,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10940,
											"end": 10986,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 10940,
											"end": 10986,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 10940,
											"end": 10986,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "331"
										},
										{
											"begin": 10940,
											"end": 10986,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 10940,
											"end": 10986,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 10940,
											"end": 10986,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10940,
											"end": 10986,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10940,
											"end": 10986,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "332"
										},
										{
											"begin": 10940,
											"end": 10986,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10940,
											"end": 10986,
											"modifierDepth": 2,
											"name": "tag",
											"source": 16,
											"value": "331"
										},
										{
											"begin": 10940,
											"end": 10986,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10940,
											"end": 10986,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 10940,
											"end": 10986,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 10940,
											"end": 10986,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 10940,
											"end": 10986,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10940,
											"end": 10986,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 10940,
											"end": 10986,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10940,
											"end": 10986,
											"modifierDepth": 2,
											"name": "LOG1",
											"source": 16
										},
										{
											"begin": 10996,
											"end": 11017,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "333"
										},
										{
											"begin": 11002,
											"end": 11007,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 11009,
											"end": 11016,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10996,
											"end": 11001,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "250"
										},
										{
											"begin": 10996,
											"end": 11017,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10996,
											"end": 11017,
											"modifierDepth": 2,
											"name": "tag",
											"source": 16,
											"value": "333"
										},
										{
											"begin": 10996,
											"end": 11017,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5407,
											"end": 5408,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10843,
											"end": 11024,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10843,
											"end": 11024,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10843,
											"end": 11024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1124,
											"end": 1178,
											"name": "tag",
											"source": 16,
											"value": "140"
										},
										{
											"begin": 1124,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1158,
											"end": 1178,
											"name": "PUSH",
											"source": 16,
											"value": "7D800F56A05ADCB6245DF540492A560D0E668AAC15EE6C7DD40668064913DA33"
										},
										{
											"begin": 1124,
											"end": 1178,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1124,
											"end": 1178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1733,
											"end": 1787,
											"name": "tag",
											"source": 16,
											"value": "143"
										},
										{
											"begin": 1733,
											"end": 1787,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1767,
											"end": 1787,
											"name": "PUSH",
											"source": 16,
											"value": "508F8F8BE8F5DBCB88F4F4500430B8B3684C471ED936F31FEA912C78AD46A6B9"
										},
										{
											"begin": 1733,
											"end": 1787,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1733,
											"end": 1787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 994,
											"end": 1044,
											"name": "tag",
											"source": 16,
											"value": "146"
										},
										{
											"begin": 994,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1026,
											"end": 1044,
											"name": "PUSH",
											"source": 16,
											"value": "8C66330D9D4F6ABA064F25EF2A307366EA6D917616F44C075AA60FA15E5CB1CB"
										},
										{
											"begin": 994,
											"end": 1044,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 994,
											"end": 1044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8055,
											"end": 8131,
											"name": "tag",
											"source": 16,
											"value": "149"
										},
										{
											"begin": 8055,
											"end": 8131,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8097,
											"end": 8101,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8120,
											"end": 8124,
											"name": "PUSH",
											"source": 16,
											"value": "7"
										},
										{
											"begin": 8120,
											"end": 8124,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 8113,
											"end": 8124,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8113,
											"end": 8124,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8055,
											"end": 8131,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8055,
											"end": 8131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2182,
											"end": 2206,
											"name": "tag",
											"source": 16,
											"value": "156"
										},
										{
											"begin": 2182,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2182,
											"end": 2206,
											"name": "PUSH",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 2182,
											"end": 2206,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 2182,
											"end": 2206,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2182,
											"end": 2206,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 2182,
											"end": 2206,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2182,
											"end": 2206,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 2182,
											"end": 2206,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 2182,
											"end": 2206,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2182,
											"end": 2206,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 2182,
											"end": 2206,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 2182,
											"end": 2206,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2182,
											"end": 2206,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2182,
											"end": 2206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9852,
											"end": 10083,
											"name": "tag",
											"source": 16,
											"value": "163"
										},
										{
											"begin": 9852,
											"end": 10083,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "PUSH",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 5357,
											"end": 5364,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "343"
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "344"
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "285"
										},
										{
											"begin": 5349,
											"end": 5397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "tag",
											"source": 16,
											"value": "344"
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "tag",
											"source": 16,
											"value": "343"
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5570,
											"end": 5582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 5570,
											"end": 5582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 5570,
											"end": 5582,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5570,
											"end": 5582,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 5570,
											"end": 5582,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5570,
											"end": 5582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 5570,
											"end": 5582,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 5570,
											"end": 5582,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5570,
											"end": 5582,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 5570,
											"end": 5582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 5570,
											"end": 5582,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 5569,
											"end": 5582,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5561,
											"end": 5603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "346"
										},
										{
											"begin": 5561,
											"end": 5603,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5561,
											"end": 5603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5561,
											"end": 5603,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5561,
											"end": 5603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5561,
											"end": 5603,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5561,
											"end": 5603,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5561,
											"end": 5603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 5561,
											"end": 5603,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5561,
											"end": 5603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "347"
										},
										{
											"begin": 5561,
											"end": 5603,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5561,
											"end": 5603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "348"
										},
										{
											"begin": 5561,
											"end": 5603,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5561,
											"end": 5603,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "347"
										},
										{
											"begin": 5561,
											"end": 5603,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5561,
											"end": 5603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5561,
											"end": 5603,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5561,
											"end": 5603,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5561,
											"end": 5603,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5561,
											"end": 5603,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 5561,
											"end": 5603,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5561,
											"end": 5603,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5561,
											"end": 5603,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "346"
										},
										{
											"begin": 5561,
											"end": 5603,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1026,
											"end": 1044,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 16,
											"value": "8C66330D9D4F6ABA064F25EF2A307366EA6D917616F44C075AA60FA15E5CB1CB"
										},
										{
											"begin": 2464,
											"end": 2480,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 2475,
											"end": 2479,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 2464,
											"end": 2480,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9964,
											"end": 9968,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 16,
											"value": "7"
										},
										{
											"begin": 9964,
											"end": 9968,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 9953,
											"end": 9960,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9937,
											"end": 9950,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "352"
										},
										{
											"begin": 9937,
											"end": 9948,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "76"
										},
										{
											"begin": 9937,
											"end": 9950,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9937,
											"end": 9950,
											"modifierDepth": 3,
											"name": "tag",
											"source": 16,
											"value": "352"
										},
										{
											"begin": 9937,
											"end": 9950,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9937,
											"end": 9960,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "353"
										},
										{
											"begin": 9937,
											"end": 9960,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9937,
											"end": 9960,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9937,
											"end": 9960,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "305"
										},
										{
											"begin": 9937,
											"end": 9960,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9937,
											"end": 9960,
											"modifierDepth": 3,
											"name": "tag",
											"source": 16,
											"value": "353"
										},
										{
											"begin": 9937,
											"end": 9960,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9937,
											"end": 9968,
											"modifierDepth": 3,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 9937,
											"end": 9968,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 9929,
											"end": 10002,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "354"
										},
										{
											"begin": 9929,
											"end": 10002,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 9929,
											"end": 10002,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 9929,
											"end": 10002,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 9929,
											"end": 10002,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9929,
											"end": 10002,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9929,
											"end": 10002,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9929,
											"end": 10002,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 9929,
											"end": 10002,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9929,
											"end": 10002,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "355"
										},
										{
											"begin": 9929,
											"end": 10002,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9929,
											"end": 10002,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 9929,
											"end": 10002,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9929,
											"end": 10002,
											"modifierDepth": 3,
											"name": "tag",
											"source": 16,
											"value": "355"
										},
										{
											"begin": 9929,
											"end": 10002,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9929,
											"end": 10002,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 9929,
											"end": 10002,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 9929,
											"end": 10002,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 9929,
											"end": 10002,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9929,
											"end": 10002,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 9929,
											"end": 10002,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9929,
											"end": 10002,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 9929,
											"end": 10002,
											"modifierDepth": 3,
											"name": "tag",
											"source": 16,
											"value": "354"
										},
										{
											"begin": 9929,
											"end": 10002,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10017,
											"end": 10038,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 16,
											"value": "772F66A00A405709C30E7F18FEADCC8F123B20C09C7260165D3EEC36C9F21372"
										},
										{
											"begin": 10030,
											"end": 10037,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10017,
											"end": 10038,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 10017,
											"end": 10038,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 10017,
											"end": 10038,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "356"
										},
										{
											"begin": 10017,
											"end": 10038,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10017,
											"end": 10038,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10017,
											"end": 10038,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "61"
										},
										{
											"begin": 10017,
											"end": 10038,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10017,
											"end": 10038,
											"modifierDepth": 3,
											"name": "tag",
											"source": 16,
											"value": "356"
										},
										{
											"begin": 10017,
											"end": 10038,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10017,
											"end": 10038,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 10017,
											"end": 10038,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 10017,
											"end": 10038,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 10017,
											"end": 10038,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10017,
											"end": 10038,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 10017,
											"end": 10038,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10017,
											"end": 10038,
											"modifierDepth": 3,
											"name": "LOG1",
											"source": 16
										},
										{
											"begin": 10048,
											"end": 10076,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "357"
										},
										{
											"begin": 10054,
											"end": 10066,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "358"
										},
										{
											"begin": 10054,
											"end": 10064,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "217"
										},
										{
											"begin": 10054,
											"end": 10066,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10054,
											"end": 10066,
											"modifierDepth": 3,
											"name": "tag",
											"source": 16,
											"value": "358"
										},
										{
											"begin": 10054,
											"end": 10066,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10068,
											"end": 10075,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10048,
											"end": 10053,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "312"
										},
										{
											"begin": 10048,
											"end": 10076,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10048,
											"end": 10076,
											"modifierDepth": 3,
											"name": "tag",
											"source": 16,
											"value": "357"
										},
										{
											"begin": 10048,
											"end": 10076,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5613,
											"end": 5614,
											"modifierDepth": 2,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9852,
											"end": 10083,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9852,
											"end": 10083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12977,
											"name": "tag",
											"source": 16,
											"value": "169"
										},
										{
											"begin": 12542,
											"end": 12977,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12633,
											"end": 12637,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "tag",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12649,
											"end": 12662,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12665,
											"end": 12677,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "362"
										},
										{
											"begin": 12665,
											"end": 12675,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "217"
										},
										{
											"begin": 12665,
											"end": 12677,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12665,
											"end": 12677,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "362"
										},
										{
											"begin": 12665,
											"end": 12677,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12649,
											"end": 12677,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12649,
											"end": 12677,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12692,
											"end": 12710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "A"
										},
										{
											"begin": 12692,
											"end": 12717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12711,
											"end": 12716,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12692,
											"end": 12717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12692,
											"end": 12717,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 12692,
											"end": 12717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12692,
											"end": 12717,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 12692,
											"end": 12717,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12692,
											"end": 12717,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12692,
											"end": 12717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 12692,
											"end": 12717,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12692,
											"end": 12717,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12692,
											"end": 12717,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12692,
											"end": 12717,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12692,
											"end": 12717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 12692,
											"end": 12717,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12692,
											"end": 12717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12692,
											"end": 12717,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 12692,
											"end": 12717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12692,
											"end": 12717,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12692,
											"end": 12717,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 12692,
											"end": 12717,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12692,
											"end": 12717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 12692,
											"end": 12717,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 12692,
											"end": 12717,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12692,
											"end": 12717,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 12692,
											"end": 12717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 12692,
											"end": 12717,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 12688,
											"end": 12949,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 12688,
											"end": 12949,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 12688,
											"end": 12949,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12733,
											"end": 12760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "364"
										},
										{
											"begin": 12743,
											"end": 12748,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12750,
											"end": 12752,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 12754,
											"end": 12759,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 12733,
											"end": 12742,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "246"
										},
										{
											"begin": 12733,
											"end": 12760,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12733,
											"end": 12760,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "364"
										},
										{
											"begin": 12733,
											"end": 12760,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12688,
											"end": 12949,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 12688,
											"end": 12949,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12688,
											"end": 12949,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 12688,
											"end": 12949,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12840,
											"end": 12867,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "366"
										},
										{
											"begin": 12850,
											"end": 12855,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12857,
											"end": 12859,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 12861,
											"end": 12866,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 12840,
											"end": 12849,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "246"
										},
										{
											"begin": 12840,
											"end": 12867,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12840,
											"end": 12867,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "366"
										},
										{
											"begin": 12840,
											"end": 12867,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12881,
											"end": 12900,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 12887,
											"end": 12892,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12894,
											"end": 12899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 12894,
											"end": 12899,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 12881,
											"end": 12886,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "250"
										},
										{
											"begin": 12881,
											"end": 12900,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12881,
											"end": 12900,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 12881,
											"end": 12900,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12688,
											"end": 12949,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 12688,
											"end": 12949,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12966,
											"end": 12970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 12959,
											"end": 12970,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12959,
											"end": 12970,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12959,
											"end": 12970,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 2542,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 2542,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "tag",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12542,
											"end": 12977,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12542,
											"end": 12977,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12542,
											"end": 12977,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12542,
											"end": 12977,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12542,
											"end": 12977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7701,
											"end": 7942,
											"name": "tag",
											"source": 16,
											"value": "173"
										},
										{
											"begin": 7701,
											"end": 7942,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "PUSH",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 5357,
											"end": 5364,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "370"
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "371"
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "285"
										},
										{
											"begin": 5349,
											"end": 5397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "tag",
											"source": 16,
											"value": "371"
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "tag",
											"source": 16,
											"value": "370"
										},
										{
											"begin": 5349,
											"end": 5397,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1528,
											"end": 1548,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "EA4DEFABEB90FA1E79F929D6C8D482FEE8A115926A592B79634D39A67CCE3B62"
										},
										{
											"begin": 2464,
											"end": 2480,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 2475,
											"end": 2479,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 2464,
											"end": 2480,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7805,
											"end": 7818,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "375"
										},
										{
											"begin": 7805,
											"end": 7816,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "76"
										},
										{
											"begin": 7805,
											"end": 7818,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7805,
											"end": 7818,
											"modifierDepth": 2,
											"name": "tag",
											"source": 16,
											"value": "375"
										},
										{
											"begin": 7805,
											"end": 7818,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7791,
											"end": 7801,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7791,
											"end": 7818,
											"modifierDepth": 2,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 7791,
											"end": 7818,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7783,
											"end": 7851,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "376"
										},
										{
											"begin": 7783,
											"end": 7851,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7783,
											"end": 7851,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7783,
											"end": 7851,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 7783,
											"end": 7851,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7783,
											"end": 7851,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7783,
											"end": 7851,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7783,
											"end": 7851,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 7783,
											"end": 7851,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7783,
											"end": 7851,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "377"
										},
										{
											"begin": 7783,
											"end": 7851,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7783,
											"end": 7851,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "378"
										},
										{
											"begin": 7783,
											"end": 7851,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7783,
											"end": 7851,
											"modifierDepth": 2,
											"name": "tag",
											"source": 16,
											"value": "377"
										},
										{
											"begin": 7783,
											"end": 7851,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7783,
											"end": 7851,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7783,
											"end": 7851,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 7783,
											"end": 7851,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7783,
											"end": 7851,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7783,
											"end": 7851,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 7783,
											"end": 7851,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7783,
											"end": 7851,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 7783,
											"end": 7851,
											"modifierDepth": 2,
											"name": "tag",
											"source": 16,
											"value": "376"
										},
										{
											"begin": 7783,
											"end": 7851,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7868,
											"end": 7878,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7861,
											"end": 7865,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 16,
											"value": "7"
										},
										{
											"begin": 7861,
											"end": 7878,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7861,
											"end": 7878,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7861,
											"end": 7878,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 7861,
											"end": 7878,
											"modifierDepth": 2,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7893,
											"end": 7935,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 16,
											"value": "A11CBDEB4D62442FAE7C8EC6286585B17C47ACB7B17BBCAB1BEADCE84BEFA300"
										},
										{
											"begin": 7910,
											"end": 7920,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7922,
											"end": 7934,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "379"
										},
										{
											"begin": 7922,
											"end": 7932,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "217"
										},
										{
											"begin": 7922,
											"end": 7934,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7922,
											"end": 7934,
											"modifierDepth": 2,
											"name": "tag",
											"source": 16,
											"value": "379"
										},
										{
											"begin": 7922,
											"end": 7934,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7893,
											"end": 7935,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7893,
											"end": 7935,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 7893,
											"end": 7935,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 7893,
											"end": 7935,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 7893,
											"end": 7935,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7893,
											"end": 7935,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7893,
											"end": 7935,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "227"
										},
										{
											"begin": 7893,
											"end": 7935,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7893,
											"end": 7935,
											"modifierDepth": 2,
											"name": "tag",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 7893,
											"end": 7935,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7893,
											"end": 7935,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7893,
											"end": 7935,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 7893,
											"end": 7935,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7893,
											"end": 7935,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7893,
											"end": 7935,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 7893,
											"end": 7935,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7893,
											"end": 7935,
											"modifierDepth": 2,
											"name": "LOG1",
											"source": 16
										},
										{
											"begin": 5407,
											"end": 5408,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7701,
											"end": 7942,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7701,
											"end": 7942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "tag",
											"source": 16,
											"value": "176"
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "PUSH",
											"source": 16,
											"value": "A"
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4218,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2030,
											"end": 2054,
											"name": "tag",
											"source": 16,
											"value": "179"
										},
										{
											"begin": 2030,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2030,
											"end": 2054,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 2030,
											"end": 2054,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 2030,
											"end": 2054,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2030,
											"end": 2054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2275,
											"end": 2301,
											"name": "tag",
											"source": 16,
											"value": "182"
										},
										{
											"begin": 2275,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2275,
											"end": 2301,
											"name": "PUSH",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 2275,
											"end": 2301,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 2275,
											"end": 2301,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2275,
											"end": 2301,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 2275,
											"end": 2301,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2275,
											"end": 2301,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 2275,
											"end": 2301,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 2275,
											"end": 2301,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2275,
											"end": 2301,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 2275,
											"end": 2301,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 2275,
											"end": 2301,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2275,
											"end": 2301,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2275,
											"end": 2301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4717,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6665,
											"end": 6963,
											"name": "tag",
											"source": 16,
											"value": "194"
										},
										{
											"begin": 6665,
											"end": 6963,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1645,
											"end": 1664,
											"name": "PUSH",
											"source": 16,
											"value": "AE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6759,
											"end": 6774,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6744,
											"end": 6756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 6744,
											"end": 6756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 6744,
											"end": 6774,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 6744,
											"end": 6774,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 6744,
											"end": 6774,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6744,
											"end": 6774,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 6744,
											"end": 6774,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6744,
											"end": 6774,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 6744,
											"end": 6774,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 6744,
											"end": 6774,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 6744,
											"end": 6774,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6744,
											"end": 6774,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6744,
											"end": 6774,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6744,
											"end": 6774,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6744,
											"end": 6774,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6744,
											"end": 6774,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 6744,
											"end": 6774,
											"modifierDepth": 1,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 6744,
											"end": 6774,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6744,
											"end": 6774,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 6744,
											"end": 6774,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6789,
											"end": 6804,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6785,
											"end": 6957,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6785,
											"end": 6957,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "390"
										},
										{
											"begin": 6785,
											"end": 6957,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6825,
											"end": 6868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "5668502CA8E7B393C09D1DAC964CA45A27870A78D7BA212B7A189450897CA05F"
										},
										{
											"begin": 6841,
											"end": 6853,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 16
										},
										{
											"begin": 6855,
											"end": 6867,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "391"
										},
										{
											"begin": 6855,
											"end": 6865,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "217"
										},
										{
											"begin": 6855,
											"end": 6867,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6855,
											"end": 6867,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "391"
										},
										{
											"begin": 6855,
											"end": 6867,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6825,
											"end": 6868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6825,
											"end": 6868,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6825,
											"end": 6868,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "392"
										},
										{
											"begin": 6825,
											"end": 6868,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6825,
											"end": 6868,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6825,
											"end": 6868,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6825,
											"end": 6868,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "227"
										},
										{
											"begin": 6825,
											"end": 6868,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6825,
											"end": 6868,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "392"
										},
										{
											"begin": 6825,
											"end": 6868,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6825,
											"end": 6868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6825,
											"end": 6868,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6825,
											"end": 6868,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6825,
											"end": 6868,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6825,
											"end": 6868,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 6825,
											"end": 6868,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6825,
											"end": 6868,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 16
										},
										{
											"begin": 6785,
											"end": 6957,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "393"
										},
										{
											"begin": 6785,
											"end": 6957,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6785,
											"end": 6957,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "390"
										},
										{
											"begin": 6785,
											"end": 6957,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6904,
											"end": 6946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "98E05482FDB38DF5EB461FB932FA6E1AF90A3569939CE5A8D92D699B102D6402"
										},
										{
											"begin": 6919,
											"end": 6931,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 16
										},
										{
											"begin": 6933,
											"end": 6945,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "394"
										},
										{
											"begin": 6933,
											"end": 6943,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "217"
										},
										{
											"begin": 6933,
											"end": 6945,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6933,
											"end": 6945,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "394"
										},
										{
											"begin": 6933,
											"end": 6945,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6904,
											"end": 6946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6904,
											"end": 6946,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6904,
											"end": 6946,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "395"
										},
										{
											"begin": 6904,
											"end": 6946,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6904,
											"end": 6946,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6904,
											"end": 6946,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6904,
											"end": 6946,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "227"
										},
										{
											"begin": 6904,
											"end": 6946,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6904,
											"end": 6946,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "395"
										},
										{
											"begin": 6904,
											"end": 6946,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6904,
											"end": 6946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6904,
											"end": 6946,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6904,
											"end": 6946,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6904,
											"end": 6946,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6904,
											"end": 6946,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 6904,
											"end": 6946,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6904,
											"end": 6946,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 16
										},
										{
											"begin": 6785,
											"end": 6957,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "393"
										},
										{
											"begin": 6785,
											"end": 6957,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6665,
											"end": 6963,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6665,
											"end": 6963,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6665,
											"end": 6963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1494,
											"end": 1548,
											"name": "tag",
											"source": 16,
											"value": "196"
										},
										{
											"begin": 1494,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1528,
											"end": 1548,
											"name": "PUSH",
											"source": 16,
											"value": "EA4DEFABEB90FA1E79F929D6C8D482FEE8A115926A592B79634D39A67CCE3B62"
										},
										{
											"begin": 1494,
											"end": 1548,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1494,
											"end": 1548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8889,
											"end": 8982,
											"name": "tag",
											"source": 16,
											"value": "200"
										},
										{
											"begin": 8889,
											"end": 8982,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1645,
											"end": 1664,
											"name": "PUSH",
											"source": 16,
											"value": "AE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8968,
											"end": 8975,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8960,
											"end": 8965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 8960,
											"end": 8975,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8960,
											"end": 8975,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8960,
											"end": 8975,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 8960,
											"end": 8975,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8889,
											"end": 8982,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8889,
											"end": 8982,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8889,
											"end": 8982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7232,
											"end": 7535,
											"name": "tag",
											"source": 16,
											"value": "203"
										},
										{
											"begin": 7232,
											"end": 7535,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1645,
											"end": 1664,
											"name": "PUSH",
											"source": 16,
											"value": "AE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7329,
											"end": 7343,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7312,
											"end": 7326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 7312,
											"end": 7326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 7312,
											"end": 7343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 7312,
											"end": 7343,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 7312,
											"end": 7343,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7312,
											"end": 7343,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 7312,
											"end": 7343,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7312,
											"end": 7343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 7312,
											"end": 7343,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 7312,
											"end": 7343,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 7312,
											"end": 7343,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 7312,
											"end": 7343,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7312,
											"end": 7343,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 7312,
											"end": 7343,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7312,
											"end": 7343,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7312,
											"end": 7343,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 7312,
											"end": 7343,
											"modifierDepth": 1,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 7312,
											"end": 7343,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7312,
											"end": 7343,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 7312,
											"end": 7343,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7358,
											"end": 7372,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7354,
											"end": 7529,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7354,
											"end": 7529,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "402"
										},
										{
											"begin": 7354,
											"end": 7529,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7393,
											"end": 7438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "218E25F0A7435729F5A66AAE50A9ED0084535A0080300C1C2E8366D8DF7136ED"
										},
										{
											"begin": 7411,
											"end": 7423,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 16
										},
										{
											"begin": 7425,
											"end": 7437,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "403"
										},
										{
											"begin": 7425,
											"end": 7435,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "217"
										},
										{
											"begin": 7425,
											"end": 7437,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7425,
											"end": 7437,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "403"
										},
										{
											"begin": 7425,
											"end": 7437,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7393,
											"end": 7438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7393,
											"end": 7438,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 7393,
											"end": 7438,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "404"
										},
										{
											"begin": 7393,
											"end": 7438,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 7393,
											"end": 7438,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7393,
											"end": 7438,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7393,
											"end": 7438,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "227"
										},
										{
											"begin": 7393,
											"end": 7438,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7393,
											"end": 7438,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "404"
										},
										{
											"begin": 7393,
											"end": 7438,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7393,
											"end": 7438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7393,
											"end": 7438,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 7393,
											"end": 7438,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7393,
											"end": 7438,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7393,
											"end": 7438,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 7393,
											"end": 7438,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7393,
											"end": 7438,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 16
										},
										{
											"begin": 7354,
											"end": 7529,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "405"
										},
										{
											"begin": 7354,
											"end": 7529,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7354,
											"end": 7529,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "402"
										},
										{
											"begin": 7354,
											"end": 7529,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7474,
											"end": 7518,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "41606E1DCEE38320F9EDBFCD642AEAA81BB2140C705DE9D4A7814024A1E9A314"
										},
										{
											"begin": 7491,
											"end": 7503,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 16
										},
										{
											"begin": 7505,
											"end": 7517,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "406"
										},
										{
											"begin": 7505,
											"end": 7515,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "217"
										},
										{
											"begin": 7505,
											"end": 7517,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7505,
											"end": 7517,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "406"
										},
										{
											"begin": 7505,
											"end": 7517,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7474,
											"end": 7518,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7474,
											"end": 7518,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 7474,
											"end": 7518,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "407"
										},
										{
											"begin": 7474,
											"end": 7518,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 7474,
											"end": 7518,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7474,
											"end": 7518,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7474,
											"end": 7518,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "227"
										},
										{
											"begin": 7474,
											"end": 7518,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7474,
											"end": 7518,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "407"
										},
										{
											"begin": 7474,
											"end": 7518,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7474,
											"end": 7518,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7474,
											"end": 7518,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 7474,
											"end": 7518,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7474,
											"end": 7518,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7474,
											"end": 7518,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 7474,
											"end": 7518,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7474,
											"end": 7518,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 16
										},
										{
											"begin": 7354,
											"end": 7529,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "405"
										},
										{
											"begin": 7354,
											"end": 7529,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7232,
											"end": 7535,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7232,
											"end": 7535,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7232,
											"end": 7535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 763,
											"end": 909,
											"name": "tag",
											"source": 14,
											"value": "207"
										},
										{
											"begin": 763,
											"end": 909,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 839,
											"end": 843,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 902,
											"name": "PUSH",
											"source": 14,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 862,
											"end": 873,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 855,
											"end": 902,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 855,
											"end": 902,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 763,
											"end": 909,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 763,
											"end": 909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "412"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 3282,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "tag",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2575,
											"end": 2882,
											"name": "tag",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 2575,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2702,
											"end": 2720,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 13,
											"value": "3EE5AEB500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "tag",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 2858,
											"end": 2865,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2575,
											"end": 2882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "420"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 6,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "421"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "422"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 6,
											"value": "421"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 6,
											"value": "420"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 6,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "424"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "422"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 6,
											"value": "424"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "425"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 6,
											"value": "425"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8073,
											"end": 8074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8054,
											"end": 8061,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "428"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8125,
											"end": 8126,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 6,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "429"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "422"
										},
										{
											"begin": 8098,
											"end": 8128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "tag",
											"source": 6,
											"value": "429"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "tag",
											"source": 6,
											"value": "428"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "430"
										},
										{
											"begin": 8156,
											"end": 8163,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8173,
											"end": 8174,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8182,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8148,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 8148,
											"end": 8183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "tag",
											"source": 6,
											"value": "430"
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7984,
											"end": 8190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 3096,
											"name": "tag",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 2888,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1857,
											"end": 1858,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3068,
											"end": 3075,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2888,
											"end": 3096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6322,
											"end": 6326,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 6397,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 6397,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 6828,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "tag",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6872,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6877,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 6894,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 6949,
											"end": 6961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "tag",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 6947,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 6938,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 6987,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "tag",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 1373,
											"end": 1378,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1400,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 1412,
											"end": 1414,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1416,
											"end": 1421,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 1380,
											"end": 1423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "tag",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 1353,
											"end": 1424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "tag",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1271,
											"end": 1431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "447"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 6,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "448"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "422"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 6,
											"value": "448"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 6,
											"value": "447"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "449"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 6,
											"value": "449"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 6,
											"value": "412"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "451"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 6,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "452"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "422"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 6,
											"value": "452"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 6,
											"value": "451"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "453"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 6,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "422"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 6,
											"value": "453"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 6,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "456"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 6,
											"value": "456"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 3565,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "tag",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "463"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "464"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 6,
											"value": "464"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "465"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 6,
											"value": "463"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "466"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 6,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "467"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "468"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 6,
											"value": "467"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 6,
											"value": "466"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 6,
											"value": "465"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "469"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "470"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 6,
											"value": "469"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 6,
											"value": "470"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 6,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "471"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 6,
											"value": "471"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "tag",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7818,
											"end": 7836,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7846,
											"end": 7865,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7984,
											"end": 7988,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7981,
											"end": 7982,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7974,
											"end": 7978,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7968,
											"end": 7979,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7961,
											"end": 7965,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7955,
											"end": 7959,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7951,
											"end": 7966,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7948,
											"end": 7949,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7941,
											"end": 7946,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 7934,
											"end": 7939,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 7929,
											"end": 7989,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 8041,
											"end": 8048,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8085,
											"end": 8089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8090,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8130,
											"end": 8146,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8127,
											"end": 8128,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8122,
											"end": 8125,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8107,
											"end": 8147,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 8176,
											"end": 8192,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8171,
											"end": 8174,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8164,
											"end": 8193,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "tag",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8234,
											"end": 8250,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8220,
											"end": 8250,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8220,
											"end": 8250,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8284,
											"end": 8285,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8278,
											"end": 8286,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8263,
											"end": 8286,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8263,
											"end": 8286,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7900,
											"end": 8296,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8324,
											"end": 8325,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8310,
											"end": 8320,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8310,
											"end": 8325,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8377,
											"end": 8378,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8362,
											"end": 8373,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "tag",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8358,
											"end": 8359,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8336,
											"end": 8341,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 8328,
											"end": 8359,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "tag",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8434,
											"end": 8439,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 9,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 8401,
											"end": 8441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "tag",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "tag",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7808,
											"end": 8458,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7808,
											"end": 8458,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7738,
											"end": 8458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 17,
											"value": "479"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 17,
											"value": "481"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 17,
											"value": "482"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "543"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "481"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 17,
											"value": "543"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "544"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 17,
											"value": "544"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 17,
											"value": "483"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "546"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "482"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 17,
											"value": "546"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 17,
											"value": "54"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "548"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "549"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "479"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 17,
											"value": "549"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 17,
											"value": "548"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "550"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "483"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 17,
											"value": "550"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 17,
											"value": "484"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 17,
											"value": "485"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "553"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "484"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 17,
											"value": "553"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 17,
											"value": "57"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "555"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "485"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 17,
											"value": "555"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "tag",
											"source": 17,
											"value": "486"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "tag",
											"source": 17,
											"value": "487"
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "558"
										},
										{
											"begin": 1706,
											"end": 1711,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "486"
										},
										{
											"begin": 1688,
											"end": 1712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "tag",
											"source": 17,
											"value": "558"
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1683,
											"end": 1686,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1676,
											"end": 1713,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1601,
											"end": 1719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "tag",
											"source": 17,
											"value": "61"
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1818,
											"end": 1822,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1856,
											"end": 1858,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1845,
											"end": 1854,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1841,
											"end": 1859,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1833,
											"end": 1859,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1833,
											"end": 1859,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "560"
										},
										{
											"begin": 1937,
											"end": 1938,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1926,
											"end": 1935,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1922,
											"end": 1939,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1913,
											"end": 1919,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "487"
										},
										{
											"begin": 1869,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "tag",
											"source": 17,
											"value": "560"
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1725,
											"end": 1947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1953,
											"end": 2052,
											"name": "tag",
											"source": 17,
											"value": "488"
										},
										{
											"begin": 1953,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2005,
											"end": 2011,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2039,
											"end": 2044,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2023,
											"end": 2045,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2023,
											"end": 2045,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1953,
											"end": 2052,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1953,
											"end": 2052,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1953,
											"end": 2052,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1953,
											"end": 2052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2058,
											"end": 2227,
											"name": "tag",
											"source": 17,
											"value": "489"
										},
										{
											"begin": 2058,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2142,
											"end": 2153,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2176,
											"end": 2182,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2171,
											"end": 2174,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2164,
											"end": 2183,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2216,
											"end": 2220,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2211,
											"end": 2214,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2207,
											"end": 2221,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2192,
											"end": 2221,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2192,
											"end": 2221,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2058,
											"end": 2227,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2058,
											"end": 2227,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2058,
											"end": 2227,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2058,
											"end": 2227,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2058,
											"end": 2227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2233,
											"end": 2372,
											"name": "tag",
											"source": 17,
											"value": "490"
										},
										{
											"begin": 2233,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2322,
											"end": 2328,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2317,
											"end": 2320,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2312,
											"end": 2315,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2306,
											"end": 2329,
											"name": "MCOPY",
											"source": 17
										},
										{
											"begin": 2363,
											"end": 2364,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2354,
											"end": 2360,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2349,
											"end": 2352,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2345,
											"end": 2361,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2338,
											"end": 2365,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2233,
											"end": 2372,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2233,
											"end": 2372,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2233,
											"end": 2372,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2233,
											"end": 2372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2378,
											"end": 2480,
											"name": "tag",
											"source": 17,
											"value": "491"
										},
										{
											"begin": 2378,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2419,
											"end": 2425,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2470,
											"end": 2472,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 2466,
											"end": 2473,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 2461,
											"end": 2463,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 2454,
											"end": 2459,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2446,
											"end": 2474,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2436,
											"end": 2474,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2436,
											"end": 2474,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2378,
											"end": 2480,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2378,
											"end": 2480,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2378,
											"end": 2480,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2378,
											"end": 2480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2486,
											"end": 2863,
											"name": "tag",
											"source": 17,
											"value": "492"
										},
										{
											"begin": 2486,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2574,
											"end": 2577,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2602,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "566"
										},
										{
											"begin": 2635,
											"end": 2640,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2602,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "488"
										},
										{
											"begin": 2602,
											"end": 2641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2602,
											"end": 2641,
											"name": "tag",
											"source": 17,
											"value": "566"
										},
										{
											"begin": 2602,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2657,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "567"
										},
										{
											"begin": 2721,
											"end": 2727,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2716,
											"end": 2719,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2657,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "489"
										},
										{
											"begin": 2657,
											"end": 2728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2657,
											"end": 2728,
											"name": "tag",
											"source": 17,
											"value": "567"
										},
										{
											"begin": 2657,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2650,
											"end": 2728,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 2650,
											"end": 2728,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2737,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "568"
										},
										{
											"begin": 2795,
											"end": 2801,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2790,
											"end": 2793,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2783,
											"end": 2787,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2776,
											"end": 2781,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2772,
											"end": 2788,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2737,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "490"
										},
										{
											"begin": 2737,
											"end": 2802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2737,
											"end": 2802,
											"name": "tag",
											"source": 17,
											"value": "568"
										},
										{
											"begin": 2737,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2827,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "569"
										},
										{
											"begin": 2849,
											"end": 2855,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2827,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "491"
										},
										{
											"begin": 2827,
											"end": 2856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2827,
											"end": 2856,
											"name": "tag",
											"source": 17,
											"value": "569"
										},
										{
											"begin": 2827,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2822,
											"end": 2825,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2818,
											"end": 2857,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2811,
											"end": 2857,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2811,
											"end": 2857,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2578,
											"end": 2863,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2486,
											"end": 2863,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2486,
											"end": 2863,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2486,
											"end": 2863,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2486,
											"end": 2863,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2486,
											"end": 2863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2869,
											"end": 3182,
											"name": "tag",
											"source": 17,
											"value": "65"
										},
										{
											"begin": 2869,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2982,
											"end": 2986,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3022,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3009,
											"end": 3018,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3005,
											"end": 3023,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2997,
											"end": 3023,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2997,
											"end": 3023,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3069,
											"end": 3078,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3063,
											"end": 3067,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3059,
											"end": 3079,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3044,
											"end": 3053,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3040,
											"end": 3057,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3033,
											"end": 3080,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3097,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "571"
										},
										{
											"begin": 3170,
											"end": 3174,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3161,
											"end": 3167,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3097,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "492"
										},
										{
											"begin": 3097,
											"end": 3175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3097,
											"end": 3175,
											"name": "tag",
											"source": 17,
											"value": "571"
										},
										{
											"begin": 3097,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3089,
											"end": 3175,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3089,
											"end": 3175,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2869,
											"end": 3182,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2869,
											"end": 3182,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2869,
											"end": 3182,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2869,
											"end": 3182,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2869,
											"end": 3182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3188,
											"end": 3314,
											"name": "tag",
											"source": 17,
											"value": "493"
										},
										{
											"begin": 3188,
											"end": 3314,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3225,
											"end": 3232,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3265,
											"end": 3307,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3258,
											"end": 3263,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3254,
											"end": 3308,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3308,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3308,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3188,
											"end": 3314,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3188,
											"end": 3314,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3188,
											"end": 3314,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3188,
											"end": 3314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3320,
											"end": 3416,
											"name": "tag",
											"source": 17,
											"value": "494"
										},
										{
											"begin": 3320,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3357,
											"end": 3364,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3386,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "574"
										},
										{
											"begin": 3404,
											"end": 3409,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3386,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "493"
										},
										{
											"begin": 3386,
											"end": 3410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3386,
											"end": 3410,
											"name": "tag",
											"source": 17,
											"value": "574"
										},
										{
											"begin": 3386,
											"end": 3410,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3375,
											"end": 3410,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3375,
											"end": 3410,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3320,
											"end": 3416,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3320,
											"end": 3416,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3320,
											"end": 3416,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3320,
											"end": 3416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3422,
											"end": 3544,
											"name": "tag",
											"source": 17,
											"value": "495"
										},
										{
											"begin": 3422,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3495,
											"end": 3519,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "576"
										},
										{
											"begin": 3513,
											"end": 3518,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3495,
											"end": 3519,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "494"
										},
										{
											"begin": 3495,
											"end": 3519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3495,
											"end": 3519,
											"name": "tag",
											"source": 17,
											"value": "576"
										},
										{
											"begin": 3495,
											"end": 3519,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3488,
											"end": 3493,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3485,
											"end": 3520,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 3475,
											"end": 3538,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "577"
										},
										{
											"begin": 3475,
											"end": 3538,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3534,
											"end": 3535,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3531,
											"end": 3532,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3524,
											"end": 3536,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3475,
											"end": 3538,
											"name": "tag",
											"source": 17,
											"value": "577"
										},
										{
											"begin": 3475,
											"end": 3538,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3422,
											"end": 3544,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3422,
											"end": 3544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3550,
											"end": 3689,
											"name": "tag",
											"source": 17,
											"value": "496"
										},
										{
											"begin": 3550,
											"end": 3689,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3596,
											"end": 3601,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3640,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3621,
											"end": 3641,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3612,
											"end": 3641,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3612,
											"end": 3641,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3650,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "579"
										},
										{
											"begin": 3677,
											"end": 3682,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3650,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "495"
										},
										{
											"begin": 3650,
											"end": 3683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3650,
											"end": 3683,
											"name": "tag",
											"source": 17,
											"value": "579"
										},
										{
											"begin": 3650,
											"end": 3683,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3550,
											"end": 3689,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3550,
											"end": 3689,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3550,
											"end": 3689,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3550,
											"end": 3689,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3550,
											"end": 3689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3695,
											"end": 3817,
											"name": "tag",
											"source": 17,
											"value": "497"
										},
										{
											"begin": 3695,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3768,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "581"
										},
										{
											"begin": 3786,
											"end": 3791,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3768,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "486"
										},
										{
											"begin": 3768,
											"end": 3792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3768,
											"end": 3792,
											"name": "tag",
											"source": 17,
											"value": "581"
										},
										{
											"begin": 3768,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3761,
											"end": 3766,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3758,
											"end": 3793,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 3748,
											"end": 3811,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "582"
										},
										{
											"begin": 3748,
											"end": 3811,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3807,
											"end": 3808,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3804,
											"end": 3805,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3797,
											"end": 3809,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3748,
											"end": 3811,
											"name": "tag",
											"source": 17,
											"value": "582"
										},
										{
											"begin": 3748,
											"end": 3811,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3695,
											"end": 3817,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3695,
											"end": 3817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3823,
											"end": 3962,
											"name": "tag",
											"source": 17,
											"value": "498"
										},
										{
											"begin": 3823,
											"end": 3962,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3869,
											"end": 3874,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3907,
											"end": 3913,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3894,
											"end": 3914,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3885,
											"end": 3914,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3885,
											"end": 3914,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3923,
											"end": 3956,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "584"
										},
										{
											"begin": 3950,
											"end": 3955,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3923,
											"end": 3956,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "497"
										},
										{
											"begin": 3923,
											"end": 3956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3923,
											"end": 3956,
											"name": "tag",
											"source": 17,
											"value": "584"
										},
										{
											"begin": 3923,
											"end": 3956,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3823,
											"end": 3962,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3823,
											"end": 3962,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3823,
											"end": 3962,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3823,
											"end": 3962,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3823,
											"end": 3962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3968,
											"end": 4442,
											"name": "tag",
											"source": 17,
											"value": "68"
										},
										{
											"begin": 3968,
											"end": 4442,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4036,
											"end": 4042,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4044,
											"end": 4050,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4093,
											"end": 4095,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4081,
											"end": 4090,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4072,
											"end": 4079,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4068,
											"end": 4091,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4064,
											"end": 4096,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 4061,
											"end": 4180,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4061,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "586"
										},
										{
											"begin": 4061,
											"end": 4180,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4099,
											"end": 4178,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "587"
										},
										{
											"begin": 4099,
											"end": 4178,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "479"
										},
										{
											"begin": 4099,
											"end": 4178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4099,
											"end": 4178,
											"name": "tag",
											"source": 17,
											"value": "587"
										},
										{
											"begin": 4099,
											"end": 4178,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4061,
											"end": 4180,
											"name": "tag",
											"source": 17,
											"value": "586"
										},
										{
											"begin": 4061,
											"end": 4180,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4219,
											"end": 4220,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4244,
											"end": 4297,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "588"
										},
										{
											"begin": 4289,
											"end": 4296,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4280,
											"end": 4286,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4269,
											"end": 4278,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4265,
											"end": 4287,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4244,
											"end": 4297,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "496"
										},
										{
											"begin": 4244,
											"end": 4297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4244,
											"end": 4297,
											"name": "tag",
											"source": 17,
											"value": "588"
										},
										{
											"begin": 4244,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4234,
											"end": 4297,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4234,
											"end": 4297,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4190,
											"end": 4307,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4346,
											"end": 4348,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4372,
											"end": 4425,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "589"
										},
										{
											"begin": 4417,
											"end": 4424,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4408,
											"end": 4414,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4397,
											"end": 4406,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4393,
											"end": 4415,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4372,
											"end": 4425,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "498"
										},
										{
											"begin": 4372,
											"end": 4425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4372,
											"end": 4425,
											"name": "tag",
											"source": 17,
											"value": "589"
										},
										{
											"begin": 4372,
											"end": 4425,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4362,
											"end": 4425,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4362,
											"end": 4425,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4317,
											"end": 4435,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3968,
											"end": 4442,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3968,
											"end": 4442,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3968,
											"end": 4442,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3968,
											"end": 4442,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3968,
											"end": 4442,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3968,
											"end": 4442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4448,
											"end": 4564,
											"name": "tag",
											"source": 17,
											"value": "499"
										},
										{
											"begin": 4448,
											"end": 4564,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4518,
											"end": 4539,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "591"
										},
										{
											"begin": 4533,
											"end": 4538,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4518,
											"end": 4539,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "484"
										},
										{
											"begin": 4518,
											"end": 4539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4518,
											"end": 4539,
											"name": "tag",
											"source": 17,
											"value": "591"
										},
										{
											"begin": 4518,
											"end": 4539,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4511,
											"end": 4516,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4508,
											"end": 4540,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 4498,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "592"
										},
										{
											"begin": 4498,
											"end": 4558,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4554,
											"end": 4555,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4552,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4544,
											"end": 4556,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4498,
											"end": 4558,
											"name": "tag",
											"source": 17,
											"value": "592"
										},
										{
											"begin": 4498,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4448,
											"end": 4564,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4448,
											"end": 4564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4570,
											"end": 4703,
											"name": "tag",
											"source": 17,
											"value": "500"
										},
										{
											"begin": 4570,
											"end": 4703,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4613,
											"end": 4618,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4651,
											"end": 4657,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4638,
											"end": 4658,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 4629,
											"end": 4658,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4629,
											"end": 4658,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4667,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "594"
										},
										{
											"begin": 4691,
											"end": 4696,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4667,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "499"
										},
										{
											"begin": 4667,
											"end": 4697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4667,
											"end": 4697,
											"name": "tag",
											"source": 17,
											"value": "594"
										},
										{
											"begin": 4667,
											"end": 4697,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4570,
											"end": 4703,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4570,
											"end": 4703,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4570,
											"end": 4703,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4570,
											"end": 4703,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4570,
											"end": 4703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4709,
											"end": 5032,
											"name": "tag",
											"source": 17,
											"value": "73"
										},
										{
											"begin": 4709,
											"end": 5032,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4765,
											"end": 4771,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4814,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4802,
											"end": 4811,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4793,
											"end": 4800,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4789,
											"end": 4812,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4785,
											"end": 4817,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 4782,
											"end": 4901,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4782,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "596"
										},
										{
											"begin": 4782,
											"end": 4901,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4820,
											"end": 4899,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "597"
										},
										{
											"begin": 4820,
											"end": 4899,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "479"
										},
										{
											"begin": 4820,
											"end": 4899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4820,
											"end": 4899,
											"name": "tag",
											"source": 17,
											"value": "597"
										},
										{
											"begin": 4820,
											"end": 4899,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4782,
											"end": 4901,
											"name": "tag",
											"source": 17,
											"value": "596"
										},
										{
											"begin": 4782,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4940,
											"end": 4941,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4965,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "598"
										},
										{
											"begin": 5007,
											"end": 5014,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4998,
											"end": 5004,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4987,
											"end": 4996,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4983,
											"end": 5005,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4965,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "500"
										},
										{
											"begin": 4965,
											"end": 5015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4965,
											"end": 5015,
											"name": "tag",
											"source": 17,
											"value": "598"
										},
										{
											"begin": 4965,
											"end": 5015,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4955,
											"end": 5015,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4955,
											"end": 5015,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4911,
											"end": 5025,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4709,
											"end": 5032,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4709,
											"end": 5032,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4709,
											"end": 5032,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4709,
											"end": 5032,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4709,
											"end": 5032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5038,
											"end": 5657,
											"name": "tag",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 5038,
											"end": 5657,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5115,
											"end": 5121,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5123,
											"end": 5129,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5131,
											"end": 5137,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5180,
											"end": 5182,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 5168,
											"end": 5177,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5159,
											"end": 5166,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5155,
											"end": 5178,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5151,
											"end": 5183,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 5148,
											"end": 5267,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5148,
											"end": 5267,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "600"
										},
										{
											"begin": 5148,
											"end": 5267,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5186,
											"end": 5265,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "601"
										},
										{
											"begin": 5186,
											"end": 5265,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "479"
										},
										{
											"begin": 5186,
											"end": 5265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5186,
											"end": 5265,
											"name": "tag",
											"source": 17,
											"value": "601"
										},
										{
											"begin": 5186,
											"end": 5265,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5148,
											"end": 5267,
											"name": "tag",
											"source": 17,
											"value": "600"
										},
										{
											"begin": 5148,
											"end": 5267,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5306,
											"end": 5307,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5331,
											"end": 5384,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "602"
										},
										{
											"begin": 5376,
											"end": 5383,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5367,
											"end": 5373,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5356,
											"end": 5365,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5352,
											"end": 5374,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5331,
											"end": 5384,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "496"
										},
										{
											"begin": 5331,
											"end": 5384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5331,
											"end": 5384,
											"name": "tag",
											"source": 17,
											"value": "602"
										},
										{
											"begin": 5331,
											"end": 5384,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5321,
											"end": 5384,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 5321,
											"end": 5384,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5277,
											"end": 5394,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5433,
											"end": 5435,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5459,
											"end": 5512,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "603"
										},
										{
											"begin": 5504,
											"end": 5511,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5495,
											"end": 5501,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5484,
											"end": 5493,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5480,
											"end": 5502,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5459,
											"end": 5512,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "496"
										},
										{
											"begin": 5459,
											"end": 5512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5459,
											"end": 5512,
											"name": "tag",
											"source": 17,
											"value": "603"
										},
										{
											"begin": 5459,
											"end": 5512,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5449,
											"end": 5512,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5449,
											"end": 5512,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5404,
											"end": 5522,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5561,
											"end": 5563,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5587,
											"end": 5640,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "604"
										},
										{
											"begin": 5632,
											"end": 5639,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5623,
											"end": 5629,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5612,
											"end": 5621,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5608,
											"end": 5630,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5587,
											"end": 5640,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "498"
										},
										{
											"begin": 5587,
											"end": 5640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5587,
											"end": 5640,
											"name": "tag",
											"source": 17,
											"value": "604"
										},
										{
											"begin": 5587,
											"end": 5640,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5577,
											"end": 5640,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5577,
											"end": 5640,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5532,
											"end": 5650,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5038,
											"end": 5657,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5038,
											"end": 5657,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5038,
											"end": 5657,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5038,
											"end": 5657,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5038,
											"end": 5657,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5038,
											"end": 5657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5663,
											"end": 5740,
											"name": "tag",
											"source": 17,
											"value": "501"
										},
										{
											"begin": 5663,
											"end": 5740,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5700,
											"end": 5707,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5729,
											"end": 5734,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5718,
											"end": 5734,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5718,
											"end": 5734,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5663,
											"end": 5740,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5663,
											"end": 5740,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5663,
											"end": 5740,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5663,
											"end": 5740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5746,
											"end": 5868,
											"name": "tag",
											"source": 17,
											"value": "502"
										},
										{
											"begin": 5746,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5843,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "607"
										},
										{
											"begin": 5837,
											"end": 5842,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5843,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "501"
										},
										{
											"begin": 5819,
											"end": 5843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5819,
											"end": 5843,
											"name": "tag",
											"source": 17,
											"value": "607"
										},
										{
											"begin": 5819,
											"end": 5843,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5812,
											"end": 5817,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5809,
											"end": 5844,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 5799,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "608"
										},
										{
											"begin": 5799,
											"end": 5862,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5858,
											"end": 5859,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5855,
											"end": 5856,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5848,
											"end": 5860,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5799,
											"end": 5862,
											"name": "tag",
											"source": 17,
											"value": "608"
										},
										{
											"begin": 5799,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5746,
											"end": 5868,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5746,
											"end": 5868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5874,
											"end": 6013,
											"name": "tag",
											"source": 17,
											"value": "503"
										},
										{
											"begin": 5874,
											"end": 6013,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5920,
											"end": 5925,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5958,
											"end": 5964,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5945,
											"end": 5965,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 5936,
											"end": 5965,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5936,
											"end": 5965,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5974,
											"end": 6007,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "610"
										},
										{
											"begin": 6001,
											"end": 6006,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5974,
											"end": 6007,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "502"
										},
										{
											"begin": 5974,
											"end": 6007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5974,
											"end": 6007,
											"name": "tag",
											"source": 17,
											"value": "610"
										},
										{
											"begin": 5974,
											"end": 6007,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5874,
											"end": 6013,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5874,
											"end": 6013,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5874,
											"end": 6013,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5874,
											"end": 6013,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5874,
											"end": 6013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6019,
											"end": 6348,
											"name": "tag",
											"source": 17,
											"value": "85"
										},
										{
											"begin": 6019,
											"end": 6348,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6078,
											"end": 6084,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6127,
											"end": 6129,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6115,
											"end": 6124,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6106,
											"end": 6113,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6102,
											"end": 6125,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 6098,
											"end": 6130,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 6095,
											"end": 6214,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6095,
											"end": 6214,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "612"
										},
										{
											"begin": 6095,
											"end": 6214,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6133,
											"end": 6212,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "613"
										},
										{
											"begin": 6133,
											"end": 6212,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "479"
										},
										{
											"begin": 6133,
											"end": 6212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6133,
											"end": 6212,
											"name": "tag",
											"source": 17,
											"value": "613"
										},
										{
											"begin": 6133,
											"end": 6212,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6095,
											"end": 6214,
											"name": "tag",
											"source": 17,
											"value": "612"
										},
										{
											"begin": 6095,
											"end": 6214,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6253,
											"end": 6254,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6278,
											"end": 6331,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "614"
										},
										{
											"begin": 6323,
											"end": 6330,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6314,
											"end": 6320,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6303,
											"end": 6312,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6299,
											"end": 6321,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6278,
											"end": 6331,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "503"
										},
										{
											"begin": 6278,
											"end": 6331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6278,
											"end": 6331,
											"name": "tag",
											"source": 17,
											"value": "614"
										},
										{
											"begin": 6278,
											"end": 6331,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6268,
											"end": 6331,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6268,
											"end": 6331,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6224,
											"end": 6341,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6019,
											"end": 6348,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6019,
											"end": 6348,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6019,
											"end": 6348,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6019,
											"end": 6348,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6019,
											"end": 6348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6354,
											"end": 6472,
											"name": "tag",
											"source": 17,
											"value": "504"
										},
										{
											"begin": 6354,
											"end": 6472,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6441,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "616"
										},
										{
											"begin": 6459,
											"end": 6464,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6441,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "501"
										},
										{
											"begin": 6441,
											"end": 6465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6441,
											"end": 6465,
											"name": "tag",
											"source": 17,
											"value": "616"
										},
										{
											"begin": 6441,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6436,
											"end": 6439,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6429,
											"end": 6466,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6354,
											"end": 6472,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6354,
											"end": 6472,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6354,
											"end": 6472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6478,
											"end": 6700,
											"name": "tag",
											"source": 17,
											"value": "88"
										},
										{
											"begin": 6478,
											"end": 6700,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6571,
											"end": 6575,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6609,
											"end": 6611,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6598,
											"end": 6607,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6594,
											"end": 6612,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6586,
											"end": 6612,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6586,
											"end": 6612,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6622,
											"end": 6693,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "618"
										},
										{
											"begin": 6690,
											"end": 6691,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6679,
											"end": 6688,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6675,
											"end": 6692,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6666,
											"end": 6672,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6622,
											"end": 6693,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "504"
										},
										{
											"begin": 6622,
											"end": 6693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6622,
											"end": 6693,
											"name": "tag",
											"source": 17,
											"value": "618"
										},
										{
											"begin": 6622,
											"end": 6693,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6478,
											"end": 6700,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6478,
											"end": 6700,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6478,
											"end": 6700,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6478,
											"end": 6700,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6478,
											"end": 6700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6706,
											"end": 7180,
											"name": "tag",
											"source": 17,
											"value": "91"
										},
										{
											"begin": 6706,
											"end": 7180,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6774,
											"end": 6780,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6831,
											"end": 6833,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6819,
											"end": 6828,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6810,
											"end": 6817,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6806,
											"end": 6829,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 6802,
											"end": 6834,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 6799,
											"end": 6918,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6799,
											"end": 6918,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "620"
										},
										{
											"begin": 6799,
											"end": 6918,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6837,
											"end": 6916,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "621"
										},
										{
											"begin": 6837,
											"end": 6916,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "479"
										},
										{
											"begin": 6837,
											"end": 6916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6837,
											"end": 6916,
											"name": "tag",
											"source": 17,
											"value": "621"
										},
										{
											"begin": 6837,
											"end": 6916,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6799,
											"end": 6918,
											"name": "tag",
											"source": 17,
											"value": "620"
										},
										{
											"begin": 6799,
											"end": 6918,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6957,
											"end": 6958,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6982,
											"end": 7035,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "622"
										},
										{
											"begin": 7027,
											"end": 7034,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 7018,
											"end": 7024,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7007,
											"end": 7016,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 7003,
											"end": 7025,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6982,
											"end": 7035,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "503"
										},
										{
											"begin": 6982,
											"end": 7035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6982,
											"end": 7035,
											"name": "tag",
											"source": 17,
											"value": "622"
										},
										{
											"begin": 6982,
											"end": 7035,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6972,
											"end": 7035,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6972,
											"end": 7035,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6928,
											"end": 7045,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7084,
											"end": 7086,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7110,
											"end": 7163,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "623"
										},
										{
											"begin": 7155,
											"end": 7162,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 7146,
											"end": 7152,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7135,
											"end": 7144,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 7131,
											"end": 7153,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7110,
											"end": 7163,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "496"
										},
										{
											"begin": 7110,
											"end": 7163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7110,
											"end": 7163,
											"name": "tag",
											"source": 17,
											"value": "623"
										},
										{
											"begin": 7110,
											"end": 7163,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7100,
											"end": 7163,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7100,
											"end": 7163,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7055,
											"end": 7173,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6706,
											"end": 7180,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6706,
											"end": 7180,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6706,
											"end": 7180,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6706,
											"end": 7180,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6706,
											"end": 7180,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6706,
											"end": 7180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7186,
											"end": 7272,
											"name": "tag",
											"source": 17,
											"value": "505"
										},
										{
											"begin": 7186,
											"end": 7272,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7221,
											"end": 7228,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7261,
											"end": 7265,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 7254,
											"end": 7259,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7250,
											"end": 7266,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 7239,
											"end": 7266,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7239,
											"end": 7266,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7186,
											"end": 7272,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7186,
											"end": 7272,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7186,
											"end": 7272,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7186,
											"end": 7272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7278,
											"end": 7390,
											"name": "tag",
											"source": 17,
											"value": "506"
										},
										{
											"begin": 7278,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7361,
											"end": 7383,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "626"
										},
										{
											"begin": 7377,
											"end": 7382,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7361,
											"end": 7383,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "505"
										},
										{
											"begin": 7361,
											"end": 7383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7361,
											"end": 7383,
											"name": "tag",
											"source": 17,
											"value": "626"
										},
										{
											"begin": 7361,
											"end": 7383,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7356,
											"end": 7359,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7349,
											"end": 7384,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7278,
											"end": 7390,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7278,
											"end": 7390,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7278,
											"end": 7390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7396,
											"end": 7610,
											"name": "tag",
											"source": 17,
											"value": "96"
										},
										{
											"begin": 7396,
											"end": 7610,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7485,
											"end": 7489,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7523,
											"end": 7525,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7512,
											"end": 7521,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7508,
											"end": 7526,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7500,
											"end": 7526,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7500,
											"end": 7526,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7536,
											"end": 7603,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "628"
										},
										{
											"begin": 7600,
											"end": 7601,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7589,
											"end": 7598,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7585,
											"end": 7602,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7576,
											"end": 7582,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7536,
											"end": 7603,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "506"
										},
										{
											"begin": 7536,
											"end": 7603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7536,
											"end": 7603,
											"name": "tag",
											"source": 17,
											"value": "628"
										},
										{
											"begin": 7536,
											"end": 7603,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7396,
											"end": 7610,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7396,
											"end": 7610,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7396,
											"end": 7610,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7396,
											"end": 7610,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7396,
											"end": 7610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7616,
											"end": 8084,
											"name": "tag",
											"source": 17,
											"value": "102"
										},
										{
											"begin": 7616,
											"end": 8084,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7681,
											"end": 7687,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7689,
											"end": 7695,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7738,
											"end": 7740,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7726,
											"end": 7735,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7717,
											"end": 7724,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 7713,
											"end": 7736,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 7709,
											"end": 7741,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 7706,
											"end": 7825,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7706,
											"end": 7825,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "630"
										},
										{
											"begin": 7706,
											"end": 7825,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7744,
											"end": 7823,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "631"
										},
										{
											"begin": 7744,
											"end": 7823,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "479"
										},
										{
											"begin": 7744,
											"end": 7823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7744,
											"end": 7823,
											"name": "tag",
											"source": 17,
											"value": "631"
										},
										{
											"begin": 7744,
											"end": 7823,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7706,
											"end": 7825,
											"name": "tag",
											"source": 17,
											"value": "630"
										},
										{
											"begin": 7706,
											"end": 7825,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7889,
											"end": 7942,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "632"
										},
										{
											"begin": 7934,
											"end": 7941,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 7925,
											"end": 7931,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7914,
											"end": 7923,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7889,
											"end": 7942,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "496"
										},
										{
											"begin": 7889,
											"end": 7942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7889,
											"end": 7942,
											"name": "tag",
											"source": 17,
											"value": "632"
										},
										{
											"begin": 7889,
											"end": 7942,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7879,
											"end": 7942,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7879,
											"end": 7942,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7835,
											"end": 7952,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7991,
											"end": 7993,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8017,
											"end": 8067,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "633"
										},
										{
											"begin": 8059,
											"end": 8066,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 8050,
											"end": 8056,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8039,
											"end": 8048,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 8035,
											"end": 8057,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8017,
											"end": 8067,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "500"
										},
										{
											"begin": 8017,
											"end": 8067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8017,
											"end": 8067,
											"name": "tag",
											"source": 17,
											"value": "633"
										},
										{
											"begin": 8017,
											"end": 8067,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8007,
											"end": 8067,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8007,
											"end": 8067,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7962,
											"end": 8077,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7616,
											"end": 8084,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7616,
											"end": 8084,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7616,
											"end": 8084,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7616,
											"end": 8084,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7616,
											"end": 8084,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7616,
											"end": 8084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8090,
											"end": 8201,
											"name": "tag",
											"source": 17,
											"value": "507"
										},
										{
											"begin": 8090,
											"end": 8201,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8142,
											"end": 8149,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8171,
											"end": 8195,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "635"
										},
										{
											"begin": 8189,
											"end": 8194,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8171,
											"end": 8195,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "494"
										},
										{
											"begin": 8171,
											"end": 8195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8171,
											"end": 8195,
											"name": "tag",
											"source": 17,
											"value": "635"
										},
										{
											"begin": 8171,
											"end": 8195,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8160,
											"end": 8195,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8160,
											"end": 8195,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8090,
											"end": 8201,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8090,
											"end": 8201,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8090,
											"end": 8201,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8090,
											"end": 8201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8207,
											"end": 8359,
											"name": "tag",
											"source": 17,
											"value": "508"
										},
										{
											"begin": 8207,
											"end": 8359,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8295,
											"end": 8334,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "637"
										},
										{
											"begin": 8328,
											"end": 8333,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8295,
											"end": 8334,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "507"
										},
										{
											"begin": 8295,
											"end": 8334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8295,
											"end": 8334,
											"name": "tag",
											"source": 17,
											"value": "637"
										},
										{
											"begin": 8295,
											"end": 8334,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8288,
											"end": 8293,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8285,
											"end": 8335,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 8275,
											"end": 8353,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "638"
										},
										{
											"begin": 8275,
											"end": 8353,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8349,
											"end": 8350,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8346,
											"end": 8347,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8339,
											"end": 8351,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 8275,
											"end": 8353,
											"name": "tag",
											"source": 17,
											"value": "638"
										},
										{
											"begin": 8275,
											"end": 8353,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8207,
											"end": 8359,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8207,
											"end": 8359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8365,
											"end": 8534,
											"name": "tag",
											"source": 17,
											"value": "509"
										},
										{
											"begin": 8365,
											"end": 8534,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8426,
											"end": 8431,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8464,
											"end": 8470,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8451,
											"end": 8471,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 8442,
											"end": 8471,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8442,
											"end": 8471,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8480,
											"end": 8528,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "640"
										},
										{
											"begin": 8522,
											"end": 8527,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8480,
											"end": 8528,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "508"
										},
										{
											"begin": 8480,
											"end": 8528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8480,
											"end": 8528,
											"name": "tag",
											"source": 17,
											"value": "640"
										},
										{
											"begin": 8480,
											"end": 8528,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8365,
											"end": 8534,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8365,
											"end": 8534,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8365,
											"end": 8534,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8365,
											"end": 8534,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8365,
											"end": 8534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8540,
											"end": 9189,
											"name": "tag",
											"source": 17,
											"value": "106"
										},
										{
											"begin": 8540,
											"end": 9189,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8632,
											"end": 8638,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8640,
											"end": 8646,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8648,
											"end": 8654,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8697,
											"end": 8699,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 8685,
											"end": 8694,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8676,
											"end": 8683,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 8672,
											"end": 8695,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 8668,
											"end": 8700,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 8665,
											"end": 8784,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8665,
											"end": 8784,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "642"
										},
										{
											"begin": 8665,
											"end": 8784,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8703,
											"end": 8782,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "643"
										},
										{
											"begin": 8703,
											"end": 8782,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "479"
										},
										{
											"begin": 8703,
											"end": 8782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8703,
											"end": 8782,
											"name": "tag",
											"source": 17,
											"value": "643"
										},
										{
											"begin": 8703,
											"end": 8782,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8665,
											"end": 8784,
											"name": "tag",
											"source": 17,
											"value": "642"
										},
										{
											"begin": 8665,
											"end": 8784,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8823,
											"end": 8824,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8848,
											"end": 8916,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "644"
										},
										{
											"begin": 8908,
											"end": 8915,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 8899,
											"end": 8905,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8888,
											"end": 8897,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 8884,
											"end": 8906,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8848,
											"end": 8916,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "509"
										},
										{
											"begin": 8848,
											"end": 8916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8848,
											"end": 8916,
											"name": "tag",
											"source": 17,
											"value": "644"
										},
										{
											"begin": 8848,
											"end": 8916,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8838,
											"end": 8916,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 8838,
											"end": 8916,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8794,
											"end": 8926,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8965,
											"end": 8967,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8991,
											"end": 9044,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "645"
										},
										{
											"begin": 9036,
											"end": 9043,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 9027,
											"end": 9033,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9016,
											"end": 9025,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 9012,
											"end": 9034,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8991,
											"end": 9044,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "496"
										},
										{
											"begin": 8991,
											"end": 9044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8991,
											"end": 9044,
											"name": "tag",
											"source": 17,
											"value": "645"
										},
										{
											"begin": 8991,
											"end": 9044,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8981,
											"end": 9044,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8981,
											"end": 9044,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8936,
											"end": 9054,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9093,
											"end": 9095,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 9119,
											"end": 9172,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "646"
										},
										{
											"begin": 9164,
											"end": 9171,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 9155,
											"end": 9161,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9144,
											"end": 9153,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 9140,
											"end": 9162,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9119,
											"end": 9172,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "498"
										},
										{
											"begin": 9119,
											"end": 9172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9119,
											"end": 9172,
											"name": "tag",
											"source": 17,
											"value": "646"
										},
										{
											"begin": 9119,
											"end": 9172,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9109,
											"end": 9172,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9109,
											"end": 9172,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9064,
											"end": 9182,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8540,
											"end": 9189,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8540,
											"end": 9189,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8540,
											"end": 9189,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8540,
											"end": 9189,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8540,
											"end": 9189,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8540,
											"end": 9189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9195,
											"end": 9524,
											"name": "tag",
											"source": 17,
											"value": "110"
										},
										{
											"begin": 9195,
											"end": 9524,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9254,
											"end": 9260,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9303,
											"end": 9305,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9291,
											"end": 9300,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9282,
											"end": 9289,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9278,
											"end": 9301,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 9274,
											"end": 9306,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 9271,
											"end": 9390,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9271,
											"end": 9390,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "648"
										},
										{
											"begin": 9271,
											"end": 9390,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9309,
											"end": 9388,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "649"
										},
										{
											"begin": 9309,
											"end": 9388,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "479"
										},
										{
											"begin": 9309,
											"end": 9388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9309,
											"end": 9388,
											"name": "tag",
											"source": 17,
											"value": "649"
										},
										{
											"begin": 9309,
											"end": 9388,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9271,
											"end": 9390,
											"name": "tag",
											"source": 17,
											"value": "648"
										},
										{
											"begin": 9271,
											"end": 9390,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9429,
											"end": 9430,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9454,
											"end": 9507,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "650"
										},
										{
											"begin": 9499,
											"end": 9506,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9490,
											"end": 9496,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9479,
											"end": 9488,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9475,
											"end": 9497,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9454,
											"end": 9507,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "498"
										},
										{
											"begin": 9454,
											"end": 9507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9454,
											"end": 9507,
											"name": "tag",
											"source": 17,
											"value": "650"
										},
										{
											"begin": 9454,
											"end": 9507,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9444,
											"end": 9507,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9444,
											"end": 9507,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9400,
											"end": 9517,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9195,
											"end": 9524,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9195,
											"end": 9524,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9195,
											"end": 9524,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9195,
											"end": 9524,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9195,
											"end": 9524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9530,
											"end": 9634,
											"name": "tag",
											"source": 17,
											"value": "510"
										},
										{
											"begin": 9530,
											"end": 9634,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9575,
											"end": 9582,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9604,
											"end": 9628,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "652"
										},
										{
											"begin": 9622,
											"end": 9627,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9604,
											"end": 9628,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "493"
										},
										{
											"begin": 9604,
											"end": 9628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9604,
											"end": 9628,
											"name": "tag",
											"source": 17,
											"value": "652"
										},
										{
											"begin": 9604,
											"end": 9628,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9593,
											"end": 9628,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9593,
											"end": 9628,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9530,
											"end": 9634,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9530,
											"end": 9634,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9530,
											"end": 9634,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9530,
											"end": 9634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9640,
											"end": 9778,
											"name": "tag",
											"source": 17,
											"value": "511"
										},
										{
											"begin": 9640,
											"end": 9778,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9721,
											"end": 9753,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "654"
										},
										{
											"begin": 9747,
											"end": 9752,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9721,
											"end": 9753,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "510"
										},
										{
											"begin": 9721,
											"end": 9753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9721,
											"end": 9753,
											"name": "tag",
											"source": 17,
											"value": "654"
										},
										{
											"begin": 9721,
											"end": 9753,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9714,
											"end": 9719,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9711,
											"end": 9754,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 9701,
											"end": 9772,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "655"
										},
										{
											"begin": 9701,
											"end": 9772,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9768,
											"end": 9769,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9765,
											"end": 9766,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9758,
											"end": 9770,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 9701,
											"end": 9772,
											"name": "tag",
											"source": 17,
											"value": "655"
										},
										{
											"begin": 9701,
											"end": 9772,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9640,
											"end": 9778,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9640,
											"end": 9778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9784,
											"end": 9939,
											"name": "tag",
											"source": 17,
											"value": "512"
										},
										{
											"begin": 9784,
											"end": 9939,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9838,
											"end": 9843,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9876,
											"end": 9882,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9863,
											"end": 9883,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 9854,
											"end": 9883,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9854,
											"end": 9883,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9892,
											"end": 9933,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "657"
										},
										{
											"begin": 9927,
											"end": 9932,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9892,
											"end": 9933,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "511"
										},
										{
											"begin": 9892,
											"end": 9933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9892,
											"end": 9933,
											"name": "tag",
											"source": 17,
											"value": "657"
										},
										{
											"begin": 9892,
											"end": 9933,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9784,
											"end": 9939,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9784,
											"end": 9939,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9784,
											"end": 9939,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9784,
											"end": 9939,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9784,
											"end": 9939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9945,
											"end": 10435,
											"name": "tag",
											"source": 17,
											"value": "117"
										},
										{
											"begin": 9945,
											"end": 10435,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10021,
											"end": 10027,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10029,
											"end": 10035,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10078,
											"end": 10080,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10075,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10057,
											"end": 10064,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 10053,
											"end": 10076,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 10049,
											"end": 10081,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 10046,
											"end": 10165,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 10046,
											"end": 10165,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "659"
										},
										{
											"begin": 10046,
											"end": 10165,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10084,
											"end": 10163,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "660"
										},
										{
											"begin": 10084,
											"end": 10163,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "479"
										},
										{
											"begin": 10084,
											"end": 10163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10084,
											"end": 10163,
											"name": "tag",
											"source": 17,
											"value": "660"
										},
										{
											"begin": 10084,
											"end": 10163,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10046,
											"end": 10165,
											"name": "tag",
											"source": 17,
											"value": "659"
										},
										{
											"begin": 10046,
											"end": 10165,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10204,
											"end": 10205,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10229,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "661"
										},
										{
											"begin": 10282,
											"end": 10289,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 10273,
											"end": 10279,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10262,
											"end": 10271,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 10258,
											"end": 10280,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10229,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "512"
										},
										{
											"begin": 10229,
											"end": 10290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10229,
											"end": 10290,
											"name": "tag",
											"source": 17,
											"value": "661"
										},
										{
											"begin": 10229,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10219,
											"end": 10290,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 10219,
											"end": 10290,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10175,
											"end": 10300,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10339,
											"end": 10341,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10365,
											"end": 10418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "662"
										},
										{
											"begin": 10410,
											"end": 10417,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 10401,
											"end": 10407,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10390,
											"end": 10399,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 10386,
											"end": 10408,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10365,
											"end": 10418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "498"
										},
										{
											"begin": 10365,
											"end": 10418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10365,
											"end": 10418,
											"name": "tag",
											"source": 17,
											"value": "662"
										},
										{
											"begin": 10365,
											"end": 10418,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10355,
											"end": 10418,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10355,
											"end": 10418,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10310,
											"end": 10428,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9945,
											"end": 10435,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9945,
											"end": 10435,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9945,
											"end": 10435,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9945,
											"end": 10435,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9945,
											"end": 10435,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9945,
											"end": 10435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10441,
											"end": 10770,
											"name": "tag",
											"source": 17,
											"value": "133"
										},
										{
											"begin": 10441,
											"end": 10770,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10500,
											"end": 10506,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10549,
											"end": 10551,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10537,
											"end": 10546,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10528,
											"end": 10535,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10524,
											"end": 10547,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 10520,
											"end": 10552,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 10517,
											"end": 10636,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 10517,
											"end": 10636,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "664"
										},
										{
											"begin": 10517,
											"end": 10636,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10555,
											"end": 10634,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "665"
										},
										{
											"begin": 10555,
											"end": 10634,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "479"
										},
										{
											"begin": 10555,
											"end": 10634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10555,
											"end": 10634,
											"name": "tag",
											"source": 17,
											"value": "665"
										},
										{
											"begin": 10555,
											"end": 10634,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10517,
											"end": 10636,
											"name": "tag",
											"source": 17,
											"value": "664"
										},
										{
											"begin": 10517,
											"end": 10636,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10675,
											"end": 10676,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10700,
											"end": 10753,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "666"
										},
										{
											"begin": 10745,
											"end": 10752,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10736,
											"end": 10742,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10725,
											"end": 10734,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 10721,
											"end": 10743,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10700,
											"end": 10753,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "496"
										},
										{
											"begin": 10700,
											"end": 10753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10700,
											"end": 10753,
											"name": "tag",
											"source": 17,
											"value": "666"
										},
										{
											"begin": 10700,
											"end": 10753,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10690,
											"end": 10753,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10690,
											"end": 10753,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10646,
											"end": 10763,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10441,
											"end": 10770,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 10441,
											"end": 10770,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10441,
											"end": 10770,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10441,
											"end": 10770,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10441,
											"end": 10770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10776,
											"end": 11250,
											"name": "tag",
											"source": 17,
											"value": "189"
										},
										{
											"begin": 10776,
											"end": 11250,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10844,
											"end": 10850,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10852,
											"end": 10858,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10901,
											"end": 10903,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 10889,
											"end": 10898,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10880,
											"end": 10887,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 10876,
											"end": 10899,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 10872,
											"end": 10904,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 10869,
											"end": 10988,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 10869,
											"end": 10988,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "668"
										},
										{
											"begin": 10869,
											"end": 10988,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10907,
											"end": 10986,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "669"
										},
										{
											"begin": 10907,
											"end": 10986,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "479"
										},
										{
											"begin": 10907,
											"end": 10986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10907,
											"end": 10986,
											"name": "tag",
											"source": 17,
											"value": "669"
										},
										{
											"begin": 10907,
											"end": 10986,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10869,
											"end": 10988,
											"name": "tag",
											"source": 17,
											"value": "668"
										},
										{
											"begin": 10869,
											"end": 10988,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11027,
											"end": 11028,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11105,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "670"
										},
										{
											"begin": 11097,
											"end": 11104,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 11088,
											"end": 11094,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11077,
											"end": 11086,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 11073,
											"end": 11095,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11052,
											"end": 11105,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "496"
										},
										{
											"begin": 11052,
											"end": 11105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11052,
											"end": 11105,
											"name": "tag",
											"source": 17,
											"value": "670"
										},
										{
											"begin": 11052,
											"end": 11105,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11042,
											"end": 11105,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 11042,
											"end": 11105,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10998,
											"end": 11115,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11154,
											"end": 11156,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11180,
											"end": 11233,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "671"
										},
										{
											"begin": 11225,
											"end": 11232,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 11216,
											"end": 11222,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11205,
											"end": 11214,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 11201,
											"end": 11223,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11180,
											"end": 11233,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "496"
										},
										{
											"begin": 11180,
											"end": 11233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11180,
											"end": 11233,
											"name": "tag",
											"source": 17,
											"value": "671"
										},
										{
											"begin": 11180,
											"end": 11233,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11170,
											"end": 11233,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11170,
											"end": 11233,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11125,
											"end": 11243,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10776,
											"end": 11250,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 10776,
											"end": 11250,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10776,
											"end": 11250,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 10776,
											"end": 11250,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10776,
											"end": 11250,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10776,
											"end": 11250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11256,
											"end": 11436,
											"name": "tag",
											"source": 17,
											"value": "513"
										},
										{
											"begin": 11256,
											"end": 11436,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11304,
											"end": 11381,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11301,
											"end": 11302,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11294,
											"end": 11382,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11401,
											"end": 11405,
											"name": "PUSH",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 11398,
											"end": 11399,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 11391,
											"end": 11406,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11425,
											"end": 11429,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 11422,
											"end": 11423,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11415,
											"end": 11430,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 11442,
											"end": 11762,
											"name": "tag",
											"source": 17,
											"value": "210"
										},
										{
											"begin": 11442,
											"end": 11762,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11486,
											"end": 11492,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11523,
											"end": 11524,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 11517,
											"end": 11521,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11513,
											"end": 11525,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 11503,
											"end": 11525,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11503,
											"end": 11525,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11570,
											"end": 11571,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 11564,
											"end": 11568,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11560,
											"end": 11572,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 11591,
											"end": 11609,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 11581,
											"end": 11662,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "674"
										},
										{
											"begin": 11581,
											"end": 11662,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11647,
											"end": 11651,
											"name": "PUSH",
											"source": 17,
											"value": "7F"
										},
										{
											"begin": 11639,
											"end": 11645,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11635,
											"end": 11652,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 11625,
											"end": 11652,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11625,
											"end": 11652,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11581,
											"end": 11662,
											"name": "tag",
											"source": 17,
											"value": "674"
										},
										{
											"begin": 11581,
											"end": 11662,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11709,
											"end": 11711,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11701,
											"end": 11707,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11698,
											"end": 11712,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 11678,
											"end": 11696,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11675,
											"end": 11713,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 11672,
											"end": 11756,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "675"
										},
										{
											"begin": 11672,
											"end": 11756,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11728,
											"end": 11746,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "676"
										},
										{
											"begin": 11728,
											"end": 11746,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "513"
										},
										{
											"begin": 11728,
											"end": 11746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11728,
											"end": 11746,
											"name": "tag",
											"source": 17,
											"value": "676"
										},
										{
											"begin": 11728,
											"end": 11746,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11672,
											"end": 11756,
											"name": "tag",
											"source": 17,
											"value": "675"
										},
										{
											"begin": 11672,
											"end": 11756,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11493,
											"end": 11762,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11442,
											"end": 11762,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11442,
											"end": 11762,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11442,
											"end": 11762,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11442,
											"end": 11762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11768,
											"end": 11886,
											"name": "tag",
											"source": 17,
											"value": "514"
										},
										{
											"begin": 11768,
											"end": 11886,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11855,
											"end": 11879,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "678"
										},
										{
											"begin": 11873,
											"end": 11878,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11855,
											"end": 11879,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "494"
										},
										{
											"begin": 11855,
											"end": 11879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11855,
											"end": 11879,
											"name": "tag",
											"source": 17,
											"value": "678"
										},
										{
											"begin": 11855,
											"end": 11879,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11850,
											"end": 11853,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11843,
											"end": 11880,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11768,
											"end": 11886,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11768,
											"end": 11886,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11768,
											"end": 11886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11892,
											"end": 12224,
											"name": "tag",
											"source": 17,
											"value": "227"
										},
										{
											"begin": 11892,
											"end": 12224,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12013,
											"end": 12017,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12051,
											"end": 12053,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 12040,
											"end": 12049,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12036,
											"end": 12054,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12028,
											"end": 12054,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12028,
											"end": 12054,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12064,
											"end": 12135,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "680"
										},
										{
											"begin": 12132,
											"end": 12133,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12121,
											"end": 12130,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 12117,
											"end": 12134,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12108,
											"end": 12114,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 12064,
											"end": 12135,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "487"
										},
										{
											"begin": 12064,
											"end": 12135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12064,
											"end": 12135,
											"name": "tag",
											"source": 17,
											"value": "680"
										},
										{
											"begin": 12064,
											"end": 12135,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12145,
											"end": 12217,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "681"
										},
										{
											"begin": 12213,
											"end": 12215,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 12202,
											"end": 12211,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 12198,
											"end": 12216,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12189,
											"end": 12195,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 12145,
											"end": 12217,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "514"
										},
										{
											"begin": 12145,
											"end": 12217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12145,
											"end": 12217,
											"name": "tag",
											"source": 17,
											"value": "681"
										},
										{
											"begin": 12145,
											"end": 12217,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11892,
											"end": 12224,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 11892,
											"end": 12224,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 11892,
											"end": 12224,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11892,
											"end": 12224,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11892,
											"end": 12224,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11892,
											"end": 12224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12230,
											"end": 12457,
											"name": "tag",
											"source": 17,
											"value": "515"
										},
										{
											"begin": 12230,
											"end": 12457,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12370,
											"end": 12404,
											"name": "PUSH",
											"source": 17,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 12366,
											"end": 12367,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12358,
											"end": 12364,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12354,
											"end": 12368,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12347,
											"end": 12405,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 12439,
											"end": 12449,
											"name": "PUSH",
											"source": 17,
											"value": "6C6C6F77616E6365000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12434,
											"end": 12436,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 12426,
											"end": 12432,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12422,
											"end": 12437,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12415,
											"end": 12450,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 12230,
											"end": 12457,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12230,
											"end": 12457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12463,
											"end": 12829,
											"name": "tag",
											"source": 17,
											"value": "516"
										},
										{
											"begin": 12463,
											"end": 12829,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12605,
											"end": 12608,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12626,
											"end": 12693,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "684"
										},
										{
											"begin": 12690,
											"end": 12692,
											"name": "PUSH",
											"source": 17,
											"value": "28"
										},
										{
											"begin": 12685,
											"end": 12688,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 12626,
											"end": 12693,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "489"
										},
										{
											"begin": 12626,
											"end": 12693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12626,
											"end": 12693,
											"name": "tag",
											"source": 17,
											"value": "684"
										},
										{
											"begin": 12626,
											"end": 12693,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12619,
											"end": 12693,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12619,
											"end": 12693,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12702,
											"end": 12795,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "685"
										},
										{
											"begin": 12791,
											"end": 12794,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12702,
											"end": 12795,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "515"
										},
										{
											"begin": 12702,
											"end": 12795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12702,
											"end": 12795,
											"name": "tag",
											"source": 17,
											"value": "685"
										},
										{
											"begin": 12702,
											"end": 12795,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12820,
											"end": 12822,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 12815,
											"end": 12818,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12811,
											"end": 12823,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12804,
											"end": 12823,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12804,
											"end": 12823,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12463,
											"end": 12829,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12463,
											"end": 12829,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12463,
											"end": 12829,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12463,
											"end": 12829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12835,
											"end": 13254,
											"name": "tag",
											"source": 17,
											"value": "240"
										},
										{
											"begin": 12835,
											"end": 13254,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13001,
											"end": 13005,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13039,
											"end": 13041,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 13028,
											"end": 13037,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13024,
											"end": 13042,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13016,
											"end": 13042,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13016,
											"end": 13042,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13088,
											"end": 13097,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13082,
											"end": 13086,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13078,
											"end": 13098,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 13074,
											"end": 13075,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13063,
											"end": 13072,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13059,
											"end": 13076,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13052,
											"end": 13099,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13116,
											"end": 13247,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "687"
										},
										{
											"begin": 13242,
											"end": 13246,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13116,
											"end": 13247,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "516"
										},
										{
											"begin": 13116,
											"end": 13247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13116,
											"end": 13247,
											"name": "tag",
											"source": 17,
											"value": "687"
										},
										{
											"begin": 13116,
											"end": 13247,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13108,
											"end": 13247,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13108,
											"end": 13247,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12835,
											"end": 13254,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12835,
											"end": 13254,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12835,
											"end": 13254,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12835,
											"end": 13254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13260,
											"end": 13440,
											"name": "tag",
											"source": 17,
											"value": "517"
										},
										{
											"begin": 13260,
											"end": 13440,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13308,
											"end": 13385,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13305,
											"end": 13306,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13298,
											"end": 13386,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13405,
											"end": 13409,
											"name": "PUSH",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 13402,
											"end": 13403,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 13395,
											"end": 13410,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13429,
											"end": 13433,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 13426,
											"end": 13427,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13419,
											"end": 13434,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 13446,
											"end": 13640,
											"name": "tag",
											"source": 17,
											"value": "243"
										},
										{
											"begin": 13446,
											"end": 13640,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13486,
											"end": 13490,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13506,
											"end": 13526,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "690"
										},
										{
											"begin": 13524,
											"end": 13525,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13506,
											"end": 13526,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "486"
										},
										{
											"begin": 13506,
											"end": 13526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13506,
											"end": 13526,
											"name": "tag",
											"source": 17,
											"value": "690"
										},
										{
											"begin": 13506,
											"end": 13526,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13501,
											"end": 13526,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 13501,
											"end": 13526,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13540,
											"end": 13560,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "691"
										},
										{
											"begin": 13558,
											"end": 13559,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13540,
											"end": 13560,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "486"
										},
										{
											"begin": 13540,
											"end": 13560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13540,
											"end": 13560,
											"name": "tag",
											"source": 17,
											"value": "691"
										},
										{
											"begin": 13540,
											"end": 13560,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13535,
											"end": 13560,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 13535,
											"end": 13560,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13584,
											"end": 13585,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13581,
											"end": 13582,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13577,
											"end": 13586,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 13569,
											"end": 13586,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13569,
											"end": 13586,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13608,
											"end": 13609,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13602,
											"end": 13606,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13599,
											"end": 13610,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 13596,
											"end": 13633,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 13596,
											"end": 13633,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "692"
										},
										{
											"begin": 13596,
											"end": 13633,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 13613,
											"end": 13631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "693"
										},
										{
											"begin": 13613,
											"end": 13631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "517"
										},
										{
											"begin": 13613,
											"end": 13631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13613,
											"end": 13631,
											"name": "tag",
											"source": 17,
											"value": "693"
										},
										{
											"begin": 13613,
											"end": 13631,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13596,
											"end": 13633,
											"name": "tag",
											"source": 17,
											"value": "692"
										},
										{
											"begin": 13596,
											"end": 13633,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13446,
											"end": 13640,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 13446,
											"end": 13640,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 13446,
											"end": 13640,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13446,
											"end": 13640,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13446,
											"end": 13640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13646,
											"end": 13811,
											"name": "tag",
											"source": 17,
											"value": "518"
										},
										{
											"begin": 13646,
											"end": 13811,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13786,
											"end": 13803,
											"name": "PUSH",
											"source": 17,
											"value": "496E76616C696420616464726573730000000000000000000000000000000000"
										},
										{
											"begin": 13782,
											"end": 13783,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13774,
											"end": 13780,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13770,
											"end": 13784,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13763,
											"end": 13804,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13646,
											"end": 13811,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13646,
											"end": 13811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13817,
											"end": 14183,
											"name": "tag",
											"source": 17,
											"value": "519"
										},
										{
											"begin": 13817,
											"end": 14183,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13959,
											"end": 13962,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13980,
											"end": 14047,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "696"
										},
										{
											"begin": 14044,
											"end": 14046,
											"name": "PUSH",
											"source": 17,
											"value": "F"
										},
										{
											"begin": 14039,
											"end": 14042,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13980,
											"end": 14047,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "489"
										},
										{
											"begin": 13980,
											"end": 14047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13980,
											"end": 14047,
											"name": "tag",
											"source": 17,
											"value": "696"
										},
										{
											"begin": 13980,
											"end": 14047,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13973,
											"end": 14047,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 13973,
											"end": 14047,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14056,
											"end": 14149,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "697"
										},
										{
											"begin": 14145,
											"end": 14148,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14056,
											"end": 14149,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "518"
										},
										{
											"begin": 14056,
											"end": 14149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14056,
											"end": 14149,
											"name": "tag",
											"source": 17,
											"value": "697"
										},
										{
											"begin": 14056,
											"end": 14149,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14174,
											"end": 14176,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 14169,
											"end": 14172,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14165,
											"end": 14177,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14158,
											"end": 14177,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14158,
											"end": 14177,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13817,
											"end": 14183,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 13817,
											"end": 14183,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13817,
											"end": 14183,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13817,
											"end": 14183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14189,
											"end": 14608,
											"name": "tag",
											"source": 17,
											"value": "271"
										},
										{
											"begin": 14189,
											"end": 14608,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14355,
											"end": 14359,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14393,
											"end": 14395,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 14382,
											"end": 14391,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14370,
											"end": 14396,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14370,
											"end": 14396,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14442,
											"end": 14451,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14436,
											"end": 14440,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14432,
											"end": 14452,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 14428,
											"end": 14429,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14417,
											"end": 14426,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 14413,
											"end": 14430,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14406,
											"end": 14453,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14470,
											"end": 14601,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "699"
										},
										{
											"begin": 14596,
											"end": 14600,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14470,
											"end": 14601,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "519"
										},
										{
											"begin": 14470,
											"end": 14601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14470,
											"end": 14601,
											"name": "tag",
											"source": 17,
											"value": "699"
										},
										{
											"begin": 14470,
											"end": 14601,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14462,
											"end": 14601,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14462,
											"end": 14601,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14189,
											"end": 14608,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14189,
											"end": 14608,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14189,
											"end": 14608,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14189,
											"end": 14608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14614,
											"end": 14674,
											"name": "tag",
											"source": 17,
											"value": "520"
										},
										{
											"begin": 14614,
											"end": 14674,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14642,
											"end": 14645,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14663,
											"end": 14668,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14656,
											"end": 14668,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14656,
											"end": 14668,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14614,
											"end": 14674,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14614,
											"end": 14674,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14614,
											"end": 14674,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14614,
											"end": 14674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14680,
											"end": 14822,
											"name": "tag",
											"source": 17,
											"value": "521"
										},
										{
											"begin": 14680,
											"end": 14822,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14730,
											"end": 14739,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14763,
											"end": 14816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "702"
										},
										{
											"begin": 14781,
											"end": 14815,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "703"
										},
										{
											"begin": 14790,
											"end": 14814,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "704"
										},
										{
											"begin": 14808,
											"end": 14813,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 14790,
											"end": 14814,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "493"
										},
										{
											"begin": 14790,
											"end": 14814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14790,
											"end": 14814,
											"name": "tag",
											"source": 17,
											"value": "704"
										},
										{
											"begin": 14790,
											"end": 14814,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14781,
											"end": 14815,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "520"
										},
										{
											"begin": 14781,
											"end": 14815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14781,
											"end": 14815,
											"name": "tag",
											"source": 17,
											"value": "703"
										},
										{
											"begin": 14781,
											"end": 14815,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14763,
											"end": 14816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "493"
										},
										{
											"begin": 14763,
											"end": 14816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14763,
											"end": 14816,
											"name": "tag",
											"source": 17,
											"value": "702"
										},
										{
											"begin": 14763,
											"end": 14816,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14750,
											"end": 14816,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14750,
											"end": 14816,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14680,
											"end": 14822,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14680,
											"end": 14822,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14680,
											"end": 14822,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14680,
											"end": 14822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14828,
											"end": 14954,
											"name": "tag",
											"source": 17,
											"value": "522"
										},
										{
											"begin": 14828,
											"end": 14954,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14878,
											"end": 14887,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14911,
											"end": 14948,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "706"
										},
										{
											"begin": 14942,
											"end": 14947,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14911,
											"end": 14948,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "521"
										},
										{
											"begin": 14911,
											"end": 14948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14911,
											"end": 14948,
											"name": "tag",
											"source": 17,
											"value": "706"
										},
										{
											"begin": 14911,
											"end": 14948,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14898,
											"end": 14948,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14898,
											"end": 14948,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14828,
											"end": 14954,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14828,
											"end": 14954,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14828,
											"end": 14954,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14828,
											"end": 14954,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14960,
											"end": 15101,
											"name": "tag",
											"source": 17,
											"value": "523"
										},
										{
											"begin": 14960,
											"end": 15101,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15025,
											"end": 15034,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15058,
											"end": 15095,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "708"
										},
										{
											"begin": 15089,
											"end": 15094,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15058,
											"end": 15095,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "522"
										},
										{
											"begin": 15058,
											"end": 15095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15058,
											"end": 15095,
											"name": "tag",
											"source": 17,
											"value": "708"
										},
										{
											"begin": 15058,
											"end": 15095,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15045,
											"end": 15095,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15045,
											"end": 15095,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14960,
											"end": 15101,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14960,
											"end": 15101,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14960,
											"end": 15101,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14960,
											"end": 15101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15107,
											"end": 15268,
											"name": "tag",
											"source": 17,
											"value": "524"
										},
										{
											"begin": 15107,
											"end": 15268,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15209,
											"end": 15261,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "710"
										},
										{
											"begin": 15255,
											"end": 15260,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15209,
											"end": 15261,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "523"
										},
										{
											"begin": 15209,
											"end": 15261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15209,
											"end": 15261,
											"name": "tag",
											"source": 17,
											"value": "710"
										},
										{
											"begin": 15209,
											"end": 15261,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15204,
											"end": 15207,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15197,
											"end": 15262,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 15107,
											"end": 15268,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15107,
											"end": 15268,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15107,
											"end": 15268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15274,
											"end": 15857,
											"name": "tag",
											"source": 17,
											"value": "280"
										},
										{
											"begin": 15274,
											"end": 15857,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15466,
											"end": 15470,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15504,
											"end": 15507,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 15493,
											"end": 15502,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15489,
											"end": 15508,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15481,
											"end": 15508,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15481,
											"end": 15508,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15518,
											"end": 15604,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "712"
										},
										{
											"begin": 15601,
											"end": 15602,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15590,
											"end": 15599,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 15586,
											"end": 15603,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15577,
											"end": 15583,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 15518,
											"end": 15604,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "524"
										},
										{
											"begin": 15518,
											"end": 15604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15518,
											"end": 15604,
											"name": "tag",
											"source": 17,
											"value": "712"
										},
										{
											"begin": 15518,
											"end": 15604,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15614,
											"end": 15686,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "713"
										},
										{
											"begin": 15682,
											"end": 15684,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 15671,
											"end": 15680,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 15667,
											"end": 15685,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15658,
											"end": 15664,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 15614,
											"end": 15686,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "487"
										},
										{
											"begin": 15614,
											"end": 15686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15614,
											"end": 15686,
											"name": "tag",
											"source": 17,
											"value": "713"
										},
										{
											"begin": 15614,
											"end": 15686,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15696,
											"end": 15768,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "714"
										},
										{
											"begin": 15764,
											"end": 15766,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 15753,
											"end": 15762,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 15749,
											"end": 15767,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15740,
											"end": 15746,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 15696,
											"end": 15768,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "514"
										},
										{
											"begin": 15696,
											"end": 15768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15696,
											"end": 15768,
											"name": "tag",
											"source": 17,
											"value": "714"
										},
										{
											"begin": 15696,
											"end": 15768,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15778,
											"end": 15850,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "715"
										},
										{
											"begin": 15846,
											"end": 15848,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 15835,
											"end": 15844,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 15831,
											"end": 15849,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15822,
											"end": 15828,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 15778,
											"end": 15850,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "487"
										},
										{
											"begin": 15778,
											"end": 15850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15778,
											"end": 15850,
											"name": "tag",
											"source": 17,
											"value": "715"
										},
										{
											"begin": 15778,
											"end": 15850,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15274,
											"end": 15857,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 15274,
											"end": 15857,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 15274,
											"end": 15857,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15274,
											"end": 15857,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15274,
											"end": 15857,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15274,
											"end": 15857,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15274,
											"end": 15857,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15274,
											"end": 15857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15863,
											"end": 16041,
											"name": "tag",
											"source": 17,
											"value": "525"
										},
										{
											"begin": 15863,
											"end": 16041,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16003,
											"end": 16033,
											"name": "PUSH",
											"source": 17,
											"value": "436F6E74726163743A20436F6E74726163742069732050617573656400000000"
										},
										{
											"begin": 15999,
											"end": 16000,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15991,
											"end": 15997,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15987,
											"end": 16001,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15980,
											"end": 16034,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 15863,
											"end": 16041,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15863,
											"end": 16041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16047,
											"end": 16413,
											"name": "tag",
											"source": 17,
											"value": "526"
										},
										{
											"begin": 16047,
											"end": 16413,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16189,
											"end": 16192,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16210,
											"end": 16277,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "718"
										},
										{
											"begin": 16274,
											"end": 16276,
											"name": "PUSH",
											"source": 17,
											"value": "1C"
										},
										{
											"begin": 16269,
											"end": 16272,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 16210,
											"end": 16277,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "489"
										},
										{
											"begin": 16210,
											"end": 16277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16210,
											"end": 16277,
											"name": "tag",
											"source": 17,
											"value": "718"
										},
										{
											"begin": 16210,
											"end": 16277,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16203,
											"end": 16277,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16203,
											"end": 16277,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16286,
											"end": 16379,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "719"
										},
										{
											"begin": 16375,
											"end": 16378,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16286,
											"end": 16379,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "525"
										},
										{
											"begin": 16286,
											"end": 16379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16286,
											"end": 16379,
											"name": "tag",
											"source": 17,
											"value": "719"
										},
										{
											"begin": 16286,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16404,
											"end": 16406,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 16399,
											"end": 16402,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16395,
											"end": 16407,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16388,
											"end": 16407,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16388,
											"end": 16407,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16047,
											"end": 16413,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16047,
											"end": 16413,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16047,
											"end": 16413,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16047,
											"end": 16413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16419,
											"end": 16838,
											"name": "tag",
											"source": 17,
											"value": "285"
										},
										{
											"begin": 16419,
											"end": 16838,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16585,
											"end": 16589,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16623,
											"end": 16625,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 16612,
											"end": 16621,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16608,
											"end": 16626,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16600,
											"end": 16626,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16600,
											"end": 16626,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16672,
											"end": 16681,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16666,
											"end": 16670,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16662,
											"end": 16682,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 16658,
											"end": 16659,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16647,
											"end": 16656,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 16643,
											"end": 16660,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16636,
											"end": 16683,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 16700,
											"end": 16831,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "721"
										},
										{
											"begin": 16826,
											"end": 16830,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16700,
											"end": 16831,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "526"
										},
										{
											"begin": 16700,
											"end": 16831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16700,
											"end": 16831,
											"name": "tag",
											"source": 17,
											"value": "721"
										},
										{
											"begin": 16700,
											"end": 16831,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16692,
											"end": 16831,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16692,
											"end": 16831,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16419,
											"end": 16838,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16419,
											"end": 16838,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16419,
											"end": 16838,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16419,
											"end": 16838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16844,
											"end": 17013,
											"name": "tag",
											"source": 17,
											"value": "527"
										},
										{
											"begin": 16844,
											"end": 17013,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16984,
											"end": 17005,
											"name": "PUSH",
											"source": 17,
											"value": "4D696E74696E6720746F2064697361626C656400000000000000000000000000"
										},
										{
											"begin": 16980,
											"end": 16981,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16972,
											"end": 16978,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16968,
											"end": 16982,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16961,
											"end": 17006,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 16844,
											"end": 17013,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16844,
											"end": 17013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17019,
											"end": 17385,
											"name": "tag",
											"source": 17,
											"value": "528"
										},
										{
											"begin": 17019,
											"end": 17385,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17161,
											"end": 17164,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17182,
											"end": 17249,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "724"
										},
										{
											"begin": 17246,
											"end": 17248,
											"name": "PUSH",
											"source": 17,
											"value": "13"
										},
										{
											"begin": 17241,
											"end": 17244,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 17182,
											"end": 17249,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "489"
										},
										{
											"begin": 17182,
											"end": 17249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17182,
											"end": 17249,
											"name": "tag",
											"source": 17,
											"value": "724"
										},
										{
											"begin": 17182,
											"end": 17249,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17175,
											"end": 17249,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 17175,
											"end": 17249,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17258,
											"end": 17351,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "725"
										},
										{
											"begin": 17347,
											"end": 17350,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17258,
											"end": 17351,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "527"
										},
										{
											"begin": 17258,
											"end": 17351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17258,
											"end": 17351,
											"name": "tag",
											"source": 17,
											"value": "725"
										},
										{
											"begin": 17258,
											"end": 17351,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17376,
											"end": 17378,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 17371,
											"end": 17374,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17367,
											"end": 17379,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17360,
											"end": 17379,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17360,
											"end": 17379,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17019,
											"end": 17385,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 17019,
											"end": 17385,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17019,
											"end": 17385,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17019,
											"end": 17385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17391,
											"end": 17810,
											"name": "tag",
											"source": 17,
											"value": "299"
										},
										{
											"begin": 17391,
											"end": 17810,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17557,
											"end": 17561,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17595,
											"end": 17597,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 17584,
											"end": 17593,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17580,
											"end": 17598,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17572,
											"end": 17598,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17572,
											"end": 17598,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17644,
											"end": 17653,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17638,
											"end": 17642,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17634,
											"end": 17654,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 17630,
											"end": 17631,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17619,
											"end": 17628,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 17615,
											"end": 17632,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17608,
											"end": 17655,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 17672,
											"end": 17803,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "727"
										},
										{
											"begin": 17798,
											"end": 17802,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17672,
											"end": 17803,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "528"
										},
										{
											"begin": 17672,
											"end": 17803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17672,
											"end": 17803,
											"name": "tag",
											"source": 17,
											"value": "727"
										},
										{
											"begin": 17672,
											"end": 17803,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17664,
											"end": 17803,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17664,
											"end": 17803,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17391,
											"end": 17810,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 17391,
											"end": 17810,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17391,
											"end": 17810,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17391,
											"end": 17810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17816,
											"end": 18007,
											"name": "tag",
											"source": 17,
											"value": "305"
										},
										{
											"begin": 17816,
											"end": 18007,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17856,
											"end": 17859,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17875,
											"end": 17895,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "729"
										},
										{
											"begin": 17893,
											"end": 17894,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17875,
											"end": 17895,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "486"
										},
										{
											"begin": 17875,
											"end": 17895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17875,
											"end": 17895,
											"name": "tag",
											"source": 17,
											"value": "729"
										},
										{
											"begin": 17875,
											"end": 17895,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17870,
											"end": 17895,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 17870,
											"end": 17895,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17909,
											"end": 17929,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "730"
										},
										{
											"begin": 17927,
											"end": 17928,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 17909,
											"end": 17929,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "486"
										},
										{
											"begin": 17909,
											"end": 17929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17909,
											"end": 17929,
											"name": "tag",
											"source": 17,
											"value": "730"
										},
										{
											"begin": 17909,
											"end": 17929,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17904,
											"end": 17929,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 17904,
											"end": 17929,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17952,
											"end": 17953,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17949,
											"end": 17950,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17945,
											"end": 17954,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17938,
											"end": 17954,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17938,
											"end": 17954,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17973,
											"end": 17976,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 17970,
											"end": 17971,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17967,
											"end": 17977,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 17964,
											"end": 18000,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 17964,
											"end": 18000,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "731"
										},
										{
											"begin": 17964,
											"end": 18000,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 17980,
											"end": 17998,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "732"
										},
										{
											"begin": 17980,
											"end": 17998,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "517"
										},
										{
											"begin": 17980,
											"end": 17998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17980,
											"end": 17998,
											"name": "tag",
											"source": 17,
											"value": "732"
										},
										{
											"begin": 17980,
											"end": 17998,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17964,
											"end": 18000,
											"name": "tag",
											"source": 17,
											"value": "731"
										},
										{
											"begin": 17964,
											"end": 18000,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17816,
											"end": 18007,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 17816,
											"end": 18007,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 17816,
											"end": 18007,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17816,
											"end": 18007,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17816,
											"end": 18007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18013,
											"end": 18192,
											"name": "tag",
											"source": 17,
											"value": "529"
										},
										{
											"begin": 18013,
											"end": 18192,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18153,
											"end": 18184,
											"name": "PUSH",
											"source": 17,
											"value": "436F6E74726163743A20537570706C7920436170206578636565646564000000"
										},
										{
											"begin": 18149,
											"end": 18150,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18141,
											"end": 18147,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18137,
											"end": 18151,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18130,
											"end": 18185,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 18013,
											"end": 18192,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18013,
											"end": 18192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18198,
											"end": 18564,
											"name": "tag",
											"source": 17,
											"value": "530"
										},
										{
											"begin": 18198,
											"end": 18564,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18340,
											"end": 18343,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18361,
											"end": 18428,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "735"
										},
										{
											"begin": 18425,
											"end": 18427,
											"name": "PUSH",
											"source": 17,
											"value": "1D"
										},
										{
											"begin": 18420,
											"end": 18423,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 18361,
											"end": 18428,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "489"
										},
										{
											"begin": 18361,
											"end": 18428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18361,
											"end": 18428,
											"name": "tag",
											"source": 17,
											"value": "735"
										},
										{
											"begin": 18361,
											"end": 18428,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18354,
											"end": 18428,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 18354,
											"end": 18428,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18437,
											"end": 18530,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "736"
										},
										{
											"begin": 18526,
											"end": 18529,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18437,
											"end": 18530,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "529"
										},
										{
											"begin": 18437,
											"end": 18530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18437,
											"end": 18530,
											"name": "tag",
											"source": 17,
											"value": "736"
										},
										{
											"begin": 18437,
											"end": 18530,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18555,
											"end": 18557,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 18550,
											"end": 18553,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18546,
											"end": 18558,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18539,
											"end": 18558,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18539,
											"end": 18558,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18198,
											"end": 18564,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 18198,
											"end": 18564,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18198,
											"end": 18564,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18198,
											"end": 18564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18570,
											"end": 18989,
											"name": "tag",
											"source": 17,
											"value": "308"
										},
										{
											"begin": 18570,
											"end": 18989,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18736,
											"end": 18740,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18774,
											"end": 18776,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 18763,
											"end": 18772,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18759,
											"end": 18777,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18751,
											"end": 18777,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18751,
											"end": 18777,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18823,
											"end": 18832,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 18817,
											"end": 18821,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 18813,
											"end": 18833,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 18809,
											"end": 18810,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18798,
											"end": 18807,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 18794,
											"end": 18811,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18787,
											"end": 18834,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 18851,
											"end": 18982,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "738"
										},
										{
											"begin": 18977,
											"end": 18981,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 18851,
											"end": 18982,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "530"
										},
										{
											"begin": 18851,
											"end": 18982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18851,
											"end": 18982,
											"name": "tag",
											"source": 17,
											"value": "738"
										},
										{
											"begin": 18851,
											"end": 18982,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18843,
											"end": 18982,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18843,
											"end": 18982,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18570,
											"end": 18989,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 18570,
											"end": 18989,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18570,
											"end": 18989,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18570,
											"end": 18989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18995,
											"end": 19327,
											"name": "tag",
											"source": 17,
											"value": "310"
										},
										{
											"begin": 18995,
											"end": 19327,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19116,
											"end": 19120,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19154,
											"end": 19156,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 19143,
											"end": 19152,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19139,
											"end": 19157,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19131,
											"end": 19157,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19131,
											"end": 19157,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19167,
											"end": 19238,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "740"
										},
										{
											"begin": 19235,
											"end": 19236,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19224,
											"end": 19233,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 19220,
											"end": 19237,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19211,
											"end": 19217,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 19167,
											"end": 19238,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "514"
										},
										{
											"begin": 19167,
											"end": 19238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19167,
											"end": 19238,
											"name": "tag",
											"source": 17,
											"value": "740"
										},
										{
											"begin": 19167,
											"end": 19238,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19248,
											"end": 19320,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "741"
										},
										{
											"begin": 19316,
											"end": 19318,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 19305,
											"end": 19314,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 19301,
											"end": 19319,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19292,
											"end": 19298,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 19248,
											"end": 19320,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "487"
										},
										{
											"begin": 19248,
											"end": 19320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19248,
											"end": 19320,
											"name": "tag",
											"source": 17,
											"value": "741"
										},
										{
											"begin": 19248,
											"end": 19320,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18995,
											"end": 19327,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 18995,
											"end": 19327,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 18995,
											"end": 19327,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18995,
											"end": 19327,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18995,
											"end": 19327,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18995,
											"end": 19327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19333,
											"end": 19467,
											"name": "tag",
											"source": 17,
											"value": "531"
										},
										{
											"begin": 19333,
											"end": 19467,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19391,
											"end": 19400,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19424,
											"end": 19461,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "743"
										},
										{
											"begin": 19455,
											"end": 19460,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19424,
											"end": 19461,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "522"
										},
										{
											"begin": 19424,
											"end": 19461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19424,
											"end": 19461,
											"name": "tag",
											"source": 17,
											"value": "743"
										},
										{
											"begin": 19424,
											"end": 19461,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19411,
											"end": 19461,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19411,
											"end": 19461,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19333,
											"end": 19467,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 19333,
											"end": 19467,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19333,
											"end": 19467,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19333,
											"end": 19467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19473,
											"end": 19620,
											"name": "tag",
											"source": 17,
											"value": "532"
										},
										{
											"begin": 19473,
											"end": 19620,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19568,
											"end": 19613,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "745"
										},
										{
											"begin": 19607,
											"end": 19612,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19568,
											"end": 19613,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "531"
										},
										{
											"begin": 19568,
											"end": 19613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19568,
											"end": 19613,
											"name": "tag",
											"source": 17,
											"value": "745"
										},
										{
											"begin": 19568,
											"end": 19613,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19563,
											"end": 19566,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19556,
											"end": 19614,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 19473,
											"end": 19620,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19473,
											"end": 19620,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19473,
											"end": 19620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19626,
											"end": 20084,
											"name": "tag",
											"source": 17,
											"value": "321"
										},
										{
											"begin": 19626,
											"end": 20084,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19783,
											"end": 19787,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19821,
											"end": 19823,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 19810,
											"end": 19819,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19806,
											"end": 19824,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19798,
											"end": 19824,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19798,
											"end": 19824,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19834,
											"end": 19913,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "747"
										},
										{
											"begin": 19910,
											"end": 19911,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19899,
											"end": 19908,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 19895,
											"end": 19912,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19886,
											"end": 19892,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 19834,
											"end": 19913,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "532"
										},
										{
											"begin": 19834,
											"end": 19913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19834,
											"end": 19913,
											"name": "tag",
											"source": 17,
											"value": "747"
										},
										{
											"begin": 19834,
											"end": 19913,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19923,
											"end": 19995,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "748"
										},
										{
											"begin": 19991,
											"end": 19993,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 19980,
											"end": 19989,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 19976,
											"end": 19994,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19967,
											"end": 19973,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 19923,
											"end": 19995,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "487"
										},
										{
											"begin": 19923,
											"end": 19995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19923,
											"end": 19995,
											"name": "tag",
											"source": 17,
											"value": "748"
										},
										{
											"begin": 19923,
											"end": 19995,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20005,
											"end": 20077,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "749"
										},
										{
											"begin": 20073,
											"end": 20075,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 20062,
											"end": 20071,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 20058,
											"end": 20076,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20049,
											"end": 20055,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 20005,
											"end": 20077,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "487"
										},
										{
											"begin": 20005,
											"end": 20077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20005,
											"end": 20077,
											"name": "tag",
											"source": 17,
											"value": "749"
										},
										{
											"begin": 20005,
											"end": 20077,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19626,
											"end": 20084,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 19626,
											"end": 20084,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 19626,
											"end": 20084,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19626,
											"end": 20084,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19626,
											"end": 20084,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19626,
											"end": 20084,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19626,
											"end": 20084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20090,
											"end": 20532,
											"name": "tag",
											"source": 17,
											"value": "332"
										},
										{
											"begin": 20090,
											"end": 20532,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20239,
											"end": 20243,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20277,
											"end": 20279,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 20266,
											"end": 20275,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20262,
											"end": 20280,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20254,
											"end": 20280,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 20254,
											"end": 20280,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20290,
											"end": 20361,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "751"
										},
										{
											"begin": 20358,
											"end": 20359,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20347,
											"end": 20356,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 20343,
											"end": 20360,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20334,
											"end": 20340,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 20290,
											"end": 20361,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "514"
										},
										{
											"begin": 20290,
											"end": 20361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20290,
											"end": 20361,
											"name": "tag",
											"source": 17,
											"value": "751"
										},
										{
											"begin": 20290,
											"end": 20361,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20371,
											"end": 20443,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "752"
										},
										{
											"begin": 20439,
											"end": 20441,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 20428,
											"end": 20437,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 20424,
											"end": 20442,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20415,
											"end": 20421,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 20371,
											"end": 20443,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "487"
										},
										{
											"begin": 20371,
											"end": 20443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20371,
											"end": 20443,
											"name": "tag",
											"source": 17,
											"value": "752"
										},
										{
											"begin": 20371,
											"end": 20443,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20453,
											"end": 20525,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "753"
										},
										{
											"begin": 20521,
											"end": 20523,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 20510,
											"end": 20519,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 20506,
											"end": 20524,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20497,
											"end": 20503,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 20453,
											"end": 20525,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "514"
										},
										{
											"begin": 20453,
											"end": 20525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20453,
											"end": 20525,
											"name": "tag",
											"source": 17,
											"value": "753"
										},
										{
											"begin": 20453,
											"end": 20525,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20090,
											"end": 20532,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 20090,
											"end": 20532,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 20090,
											"end": 20532,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20090,
											"end": 20532,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20090,
											"end": 20532,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20090,
											"end": 20532,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20090,
											"end": 20532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20538,
											"end": 20704,
											"name": "tag",
											"source": 17,
											"value": "533"
										},
										{
											"begin": 20538,
											"end": 20704,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20678,
											"end": 20696,
											"name": "PUSH",
											"source": 17,
											"value": "4D696E74696E672064697361626C656400000000000000000000000000000000"
										},
										{
											"begin": 20674,
											"end": 20675,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20666,
											"end": 20672,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20662,
											"end": 20676,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20655,
											"end": 20697,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 20538,
											"end": 20704,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20538,
											"end": 20704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20710,
											"end": 21076,
											"name": "tag",
											"source": 17,
											"value": "534"
										},
										{
											"begin": 20710,
											"end": 21076,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20852,
											"end": 20855,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20873,
											"end": 20940,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "756"
										},
										{
											"begin": 20937,
											"end": 20939,
											"name": "PUSH",
											"source": 17,
											"value": "10"
										},
										{
											"begin": 20932,
											"end": 20935,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 20873,
											"end": 20940,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "489"
										},
										{
											"begin": 20873,
											"end": 20940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20873,
											"end": 20940,
											"name": "tag",
											"source": 17,
											"value": "756"
										},
										{
											"begin": 20873,
											"end": 20940,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20866,
											"end": 20940,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 20866,
											"end": 20940,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20949,
											"end": 21042,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "757"
										},
										{
											"begin": 21038,
											"end": 21041,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20949,
											"end": 21042,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "533"
										},
										{
											"begin": 20949,
											"end": 21042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20949,
											"end": 21042,
											"name": "tag",
											"source": 17,
											"value": "757"
										},
										{
											"begin": 20949,
											"end": 21042,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21067,
											"end": 21069,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 21062,
											"end": 21065,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21058,
											"end": 21070,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 21051,
											"end": 21070,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21051,
											"end": 21070,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20710,
											"end": 21076,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 20710,
											"end": 21076,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 20710,
											"end": 21076,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20710,
											"end": 21076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21082,
											"end": 21501,
											"name": "tag",
											"source": 17,
											"value": "348"
										},
										{
											"begin": 21082,
											"end": 21501,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21248,
											"end": 21252,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21286,
											"end": 21288,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 21275,
											"end": 21284,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21271,
											"end": 21289,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 21263,
											"end": 21289,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21263,
											"end": 21289,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21335,
											"end": 21344,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 21329,
											"end": 21333,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 21325,
											"end": 21345,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 21321,
											"end": 21322,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21310,
											"end": 21319,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 21306,
											"end": 21323,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 21299,
											"end": 21346,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 21363,
											"end": 21494,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "759"
										},
										{
											"begin": 21489,
											"end": 21493,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 21363,
											"end": 21494,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "534"
										},
										{
											"begin": 21363,
											"end": 21494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21363,
											"end": 21494,
											"name": "tag",
											"source": 17,
											"value": "759"
										},
										{
											"begin": 21363,
											"end": 21494,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21355,
											"end": 21494,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21355,
											"end": 21494,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21082,
											"end": 21501,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 21082,
											"end": 21501,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21082,
											"end": 21501,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21082,
											"end": 21501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21507,
											"end": 21685,
											"name": "tag",
											"source": 17,
											"value": "535"
										},
										{
											"begin": 21507,
											"end": 21685,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21647,
											"end": 21677,
											"name": "PUSH",
											"source": 17,
											"value": "436F6E74726163743A20537570706C792043617020746F6F206C6F7700000000"
										},
										{
											"begin": 21643,
											"end": 21644,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21635,
											"end": 21641,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21631,
											"end": 21645,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 21624,
											"end": 21678,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 21507,
											"end": 21685,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21507,
											"end": 21685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21691,
											"end": 22057,
											"name": "tag",
											"source": 17,
											"value": "536"
										},
										{
											"begin": 21691,
											"end": 22057,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21833,
											"end": 21836,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21854,
											"end": 21921,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "762"
										},
										{
											"begin": 21918,
											"end": 21920,
											"name": "PUSH",
											"source": 17,
											"value": "1C"
										},
										{
											"begin": 21913,
											"end": 21916,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 21854,
											"end": 21921,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "489"
										},
										{
											"begin": 21854,
											"end": 21921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21854,
											"end": 21921,
											"name": "tag",
											"source": 17,
											"value": "762"
										},
										{
											"begin": 21854,
											"end": 21921,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21847,
											"end": 21921,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 21847,
											"end": 21921,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21930,
											"end": 22023,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "763"
										},
										{
											"begin": 22019,
											"end": 22022,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21930,
											"end": 22023,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "535"
										},
										{
											"begin": 21930,
											"end": 22023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21930,
											"end": 22023,
											"name": "tag",
											"source": 17,
											"value": "763"
										},
										{
											"begin": 21930,
											"end": 22023,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22048,
											"end": 22050,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 22043,
											"end": 22046,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22039,
											"end": 22051,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22032,
											"end": 22051,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22032,
											"end": 22051,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21691,
											"end": 22057,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 21691,
											"end": 22057,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21691,
											"end": 22057,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21691,
											"end": 22057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22063,
											"end": 22482,
											"name": "tag",
											"source": 17,
											"value": "378"
										},
										{
											"begin": 22063,
											"end": 22482,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22229,
											"end": 22233,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22267,
											"end": 22269,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 22256,
											"end": 22265,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22252,
											"end": 22270,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22244,
											"end": 22270,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22244,
											"end": 22270,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22316,
											"end": 22325,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 22310,
											"end": 22314,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 22306,
											"end": 22326,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 22302,
											"end": 22303,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22291,
											"end": 22300,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 22287,
											"end": 22304,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22280,
											"end": 22327,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 22344,
											"end": 22475,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "765"
										},
										{
											"begin": 22470,
											"end": 22474,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 22344,
											"end": 22475,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "536"
										},
										{
											"begin": 22344,
											"end": 22475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22344,
											"end": 22475,
											"name": "tag",
											"source": 17,
											"value": "765"
										},
										{
											"begin": 22344,
											"end": 22475,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22336,
											"end": 22475,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22336,
											"end": 22475,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22063,
											"end": 22482,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 22063,
											"end": 22482,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22063,
											"end": 22482,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22063,
											"end": 22482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22488,
											"end": 22710,
											"name": "tag",
											"source": 17,
											"value": "422"
										},
										{
											"begin": 22488,
											"end": 22710,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22581,
											"end": 22585,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22619,
											"end": 22621,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 22608,
											"end": 22617,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22604,
											"end": 22622,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22596,
											"end": 22622,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22596,
											"end": 22622,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22632,
											"end": 22703,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "767"
										},
										{
											"begin": 22700,
											"end": 22701,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22689,
											"end": 22698,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 22685,
											"end": 22702,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22676,
											"end": 22682,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 22632,
											"end": 22703,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "514"
										},
										{
											"begin": 22632,
											"end": 22703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22632,
											"end": 22703,
											"name": "tag",
											"source": 17,
											"value": "767"
										},
										{
											"begin": 22632,
											"end": 22703,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22488,
											"end": 22710,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 22488,
											"end": 22710,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 22488,
											"end": 22710,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22488,
											"end": 22710,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22488,
											"end": 22710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22716,
											"end": 23048,
											"name": "tag",
											"source": 17,
											"value": "461"
										},
										{
											"begin": 22716,
											"end": 23048,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22837,
											"end": 22841,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22875,
											"end": 22877,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 22864,
											"end": 22873,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22860,
											"end": 22878,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22852,
											"end": 22878,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22852,
											"end": 22878,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22888,
											"end": 22959,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "769"
										},
										{
											"begin": 22956,
											"end": 22957,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22945,
											"end": 22954,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 22941,
											"end": 22958,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22932,
											"end": 22938,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 22888,
											"end": 22959,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "514"
										},
										{
											"begin": 22888,
											"end": 22959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22888,
											"end": 22959,
											"name": "tag",
											"source": 17,
											"value": "769"
										},
										{
											"begin": 22888,
											"end": 22959,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22969,
											"end": 23041,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "770"
										},
										{
											"begin": 23037,
											"end": 23039,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 23026,
											"end": 23035,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 23022,
											"end": 23040,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 23013,
											"end": 23019,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 22969,
											"end": 23041,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "504"
										},
										{
											"begin": 22969,
											"end": 23041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22969,
											"end": 23041,
											"name": "tag",
											"source": 17,
											"value": "770"
										},
										{
											"begin": 22969,
											"end": 23041,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22716,
											"end": 23048,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 22716,
											"end": 23048,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 22716,
											"end": 23048,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22716,
											"end": 23048,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22716,
											"end": 23048,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22716,
											"end": 23048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23054,
											"end": 23496,
											"name": "tag",
											"source": 17,
											"value": "468"
										},
										{
											"begin": 23054,
											"end": 23496,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23203,
											"end": 23207,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 23241,
											"end": 23243,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 23230,
											"end": 23239,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23226,
											"end": 23244,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 23218,
											"end": 23244,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 23218,
											"end": 23244,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23254,
											"end": 23325,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "772"
										},
										{
											"begin": 23322,
											"end": 23323,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 23311,
											"end": 23320,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 23307,
											"end": 23324,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 23298,
											"end": 23304,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 23254,
											"end": 23325,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "514"
										},
										{
											"begin": 23254,
											"end": 23325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23254,
											"end": 23325,
											"name": "tag",
											"source": 17,
											"value": "772"
										},
										{
											"begin": 23254,
											"end": 23325,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23335,
											"end": 23407,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "773"
										},
										{
											"begin": 23403,
											"end": 23405,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 23392,
											"end": 23401,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 23388,
											"end": 23406,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 23379,
											"end": 23385,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 23335,
											"end": 23407,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "487"
										},
										{
											"begin": 23335,
											"end": 23407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23335,
											"end": 23407,
											"name": "tag",
											"source": 17,
											"value": "773"
										},
										{
											"begin": 23335,
											"end": 23407,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23417,
											"end": 23489,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "774"
										},
										{
											"begin": 23485,
											"end": 23487,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 23474,
											"end": 23483,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 23470,
											"end": 23488,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 23461,
											"end": 23467,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 23417,
											"end": 23489,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "487"
										},
										{
											"begin": 23417,
											"end": 23489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23417,
											"end": 23489,
											"name": "tag",
											"source": 17,
											"value": "774"
										},
										{
											"begin": 23417,
											"end": 23489,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23054,
											"end": 23496,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 23054,
											"end": 23496,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 23054,
											"end": 23496,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23054,
											"end": 23496,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23054,
											"end": 23496,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23054,
											"end": 23496,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23054,
											"end": 23496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
								"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol",
								"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
								"lib/openzeppelin-contracts/contracts/utils/Address.sol",
								"lib/openzeppelin-contracts/contracts/utils/Context.sol",
								"lib/openzeppelin-contracts/contracts/utils/Errors.sol",
								"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol",
								"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
								"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
								"src/token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"_ADMIN()": "51557289",
							"_BURN()": "53a4c31e",
							"_BURNFROM()": "6ba77a38",
							"_MINT()": "8ebed5b1",
							"_MINTTO()": "7e92a7fd",
							"_RESCUE()": "8d580b9f",
							"_SUPPLY()": "ea5cb532",
							"_cap()": "060cf4e8",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"disableMint(bool)": "deb6db36",
							"disableMintTo(bool)": "f2250d3d",
							"ethRescue(address,uint256)": "48132f48",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"mint(uint256)": "a0712d68",
							"mintDisabled()": "956feccf",
							"mintTo(address,uint256)": "449a52f8",
							"mintToDisabled()": "d1c9f69b",
							"moveERC20(address,address,uint256)": "41f431fd",
							"name()": "06fdde03",
							"paused()": "5c975abb",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"setPaused(bool)": "16c38b3c",
							"setSupplyCap(uint256)": "b6a3f59a",
							"setTxFee(uint256)": "f05d16f7",
							"setWhitelistAddress(address,bool)": "3f914aef",
							"supplyCap()": "8f770ad0",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"txFee()": "cf820461",
							"whitelistedAddress(address)": "c30796ab"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_blockHeight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_pausedBy\",\"type\":\"address\"}],\"name\":\"ContractPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_blockHeight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_unpausedBy\",\"type\":\"address\"}],\"name\":\"ContractUnpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_blockHeight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_dest\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Rescued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_dest\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_blockHeight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"ETHRescued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_blockHeight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_disabledBy\",\"type\":\"address\"}],\"name\":\"MintingDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_blockHeight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_enabledBy\",\"type\":\"address\"}],\"name\":\"MintingEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_blockHeight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_disabledBy\",\"type\":\"address\"}],\"name\":\"MintingToDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_blockHeight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_enabledBy\",\"type\":\"address\"}],\"name\":\"MintingToEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newCap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_changedBy\",\"type\":\"address\"}],\"name\":\"SupplyCapChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_burner\",\"type\":\"address\"}],\"name\":\"TokensBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_burner\",\"type\":\"address\"}],\"name\":\"TokensBurnedFrom\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"TokensMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"TokensMintedTo\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_ADMIN\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_BURN\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_BURNFROM\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_MINT\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_MINTTO\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_RESCUE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_SUPPLY\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_disableMinting\",\"type\":\"bool\"}],\"name\":\"disableMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_disableMintTo\",\"type\":\"bool\"}],\"name\":\"disableMintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_dest\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_etherAmount\",\"type\":\"uint256\"}],\"name\":\"ethRescue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintDisabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintToDisabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_ERC20\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_dest\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ERC20Amount\",\"type\":\"uint256\"}],\"name\":\"moveERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_supplyCap\",\"type\":\"uint256\"}],\"name\":\"setSupplyCap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"setTxFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_whitelist\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"setWhitelistAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supplyCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelistedAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract implements an ERC20 token with additional features such as minting, burning, pausing,       supply capping, and transfer fee mechanisms. It uses role-based access control for administrative functions       and is protected against reentrancy attacks.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Function to burn tokens from the caller's balance.      Only callable by an address with the _BURN role, and if the contract is not paused.\",\"params\":{\"_amount\":\"The amount of tokens to burn.\"}},\"burnFrom(address,uint256)\":{\"details\":\"Function to burn tokens from a specific address.      Only callable by an address with the _BURNFROM role, and if the contract is not paused.\",\"params\":{\"_amount\":\"The amount of tokens to burn.\",\"_from\":\"The address to burn tokens from.\"}},\"constructor\":{\"details\":\"Constructor that sets the token name, symbol, and initial minting.      It also grants necessary roles to the deployer and sets initial parameters such as the supply cap.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"disableMint(bool)\":{\"details\":\"Function to disable or enable minting.      Only callable by an admin.\",\"params\":{\"_disableMinting\":\"Boolean indicating whether minting should be disabled (true) or enabled (false).\"}},\"disableMintTo(bool)\":{\"details\":\"Function to disable or enable minting to specific addresses.      Only callable by an admin.\",\"params\":{\"_disableMintTo\":\"Boolean indicating whether minting to specific addresses should be disabled (true) or enabled (false).\"}},\"ethRescue(address,uint256)\":{\"details\":\"Function to rescue Ether sent to the contract by mistake.      Only callable by an account with the _RESCUE role.\",\"params\":{\"_dest\":\"The address to send the rescued Ether to.\",\"_etherAmount\":\"The amount of Ether to rescue (in wei).\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"mint(uint256)\":{\"details\":\"Function to mint tokens to the caller.      Only callable by an address with the _MINT role, and if minting is enabled and contract is not paused.\",\"params\":{\"_amount\":\"The amount of tokens to mint.\"}},\"mintTo(address,uint256)\":{\"details\":\"Function to mint tokens to a specific address.      Only callable by an address with the _MINTTO role, and if minting to is enabled and contract is not paused.\",\"params\":{\"_amount\":\"The amount of tokens to mint.\",\"_to\":\"The address to mint tokens to.\"}},\"moveERC20(address,address,uint256)\":{\"details\":\"Function to rescue ERC20 tokens sent to the contract by mistake.      Only callable by an account with the _RESCUE role.\",\"params\":{\"_ERC20\":\"The ERC20 token contract to rescue.\",\"_ERC20Amount\":\"The amount of tokens to rescue.\",\"_dest\":\"The address to send the rescued tokens to.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setPaused(bool)\":{\"details\":\"Function to pause or unpause the contract's operations.       Only callable by an admin.\",\"params\":{\"_paused\":\"Boolean indicating whether the contract should be paused (true) or unpaused (false).\"}},\"setSupplyCap(uint256)\":{\"details\":\"Function to change the supply cap of the token.      Only callable by an admin.\",\"params\":{\"_supplyCap\":\"The new supply cap.\"}},\"setTxFee(uint256)\":{\"details\":\"Function to update the transaction fee for transfers.      Only callable by an admin.\",\"params\":{\"_newFee\":\"The new transaction fee.\"}},\"setWhitelistAddress(address,bool)\":{\"details\":\"Function to add or remove an address from the whitelist. Whitelisted addresses are exempt from transfer fees.      Only callable by an admin.\",\"params\":{\"_status\":\"Boolean indicating whether to add (true) or remove (false) the address from the whitelist.\",\"_whitelist\":\"The address to whitelist or remove from the whitelist.\"}},\"supplyCap()\":{\"details\":\"Function to get the current supply cap.\",\"returns\":{\"_0\":\"The current supply cap.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"Overrides the `transfer` function to apply a transaction fee unless the sender is whitelisted.\",\"params\":{\"to\":\"The address receiving tokens.\",\"value\":\"The amount of tokens to transfer.\"},\"returns\":{\"_0\":\"True if the transfer was successful.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Overrides the `transferFrom` function to apply a transaction fee unless the sender is whitelisted.      The transfer will reduce the spender's allowance if applicable.\",\"params\":{\"from\":\"The address sending tokens.\",\"to\":\"The address receiving tokens.\",\"value\":\"The amount of tokens to transfer.\"},\"returns\":{\"_0\":\"True if the transfer was successful.\"}}},\"title\":\"EqualFiToken\",\"version\":1},\"userdoc\":{\"events\":{\"ContractPaused(uint256,address)\":{\"notice\":\"Emitted when the contract is paused\"},\"ContractUnpaused(uint256,address)\":{\"notice\":\"Emitted when the contract is unpaused\"},\"ERC20Rescued(address,uint256,address,uint256)\":{\"notice\":\"Emitted when ERC20 tokens are rescued from the contract\"},\"ETHRescued(address,uint256,uint256)\":{\"notice\":\"Emitted when Ether is rescued from the contract\"},\"MintingDisabled(uint256,address)\":{\"notice\":\"Emitted when minting is disabled\"},\"MintingEnabled(uint256,address)\":{\"notice\":\"Emitted when minting is enabled\"},\"MintingToDisabled(uint256,address)\":{\"notice\":\"Emitted when minting to specific addresses is disabled\"},\"MintingToEnabled(uint256,address)\":{\"notice\":\"Emitted when minting to specific addresses is enabled\"},\"SupplyCapChanged(uint256,address)\":{\"notice\":\"Emitted when the supply cap is changed\"},\"TokensBurned(uint256,address)\":{\"notice\":\"Emitted when tokens are burned from the caller's balance\"},\"TokensBurnedFrom(address,uint256,address)\":{\"notice\":\"Emitted when tokens are burned from a specific address\"},\"TokensMinted(uint256)\":{\"notice\":\"Emitted when tokens are minted\"},\"TokensMintedTo(address,uint256)\":{\"notice\":\"Emitted when tokens are minted to a specific address\"}},\"kind\":\"user\",\"methods\":{\"_ADMIN()\":{\"notice\":\"Role identifier for administrative tasks\"},\"_BURN()\":{\"notice\":\"Role identifier for burning tokens\"},\"_BURNFROM()\":{\"notice\":\"Role identifier for burning tokens from specific addresses\"},\"_MINT()\":{\"notice\":\"Role identifier for minting new tokens\"},\"_MINTTO()\":{\"notice\":\"Role identifier for minting tokens to specific addresses\"},\"_RESCUE()\":{\"notice\":\"Role identifier for rescuing tokens and Ether\"},\"_SUPPLY()\":{\"notice\":\"Role identifier for modifying the supply cap\"},\"_cap()\":{\"notice\":\"Maximum supply cap for the token\"},\"mintDisabled()\":{\"notice\":\"Flag to disable minting\"},\"mintToDisabled()\":{\"notice\":\"Flag to disable minting to specific addresses\"},\"paused()\":{\"notice\":\"Flag to pause the contract's operations\"},\"txFee()\":{\"notice\":\"Transaction fee for transfers (0.005 tokens, assuming 18 decimals)\"},\"whitelistedAddress(address)\":{\"notice\":\"Mapping to track addresses exempt from transfer fees\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/token.sol\":\"EqualFiToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"src/token.sol\":{\"keccak256\":\"0xc005b176961fe93ff1419cf353bdca8e65dbf9157e8d4a787c0ed464ba36f535\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1fbcb349704cb040fc5cfd1fab23b94b09902a2cbb43324a49eebb5574f8b16c\",\"dweb:/ipfs/QmWQvkPr5EE1aFaBYLQ9dyoYgRYr6phW3F4389vT48cTHa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 628,
								"contract": "src/token.sol:EqualFiToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 634,
								"contract": "src/token.sol:EqualFiToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 636,
								"contract": "src/token.sol:EqualFiToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 638,
								"contract": "src/token.sol:EqualFiToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 640,
								"contract": "src/token.sol:EqualFiToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 26,
								"contract": "src/token.sol:EqualFiToken",
								"label": "_roles",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 1957,
								"contract": "src/token.sol:EqualFiToken",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 2119,
								"contract": "src/token.sol:EqualFiToken",
								"label": "_cap",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 2123,
								"contract": "src/token.sol:EqualFiToken",
								"label": "txFee",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 2126,
								"contract": "src/token.sol:EqualFiToken",
								"label": "paused",
								"offset": 0,
								"slot": "9",
								"type": "t_bool"
							},
							{
								"astId": 2129,
								"contract": "src/token.sol:EqualFiToken",
								"label": "mintDisabled",
								"offset": 1,
								"slot": "9",
								"type": "t_bool"
							},
							{
								"astId": 2132,
								"contract": "src/token.sol:EqualFiToken",
								"label": "mintToDisabled",
								"offset": 2,
								"slot": "9",
								"type": "t_bool"
							},
							{
								"astId": 2235,
								"contract": "src/token.sol:EqualFiToken",
								"label": "whitelistedAddress",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "src/token.sol:EqualFiToken",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "src/token.sol:EqualFiToken",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"ContractPaused(uint256,address)": {
								"notice": "Emitted when the contract is paused"
							},
							"ContractUnpaused(uint256,address)": {
								"notice": "Emitted when the contract is unpaused"
							},
							"ERC20Rescued(address,uint256,address,uint256)": {
								"notice": "Emitted when ERC20 tokens are rescued from the contract"
							},
							"ETHRescued(address,uint256,uint256)": {
								"notice": "Emitted when Ether is rescued from the contract"
							},
							"MintingDisabled(uint256,address)": {
								"notice": "Emitted when minting is disabled"
							},
							"MintingEnabled(uint256,address)": {
								"notice": "Emitted when minting is enabled"
							},
							"MintingToDisabled(uint256,address)": {
								"notice": "Emitted when minting to specific addresses is disabled"
							},
							"MintingToEnabled(uint256,address)": {
								"notice": "Emitted when minting to specific addresses is enabled"
							},
							"SupplyCapChanged(uint256,address)": {
								"notice": "Emitted when the supply cap is changed"
							},
							"TokensBurned(uint256,address)": {
								"notice": "Emitted when tokens are burned from the caller's balance"
							},
							"TokensBurnedFrom(address,uint256,address)": {
								"notice": "Emitted when tokens are burned from a specific address"
							},
							"TokensMinted(uint256)": {
								"notice": "Emitted when tokens are minted"
							},
							"TokensMintedTo(address,uint256)": {
								"notice": "Emitted when tokens are minted to a specific address"
							}
						},
						"kind": "user",
						"methods": {
							"_ADMIN()": {
								"notice": "Role identifier for administrative tasks"
							},
							"_BURN()": {
								"notice": "Role identifier for burning tokens"
							},
							"_BURNFROM()": {
								"notice": "Role identifier for burning tokens from specific addresses"
							},
							"_MINT()": {
								"notice": "Role identifier for minting new tokens"
							},
							"_MINTTO()": {
								"notice": "Role identifier for minting tokens to specific addresses"
							},
							"_RESCUE()": {
								"notice": "Role identifier for rescuing tokens and Ether"
							},
							"_SUPPLY()": {
								"notice": "Role identifier for modifying the supply cap"
							},
							"_cap()": {
								"notice": "Maximum supply cap for the token"
							},
							"mintDisabled()": {
								"notice": "Flag to disable minting"
							},
							"mintToDisabled()": {
								"notice": "Flag to disable minting to specific addresses"
							},
							"paused()": {
								"notice": "Flag to pause the contract's operations"
							},
							"txFee()": {
								"notice": "Transaction fee for transfers (0.005 tokens, assuming 18 decimals)"
							},
							"whitelistedAddress(address)": {
								"notice": "Mapping to track addresses exempt from transfer fees"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1924
						],
						"ERC165": [
							2039
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1925,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1924,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 2040,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2039,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1924,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2039,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								2039,
								2051,
								378,
								1924
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2038
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2038,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1906,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1906,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1906,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1906,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 378,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 378,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 378,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 378,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 378,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "226:3116:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							460
						],
						"IERC165": [
							2051
						],
						"IERC20": [
							1198
						]
					},
					"id": 461,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 382,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 461,
							"sourceUnit": 469,
							"src": "133:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 381,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1198,
										"src": "141:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 384,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 461,
							"sourceUnit": 465,
							"src": "170:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 383,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2051,
										"src": "178:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 386,
										"name": "IERC20",
										"nameLocations": [
											"590:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1198,
										"src": "590:6:2"
									},
									"id": 387,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:2"
								},
								{
									"baseName": {
										"id": 388,
										"name": "IERC165",
										"nameLocations": [
											"598:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2051,
										"src": "598:7:2"
									},
									"id": 389,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:2"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 385,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:2",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 460,
							"linearizedBaseContracts": [
								460,
								2051,
								1198
							],
							"name": "IERC1363",
							"nameLocation": "578:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 399,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "1548:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "1560:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:2"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "1593:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 396,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:2"
									},
									"scope": 460,
									"src": "1523:76:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 411,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "2088:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "2100:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "2115:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 405,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:2"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "2154:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 408,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:2"
									},
									"scope": 460,
									"src": "2063:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2653:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2667:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2679:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:2"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2712:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 420,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:2"
									},
									"scope": 460,
									"src": "2624:94:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 437,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "3294:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "3308:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "3320:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "3335:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 431,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:2"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "3374:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 434,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:2"
									},
									"scope": 460,
									"src": "3265:115:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 447,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "3805:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "3822:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:2"
									},
									"returnParameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "3855:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 444,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:2"
									},
									"scope": 460,
									"src": "3781:80:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 459,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "4374:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "4391:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "4406:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:2"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "4445:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 456,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:2"
									},
									"scope": 460,
									"src": "4350:101:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 461,
							"src": "568:3885:2",
							"usedErrors": [],
							"usedEvents": [
								1132,
								1141
							]
						}
					],
					"src": "107:4347:2"
				},
				"id": 2
			},
			"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2051
						]
					},
					"id": 465,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 462,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 464,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 465,
							"sourceUnit": 2052,
							"src": "132:59:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 463,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2051,
										"src": "140:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:3"
				},
				"id": 3
			},
			"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1198
						]
					},
					"id": 469,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 466,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 468,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 469,
							"sourceUnit": 1199,
							"src": "131:49:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 467,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1198,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:4"
				},
				"id": 4
			},
			"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							605
						],
						"IERC20Errors": [
							510
						],
						"IERC721Errors": [
							558
						]
					},
					"id": 606,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 470,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 471,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:5",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 510,
							"linearizedBaseContracts": [
								510
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:5",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 480,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "654:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "670:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "687:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:5"
									},
									"src": "623:80:5"
								},
								{
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:5",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 485,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "891:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:5"
									},
									"src": "866:41:5"
								},
								{
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:5",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 490,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "1104:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:5"
									},
									"src": "1077:45:5"
								},
								{
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:5",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 499,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "1511:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "1528:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "1547:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:5"
									},
									"src": "1478:85:5"
								},
								{
									"documentation": {
										"id": 500,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:5",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 504,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "1775:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:5"
									},
									"src": "1748:45:5"
								},
								{
									"documentation": {
										"id": 505,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:5",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 509,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "2025:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:5"
									},
									"src": "1999:43:5"
								}
							],
							"scope": 606,
							"src": "280:1764:5",
							"usedErrors": [
								480,
								485,
								490,
								499,
								504,
								509
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 511,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:5",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 558,
							"linearizedBaseContracts": [
								558
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:5",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 516,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "2469:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:5"
									},
									"src": "2444:40:5"
								},
								{
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:5",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 521,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "2656:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:5"
									},
									"src": "2627:46:5"
								},
								{
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:5",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 530,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "3000:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "3016:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "3033:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:5"
									},
									"src": "2973:75:5"
								},
								{
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:5",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 535,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "3237:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:5"
									},
									"src": "3211:42:5"
								},
								{
									"documentation": {
										"id": 536,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:5",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 540,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "3451:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:5"
									},
									"src": "3423:46:5"
								},
								{
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:5",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 547,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "3760:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "3778:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:5"
									},
									"src": "3727:68:5"
								},
								{
									"documentation": {
										"id": 548,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:5",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 552,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "4008:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:5"
									},
									"src": "3980:46:5"
								},
								{
									"documentation": {
										"id": 553,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:5",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 557,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "4262:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:5"
									},
									"src": "4234:46:5"
								}
							],
							"scope": 606,
							"src": "2190:2092:5",
							"usedErrors": [
								516,
								521,
								530,
								535,
								540,
								547,
								552,
								557
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 559,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:5",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 605,
							"linearizedBaseContracts": [
								605
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:5",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 570,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "4860:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "4876:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "4893:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "4909:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:5"
									},
									"src": "4827:99:5"
								},
								{
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:5",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 575,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "5116:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:5"
									},
									"src": "5089:43:5"
								},
								{
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:5",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 580,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "5331:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:5"
									},
									"src": "5302:47:5"
								},
								{
									"documentation": {
										"id": 581,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:5",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 587,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "5651:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "5669:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:5"
									},
									"src": "5616:68:5"
								},
								{
									"documentation": {
										"id": 588,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:5",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 592,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "5898:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:5"
									},
									"src": "5869:47:5"
								},
								{
									"documentation": {
										"id": 593,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:5",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 597,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "6153:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:5"
									},
									"src": "6124:47:5"
								},
								{
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:5",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 604,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "6494:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "6513:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:5"
									},
									"src": "6462:73:5"
								}
							],
							"scope": 606,
							"src": "4430:2107:5",
							"usedErrors": [
								570,
								575,
								580,
								587,
								592,
								597,
								604
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:5"
				},
				"id": 5
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1924
						],
						"ERC20": [
							1120
						],
						"IERC20": [
							1198
						],
						"IERC20Errors": [
							510
						],
						"IERC20Metadata": [
							1224
						]
					},
					"id": 1121,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 607,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:6"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 609,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1121,
							"sourceUnit": 1199,
							"src": "131:36:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 608,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1198,
										"src": "139:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 611,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1121,
							"sourceUnit": 1225,
							"src": "168:63:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 610,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1224,
										"src": "176:14:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 613,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1121,
							"sourceUnit": 1925,
							"src": "232:48:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 612,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1924,
										"src": "240:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 615,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1121,
							"sourceUnit": 606,
							"src": "281:65:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 614,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 510,
										"src": "289:12:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 617,
										"name": "Context",
										"nameLocations": [
											"1133:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1924,
										"src": "1133:7:6"
									},
									"id": 618,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:6"
								},
								{
									"baseName": {
										"id": 619,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1198,
										"src": "1142:6:6"
									},
									"id": 620,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:6"
								},
								{
									"baseName": {
										"id": 621,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1224,
										"src": "1150:14:6"
									},
									"id": 622,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:6"
								},
								{
									"baseName": {
										"id": 623,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 510,
										"src": "1166:12:6"
									},
									"id": 624,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:6"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 616,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:6",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1120,
							"linearizedBaseContracts": [
								1120,
								510,
								1224,
								1198,
								1924
							],
							"name": "ERC20",
							"nameLocation": "1124:5:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 628,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1120,
									"src": "1185:53:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 627,
										"keyName": "account",
										"keyNameLocation": "1201:7:6",
										"keyType": {
											"id": 625,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 626,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 634,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1120,
									"src": "1245:83:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 633,
										"keyName": "account",
										"keyNameLocation": "1261:7:6",
										"keyType": {
											"id": 629,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 632,
											"keyName": "spender",
											"keyNameLocation": "1288:7:6",
											"keyType": {
												"id": 630,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 631,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 636,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1120,
									"src": "1335:28:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 635,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 638,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1120,
									"src": "1370:20:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 637,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 640,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1120,
									"src": "1396:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 639,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "1657:57:6",
										"statements": [
											{
												"expression": {
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 648,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "1667:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 649,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 643,
														"src": "1675:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 651,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:6"
											},
											{
												"expression": {
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 652,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "1690:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 653,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "1700:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 655,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:6"
											}
										]
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:6",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 657,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "1613:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 642,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "1634:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 644,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:6"
									},
									"returnParameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:6"
									},
									"scope": 1120,
									"src": "1601:113:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1211
									],
									"body": {
										"id": 665,
										"nodeType": "Block",
										"src": "1839:29:6",
										"statements": [
											{
												"expression": {
													"id": 663,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 638,
													"src": "1856:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 662,
												"id": 664,
												"nodeType": "Return",
												"src": "1849:12:6"
											}
										]
									},
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:6"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "1824:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 660,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:6"
									},
									"scope": 1120,
									"src": "1779:89:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1217
									],
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "2043:31:6",
										"statements": [
											{
												"expression": {
													"id": 672,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 640,
													"src": "2060:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 671,
												"id": 673,
												"nodeType": "Return",
												"src": "2053:14:6"
											}
										]
									},
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:6",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:6"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2028:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 669,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:6"
									},
									"scope": 1120,
									"src": "1981:93:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1223
									],
									"body": {
										"id": 683,
										"nodeType": "Block",
										"src": "2763:26:6",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 680,
												"id": 682,
												"nodeType": "Return",
												"src": "2773:9:6"
											}
										]
									},
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:6",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:6"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "2756:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 678,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:6"
									},
									"scope": 1120,
									"src": "2707:82:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1147
									],
									"body": {
										"id": 692,
										"nodeType": "Block",
										"src": "2910:36:6",
										"statements": [
											{
												"expression": {
													"id": 690,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 636,
													"src": "2927:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 689,
												"id": 691,
												"nodeType": "Return",
												"src": "2920:19:6"
											}
										]
									},
									"documentation": {
										"id": 685,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:6",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:6"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "2901:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:6"
									},
									"scope": 1120,
									"src": "2849:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1155
									],
									"body": {
										"id": 705,
										"nodeType": "Block",
										"src": "3078:42:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 701,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "3095:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 703,
													"indexExpression": {
														"id": 702,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "3105:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 700,
												"id": 704,
												"nodeType": "Return",
												"src": "3088:25:6"
											}
										]
									},
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:6",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "3023:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:6"
									},
									"returnParameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "3069:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:6"
									},
									"scope": 1120,
									"src": "3004:116:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1165
									],
									"body": {
										"id": 729,
										"nodeType": "Block",
										"src": "3390:103:6",
										"statements": [
											{
												"assignments": [
													717
												],
												"declarations": [
													{
														"constant": false,
														"id": 717,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 729,
														"src": "3400:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 716,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 720,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 718,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1906,
														"src": "3416:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 722,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "3448:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 723,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "3455:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 724,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "3459:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 721,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "3438:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 726,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 715,
												"id": 728,
												"nodeType": "Return",
												"src": "3475:11:6"
											}
										]
									},
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:6",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "3333:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "3345:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:6"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "3384:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:6"
									},
									"scope": 1120,
									"src": "3315:178:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1175
									],
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "3640:51:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 740,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "3657:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 742,
														"indexExpression": {
															"id": 741,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "3669:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 744,
													"indexExpression": {
														"id": 743,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "3676:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 739,
												"id": 745,
												"nodeType": "Return",
												"src": "3650:34:6"
											}
										]
									},
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:6",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "3570:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "3585:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:6"
									},
									"returnParameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "3631:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:6"
									},
									"scope": 1120,
									"src": "3551:140:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1185
									],
									"body": {
										"id": 770,
										"nodeType": "Block",
										"src": "4077:107:6",
										"statements": [
											{
												"assignments": [
													758
												],
												"declarations": [
													{
														"constant": false,
														"id": 758,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 770,
														"src": "4087:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 757,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 761,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 759,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1906,
														"src": "4103:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "4134:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "4141:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 765,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "4150:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 762,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1011,
															1071
														],
														"referencedDeclaration": 1011,
														"src": "4125:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 767,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 756,
												"id": 769,
												"nodeType": "Return",
												"src": "4166:11:6"
											}
										]
									},
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:6",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 771,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "4015:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "4032:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:6"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "4071:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 754,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:6"
									},
									"scope": 1120,
									"src": "3998:186:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1197
									],
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "4869:151:6",
										"statements": [
											{
												"assignments": [
													784
												],
												"declarations": [
													{
														"constant": false,
														"id": 784,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 802,
														"src": "4879:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 783,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 787,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 785,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1906,
														"src": "4897:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 789,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "4935:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 790,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "4941:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 791,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "4950:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 788,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1119,
														"src": "4919:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 793,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 795,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "4976:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 796,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "4982:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 797,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "4986:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 794,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "4966:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 782,
												"id": 801,
												"nodeType": "Return",
												"src": "5002:11:6"
											}
										]
									},
									"documentation": {
										"id": 772,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:6",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "4798:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "4812:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "4824:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:6"
									},
									"returnParameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "4863:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 780,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:6"
									},
									"scope": 1120,
									"src": "4776:244:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "5462:231:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 813,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "5476:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 814,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 817,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 827,
												"nodeType": "IfStatement",
												"src": "5472:86:6",
												"trueBody": {
													"id": 826,
													"nodeType": "Block",
													"src": "5496:62:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 822,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 821,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 820,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 819,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 485,
																	"src": "5517:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 825,
															"nodeType": "RevertStatement",
															"src": "5510:37:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 828,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "5571:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 829,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 832,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 842,
												"nodeType": "IfStatement",
												"src": "5567:86:6",
												"trueBody": {
													"id": 841,
													"nodeType": "Block",
													"src": "5589:64:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 837,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 836,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 835,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 834,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 490,
																	"src": "5610:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 840,
															"nodeType": "RevertStatement",
															"src": "5603:39:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 844,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "5670:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 845,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "5676:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 846,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "5680:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 843,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "5662:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:6"
											}
										]
									},
									"documentation": {
										"id": 804,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:6",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "5412:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "5426:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "5438:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:6"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:6"
									},
									"scope": 1120,
									"src": "5393:300:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 926,
										"nodeType": "Block",
										"src": "6083:1032:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 860,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "6097:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 861,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 864,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 897,
													"nodeType": "Block",
													"src": "6271:362:6",
													"statements": [
														{
															"assignments": [
																872
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 872,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 897,
																	"src": "6285:19:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 871,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 876,
															"initialValue": {
																"baseExpression": {
																	"id": 873,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "6307:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 875,
																"indexExpression": {
																	"id": 874,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 853,
																	"src": "6317:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 877,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 872,
																	"src": "6340:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 878,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 857,
																	"src": "6354:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 887,
															"nodeType": "IfStatement",
															"src": "6336:115:6",
															"trueBody": {
																"id": 886,
																"nodeType": "Block",
																"src": "6361:90:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 881,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 853,
																					"src": "6411:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 882,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 872,
																					"src": "6417:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 883,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 857,
																					"src": "6430:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 880,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 480,
																				"src": "6386:24:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 884,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 885,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:6"
																	}
																]
															}
														},
														{
															"id": 896,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:6",
															"statements": [
																{
																	"expression": {
																		"id": 894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 888,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 628,
																				"src": "6571:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 890,
																			"indexExpression": {
																				"id": 889,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 853,
																				"src": "6581:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 893,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 891,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 872,
																				"src": "6589:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 892,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 857,
																				"src": "6603:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 895,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:6"
																}
															]
														}
													]
												},
												"id": 898,
												"nodeType": "IfStatement",
												"src": "6093:540:6",
												"trueBody": {
													"id": 870,
													"nodeType": "Block",
													"src": "6117:148:6",
													"statements": [
														{
															"expression": {
																"id": 868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 866,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 636,
																	"src": "6233:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 867,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 857,
																	"src": "6249:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 869,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 899,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 855,
														"src": "6647:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 902,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 900,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 903,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 918,
													"nodeType": "Block",
													"src": "6862:206:6",
													"statements": [
														{
															"id": 917,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:6",
															"statements": [
																{
																	"expression": {
																		"id": 915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 911,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 628,
																				"src": "7021:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 913,
																			"indexExpression": {
																				"id": 912,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 855,
																				"src": "7031:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 914,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 857,
																			"src": "7038:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 916,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:6"
																}
															]
														}
													]
												},
												"id": 919,
												"nodeType": "IfStatement",
												"src": "6643:425:6",
												"trueBody": {
													"id": 910,
													"nodeType": "Block",
													"src": "6665:191:6",
													"statements": [
														{
															"id": 909,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:6",
															"statements": [
																{
																	"expression": {
																		"id": 907,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 905,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 636,
																			"src": "6810:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 906,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 857,
																			"src": "6826:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 908,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:6"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 921,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "7092:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 922,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "7098:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 923,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "7102:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 920,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "7083:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 925,
												"nodeType": "EmitStatement",
												"src": "7078:30:6"
											}
										]
									},
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:6",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "6025:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "6039:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "6051:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:6"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:6"
									},
									"scope": 1120,
									"src": "6008:1107:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "7514:152:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 935,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "7528:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 936,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 939,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 949,
												"nodeType": "IfStatement",
												"src": "7524:91:6",
												"trueBody": {
													"id": 948,
													"nodeType": "Block",
													"src": "7551:64:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 944,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 943,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 942,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 941,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 490,
																	"src": "7572:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 947,
															"nodeType": "RevertStatement",
															"src": "7565:39:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 951,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 955,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 930,
															"src": "7644:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 956,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "7653:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 950,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "7624:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 958,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:6"
											}
										]
									},
									"documentation": {
										"id": 928,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:6",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "7473:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "7490:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:6"
									},
									"returnParameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:6"
									},
									"scope": 1120,
									"src": "7458:208:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 992,
										"nodeType": "Block",
										"src": "8040:150:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 968,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "8054:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 971,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 969,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 972,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 982,
												"nodeType": "IfStatement",
												"src": "8050:89:6",
												"trueBody": {
													"id": 981,
													"nodeType": "Block",
													"src": "8077:62:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 977,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 975,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 974,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 485,
																	"src": "8098:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 980,
															"nodeType": "RevertStatement",
															"src": "8091:37:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 984,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "8156:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 985,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 989,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "8177:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 983,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "8148:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 991,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:6"
											}
										]
									},
									"documentation": {
										"id": 961,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:6",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "7999:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "8016:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:6"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:6"
									},
									"scope": 1120,
									"src": "7984:206:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1010,
										"nodeType": "Block",
										"src": "8800:54:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1004,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "8819:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1005,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "8826:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1006,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "8835:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1003,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1011,
															1071
														],
														"referencedDeclaration": 1071,
														"src": "8810:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1009,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:6"
											}
										]
									},
									"documentation": {
										"id": 994,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:6",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1011,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "8744:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "8759:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "8776:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:6"
									},
									"returnParameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:6"
									},
									"scope": 1120,
									"src": "8726:128:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1070,
										"nodeType": "Block",
										"src": "9799:334:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1023,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1014,
														"src": "9813:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1024,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1027,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1037,
												"nodeType": "IfStatement",
												"src": "9809:89:6",
												"trueBody": {
													"id": 1036,
													"nodeType": "Block",
													"src": "9834:64:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1032,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1031,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1030,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1033,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1029,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 504,
																	"src": "9855:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1034,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1035,
															"nodeType": "RevertStatement",
															"src": "9848:39:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1038,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1016,
														"src": "9911:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1039,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1042,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1052,
												"nodeType": "IfStatement",
												"src": "9907:90:6",
												"trueBody": {
													"id": 1051,
													"nodeType": "Block",
													"src": "9934:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1047,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1046,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1045,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1048,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1044,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 509,
																	"src": "9955:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1050,
															"nodeType": "RevertStatement",
															"src": "9948:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1053,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "10006:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1056,
															"indexExpression": {
																"id": 1054,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "10018:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1057,
														"indexExpression": {
															"id": 1055,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "10025:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1058,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "10036:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1060,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:6"
											},
											{
												"condition": {
													"id": 1061,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1020,
													"src": "10055:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1069,
												"nodeType": "IfStatement",
												"src": "10051:76:6",
												"trueBody": {
													"id": 1068,
													"nodeType": "Block",
													"src": "10066:61:6",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1063,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1014,
																		"src": "10094:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1064,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1016,
																		"src": "10101:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1065,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1018,
																		"src": "10110:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1062,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1141,
																	"src": "10085:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1066,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1067,
															"nodeType": "EmitStatement",
															"src": "10080:36:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1012,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:6",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1071,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "9719:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1013,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "9734:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1015,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "9751:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "9766:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1019,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:6"
									},
									"returnParameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:6"
									},
									"scope": 1120,
									"src": "9701:432:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1118,
										"nodeType": "Block",
										"src": "10504:388:6",
										"statements": [
											{
												"assignments": [
													1082
												],
												"declarations": [
													{
														"constant": false,
														"id": 1082,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:6",
														"nodeType": "VariableDeclaration",
														"scope": 1118,
														"src": "10514:24:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1081,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1087,
												"initialValue": {
													"arguments": [
														{
															"id": 1084,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "10551:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1085,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "10558:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1083,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "10541:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1088,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "10580:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1090,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:6",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1089,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1093,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:6",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1117,
												"nodeType": "IfStatement",
												"src": "10576:310:6",
												"trueBody": {
													"id": 1116,
													"nodeType": "Block",
													"src": "10619:267:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1095,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1082,
																	"src": "10637:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1096,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1078,
																	"src": "10656:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1105,
															"nodeType": "IfStatement",
															"src": "10633:130:6",
															"trueBody": {
																"id": 1104,
																"nodeType": "Block",
																"src": "10663:100:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1099,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1076,
																					"src": "10715:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1100,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1082,
																					"src": "10724:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1101,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1078,
																					"src": "10742:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1098,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 499,
																				"src": "10688:26:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1102,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1103,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:6"
																	}
																]
															}
														},
														{
															"id": 1115,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:6",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1107,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1074,
																				"src": "10813:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1108,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1076,
																				"src": "10820:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1111,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1109,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1082,
																					"src": "10829:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1110,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1078,
																					"src": "10848:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1112,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1106,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1011,
																				1071
																			],
																			"referencedDeclaration": 1071,
																			"src": "10804:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1114,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:6"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1072,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:6",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "10440:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "10455:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1075,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "10472:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:6"
									},
									"returnParameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:6"
									},
									"scope": 1120,
									"src": "10415:477:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1121,
							"src": "1106:9788:6",
							"usedErrors": [
								480,
								485,
								490,
								499,
								504,
								509
							],
							"usedEvents": [
								1132,
								1141
							]
						}
					],
					"src": "105:10790:6"
				},
				"id": 6
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1198
						]
					},
					"id": 1199,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1122,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1123,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:7",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1198,
							"linearizedBaseContracts": [
								1198
							],
							"name": "IERC20",
							"nameLocation": "214:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1124,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:7",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1132,
									"name": "Transfer",
									"nameLocation": "396:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "405:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1128,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "427:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1130,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "447:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:7"
									},
									"src": "390:72:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1133,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:7",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1141,
									"name": "Approval",
									"nameLocation": "627:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "636:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "659:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "684:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:7"
									},
									"src": "621:78:7"
								},
								{
									"documentation": {
										"id": 1142,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:7",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:7"
									},
									"returnParameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "821:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:7"
									},
									"scope": 1198,
									"src": "775:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1148,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:7",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1155,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "931:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:7"
									},
									"returnParameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "971:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:7"
									},
									"scope": 1198,
									"src": "912:68:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1156,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:7",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1165,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "1222:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "1234:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:7"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "1267:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1162,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:7"
									},
									"scope": 1198,
									"src": "1204:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1166,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:7",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1175,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "1567:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "1582:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:7"
									},
									"returnParameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "1622:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:7"
									},
									"scope": 1198,
									"src": "1548:83:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1176,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:7",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1185,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "2326:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "2343:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:7"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "2376:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1182,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:7"
									},
									"scope": 1198,
									"src": "2309:73:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1186,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:7",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1197,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "2712:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "2726:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "2738:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:7"
									},
									"returnParameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "2771:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1194,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:7"
									},
									"scope": 1198,
									"src": "2690:87:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1199,
							"src": "204:2575:7",
							"usedErrors": [],
							"usedEvents": [
								1132,
								1141
							]
						}
					],
					"src": "106:2674:7"
				},
				"id": 7
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1198
						],
						"IERC20Metadata": [
							1224
						]
					},
					"id": 1225,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1200,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:8"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1202,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1225,
							"sourceUnit": 1199,
							"src": "151:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1201,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1198,
										"src": "159:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1204,
										"name": "IERC20",
										"nameLocations": [
											"306:6:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1198,
										"src": "306:6:8"
									},
									"id": 1205,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:8"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1203,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:8",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1224,
							"linearizedBaseContracts": [
								1224,
								1198
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1206,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:8",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1211,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:8"
									},
									"returnParameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "417:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1208,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:8"
									},
									"scope": 1224,
									"src": "378:54:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1212,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:8",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:8"
									},
									"returnParameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "540:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1214,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:8"
									},
									"scope": 1224,
									"src": "499:56:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1218,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:8",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:8"
									},
									"returnParameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "674:5:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1220,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:8"
									},
									"scope": 1224,
									"src": "631:50:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1225,
							"src": "278:405:8",
							"usedErrors": [],
							"usedEvents": [
								1132,
								1141
							]
						}
					],
					"src": "125:559:8"
				},
				"id": 8
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1894
						],
						"IERC1363": [
							460
						],
						"IERC20": [
							1198
						],
						"SafeERC20": [
							1635
						]
					},
					"id": 1636,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1226,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:9"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1228,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1636,
							"sourceUnit": 1199,
							"src": "141:37:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1227,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1198,
										"src": "149:6:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 1230,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1636,
							"sourceUnit": 461,
							"src": "179:58:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1229,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 460,
										"src": "187:8:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 1232,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1636,
							"sourceUnit": 1895,
							"src": "238:51:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1231,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1894,
										"src": "246:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1233,
								"nodeType": "StructuredDocumentation",
								"src": "291:458:9",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1635,
							"linearizedBaseContracts": [
								1635
							],
							"name": "SafeERC20",
							"nameLocation": "758:9:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1234,
										"nodeType": "StructuredDocumentation",
										"src": "774:65:9",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 1238,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "850:24:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "883:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "875:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "874:15:9"
									},
									"src": "844:46:9"
								},
								{
									"documentation": {
										"id": 1239,
										"nodeType": "StructuredDocumentation",
										"src": "896:71:9",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 1247,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "978:32:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1019:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "1011:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1036:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "1028:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1062:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "1054:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:70:9"
									},
									"src": "972:109:9"
								},
								{
									"body": {
										"id": 1270,
										"nodeType": "Block",
										"src": "1343:88:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1259,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "1373:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1198",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1262,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1251,
																		"src": "1395:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1198",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1401:8:9",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1165,
																	"src": "1395:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1264,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1253,
																			"src": "1412:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1265,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1255,
																			"src": "1416:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1266,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1411:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 1260,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1380:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1261,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1384:10:9",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1380:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1380:43:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1198",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1258,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1593,
														"src": "1353:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1198_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1353:71:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1269,
												"nodeType": "ExpressionStatement",
												"src": "1353:71:9"
											}
										]
									},
									"documentation": {
										"id": 1248,
										"nodeType": "StructuredDocumentation",
										"src": "1087:179:9",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 1271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1280:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1300:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "1293:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1198",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1250,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1249,
														"name": "IERC20",
														"nameLocations": [
															"1293:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1198,
														"src": "1293:6:9"
													},
													"referencedDeclaration": 1198,
													"src": "1293:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1198",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1315:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "1307:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1307:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1327:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "1319:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1292:41:9"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1343:0:9"
									},
									"scope": 1635,
									"src": "1271:160:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1297,
										"nodeType": "Block",
										"src": "1760:98:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1285,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1275,
															"src": "1790:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1198",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1288,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1275,
																		"src": "1812:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1198",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1818:12:9",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1197,
																	"src": "1812:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1290,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1277,
																			"src": "1833:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1291,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1279,
																			"src": "1839:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1292,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1281,
																			"src": "1843:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1293,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1832:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 1286,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1797:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1801:10:9",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1797:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1797:53:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1198",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1284,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1593,
														"src": "1770:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1198_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1770:81:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1296,
												"nodeType": "ExpressionStatement",
												"src": "1770:81:9"
											}
										]
									},
									"documentation": {
										"id": 1272,
										"nodeType": "StructuredDocumentation",
										"src": "1437:228:9",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 1298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1679:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1703:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "1696:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1198",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1274,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1273,
														"name": "IERC20",
														"nameLocations": [
															"1696:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1198,
														"src": "1696:6:9"
													},
													"referencedDeclaration": 1198,
													"src": "1696:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1198",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1718:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "1710:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1710:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1732:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "1724:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1724:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1744:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "1736:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1736:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:55:9"
									},
									"returnParameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1760:0:9"
									},
									"scope": 1635,
									"src": "1670:188:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1328,
										"nodeType": "Block",
										"src": "2600:139:9",
										"statements": [
											{
												"assignments": [
													1310
												],
												"declarations": [
													{
														"constant": false,
														"id": 1310,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2618:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 1328,
														"src": "2610:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1309,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2610:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1319,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1315,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2657:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1635",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1635",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 1314,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2649:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1313,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2649:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2649:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1317,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1304,
															"src": "2664:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1311,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1302,
															"src": "2633:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1198",
																"typeString": "contract IERC20"
															}
														},
														"id": 1312,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2639:9:9",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1175,
														"src": "2633:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 1318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2633:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2610:62:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1321,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1302,
															"src": "2695:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1198",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 1322,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1304,
															"src": "2702:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1323,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1310,
																"src": "2711:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1324,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1306,
																"src": "2726:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2711:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1198",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1320,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1419,
														"src": "2682:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1198_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2682:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1327,
												"nodeType": "ExpressionStatement",
												"src": "2682:50:9"
											}
										]
									},
									"documentation": {
										"id": 1299,
										"nodeType": "StructuredDocumentation",
										"src": "1864:645:9",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 1329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2523:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2552:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "2545:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1198",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1301,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1300,
														"name": "IERC20",
														"nameLocations": [
															"2545:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1198,
														"src": "2545:6:9"
													},
													"referencedDeclaration": 1198,
													"src": "2545:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1198",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2567:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "2559:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2559:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2584:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "2576:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2576:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2544:46:9"
									},
									"returnParameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2600:0:9"
									},
									"scope": 1635,
									"src": "2514:225:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1371,
										"nodeType": "Block",
										"src": "3505:370:9",
										"statements": [
											{
												"id": 1370,
												"nodeType": "UncheckedBlock",
												"src": "3515:354:9",
												"statements": [
													{
														"assignments": [
															1341
														],
														"declarations": [
															{
																"constant": false,
																"id": 1341,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3547:16:9",
																"nodeType": "VariableDeclaration",
																"scope": 1370,
																"src": "3539:24:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1340,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3539:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1350,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1346,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3590:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1635",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1635",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3582:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1344,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3582:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3582:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1348,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1335,
																	"src": "3597:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1342,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1333,
																	"src": "3566:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1198",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3572:9:9",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1175,
																"src": "3566:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3566:39:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3539:66:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1351,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1341,
																"src": "3623:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1352,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1337,
																"src": "3642:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3623:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1361,
														"nodeType": "IfStatement",
														"src": "3619:160:9",
														"trueBody": {
															"id": 1360,
															"nodeType": "Block",
															"src": "3661:118:9",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 1355,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1335,
																				"src": "3719:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1356,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1341,
																				"src": "3728:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1357,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1337,
																				"src": "3746:17:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1354,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1247,
																			"src": "3686:32:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 1358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3686:78:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 1359,
																	"nodeType": "RevertStatement",
																	"src": "3679:85:9"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1363,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1333,
																	"src": "3805:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1198",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 1364,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1335,
																	"src": "3812:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1365,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1341,
																		"src": "3821:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1366,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1337,
																		"src": "3840:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3821:36:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1198",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1362,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1419,
																"src": "3792:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1198_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3792:66:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1369,
														"nodeType": "ExpressionStatement",
														"src": "3792:66:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1330,
										"nodeType": "StructuredDocumentation",
										"src": "2745:657:9",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 1372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3416:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3445:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "3438:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1198",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1332,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1331,
														"name": "IERC20",
														"nameLocations": [
															"3438:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1198,
														"src": "3438:6:9"
													},
													"referencedDeclaration": 1198,
													"src": "3438:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1198",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3460:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "3452:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3477:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "3469:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3469:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:58:9"
									},
									"returnParameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:9"
									},
									"scope": 1635,
									"src": "3407:468:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1418,
										"nodeType": "Block",
										"src": "4529:303:9",
										"statements": [
											{
												"assignments": [
													1384
												],
												"declarations": [
													{
														"constant": false,
														"id": 1384,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4552:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 1418,
														"src": "4539:25:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1383,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4539:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1393,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1387,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1376,
																"src": "4582:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1198",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4588:7:9",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1185,
															"src": "4582:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 1389,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1378,
																	"src": "4598:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1390,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1380,
																	"src": "4607:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1391,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4597:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 1385,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4567:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1386,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4571:10:9",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4567:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4567:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4539:75:9"
											},
											{
												"condition": {
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4629:45:9",
													"subExpression": {
														"arguments": [
															{
																"id": 1395,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1376,
																"src": "4654:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1198",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 1396,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1384,
																"src": "4661:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$1198",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1394,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1634,
															"src": "4630:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1198_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 1397,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4630:44:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1417,
												"nodeType": "IfStatement",
												"src": "4625:201:9",
												"trueBody": {
													"id": 1416,
													"nodeType": "Block",
													"src": "4676:150:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1400,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1376,
																		"src": "4710:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1198",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1403,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1376,
																					"src": "4732:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1198",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1404,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4738:7:9",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1185,
																				"src": "4732:13:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1405,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1378,
																						"src": "4748:7:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 1406,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4757:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 1407,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4747:12:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 1401,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4717:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1402,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4721:10:9",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4717:14:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4717:43:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$1198",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1399,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1593,
																	"src": "4690:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1198_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1409,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4690:71:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1410,
															"nodeType": "ExpressionStatement",
															"src": "4690:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1412,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1376,
																		"src": "4795:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1198",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 1413,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1384,
																		"src": "4802:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$1198",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1411,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1593,
																	"src": "4775:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1198_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4775:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1415,
															"nodeType": "ExpressionStatement",
															"src": "4775:40:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1373,
										"nodeType": "StructuredDocumentation",
										"src": "3881:566:9",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 1419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4461:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4481:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "4474:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1198",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1375,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1374,
														"name": "IERC20",
														"nameLocations": [
															"4474:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1198,
														"src": "4474:6:9"
													},
													"referencedDeclaration": 1198,
													"src": "4474:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1198",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4496:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "4488:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4488:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4513:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "4505:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4505:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4473:46:9"
									},
									"returnParameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4529:0:9"
									},
									"scope": 1635,
									"src": "4452:380:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1461,
										"nodeType": "Block",
										"src": "5279:219:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1432,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1425,
																"src": "5293:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5296:4:9",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5293:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5301:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5293:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1435,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5311:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5293:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1450,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5379:39:9",
														"subExpression": {
															"arguments": [
																{
																	"id": 1446,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1425,
																	"src": "5402:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1447,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1427,
																	"src": "5406:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1448,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1429,
																	"src": "5413:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1444,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1423,
																	"src": "5380:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$460",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5386:15:9",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 411,
																"src": "5380:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5380:38:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1459,
													"nodeType": "IfStatement",
													"src": "5375:117:9",
													"trueBody": {
														"id": 1458,
														"nodeType": "Block",
														"src": "5420:72:9",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1454,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1423,
																					"src": "5474:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$460",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$460",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1453,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5466:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1452,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5466:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1455,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5466:14:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1451,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1238,
																		"src": "5441:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5441:40:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1457,
																"nodeType": "RevertStatement",
																"src": "5434:47:9"
															}
														]
													}
												},
												"id": 1460,
												"nodeType": "IfStatement",
												"src": "5289:203:9",
												"trueBody": {
													"id": 1443,
													"nodeType": "Block",
													"src": "5314:55:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1438,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1423,
																		"src": "5341:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$460",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1439,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1425,
																		"src": "5348:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1440,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1427,
																		"src": "5352:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$460",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1437,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1271,
																	"src": "5328:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1198_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5328:30:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1442,
															"nodeType": "ExpressionStatement",
															"src": "5328:30:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1420,
										"nodeType": "StructuredDocumentation",
										"src": "4838:333:9",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 1462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5185:22:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5217:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "5208:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$460",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1422,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1421,
														"name": "IERC1363",
														"nameLocations": [
															"5208:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 460,
														"src": "5208:8:9"
													},
													"referencedDeclaration": 460,
													"src": "5208:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$460",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5232:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "5224:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5224:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5244:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "5236:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5236:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5264:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "5251:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1428,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5251:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5207:62:9"
									},
									"returnParameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5279:0:9"
									},
									"scope": 1635,
									"src": "5176:322:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1508,
										"nodeType": "Block",
										"src": "6017:239:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1477,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1470,
																"src": "6031:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6034:4:9",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6031:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1479,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6039:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6031:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1480,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6049:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6031:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6127:49:9",
														"subExpression": {
															"arguments": [
																{
																	"id": 1492,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1468,
																	"src": "6154:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1493,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1470,
																	"src": "6160:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1494,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1472,
																	"src": "6164:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1495,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1474,
																	"src": "6171:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1490,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1466,
																	"src": "6128:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$460",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6134:19:9",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 437,
																"src": "6128:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6128:48:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1506,
													"nodeType": "IfStatement",
													"src": "6123:127:9",
													"trueBody": {
														"id": 1505,
														"nodeType": "Block",
														"src": "6178:72:9",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1501,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1466,
																					"src": "6232:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$460",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$460",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1500,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6224:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1499,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6224:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1502,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6224:14:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1498,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1238,
																		"src": "6199:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6199:40:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1504,
																"nodeType": "RevertStatement",
																"src": "6192:47:9"
															}
														]
													}
												},
												"id": 1507,
												"nodeType": "IfStatement",
												"src": "6027:223:9",
												"trueBody": {
													"id": 1489,
													"nodeType": "Block",
													"src": "6052:65:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1483,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1466,
																		"src": "6083:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$460",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1484,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1468,
																		"src": "6090:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1485,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1470,
																		"src": "6096:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1486,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1472,
																		"src": "6100:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$460",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1482,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1298,
																	"src": "6066:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1198_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6066:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1488,
															"nodeType": "ExpressionStatement",
															"src": "6066:40:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1463,
										"nodeType": "StructuredDocumentation",
										"src": "5504:341:9",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 1509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5859:26:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5904:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "5895:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$460",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1465,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1464,
														"name": "IERC1363",
														"nameLocations": [
															"5895:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 460,
														"src": "5895:8:9"
													},
													"referencedDeclaration": 460,
													"src": "5895:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$460",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5927:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "5919:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5919:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5949:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "5941:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5941:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5969:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "5961:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5961:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5997:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "5984:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1473,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5984:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5885:122:9"
									},
									"returnParameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6017:0:9"
									},
									"scope": 1635,
									"src": "5850:406:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1551,
										"nodeType": "Block",
										"src": "7023:218:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1522,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1515,
																"src": "7037:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7040:4:9",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7037:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1524,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7045:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7037:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1525,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7055:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7037:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7123:38:9",
														"subExpression": {
															"arguments": [
																{
																	"id": 1536,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1515,
																	"src": "7145:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1537,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1517,
																	"src": "7149:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1538,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1519,
																	"src": "7156:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1534,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1513,
																	"src": "7124:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$460",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7130:14:9",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 459,
																"src": "7124:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7124:37:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1549,
													"nodeType": "IfStatement",
													"src": "7119:116:9",
													"trueBody": {
														"id": 1548,
														"nodeType": "Block",
														"src": "7163:72:9",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1544,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1513,
																					"src": "7217:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$460",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$460",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1543,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7209:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1542,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7209:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1545,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7209:14:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1541,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1238,
																		"src": "7184:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7184:40:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1547,
																"nodeType": "RevertStatement",
																"src": "7177:47:9"
															}
														]
													}
												},
												"id": 1550,
												"nodeType": "IfStatement",
												"src": "7033:202:9",
												"trueBody": {
													"id": 1533,
													"nodeType": "Block",
													"src": "7058:55:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1528,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1513,
																		"src": "7085:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$460",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1529,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1515,
																		"src": "7092:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1530,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1517,
																		"src": "7096:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$460",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1527,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1419,
																	"src": "7072:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1198_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7072:30:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1532,
															"nodeType": "ExpressionStatement",
															"src": "7072:30:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1510,
										"nodeType": "StructuredDocumentation",
										"src": "6262:654:9",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 1552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6930:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6961:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "6952:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$460",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1512,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1511,
														"name": "IERC1363",
														"nameLocations": [
															"6952:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 460,
														"src": "6952:8:9"
													},
													"referencedDeclaration": 460,
													"src": "6952:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$460",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6976:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "6968:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6968:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6988:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "6980:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6980:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7008:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "6995:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1518,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6995:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6951:62:9"
									},
									"returnParameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7023:0:9"
									},
									"scope": 1635,
									"src": "6921:320:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1592,
										"nodeType": "Block",
										"src": "7808:650:9",
										"statements": [
											{
												"assignments": [
													1562
												],
												"declarations": [
													{
														"constant": false,
														"id": 1562,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7826:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1592,
														"src": "7818:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1561,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7818:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1563,
												"nodeType": "VariableDeclarationStatement",
												"src": "7818:18:9"
											},
											{
												"assignments": [
													1565
												],
												"declarations": [
													{
														"constant": false,
														"id": 1565,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7854:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1592,
														"src": "7846:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1564,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7846:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1566,
												"nodeType": "VariableDeclarationStatement",
												"src": "7846:19:9"
											},
											{
												"AST": {
													"nativeSrc": "7900:396:9",
													"nodeType": "YulBlock",
													"src": "7900:396:9",
													"statements": [
														{
															"nativeSrc": "7914:75:9",
															"nodeType": "YulVariableDeclaration",
															"src": "7914:75:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "7934:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7934:3:9"
																		},
																		"nativeSrc": "7934:5:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7934:5:9"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "7941:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "7941:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7948:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7948:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7955:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "7955:4:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7961:4:9",
																				"nodeType": "YulLiteral",
																				"src": "7961:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7951:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7951:3:9"
																		},
																		"nativeSrc": "7951:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7951:15:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7974:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "7974:4:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7968:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "7968:5:9"
																		},
																		"nativeSrc": "7968:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7968:11:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7981:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7981:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7984:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7984:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "7929:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7929:4:9"
																},
																"nativeSrc": "7929:60:9",
																"nodeType": "YulFunctionCall",
																"src": "7929:60:9"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "7918:7:9",
																	"nodeType": "YulTypedName",
																	"src": "7918:7:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8050:157:9",
																"nodeType": "YulBlock",
																"src": "8050:157:9",
																"statements": [
																	{
																		"nativeSrc": "8068:22:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8068:22:9",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8085:4:9",
																					"nodeType": "YulLiteral",
																					"src": "8085:4:9",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8079:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "8079:5:9"
																			},
																			"nativeSrc": "8079:11:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8079:11:9"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8072:3:9",
																				"nodeType": "YulTypedName",
																				"src": "8072:3:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8122:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8122:3:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8127:1:9",
																					"nodeType": "YulLiteral",
																					"src": "8127:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8130:14:9",
																						"nodeType": "YulIdentifier",
																						"src": "8130:14:9"
																					},
																					"nativeSrc": "8130:16:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8130:16:9"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8107:14:9",
																				"nodeType": "YulIdentifier",
																				"src": "8107:14:9"
																			},
																			"nativeSrc": "8107:40:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8107:40:9"
																		},
																		"nativeSrc": "8107:40:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8107:40:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8171:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8171:3:9"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8176:14:9",
																						"nodeType": "YulIdentifier",
																						"src": "8176:14:9"
																					},
																					"nativeSrc": "8176:16:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8176:16:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8164:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8164:6:9"
																			},
																			"nativeSrc": "8164:29:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8164:29:9"
																		},
																		"nativeSrc": "8164:29:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8164:29:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8041:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "8041:7:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8034:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8034:6:9"
																},
																"nativeSrc": "8034:15:9",
																"nodeType": "YulFunctionCall",
																"src": "8034:15:9"
															},
															"nativeSrc": "8031:176:9",
															"nodeType": "YulIf",
															"src": "8031:176:9"
														},
														{
															"nativeSrc": "8220:30:9",
															"nodeType": "YulAssignment",
															"src": "8220:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8234:14:9",
																	"nodeType": "YulIdentifier",
																	"src": "8234:14:9"
																},
																"nativeSrc": "8234:16:9",
																"nodeType": "YulFunctionCall",
																"src": "8234:16:9"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8220:10:9",
																	"nodeType": "YulIdentifier",
																	"src": "8220:10:9"
																}
															]
														},
														{
															"nativeSrc": "8263:23:9",
															"nodeType": "YulAssignment",
															"src": "8263:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8284:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8284:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8278:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "8278:5:9"
																},
																"nativeSrc": "8278:8:9",
																"nodeType": "YulFunctionCall",
																"src": "8278:8:9"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8263:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "8263:11:9"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1558,
														"isOffset": false,
														"isSlot": false,
														"src": "7955:4:9",
														"valueSize": 1
													},
													{
														"declaration": 1558,
														"isOffset": false,
														"isSlot": false,
														"src": "7974:4:9",
														"valueSize": 1
													},
													{
														"declaration": 1562,
														"isOffset": false,
														"isSlot": false,
														"src": "8220:10:9",
														"valueSize": 1
													},
													{
														"declaration": 1565,
														"isOffset": false,
														"isSlot": false,
														"src": "8263:11:9",
														"valueSize": 1
													},
													{
														"declaration": 1556,
														"isOffset": false,
														"isSlot": false,
														"src": "7941:5:9",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1567,
												"nodeType": "InlineAssembly",
												"src": "7875:421:9"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1570,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1568,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1562,
															"src": "8310:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8324:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8310:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1581,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1579,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1565,
															"src": "8362:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 1580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8377:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8362:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8310:68:9",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1578,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1573,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1556,
																			"src": "8336:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1198",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$1198",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8328:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1571,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8328:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8328:14:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1575,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8343:4:9",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8328:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8348:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8328:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1577,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8358:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8328:31:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1591,
												"nodeType": "IfStatement",
												"src": "8306:146:9",
												"trueBody": {
													"id": 1590,
													"nodeType": "Block",
													"src": "8380:72:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1586,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1556,
																				"src": "8434:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$1198",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$1198",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1585,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8426:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1584,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8426:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8426:14:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1583,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1238,
																	"src": "8401:24:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8401:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1589,
															"nodeType": "RevertStatement",
															"src": "8394:47:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1553,
										"nodeType": "StructuredDocumentation",
										"src": "7247:486:9",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 1593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7747:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7774:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "7767:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1198",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1555,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1554,
														"name": "IERC20",
														"nameLocations": [
															"7767:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1198,
														"src": "7767:6:9"
													},
													"referencedDeclaration": 1198,
													"src": "7767:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1198",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7794:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "7781:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1557,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7781:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7766:33:9"
									},
									"returnParameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7808:0:9"
									},
									"scope": 1635,
									"src": "7738:720:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1633,
										"nodeType": "Block",
										"src": "9049:391:9",
										"statements": [
											{
												"assignments": [
													1605
												],
												"declarations": [
													{
														"constant": false,
														"id": 1605,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9064:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1633,
														"src": "9059:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1604,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9059:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1606,
												"nodeType": "VariableDeclarationStatement",
												"src": "9059:12:9"
											},
											{
												"assignments": [
													1608
												],
												"declarations": [
													{
														"constant": false,
														"id": 1608,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9089:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1633,
														"src": "9081:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1607,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9081:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1609,
												"nodeType": "VariableDeclarationStatement",
												"src": "9081:18:9"
											},
											{
												"assignments": [
													1611
												],
												"declarations": [
													{
														"constant": false,
														"id": 1611,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9117:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1633,
														"src": "9109:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1610,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9109:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1612,
												"nodeType": "VariableDeclarationStatement",
												"src": "9109:19:9"
											},
											{
												"AST": {
													"nativeSrc": "9163:174:9",
													"nodeType": "YulBlock",
													"src": "9163:174:9",
													"statements": [
														{
															"nativeSrc": "9177:71:9",
															"nodeType": "YulAssignment",
															"src": "9177:71:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9193:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9193:3:9"
																		},
																		"nativeSrc": "9193:5:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9193:5:9"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9200:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "9200:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9207:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9207:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9214:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "9214:4:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9220:4:9",
																				"nodeType": "YulLiteral",
																				"src": "9220:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9210:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9210:3:9"
																		},
																		"nativeSrc": "9210:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9210:15:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9233:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "9233:4:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9227:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "9227:5:9"
																		},
																		"nativeSrc": "9227:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9227:11:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9240:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9240:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9243:4:9",
																		"nodeType": "YulLiteral",
																		"src": "9243:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9188:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9188:4:9"
																},
																"nativeSrc": "9188:60:9",
																"nodeType": "YulFunctionCall",
																"src": "9188:60:9"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9177:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "9177:7:9"
																}
															]
														},
														{
															"nativeSrc": "9261:30:9",
															"nodeType": "YulAssignment",
															"src": "9261:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9275:14:9",
																	"nodeType": "YulIdentifier",
																	"src": "9275:14:9"
																},
																"nativeSrc": "9275:16:9",
																"nodeType": "YulFunctionCall",
																"src": "9275:16:9"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9261:10:9",
																	"nodeType": "YulIdentifier",
																	"src": "9261:10:9"
																}
															]
														},
														{
															"nativeSrc": "9304:23:9",
															"nodeType": "YulAssignment",
															"src": "9304:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9325:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9325:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9319:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "9319:5:9"
																},
																"nativeSrc": "9319:8:9",
																"nodeType": "YulFunctionCall",
																"src": "9319:8:9"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9304:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "9304:11:9"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1599,
														"isOffset": false,
														"isSlot": false,
														"src": "9214:4:9",
														"valueSize": 1
													},
													{
														"declaration": 1599,
														"isOffset": false,
														"isSlot": false,
														"src": "9233:4:9",
														"valueSize": 1
													},
													{
														"declaration": 1608,
														"isOffset": false,
														"isSlot": false,
														"src": "9261:10:9",
														"valueSize": 1
													},
													{
														"declaration": 1611,
														"isOffset": false,
														"isSlot": false,
														"src": "9304:11:9",
														"valueSize": 1
													},
													{
														"declaration": 1605,
														"isOffset": false,
														"isSlot": false,
														"src": "9177:7:9",
														"valueSize": 1
													},
													{
														"declaration": 1597,
														"isOffset": false,
														"isSlot": false,
														"src": "9200:5:9",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1613,
												"nodeType": "InlineAssembly",
												"src": "9138:199:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1614,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1605,
														"src": "9353:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1615,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1608,
																		"src": "9365:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9365:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1626,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1611,
																		"src": "9416:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9431:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9416:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9365:67:9",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 1620,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1597,
																						"src": "9391:5:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$1198",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$1198",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 1619,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9383:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1618,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9383:7:9",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1621,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9383:14:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9398:4:9",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9383:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9403:6:9",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9383:26:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9412:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9383:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1630,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9364:69:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9353:80:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1603,
												"id": 1632,
												"nodeType": "Return",
												"src": "9346:87:9"
											}
										]
									},
									"documentation": {
										"id": 1594,
										"nodeType": "StructuredDocumentation",
										"src": "8464:491:9",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 1634,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8969:23:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9000:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "8993:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1198",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1596,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1595,
														"name": "IERC20",
														"nameLocations": [
															"8993:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1198,
														"src": "8993:6:9"
													},
													"referencedDeclaration": 1198,
													"src": "8993:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1198",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9020:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "9007:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1598,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9007:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8992:33:9"
									},
									"returnParameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "9043:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1601,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9043:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9042:6:9"
									},
									"scope": 1635,
									"src": "8960:480:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1636,
							"src": "750:8692:9",
							"usedErrors": [
								1238,
								1247
							],
							"usedEvents": []
						}
					],
					"src": "115:9328:9"
				},
				"id": 9
			},
			"lib/openzeppelin-contracts/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1894
						],
						"Errors": [
							1946
						]
					},
					"id": 1895,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1637,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:10"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 1639,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1895,
							"sourceUnit": 1947,
							"src": "127:36:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1638,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1946,
										"src": "135:6:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1640,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:10",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1894,
							"linearizedBaseContracts": [
								1894
							],
							"name": "Address",
							"nameLocation": "241:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1641,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:10",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1645,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1645,
												"src": "358:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:10"
									},
									"src": "335:39:10"
								},
								{
									"body": {
										"id": 1691,
										"nodeType": "Block",
										"src": "1361:278:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1655,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1894",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1894",
																		"typeString": "library Address"
																	}
																],
																"id": 1654,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1653,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1657,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:10",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1658,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1650,
														"src": "1399:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1672,
												"nodeType": "IfStatement",
												"src": "1371:125:10",
												"trueBody": {
													"id": 1671,
													"nodeType": "Block",
													"src": "1407:89:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1665,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1894",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1894",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1664,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1663,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:10",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:10",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1668,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1650,
																		"src": "1478:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1660,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1946,
																		"src": "1428:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1946_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:10",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1934,
																	"src": "1428:26:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1670,
															"nodeType": "RevertStatement",
															"src": "1421:64:10"
														}
													]
												}
											},
											{
												"assignments": [
													1674,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1674,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1691,
														"src": "1507:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1673,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1681,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1555:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1675,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1648,
																"src": "1525:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1535:4:10",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1525:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1677,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1650,
																"src": "1547:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1525:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1525:33:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:52:10"
											},
											{
												"condition": {
													"id": 1683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1572:8:10",
													"subExpression": {
														"id": 1682,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1674,
														"src": "1573:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1690,
												"nodeType": "IfStatement",
												"src": "1568:65:10",
												"trueBody": {
													"id": 1689,
													"nodeType": "Block",
													"src": "1582:51:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1684,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1946,
																		"src": "1603:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1946_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1610:10:10",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1937,
																	"src": "1603:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1603:19:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1688,
															"nodeType": "RevertStatement",
															"src": "1596:26:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1646,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:10",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "1309:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:10",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "1336:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:10"
									},
									"returnParameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:10"
									},
									"scope": 1894,
									"src": "1290:349:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1708,
										"nodeType": "Block",
										"src": "2573:62:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1703,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "2612:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1704,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1697,
															"src": "2620:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1702,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1759,
														"src": "2590:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:38:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1701,
												"id": 1707,
												"nodeType": "Return",
												"src": "2583:45:10"
											}
										]
									},
									"documentation": {
										"id": 1693,
										"nodeType": "StructuredDocumentation",
										"src": "1645:834:10",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2493:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2514:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "2506:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2535:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "2522:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1696,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2522:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:35:10"
									},
									"returnParameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "2559:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1699,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2559:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:14:10"
									},
									"scope": 1894,
									"src": "2484:151:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1758,
										"nodeType": "Block",
										"src": "3072:294:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1723,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3094:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1894",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1894",
																		"typeString": "library Address"
																	}
																],
																"id": 1722,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3086:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1721,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3086:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3100:7:10",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3086:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1726,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1716,
														"src": "3110:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3086:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1740,
												"nodeType": "IfStatement",
												"src": "3082:123:10",
												"trueBody": {
													"id": 1739,
													"nodeType": "Block",
													"src": "3117:88:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1733,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3173:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1894",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1894",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1732,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3165:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1731,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3165:7:10",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1734,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3165:13:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3179:7:10",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3165:21:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1736,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1716,
																		"src": "3188:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1728,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1946,
																		"src": "3138:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1946_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3145:19:10",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1934,
																	"src": "3138:26:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1737,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3138:56:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1738,
															"nodeType": "RevertStatement",
															"src": "3131:63:10"
														}
													]
												}
											},
											{
												"assignments": [
													1742,
													1744
												],
												"declarations": [
													{
														"constant": false,
														"id": 1742,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3220:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1758,
														"src": "3215:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1741,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3215:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1744,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3242:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1758,
														"src": "3229:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1743,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3229:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1751,
												"initialValue": {
													"arguments": [
														{
															"id": 1749,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1714,
															"src": "3282:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1745,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1712,
																"src": "3256:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3263:4:10",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3256:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1748,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1747,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1716,
																"src": "3275:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3256:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3256:31:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3214:73:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1753,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1712,
															"src": "3331:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1754,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1742,
															"src": "3339:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1755,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1744,
															"src": "3348:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1752,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1851,
														"src": "3304:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3304:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1720,
												"id": 1757,
												"nodeType": "Return",
												"src": "3297:62:10"
											}
										]
									},
									"documentation": {
										"id": 1710,
										"nodeType": "StructuredDocumentation",
										"src": "2641:313:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2968:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2998:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "2990:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2990:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3019:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "3006:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1713,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3006:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3033:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "3025:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3025:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2989:50:10"
									},
									"returnParameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "3058:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1718,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3058:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:14:10"
									},
									"scope": 1894,
									"src": "2959:407:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1784,
										"nodeType": "Block",
										"src": "3605:154:10",
										"statements": [
											{
												"assignments": [
													1770,
													1772
												],
												"declarations": [
													{
														"constant": false,
														"id": 1770,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3621:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1784,
														"src": "3616:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1769,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3616:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1772,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3643:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1784,
														"src": "3630:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1771,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3630:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1777,
												"initialValue": {
													"arguments": [
														{
															"id": 1775,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1764,
															"src": "3675:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1773,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1762,
															"src": "3657:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1774,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3664:10:10",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3657:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:23:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3615:65:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1779,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1762,
															"src": "3724:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1780,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1770,
															"src": "3732:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1781,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1772,
															"src": "3741:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1778,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1851,
														"src": "3697:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1768,
												"id": 1783,
												"nodeType": "Return",
												"src": "3690:62:10"
											}
										]
									},
									"documentation": {
										"id": 1760,
										"nodeType": "StructuredDocumentation",
										"src": "3372:128:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3514:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3541:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "3533:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3562:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "3549:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1763,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3549:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:35:10"
									},
									"returnParameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "3591:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1766,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3591:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:14:10"
									},
									"scope": 1894,
									"src": "3505:254:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1810,
										"nodeType": "Block",
										"src": "3997:156:10",
										"statements": [
											{
												"assignments": [
													1796,
													1798
												],
												"declarations": [
													{
														"constant": false,
														"id": 1796,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4013:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1810,
														"src": "4008:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1795,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4008:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1798,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4035:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1810,
														"src": "4022:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1797,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4022:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1803,
												"initialValue": {
													"arguments": [
														{
															"id": 1801,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1790,
															"src": "4069:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1799,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1788,
															"src": "4049:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1800,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4056:12:10",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4049:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4049:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4007:67:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1805,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1788,
															"src": "4118:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1806,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1796,
															"src": "4126:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1807,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1798,
															"src": "4135:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1804,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1851,
														"src": "4091:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4091:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1794,
												"id": 1809,
												"nodeType": "Return",
												"src": "4084:62:10"
											}
										]
									},
									"documentation": {
										"id": 1786,
										"nodeType": "StructuredDocumentation",
										"src": "3765:130:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3909:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3938:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "3930:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3959:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "3946:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1789,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3946:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3929:35:10"
									},
									"returnParameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "3983:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1792,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3983:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:14:10"
									},
									"scope": 1894,
									"src": "3900:253:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1850,
										"nodeType": "Block",
										"src": "4579:424:10",
										"statements": [
											{
												"condition": {
													"id": 1824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4593:8:10",
													"subExpression": {
														"id": 1823,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1816,
														"src": "4594:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1848,
													"nodeType": "Block",
													"src": "4653:344:10",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1830,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1818,
																			"src": "4841:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4852:6:10",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4841:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4862:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4841:22:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1834,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1814,
																				"src": "4867:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1835,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4874:4:10",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4867:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4879:6:10",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4867:18:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4889:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4867:23:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4841:49:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1845,
															"nodeType": "IfStatement",
															"src": "4837:119:10",
															"trueBody": {
																"id": 1844,
																"nodeType": "Block",
																"src": "4892:64:10",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1841,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1814,
																					"src": "4934:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1840,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1645,
																				"src": "4917:16:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1842,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4917:24:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1843,
																		"nodeType": "RevertStatement",
																		"src": "4910:31:10"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1846,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1818,
																"src": "4976:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1822,
															"id": 1847,
															"nodeType": "Return",
															"src": "4969:17:10"
														}
													]
												},
												"id": 1849,
												"nodeType": "IfStatement",
												"src": "4589:408:10",
												"trueBody": {
													"id": 1829,
													"nodeType": "Block",
													"src": "4603:44:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1826,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1818,
																		"src": "4625:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1825,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1893,
																	"src": "4617:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1827,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4617:19:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1828,
															"nodeType": "ExpressionStatement",
															"src": "4617:19:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1812,
										"nodeType": "StructuredDocumentation",
										"src": "4159:257:10",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 1851,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4430:26:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4474:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "4466:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4495:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "4490:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1815,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4490:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4525:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "4512:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1817,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4512:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:85:10"
									},
									"returnParameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "4565:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1820,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4565:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:14:10"
									},
									"scope": 1894,
									"src": "4421:582:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1872,
										"nodeType": "Block",
										"src": "5307:122:10",
										"statements": [
											{
												"condition": {
													"id": 1862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5321:8:10",
													"subExpression": {
														"id": 1861,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1854,
														"src": "5322:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1870,
													"nodeType": "Block",
													"src": "5381:42:10",
													"statements": [
														{
															"expression": {
																"id": 1868,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1856,
																"src": "5402:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1860,
															"id": 1869,
															"nodeType": "Return",
															"src": "5395:17:10"
														}
													]
												},
												"id": 1871,
												"nodeType": "IfStatement",
												"src": "5317:106:10",
												"trueBody": {
													"id": 1867,
													"nodeType": "Block",
													"src": "5331:44:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1864,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1856,
																		"src": "5353:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1863,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1893,
																	"src": "5345:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1865,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5345:19:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1866,
															"nodeType": "ExpressionStatement",
															"src": "5345:19:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1852,
										"nodeType": "StructuredDocumentation",
										"src": "5009:191:10",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 1873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5214:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1854,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5236:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "5231:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1853,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5231:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5258:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "5245:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1855,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5245:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:39:10"
									},
									"returnParameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "5293:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1858,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5293:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5292:14:10"
									},
									"scope": 1894,
									"src": "5205:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1892,
										"nodeType": "Block",
										"src": "5598:432:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1879,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1876,
															"src": "5674:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1880,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5685:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5674:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1881,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5694:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5674:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1890,
													"nodeType": "Block",
													"src": "5973:51:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1885,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1946,
																		"src": "5994:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1946_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6001:10:10",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1937,
																	"src": "5994:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5994:19:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1889,
															"nodeType": "RevertStatement",
															"src": "5987:26:10"
														}
													]
												},
												"id": 1891,
												"nodeType": "IfStatement",
												"src": "5670:354:10",
												"trueBody": {
													"id": 1884,
													"nodeType": "Block",
													"src": "5697:270:10",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5824:133:10",
																"nodeType": "YulBlock",
																"src": "5824:133:10",
																"statements": [
																	{
																		"nativeSrc": "5842:40:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5842:40:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5871:10:10",
																					"nodeType": "YulIdentifier",
																					"src": "5871:10:10"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5865:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5865:5:10"
																			},
																			"nativeSrc": "5865:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5865:17:10"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5846:15:10",
																				"nodeType": "YulTypedName",
																				"src": "5846:15:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5910:2:10",
																							"nodeType": "YulLiteral",
																							"src": "5910:2:10",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5914:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "5914:10:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5906:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "5906:3:10"
																					},
																					"nativeSrc": "5906:19:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5906:19:10"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5927:15:10",
																					"nodeType": "YulIdentifier",
																					"src": "5927:15:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5899:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5899:6:10"
																			},
																			"nativeSrc": "5899:44:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:44:10"
																		},
																		"nativeSrc": "5899:44:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:44:10"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1876,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5871:10:10",
																	"valueSize": 1
																},
																{
																	"declaration": 1876,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5914:10:10",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 1883,
															"nodeType": "InlineAssembly",
															"src": "5799:158:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1874,
										"nodeType": "StructuredDocumentation",
										"src": "5435:103:10",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 1893,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5552:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5573:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1893,
												"src": "5560:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1875,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5560:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5559:25:10"
									},
									"returnParameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5598:0:10"
									},
									"scope": 1894,
									"src": "5543:487:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1895,
							"src": "233:5799:10",
							"usedErrors": [
								1645
							],
							"usedEvents": []
						}
					],
					"src": "101:5932:10"
				},
				"id": 10
			},
			"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1924
						]
					},
					"id": 1925,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1896,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:11"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1897,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:11",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1924,
							"linearizedBaseContracts": [
								1924
							],
							"name": "Context",
							"nameLocation": "642:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1905,
										"nodeType": "Block",
										"src": "718:34:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1902,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:11",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1901,
												"id": 1904,
												"nodeType": "Return",
												"src": "728:17:11"
											}
										]
									},
									"id": 1906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:11"
									},
									"returnParameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1906,
												"src": "709:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:11"
									},
									"scope": 1924,
									"src": "656:96:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1914,
										"nodeType": "Block",
										"src": "825:32:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:11",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1910,
												"id": 1913,
												"nodeType": "Return",
												"src": "835:15:11"
											}
										]
									},
									"id": 1915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:11"
									},
									"returnParameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "809:14:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1908,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:11"
									},
									"scope": 1924,
									"src": "758:99:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1922,
										"nodeType": "Block",
										"src": "935:25:11",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1920,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1919,
												"id": 1921,
												"nodeType": "Return",
												"src": "945:8:11"
											}
										]
									},
									"id": 1923,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:11"
									},
									"returnParameters": {
										"id": 1919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1923,
												"src": "926:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:11"
									},
									"scope": 1924,
									"src": "863:97:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1925,
							"src": "624:338:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:11"
				},
				"id": 11
			},
			"lib/openzeppelin-contracts/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							1946
						]
					},
					"id": 1947,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1926,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1927,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:12",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1946,
							"linearizedBaseContracts": [
								1946
							],
							"name": "Errors",
							"nameLocation": "419:6:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1928,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:12",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 1934,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "557:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "574:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:12"
									},
									"src": "531:59:12"
								},
								{
									"documentation": {
										"id": 1935,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:12",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 1937,
									"name": "FailedCall",
									"nameLocation": "696:10:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:12"
									},
									"src": "690:19:12"
								},
								{
									"documentation": {
										"id": 1938,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:12",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 1940,
									"name": "FailedDeployment",
									"nameLocation": "772:16:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:12"
									},
									"src": "766:25:12"
								},
								{
									"documentation": {
										"id": 1941,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:12",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 1945,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "884:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:12"
									},
									"src": "860:33:12"
								}
							],
							"scope": 1947,
							"src": "411:484:12",
							"usedErrors": [
								1934,
								1937,
								1940,
								1945
							],
							"usedEvents": []
						}
					],
					"src": "100:796:12"
				},
				"id": 12
			},
			"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							2015
						]
					},
					"id": 2016,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1948,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:13"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1949,
								"nodeType": "StructuredDocumentation",
								"src": "135:894:13",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 2015,
							"linearizedBaseContracts": [
								2015
							],
							"name": "ReentrancyGuard",
							"nameLocation": "1048:15:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1952,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1843:11:13",
									"nodeType": "VariableDeclaration",
									"scope": 2015,
									"src": "1818:40:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1950,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1818:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1951,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1857:1:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1955,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1889:7:13",
									"nodeType": "VariableDeclaration",
									"scope": 2015,
									"src": "1864:36:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1953,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1864:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1954,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1899:1:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1957,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1923:7:13",
									"nodeType": "VariableDeclaration",
									"scope": 2015,
									"src": "1907:23:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1956,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1907:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1958,
										"nodeType": "StructuredDocumentation",
										"src": "1937:52:13",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 1960,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "2000:28:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:13"
									},
									"src": "1994:37:13"
								},
								{
									"body": {
										"id": 1967,
										"nodeType": "Block",
										"src": "2051:38:13",
										"statements": [
											{
												"expression": {
													"id": 1965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1963,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1957,
														"src": "2061:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1964,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1952,
														"src": "2071:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2061:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1966,
												"nodeType": "ExpressionStatement",
												"src": "2061:21:13"
											}
										]
									},
									"id": 1968,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1961,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2048:2:13"
									},
									"returnParameters": {
										"id": 1962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2051:0:13"
									},
									"scope": 2015,
									"src": "2037:52:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1978,
										"nodeType": "Block",
										"src": "2490:79:13",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1971,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1995,
														"src": "2500:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2500:21:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1973,
												"nodeType": "ExpressionStatement",
												"src": "2500:21:13"
											},
											{
												"id": 1974,
												"nodeType": "PlaceholderStatement",
												"src": "2531:1:13"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1975,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2003,
														"src": "2542:18:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2542:20:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1977,
												"nodeType": "ExpressionStatement",
												"src": "2542:20:13"
											}
										]
									},
									"documentation": {
										"id": 1969,
										"nodeType": "StructuredDocumentation",
										"src": "2095:366:13",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 1979,
									"name": "nonReentrant",
									"nameLocation": "2475:12:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2487:2:13"
									},
									"src": "2466:103:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1994,
										"nodeType": "Block",
										"src": "2614:268:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1982,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1957,
														"src": "2702:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1983,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1955,
														"src": "2713:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2702:18:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1989,
												"nodeType": "IfStatement",
												"src": "2698:86:13",
												"trueBody": {
													"id": 1988,
													"nodeType": "Block",
													"src": "2722:62:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1985,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1960,
																	"src": "2743:28:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2743:30:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1987,
															"nodeType": "RevertStatement",
															"src": "2736:37:13"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1990,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1957,
														"src": "2858:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1991,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1955,
														"src": "2868:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2858:17:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1993,
												"nodeType": "ExpressionStatement",
												"src": "2858:17:13"
											}
										]
									},
									"id": 1995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2584:19:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2603:2:13"
									},
									"returnParameters": {
										"id": 1981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2614:0:13"
									},
									"scope": 2015,
									"src": "2575:307:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2002,
										"nodeType": "Block",
										"src": "2926:170:13",
										"statements": [
											{
												"expression": {
													"id": 2000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1998,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1957,
														"src": "3068:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1999,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1952,
														"src": "3078:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3068:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2001,
												"nodeType": "ExpressionStatement",
												"src": "3068:21:13"
											}
										]
									},
									"id": 2003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2897:18:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1996,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2915:2:13"
									},
									"returnParameters": {
										"id": 1997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2926:0:13"
									},
									"scope": 2015,
									"src": "2888:208:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2013,
										"nodeType": "Block",
										"src": "3339:42:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2009,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1957,
														"src": "3356:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 2010,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1955,
														"src": "3367:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3356:18:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2008,
												"id": 2012,
												"nodeType": "Return",
												"src": "3349:25:13"
											}
										]
									},
									"documentation": {
										"id": 2004,
										"nodeType": "StructuredDocumentation",
										"src": "3102:168:13",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 2014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3284:23:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2005,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3307:2:13"
									},
									"returnParameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2007,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "3333:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2006,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3333:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:6:13"
									},
									"scope": 2015,
									"src": "3275:106:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2016,
							"src": "1030:2353:13",
							"usedErrors": [
								1960
							],
							"usedEvents": []
						}
					],
					"src": "109:3275:13"
				},
				"id": 13
			},
			"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2039
						],
						"IERC165": [
							2051
						]
					},
					"id": 2040,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2017,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:14"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2019,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2040,
							"sourceUnit": 2052,
							"src": "140:38:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2018,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2051,
										"src": "148:7:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2021,
										"name": "IERC165",
										"nameLocations": [
											"688:7:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2051,
										"src": "688:7:14"
									},
									"id": 2022,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:14"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2020,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:14",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2039,
							"linearizedBaseContracts": [
								2039,
								2051
							],
							"name": "ERC165",
							"nameLocation": "678:6:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2050
									],
									"body": {
										"id": 2037,
										"nodeType": "Block",
										"src": "845:64:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2030,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2025,
														"src": "862:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2032,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2051,
																	"src": "882:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2051_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2051_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2031,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2033,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2051",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2034,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:14",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2029,
												"id": 2036,
												"nodeType": "Return",
												"src": "855:47:14"
											}
										]
									},
									"documentation": {
										"id": 2023,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:14",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2025,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "790:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2024,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:14"
									},
									"returnParameters": {
										"id": 2029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2028,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "839:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2027,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:14"
									},
									"scope": 2039,
									"src": "763:146:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2040,
							"src": "660:251:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:14"
				},
				"id": 14
			},
			"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2051
						]
					},
					"id": 2052,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2041,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2042,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:15",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2051,
							"linearizedBaseContracts": [
								2051
							],
							"name": "IERC165",
							"nameLocation": "432:7:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2043,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:15",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2050,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "818:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2044,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:15"
									},
									"returnParameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "861:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2047,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:15"
									},
									"scope": 2051,
									"src": "791:76:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2052,
							"src": "422:447:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:15"
				},
				"id": 15
			},
			"src/token.sol": {
				"ast": {
					"absolutePath": "src/token.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"ERC20": [
							1120
						],
						"EqualFiToken": [
							2791
						],
						"IERC20": [
							1198
						],
						"ReentrancyGuard": [
							2015
						],
						"SafeERC20": [
							1635
						]
					},
					"id": 2792,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2053,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:16"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 2055,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2792,
							"sourceUnit": 296,
							"src": "61:81:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2054,
										"name": "AccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 295,
										"src": "70:13:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 2057,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2792,
							"sourceUnit": 1121,
							"src": "143:70:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2056,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1120,
										"src": "152:5:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 2059,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2792,
							"sourceUnit": 1636,
							"src": "214:84:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2058,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1635,
										"src": "223:9:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2061,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2792,
							"sourceUnit": 1199,
							"src": "299:72:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2060,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1198,
										"src": "308:6:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"id": 2063,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2792,
							"sourceUnit": 2016,
							"src": "372:84:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2062,
										"name": "ReentrancyGuard",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2015,
										"src": "381:15:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2065,
										"name": "ERC20",
										"nameLocations": [
											"793:5:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1120,
										"src": "793:5:16"
									},
									"id": 2066,
									"nodeType": "InheritanceSpecifier",
									"src": "793:5:16"
								},
								{
									"baseName": {
										"id": 2067,
										"name": "AccessControl",
										"nameLocations": [
											"800:13:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "800:13:16"
									},
									"id": 2068,
									"nodeType": "InheritanceSpecifier",
									"src": "800:13:16"
								},
								{
									"baseName": {
										"id": 2069,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"815:15:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2015,
										"src": "815:15:16"
									},
									"id": 2070,
									"nodeType": "InheritanceSpecifier",
									"src": "815:15:16"
								}
							],
							"canonicalName": "EqualFiToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2064,
								"nodeType": "StructuredDocumentation",
								"src": "458:309:16",
								"text": " @title EqualFiToken\n @dev This contract implements an ERC20 token with additional features such as minting, burning, pausing, \n      supply capping, and transfer fee mechanisms. It uses role-based access control for administrative functions \n      and is protected against reentrancy attacks."
							},
							"fullyImplemented": true,
							"id": 2791,
							"linearizedBaseContracts": [
								2791,
								2015,
								295,
								2039,
								2051,
								378,
								1120,
								510,
								1224,
								1198,
								1924
							],
							"name": "EqualFiToken",
							"nameLocation": "777:12:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2074,
									"libraryName": {
										"id": 2071,
										"name": "SafeERC20",
										"nameLocations": [
											"844:9:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1635,
										"src": "844:9:16"
									},
									"nodeType": "UsingForDirective",
									"src": "838:27:16",
									"typeName": {
										"id": 2073,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2072,
											"name": "IERC20",
											"nameLocations": [
												"858:6:16"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1198,
											"src": "858:6:16"
										},
										"referencedDeclaration": 1198,
										"src": "858:6:16",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1198",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": true,
									"documentation": {
										"id": 2075,
										"nodeType": "StructuredDocumentation",
										"src": "939:50:16",
										"text": "@notice Role identifier for minting new tokens"
									},
									"functionSelector": "8ebed5b1",
									"id": 2080,
									"mutability": "constant",
									"name": "_MINT",
									"nameLocation": "1018:5:16",
									"nodeType": "VariableDeclaration",
									"scope": 2791,
									"src": "994:50:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2076,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "994:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5f4d494e54",
												"id": 2078,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1036:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8c66330d9d4f6aba064f25ef2a307366ea6d917616f44c075aa60fa15e5cb1cb",
													"typeString": "literal_string \"_MINT\""
												},
												"value": "_MINT"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8c66330d9d4f6aba064f25ef2a307366ea6d917616f44c075aa60fa15e5cb1cb",
													"typeString": "literal_string \"_MINT\""
												}
											],
											"id": 2077,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1026:9:16",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2079,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1026:18:16",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2081,
										"nodeType": "StructuredDocumentation",
										"src": "1051:68:16",
										"text": "@notice Role identifier for minting tokens to specific addresses"
									},
									"functionSelector": "7e92a7fd",
									"id": 2086,
									"mutability": "constant",
									"name": "_MINTTO",
									"nameLocation": "1148:7:16",
									"nodeType": "VariableDeclaration",
									"scope": 2791,
									"src": "1124:54:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2082,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1124:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5f4d494e54544f",
												"id": 2084,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1168:9:16",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_7d800f56a05adcb6245df540492a560d0e668aac15ee6c7dd40668064913da33",
													"typeString": "literal_string \"_MINTTO\""
												},
												"value": "_MINTTO"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_7d800f56a05adcb6245df540492a560d0e668aac15ee6c7dd40668064913da33",
													"typeString": "literal_string \"_MINTTO\""
												}
											],
											"id": 2083,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1158:9:16",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2085,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1158:20:16",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2087,
										"nodeType": "StructuredDocumentation",
										"src": "1185:46:16",
										"text": "@notice Role identifier for burning tokens"
									},
									"functionSelector": "53a4c31e",
									"id": 2092,
									"mutability": "constant",
									"name": "_BURN",
									"nameLocation": "1260:5:16",
									"nodeType": "VariableDeclaration",
									"scope": 2791,
									"src": "1236:50:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2088,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1236:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5f4255524e",
												"id": 2090,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1278:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_9edfad36e7d4d9da54b4f78f22bf97cb5b58bb7998294a4288da41c15c647c45",
													"typeString": "literal_string \"_BURN\""
												},
												"value": "_BURN"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_9edfad36e7d4d9da54b4f78f22bf97cb5b58bb7998294a4288da41c15c647c45",
													"typeString": "literal_string \"_BURN\""
												}
											],
											"id": 2089,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1268:9:16",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2091,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1268:18:16",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2093,
										"nodeType": "StructuredDocumentation",
										"src": "1293:70:16",
										"text": "@notice Role identifier for burning tokens from specific addresses"
									},
									"functionSelector": "6ba77a38",
									"id": 2098,
									"mutability": "constant",
									"name": "_BURNFROM",
									"nameLocation": "1392:9:16",
									"nodeType": "VariableDeclaration",
									"scope": 2791,
									"src": "1368:58:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2094,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1368:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5f4255524e46524f4d",
												"id": 2096,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1414:11:16",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_c8a3befa5973ff6e159afc769978d92f26bae29c51a73d11c9112a05b68d25e6",
													"typeString": "literal_string \"_BURNFROM\""
												},
												"value": "_BURNFROM"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_c8a3befa5973ff6e159afc769978d92f26bae29c51a73d11c9112a05b68d25e6",
													"typeString": "literal_string \"_BURNFROM\""
												}
											],
											"id": 2095,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1404:9:16",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2097,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1404:22:16",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2099,
										"nodeType": "StructuredDocumentation",
										"src": "1433:56:16",
										"text": "@notice Role identifier for modifying the supply cap"
									},
									"functionSelector": "ea5cb532",
									"id": 2104,
									"mutability": "constant",
									"name": "_SUPPLY",
									"nameLocation": "1518:7:16",
									"nodeType": "VariableDeclaration",
									"scope": 2791,
									"src": "1494:54:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2100,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1494:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5f535550504c59",
												"id": 2102,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1538:9:16",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_ea4defabeb90fa1e79f929d6c8d482fee8a115926a592b79634d39a67cce3b62",
													"typeString": "literal_string \"_SUPPLY\""
												},
												"value": "_SUPPLY"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_ea4defabeb90fa1e79f929d6c8d482fee8a115926a592b79634d39a67cce3b62",
													"typeString": "literal_string \"_SUPPLY\""
												}
											],
											"id": 2101,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1528:9:16",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2103,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1528:20:16",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2105,
										"nodeType": "StructuredDocumentation",
										"src": "1555:52:16",
										"text": "@notice Role identifier for administrative tasks"
									},
									"functionSelector": "51557289",
									"id": 2110,
									"mutability": "constant",
									"name": "_ADMIN",
									"nameLocation": "1636:6:16",
									"nodeType": "VariableDeclaration",
									"scope": 2791,
									"src": "1612:52:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2106,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1612:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5f41444d494e",
												"id": 2108,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1655:8:16",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_ae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d3",
													"typeString": "literal_string \"_ADMIN\""
												},
												"value": "_ADMIN"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_ae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d3",
													"typeString": "literal_string \"_ADMIN\""
												}
											],
											"id": 2107,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1645:9:16",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2109,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1645:19:16",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2111,
										"nodeType": "StructuredDocumentation",
										"src": "1671:57:16",
										"text": "@notice Role identifier for rescuing tokens and Ether"
									},
									"functionSelector": "8d580b9f",
									"id": 2116,
									"mutability": "constant",
									"name": "_RESCUE",
									"nameLocation": "1757:7:16",
									"nodeType": "VariableDeclaration",
									"scope": 2791,
									"src": "1733:54:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2112,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1733:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5f524553435545",
												"id": 2114,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1777:9:16",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_508f8f8be8f5dbcb88f4f4500430b8b3684c471ed936f31fea912c78ad46a6b9",
													"typeString": "literal_string \"_RESCUE\""
												},
												"value": "_RESCUE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_508f8f8be8f5dbcb88f4f4500430b8b3684c471ed936f31fea912c78ad46a6b9",
													"typeString": "literal_string \"_RESCUE\""
												}
											],
											"id": 2113,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1767:9:16",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2115,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1767:20:16",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 2117,
										"nodeType": "StructuredDocumentation",
										"src": "1875:44:16",
										"text": "@notice Maximum supply cap for the token"
									},
									"functionSelector": "060cf4e8",
									"id": 2119,
									"mutability": "mutable",
									"name": "_cap",
									"nameLocation": "1936:4:16",
									"nodeType": "VariableDeclaration",
									"scope": 2791,
									"src": "1924:16:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2118,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1924:4:16",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 2120,
										"nodeType": "StructuredDocumentation",
										"src": "1947:78:16",
										"text": "@notice Transaction fee for transfers (0.005 tokens, assuming 18 decimals)"
									},
									"functionSelector": "cf820461",
									"id": 2123,
									"mutability": "mutable",
									"name": "txFee",
									"nameLocation": "2042:5:16",
									"nodeType": "VariableDeclaration",
									"scope": 2791,
									"src": "2030:24:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2121,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "2030:4:16",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35653135",
										"id": 2122,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2050:4:16",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000000000000000_by_1",
											"typeString": "int_const 5000000000000000"
										},
										"value": "5e15"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 2124,
										"nodeType": "StructuredDocumentation",
										"src": "2061:51:16",
										"text": "@notice Flag to pause the contract's operations"
									},
									"functionSelector": "5c975abb",
									"id": 2126,
									"mutability": "mutable",
									"name": "paused",
									"nameLocation": "2129:6:16",
									"nodeType": "VariableDeclaration",
									"scope": 2791,
									"src": "2117:18:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2125,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2117:4:16",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 2127,
										"nodeType": "StructuredDocumentation",
										"src": "2142:35:16",
										"text": "@notice Flag to disable minting"
									},
									"functionSelector": "956feccf",
									"id": 2129,
									"mutability": "mutable",
									"name": "mintDisabled",
									"nameLocation": "2194:12:16",
									"nodeType": "VariableDeclaration",
									"scope": 2791,
									"src": "2182:24:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2128,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2182:4:16",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 2130,
										"nodeType": "StructuredDocumentation",
										"src": "2213:57:16",
										"text": "@notice Flag to disable minting to specific addresses"
									},
									"functionSelector": "d1c9f69b",
									"id": 2132,
									"mutability": "mutable",
									"name": "mintToDisabled",
									"nameLocation": "2287:14:16",
									"nodeType": "VariableDeclaration",
									"scope": 2791,
									"src": "2275:26:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2131,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2275:4:16",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2133,
										"nodeType": "StructuredDocumentation",
										"src": "2381:42:16",
										"text": "@notice Emitted when tokens are minted"
									},
									"eventSelector": "772f66a00a405709c30e7f18feadcc8f123b20c09c7260165d3eec36c9f21372",
									"id": 2137,
									"name": "TokensMinted",
									"nameLocation": "2434:12:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2135,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2452:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "2447:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2134,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2447:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2446:14:16"
									},
									"src": "2428:33:16"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2138,
										"nodeType": "StructuredDocumentation",
										"src": "2467:64:16",
										"text": "@notice Emitted when tokens are minted to a specific address"
									},
									"eventSelector": "e98063832b4ff0356868961b75f7f49b096b14ea066c9725301ad197f2f63147",
									"id": 2144,
									"name": "TokensMintedTo",
									"nameLocation": "2542:14:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2140,
												"indexed": false,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "2565:3:16",
												"nodeType": "VariableDeclaration",
												"scope": 2144,
												"src": "2557:11:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2557:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2142,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2575:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2144,
												"src": "2570:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2141,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2570:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2556:27:16"
									},
									"src": "2536:48:16"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2145,
										"nodeType": "StructuredDocumentation",
										"src": "2590:68:16",
										"text": "@notice Emitted when tokens are burned from the caller's balance"
									},
									"eventSelector": "63706707d038997d2210eb026bb1339397deab463921538a81bb98e69ee54ca8",
									"id": 2151,
									"name": "TokensBurned",
									"nameLocation": "2669:12:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2147,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2687:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "2682:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2146,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2682:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2149,
												"indexed": false,
												"mutability": "mutable",
												"name": "_burner",
												"nameLocation": "2704:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "2696:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2696:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2681:31:16"
									},
									"src": "2663:50:16"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2152,
										"nodeType": "StructuredDocumentation",
										"src": "2719:66:16",
										"text": "@notice Emitted when tokens are burned from a specific address"
									},
									"eventSelector": "e419ce2aab145a1feaf5893bb6a9478f9282415bbd81c76d5cfff2d4f13431dd",
									"id": 2160,
									"name": "TokensBurnedFrom",
									"nameLocation": "2796:16:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2154,
												"indexed": false,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "2821:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2160,
												"src": "2813:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2156,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2833:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2160,
												"src": "2828:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2155,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2828:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2158,
												"indexed": false,
												"mutability": "mutable",
												"name": "_burner",
												"nameLocation": "2850:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2160,
												"src": "2842:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2842:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:46:16"
									},
									"src": "2790:69:16"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2161,
										"nodeType": "StructuredDocumentation",
										"src": "2865:50:16",
										"text": "@notice Emitted when the supply cap is changed"
									},
									"eventSelector": "a11cbdeb4d62442fae7c8ec6286585b17c47acb7b17bbcab1beadce84befa300",
									"id": 2167,
									"name": "SupplyCapChanged",
									"nameLocation": "2926:16:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2163,
												"indexed": false,
												"mutability": "mutable",
												"name": "_newCap",
												"nameLocation": "2948:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "2943:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2162,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2943:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2165,
												"indexed": false,
												"mutability": "mutable",
												"name": "_changedBy",
												"nameLocation": "2965:10:16",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "2957:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2957:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2942:34:16"
									},
									"src": "2920:57:16"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2168,
										"nodeType": "StructuredDocumentation",
										"src": "2983:47:16",
										"text": "@notice Emitted when the contract is paused"
									},
									"eventSelector": "d8c9c5623123df8e137854c59a08f9084b75609fe24584228d44ffdce5ab920a",
									"id": 2174,
									"name": "ContractPaused",
									"nameLocation": "3041:14:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2170,
												"indexed": false,
												"mutability": "mutable",
												"name": "_blockHeight",
												"nameLocation": "3061:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2174,
												"src": "3056:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2169,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3056:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2172,
												"indexed": false,
												"mutability": "mutable",
												"name": "_pausedBy",
												"nameLocation": "3083:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2174,
												"src": "3075:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3075:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3055:38:16"
									},
									"src": "3035:59:16"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2175,
										"nodeType": "StructuredDocumentation",
										"src": "3100:49:16",
										"text": "@notice Emitted when the contract is unpaused"
									},
									"eventSelector": "1e7a7234ad01ed7353bf129217f5c162773639a6cb22773e84bcd5a2b0ef362e",
									"id": 2181,
									"name": "ContractUnpaused",
									"nameLocation": "3160:16:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2177,
												"indexed": false,
												"mutability": "mutable",
												"name": "_blockHeight",
												"nameLocation": "3182:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "3177:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2176,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3177:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2179,
												"indexed": false,
												"mutability": "mutable",
												"name": "_unpausedBy",
												"nameLocation": "3204:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "3196:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:40:16"
									},
									"src": "3154:63:16"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2182,
										"nodeType": "StructuredDocumentation",
										"src": "3223:43:16",
										"text": "@notice Emitted when minting is enabled"
									},
									"eventSelector": "98e05482fdb38df5eb461fb932fa6e1af90a3569939ce5a8d92d699b102d6402",
									"id": 2188,
									"name": "MintingEnabled",
									"nameLocation": "3277:14:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2184,
												"indexed": false,
												"mutability": "mutable",
												"name": "_blockHeight",
												"nameLocation": "3297:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2188,
												"src": "3292:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2183,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3292:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2186,
												"indexed": false,
												"mutability": "mutable",
												"name": "_enabledBy",
												"nameLocation": "3319:10:16",
												"nodeType": "VariableDeclaration",
												"scope": 2188,
												"src": "3311:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3311:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3291:39:16"
									},
									"src": "3271:60:16"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2189,
										"nodeType": "StructuredDocumentation",
										"src": "3337:44:16",
										"text": "@notice Emitted when minting is disabled"
									},
									"eventSelector": "5668502ca8e7b393c09d1dac964ca45a27870a78d7ba212b7a189450897ca05f",
									"id": 2195,
									"name": "MintingDisabled",
									"nameLocation": "3392:15:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2191,
												"indexed": false,
												"mutability": "mutable",
												"name": "_blockHeight",
												"nameLocation": "3413:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "3408:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2190,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3408:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2193,
												"indexed": false,
												"mutability": "mutable",
												"name": "_disabledBy",
												"nameLocation": "3435:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "3427:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3427:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3407:40:16"
									},
									"src": "3386:62:16"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2196,
										"nodeType": "StructuredDocumentation",
										"src": "3454:65:16",
										"text": "@notice Emitted when minting to specific addresses is enabled"
									},
									"eventSelector": "41606e1dcee38320f9edbfcd642aeaa81bb2140c705de9d4a7814024a1e9a314",
									"id": 2202,
									"name": "MintingToEnabled",
									"nameLocation": "3530:16:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2198,
												"indexed": false,
												"mutability": "mutable",
												"name": "_blockHeight",
												"nameLocation": "3552:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2202,
												"src": "3547:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2197,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3547:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2200,
												"indexed": false,
												"mutability": "mutable",
												"name": "_enabledBy",
												"nameLocation": "3574:10:16",
												"nodeType": "VariableDeclaration",
												"scope": 2202,
												"src": "3566:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3546:39:16"
									},
									"src": "3524:62:16"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2203,
										"nodeType": "StructuredDocumentation",
										"src": "3592:66:16",
										"text": "@notice Emitted when minting to specific addresses is disabled"
									},
									"eventSelector": "218e25f0a7435729f5a66aae50a9ed0084535a0080300c1c2e8366d8df7136ed",
									"id": 2209,
									"name": "MintingToDisabled",
									"nameLocation": "3669:17:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2205,
												"indexed": false,
												"mutability": "mutable",
												"name": "_blockHeight",
												"nameLocation": "3692:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2209,
												"src": "3687:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2204,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3687:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2207,
												"indexed": false,
												"mutability": "mutable",
												"name": "_disabledBy",
												"nameLocation": "3714:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2209,
												"src": "3706:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3706:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3686:40:16"
									},
									"src": "3663:64:16"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2210,
										"nodeType": "StructuredDocumentation",
										"src": "3733:59:16",
										"text": "@notice Emitted when Ether is rescued from the contract"
									},
									"eventSelector": "3b1c0368c81e47d03164182dc6f9fcf4f5e4b3bd9462d74960d729f73138ce36",
									"id": 2218,
									"name": "ETHRescued",
									"nameLocation": "3803:10:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2212,
												"indexed": false,
												"mutability": "mutable",
												"name": "_dest",
												"nameLocation": "3822:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "3814:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3814:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2214,
												"indexed": false,
												"mutability": "mutable",
												"name": "_blockHeight",
												"nameLocation": "3834:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "3829:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2213,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3829:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2216,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3853:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "3848:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2215,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3848:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3813:48:16"
									},
									"src": "3797:65:16"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2219,
										"nodeType": "StructuredDocumentation",
										"src": "3868:67:16",
										"text": "@notice Emitted when ERC20 tokens are rescued from the contract"
									},
									"eventSelector": "494215f965756bbc8b7f57addd2a0ebdbce467a4999f8320c67adc1771885d7b",
									"id": 2230,
									"name": "ERC20Rescued",
									"nameLocation": "3946:12:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2222,
												"indexed": false,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "3966:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "3959:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1198",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2221,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2220,
														"name": "IERC20",
														"nameLocations": [
															"3959:6:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1198,
														"src": "3959:6:16"
													},
													"referencedDeclaration": 1198,
													"src": "3959:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1198",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2224,
												"indexed": false,
												"mutability": "mutable",
												"name": "_blockHeight",
												"nameLocation": "3979:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "3974:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2223,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3974:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2226,
												"indexed": false,
												"mutability": "mutable",
												"name": "_dest",
												"nameLocation": "4001:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "3993:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3993:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2228,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4013:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "4008:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2227,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4008:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3958:63:16"
									},
									"src": "3940:82:16"
								},
								{
									"constant": false,
									"documentation": {
										"id": 2231,
										"nodeType": "StructuredDocumentation",
										"src": "4099:64:16",
										"text": "@notice Mapping to track addresses exempt from transfer fees"
									},
									"functionSelector": "c30796ab",
									"id": 2235,
									"mutability": "mutable",
									"name": "whitelistedAddress",
									"nameLocation": "4200:18:16",
									"nodeType": "VariableDeclaration",
									"scope": 2791,
									"src": "4168:50:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 2234,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2232,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4176:7:16",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4168:24:16",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2233,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "4187:4:16",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2285,
										"nodeType": "Block",
										"src": "4541:589:16",
										"statements": [
											{
												"expression": {
													"id": 2245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2243,
														"name": "_cap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2119,
														"src": "4551:4:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31653235",
														"id": 2244,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4558:4:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000000000000000000000000_by_1",
															"typeString": "int_const 10000000000000000000000000"
														},
														"value": "1e25"
													},
													"src": "4551:11:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2246,
												"nodeType": "ExpressionStatement",
												"src": "4551:11:16"
											},
											{
												"expression": {
													"id": 2249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2247,
														"name": "mintDisabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2129,
														"src": "4641:12:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2248,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4656:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4641:20:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2250,
												"nodeType": "ExpressionStatement",
												"src": "4641:20:16"
											},
											{
												"expression": {
													"id": 2253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2251,
														"name": "mintToDisabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2132,
														"src": "4699:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2252,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4716:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4699:22:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2254,
												"nodeType": "ExpressionStatement",
												"src": "4699:22:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2256,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "4792:18:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2257,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1906,
																"src": "4812:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4812:12:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2255,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4781:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4781:44:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2260,
												"nodeType": "ExpressionStatement",
												"src": "4781:44:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2262,
															"name": "_ADMIN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2110,
															"src": "4894:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2263,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1906,
																"src": "4902:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4902:12:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2261,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4883:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4883:32:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2266,
												"nodeType": "ExpressionStatement",
												"src": "4883:32:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2268,
															"name": "_MINT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2080,
															"src": "4936:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2269,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1906,
																"src": "4943:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4943:12:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2267,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4925:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4925:31:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2272,
												"nodeType": "ExpressionStatement",
												"src": "4925:31:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2274,
															"name": "_BURN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2092,
															"src": "4977:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2275,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1906,
																"src": "4984:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4984:12:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2273,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4966:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:31:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2278,
												"nodeType": "ExpressionStatement",
												"src": "4966:31:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2280,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1906,
																"src": "5104:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:12:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "31653234",
															"id": 2282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5118:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000"
															},
															"value": "1e24"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000"
															}
														],
														"id": 2279,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "5098:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:25:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2284,
												"nodeType": "ExpressionStatement",
												"src": "5098:25:16"
											}
										]
									},
									"documentation": {
										"id": 2236,
										"nodeType": "StructuredDocumentation",
										"src": "4299:201:16",
										"text": " @dev Constructor that sets the token name, symbol, and initial minting.\n      It also grants necessary roles to the deployer and sets initial parameters such as the supply cap."
									},
									"id": 2286,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "546f6b656e",
													"id": 2239,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4525:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_1317f51c845ce3bfb7c268e5337a825f12f3d0af9584c2bbfbf4e64e314eaf73",
														"typeString": "literal_string \"Token\""
													},
													"value": "Token"
												},
												{
													"hexValue": "544b4e",
													"id": 2240,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4534:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_9ee187a325c80a9ca820b4f297a58770bf5a85fede3756f8e7e9d14ff37d7b66",
														"typeString": "literal_string \"TKN\""
													},
													"value": "TKN"
												}
											],
											"id": 2241,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2238,
												"name": "ERC20",
												"nameLocations": [
													"4519:5:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1120,
												"src": "4519:5:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "4519:21:16"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4516:2:16"
									},
									"returnParameters": {
										"id": 2242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4541:0:16"
									},
									"scope": 2791,
									"src": "4505:625:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2296,
										"nodeType": "Block",
										"src": "5339:76:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5357:7:16",
															"subExpression": {
																"id": 2290,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2126,
																"src": "5358:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e74726163743a20436f6e747261637420697320506175736564",
															"id": 2292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5366:30:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_14cda221cd50cc4488a50638b29b8104950f854aa06a190e98dcd3542f450149",
																"typeString": "literal_string \"Contract: Contract is Paused\""
															},
															"value": "Contract: Contract is Paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_14cda221cd50cc4488a50638b29b8104950f854aa06a190e98dcd3542f450149",
																"typeString": "literal_string \"Contract: Contract is Paused\""
															}
														],
														"id": 2289,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5349:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5349:48:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2294,
												"nodeType": "ExpressionStatement",
												"src": "5349:48:16"
											},
											{
												"id": 2295,
												"nodeType": "PlaceholderStatement",
												"src": "5407:1:16"
											}
										]
									},
									"documentation": {
										"id": 2287,
										"nodeType": "StructuredDocumentation",
										"src": "5212:105:16",
										"text": " @dev Modifier to ensure that the contract is not paused before executing the function."
									},
									"id": 2297,
									"name": "pause",
									"nameLocation": "5331:5:16",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5336:2:16"
									},
									"src": "5322:93:16",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2307,
										"nodeType": "Block",
										"src": "5551:70:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5569:13:16",
															"subExpression": {
																"id": 2301,
																"name": "mintDisabled",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2129,
																"src": "5570:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696e74696e672064697361626c6564",
															"id": 2303,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5584:18:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9dc314731a2c8965068716b51a74d383c5485fe34630c16f5621cb0575192124",
																"typeString": "literal_string \"Minting disabled\""
															},
															"value": "Minting disabled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9dc314731a2c8965068716b51a74d383c5485fe34630c16f5621cb0575192124",
																"typeString": "literal_string \"Minting disabled\""
															}
														],
														"id": 2300,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5561:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5561:42:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2305,
												"nodeType": "ExpressionStatement",
												"src": "5561:42:16"
											},
											{
												"id": 2306,
												"nodeType": "PlaceholderStatement",
												"src": "5613:1:16"
											}
										]
									},
									"documentation": {
										"id": 2298,
										"nodeType": "StructuredDocumentation",
										"src": "5425:102:16",
										"text": " @dev Modifier to ensure that minting is not disabled before executing the function."
									},
									"id": 2308,
									"name": "mintDis",
									"nameLocation": "5541:7:16",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5548:2:16"
									},
									"src": "5532:89:16",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2318,
										"nodeType": "Block",
										"src": "5781:75:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5799:15:16",
															"subExpression": {
																"id": 2312,
																"name": "mintToDisabled",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2132,
																"src": "5800:14:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696e74696e6720746f2064697361626c6564",
															"id": 2314,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5816:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ba2e9cd8d3fa598fea6366ddadf891a9cbec04b837294279cc52e9e496f33766",
																"typeString": "literal_string \"Minting to disabled\""
															},
															"value": "Minting to disabled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ba2e9cd8d3fa598fea6366ddadf891a9cbec04b837294279cc52e9e496f33766",
																"typeString": "literal_string \"Minting to disabled\""
															}
														],
														"id": 2311,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5791:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5791:47:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2316,
												"nodeType": "ExpressionStatement",
												"src": "5791:47:16"
											},
											{
												"id": 2317,
												"nodeType": "PlaceholderStatement",
												"src": "5848:1:16"
											}
										]
									},
									"documentation": {
										"id": 2309,
										"nodeType": "StructuredDocumentation",
										"src": "5631:124:16",
										"text": " @dev Modifier to ensure that minting to specific addresses is not disabled before executing the function."
									},
									"id": 2319,
									"name": "mintToDis",
									"nameLocation": "5769:9:16",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5778:2:16"
									},
									"src": "5760:96:16",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2350,
										"nodeType": "Block",
										"src": "6234:208:16",
										"statements": [
											{
												"expression": {
													"id": 2330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2328,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2126,
														"src": "6244:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2329,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2322,
														"src": "6253:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6244:16:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2331,
												"nodeType": "ExpressionStatement",
												"src": "6244:16:16"
											},
											{
												"condition": {
													"id": 2332,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2322,
													"src": "6275:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2348,
													"nodeType": "Block",
													"src": "6362:74:16",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2342,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "6398:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 2343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6404:6:16",
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "6398:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2344,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1906,
																			"src": "6412:10:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6412:12:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2341,
																	"name": "ContractUnpaused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2181,
																	"src": "6381:16:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (uint256,address)"
																	}
																},
																"id": 2346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6381:44:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2347,
															"nodeType": "EmitStatement",
															"src": "6376:49:16"
														}
													]
												},
												"id": 2349,
												"nodeType": "IfStatement",
												"src": "6271:165:16",
												"trueBody": {
													"id": 2340,
													"nodeType": "Block",
													"src": "6284:72:16",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2334,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "6318:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 2335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6324:6:16",
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "6318:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2336,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1906,
																			"src": "6332:10:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6332:12:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2333,
																	"name": "ContractPaused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2174,
																	"src": "6303:14:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (uint256,address)"
																	}
																},
																"id": 2338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6303:42:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2339,
															"nodeType": "EmitStatement",
															"src": "6298:47:16"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2320,
										"nodeType": "StructuredDocumentation",
										"src": "5944:226:16",
										"text": " @dev Function to pause or unpause the contract's operations. \n      Only callable by an admin.\n @param _paused Boolean indicating whether the contract should be paused (true) or unpaused (false)."
									},
									"functionSelector": "16c38b3c",
									"id": 2351,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2325,
													"name": "_ADMIN",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2110,
													"src": "6226:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2326,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2324,
												"name": "onlyRole",
												"nameLocations": [
													"6217:8:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "6217:8:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "6217:16:16"
										}
									],
									"name": "setPaused",
									"nameLocation": "6184:9:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2322,
												"mutability": "mutable",
												"name": "_paused",
												"nameLocation": "6199:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2351,
												"src": "6194:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2321,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6194:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6193:14:16"
									},
									"returnParameters": {
										"id": 2327,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6234:0:16"
									},
									"scope": 2791,
									"src": "6175:267:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2382,
										"nodeType": "Block",
										"src": "6734:229:16",
										"statements": [
											{
												"expression": {
													"id": 2362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2360,
														"name": "mintDisabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2129,
														"src": "6744:12:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2361,
														"name": "_disableMinting",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2354,
														"src": "6759:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6744:30:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2363,
												"nodeType": "ExpressionStatement",
												"src": "6744:30:16"
											},
											{
												"condition": {
													"id": 2364,
													"name": "_disableMinting",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2354,
													"src": "6789:15:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2380,
													"nodeType": "Block",
													"src": "6885:72:16",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2374,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "6919:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 2375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6925:6:16",
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "6919:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2376,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1906,
																			"src": "6933:10:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6933:12:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2373,
																	"name": "MintingEnabled",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2188,
																	"src": "6904:14:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (uint256,address)"
																	}
																},
																"id": 2378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6904:42:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2379,
															"nodeType": "EmitStatement",
															"src": "6899:47:16"
														}
													]
												},
												"id": 2381,
												"nodeType": "IfStatement",
												"src": "6785:172:16",
												"trueBody": {
													"id": 2372,
													"nodeType": "Block",
													"src": "6806:73:16",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2366,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "6841:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 2367,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6847:6:16",
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "6841:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2368,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1906,
																			"src": "6855:10:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6855:12:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2365,
																	"name": "MintingDisabled",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2195,
																	"src": "6825:15:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (uint256,address)"
																	}
																},
																"id": 2370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6825:43:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2371,
															"nodeType": "EmitStatement",
															"src": "6820:48:16"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2352,
										"nodeType": "StructuredDocumentation",
										"src": "6448:212:16",
										"text": " @dev Function to disable or enable minting.\n      Only callable by an admin.\n @param _disableMinting Boolean indicating whether minting should be disabled (true) or enabled (false)."
									},
									"functionSelector": "deb6db36",
									"id": 2383,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2357,
													"name": "_ADMIN",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2110,
													"src": "6726:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2358,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2356,
												"name": "onlyRole",
												"nameLocations": [
													"6717:8:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "6717:8:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "6717:16:16"
										}
									],
									"name": "disableMint",
									"nameLocation": "6674:11:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2354,
												"mutability": "mutable",
												"name": "_disableMinting",
												"nameLocation": "6691:15:16",
												"nodeType": "VariableDeclaration",
												"scope": 2383,
												"src": "6686:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2353,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6686:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6685:22:16"
									},
									"returnParameters": {
										"id": 2359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6734:0:16"
									},
									"scope": 2791,
									"src": "6665:298:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2414,
										"nodeType": "Block",
										"src": "7302:233:16",
										"statements": [
											{
												"expression": {
													"id": 2394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2392,
														"name": "mintToDisabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2132,
														"src": "7312:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2393,
														"name": "_disableMintTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2386,
														"src": "7329:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7312:31:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2395,
												"nodeType": "ExpressionStatement",
												"src": "7312:31:16"
											},
											{
												"condition": {
													"id": 2396,
													"name": "_disableMintTo",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2386,
													"src": "7358:14:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2412,
													"nodeType": "Block",
													"src": "7455:74:16",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2406,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "7491:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 2407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7497:6:16",
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "7491:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2408,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1906,
																			"src": "7505:10:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7505:12:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2405,
																	"name": "MintingToEnabled",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2202,
																	"src": "7474:16:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (uint256,address)"
																	}
																},
																"id": 2410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7474:44:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2411,
															"nodeType": "EmitStatement",
															"src": "7469:49:16"
														}
													]
												},
												"id": 2413,
												"nodeType": "IfStatement",
												"src": "7354:175:16",
												"trueBody": {
													"id": 2404,
													"nodeType": "Block",
													"src": "7374:75:16",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2398,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "7411:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 2399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7417:6:16",
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "7411:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2400,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1906,
																			"src": "7425:10:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7425:12:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2397,
																	"name": "MintingToDisabled",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2209,
																	"src": "7393:17:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (uint256,address)"
																	}
																},
																"id": 2402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7393:45:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2403,
															"nodeType": "EmitStatement",
															"src": "7388:50:16"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2384,
										"nodeType": "StructuredDocumentation",
										"src": "6972:255:16",
										"text": " @dev Function to disable or enable minting to specific addresses.\n      Only callable by an admin.\n @param _disableMintTo Boolean indicating whether minting to specific addresses should be disabled (true) or enabled (false)."
									},
									"functionSelector": "f2250d3d",
									"id": 2415,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2389,
													"name": "_ADMIN",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2110,
													"src": "7294:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2390,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2388,
												"name": "onlyRole",
												"nameLocations": [
													"7285:8:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "7285:8:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "7285:16:16"
										}
									],
									"name": "disableMintTo",
									"nameLocation": "7241:13:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2386,
												"mutability": "mutable",
												"name": "_disableMintTo",
												"nameLocation": "7260:14:16",
												"nodeType": "VariableDeclaration",
												"scope": 2415,
												"src": "7255:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2385,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7255:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7254:21:16"
									},
									"returnParameters": {
										"id": 2391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7302:0:16"
									},
									"scope": 2791,
									"src": "7232:303:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2444,
										"nodeType": "Block",
										"src": "7773:169:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2427,
																"name": "_supplyCap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2418,
																"src": "7791:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2428,
																	"name": "totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 693,
																	"src": "7805:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 2429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7805:13:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7791:27:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e74726163743a20537570706c792043617020746f6f206c6f77",
															"id": 2431,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7820:30:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_77e086eba60b2e28f8cf4f0f10149625654a071ad569481f91828ddb6b36141b",
																"typeString": "literal_string \"Contract: Supply Cap too low\""
															},
															"value": "Contract: Supply Cap too low"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_77e086eba60b2e28f8cf4f0f10149625654a071ad569481f91828ddb6b36141b",
																"typeString": "literal_string \"Contract: Supply Cap too low\""
															}
														],
														"id": 2426,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7783:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7783:68:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2433,
												"nodeType": "ExpressionStatement",
												"src": "7783:68:16"
											},
											{
												"expression": {
													"id": 2436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2434,
														"name": "_cap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2119,
														"src": "7861:4:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2435,
														"name": "_supplyCap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2418,
														"src": "7868:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7861:17:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2437,
												"nodeType": "ExpressionStatement",
												"src": "7861:17:16"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2439,
															"name": "_supplyCap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2418,
															"src": "7910:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2440,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1906,
																"src": "7922:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7922:12:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2438,
														"name": "SupplyCapChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2167,
														"src": "7893:16:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 2442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7893:42:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2443,
												"nodeType": "EmitStatement",
												"src": "7888:47:16"
											}
										]
									},
									"documentation": {
										"id": 2416,
										"nodeType": "StructuredDocumentation",
										"src": "7541:155:16",
										"text": " @dev Function to change the supply cap of the token.\n      Only callable by an admin.\n @param _supplyCap The new supply cap."
									},
									"functionSelector": "b6a3f59a",
									"id": 2445,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2421,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2420,
												"name": "pause",
												"nameLocations": [
													"7749:5:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2297,
												"src": "7749:5:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "7749:5:16"
										},
										{
											"arguments": [
												{
													"id": 2423,
													"name": "_SUPPLY",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2104,
													"src": "7764:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2424,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2422,
												"name": "onlyRole",
												"nameLocations": [
													"7755:8:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "7755:8:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "7755:17:16"
										}
									],
									"name": "setSupplyCap",
									"nameLocation": "7710:12:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2418,
												"mutability": "mutable",
												"name": "_supplyCap",
												"nameLocation": "7728:10:16",
												"nodeType": "VariableDeclaration",
												"scope": 2445,
												"src": "7723:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2417,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7723:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7722:17:16"
									},
									"returnParameters": {
										"id": 2425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7773:0:16"
									},
									"scope": 2791,
									"src": "7701:241:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2453,
										"nodeType": "Block",
										"src": "8103:28:16",
										"statements": [
											{
												"expression": {
													"id": 2451,
													"name": "_cap",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2119,
													"src": "8120:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2450,
												"id": 2452,
												"nodeType": "Return",
												"src": "8113:11:16"
											}
										]
									},
									"documentation": {
										"id": 2446,
										"nodeType": "StructuredDocumentation",
										"src": "7948:102:16",
										"text": " @dev Function to get the current supply cap.\n @return The current supply cap."
									},
									"functionSelector": "8f770ad0",
									"id": 2454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supplyCap",
									"nameLocation": "8064:9:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8073:2:16"
									},
									"returnParameters": {
										"id": 2450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2454,
												"src": "8097:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2448,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8097:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8096:6:16"
									},
									"scope": 2791,
									"src": "8055:76:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2481,
										"nodeType": "Block",
										"src": "8596:119:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2466,
																"name": "_whitelist",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2457,
																"src": "8614:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8636:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8628:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2467,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8628:7:16",
																		"typeDescriptions": {}
																	}
																},
																"id": 2470,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8628:10:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8614:24:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646472657373",
															"id": 2472,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8640:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 2465,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8606:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8606:52:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2474,
												"nodeType": "ExpressionStatement",
												"src": "8606:52:16"
											},
											{
												"expression": {
													"id": 2479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2475,
															"name": "whitelistedAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2235,
															"src": "8668:18:16",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2477,
														"indexExpression": {
															"id": 2476,
															"name": "_whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2457,
															"src": "8687:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8668:30:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2478,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2459,
														"src": "8701:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8668:40:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2480,
												"nodeType": "ExpressionStatement",
												"src": "8668:40:16"
											}
										]
									},
									"documentation": {
										"id": 2455,
										"nodeType": "StructuredDocumentation",
										"src": "8137:365:16",
										"text": " @dev Function to add or remove an address from the whitelist. Whitelisted addresses are exempt from transfer fees.\n      Only callable by an admin.\n @param _whitelist The address to whitelist or remove from the whitelist.\n @param _status Boolean indicating whether to add (true) or remove (false) the address from the whitelist."
									},
									"functionSelector": "3f914aef",
									"id": 2482,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2462,
													"name": "_ADMIN",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2110,
													"src": "8588:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2463,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2461,
												"name": "onlyRole",
												"nameLocations": [
													"8579:8:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "8579:8:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "8579:16:16"
										}
									],
									"name": "setWhitelistAddress",
									"nameLocation": "8516:19:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2457,
												"mutability": "mutable",
												"name": "_whitelist",
												"nameLocation": "8544:10:16",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "8536:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8536:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2459,
												"mutability": "mutable",
												"name": "_status",
												"nameLocation": "8561:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "8556:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2458,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8556:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8535:34:16"
									},
									"returnParameters": {
										"id": 2464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8596:0:16"
									},
									"scope": 2791,
									"src": "8507:208:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2495,
										"nodeType": "Block",
										"src": "8950:32:16",
										"statements": [
											{
												"expression": {
													"id": 2493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2491,
														"name": "txFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2123,
														"src": "8960:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2492,
														"name": "_newFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2485,
														"src": "8968:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8960:15:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2494,
												"nodeType": "ExpressionStatement",
												"src": "8960:15:16"
											}
										]
									},
									"documentation": {
										"id": 2483,
										"nodeType": "StructuredDocumentation",
										"src": "8721:163:16",
										"text": " @dev Function to update the transaction fee for transfers.\n      Only callable by an admin.\n @param _newFee The new transaction fee."
									},
									"functionSelector": "f05d16f7",
									"id": 2496,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2488,
													"name": "_ADMIN",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2110,
													"src": "8942:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2489,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2487,
												"name": "onlyRole",
												"nameLocations": [
													"8933:8:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "8933:8:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "8933:16:16"
										}
									],
									"name": "setTxFee",
									"nameLocation": "8898:8:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2485,
												"mutability": "mutable",
												"name": "_newFee",
												"nameLocation": "8915:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2496,
												"src": "8907:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8907:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8906:17:16"
									},
									"returnParameters": {
										"id": 2490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8950:0:16"
									},
									"scope": 2791,
									"src": "8889:93:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2531,
										"nodeType": "Block",
										"src": "9450:162:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2515,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2512,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "9468:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 2513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9468:13:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2514,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2501,
																	"src": "9484:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9468:23:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2516,
																"name": "_cap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2119,
																"src": "9495:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9468:31:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e74726163743a20537570706c7920436170206578636565646564",
															"id": 2518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9501:31:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79",
																"typeString": "literal_string \"Contract: Supply Cap exceeded\""
															},
															"value": "Contract: Supply Cap exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79",
																"typeString": "literal_string \"Contract: Supply Cap exceeded\""
															}
														],
														"id": 2511,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9460:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9460:73:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2520,
												"nodeType": "ExpressionStatement",
												"src": "9460:73:16"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2522,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2499,
															"src": "9563:3:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2523,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2501,
															"src": "9568:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2521,
														"name": "TokensMintedTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2144,
														"src": "9548:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9548:28:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2525,
												"nodeType": "EmitStatement",
												"src": "9543:33:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2527,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2499,
															"src": "9592:3:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2528,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2501,
															"src": "9597:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2526,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "9586:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9586:19:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2530,
												"nodeType": "ExpressionStatement",
												"src": "9586:19:16"
											}
										]
									},
									"documentation": {
										"id": 2497,
										"nodeType": "StructuredDocumentation",
										"src": "9068:291:16",
										"text": " @dev Function to mint tokens to a specific address.\n      Only callable by an address with the _MINTTO role, and if minting to is enabled and contract is not paused.\n @param _to The address to mint tokens to.\n @param _amount The amount of tokens to mint."
									},
									"functionSelector": "449a52f8",
									"id": 2532,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2504,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2503,
												"name": "pause",
												"nameLocations": [
													"9416:5:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2297,
												"src": "9416:5:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "9416:5:16"
										},
										{
											"id": 2506,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2505,
												"name": "mintToDis",
												"nameLocations": [
													"9422:9:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2319,
												"src": "9422:9:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "9422:9:16"
										},
										{
											"arguments": [
												{
													"id": 2508,
													"name": "_MINTTO",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2086,
													"src": "9441:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2509,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2507,
												"name": "onlyRole",
												"nameLocations": [
													"9432:8:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "9432:8:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "9432:17:16"
										}
									],
									"name": "mintTo",
									"nameLocation": "9373:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2499,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "9388:3:16",
												"nodeType": "VariableDeclaration",
												"scope": 2532,
												"src": "9380:11:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9380:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2501,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "9398:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2532,
												"src": "9393:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2500,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9393:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9379:27:16"
									},
									"returnParameters": {
										"id": 2510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9450:0:16"
									},
									"scope": 2791,
									"src": "9364:248:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2565,
										"nodeType": "Block",
										"src": "9919:164:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2546,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "9937:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 2547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9937:13:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2548,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2535,
																	"src": "9953:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9937:23:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2550,
																"name": "_cap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2119,
																"src": "9964:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:31:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e74726163743a20537570706c7920436170206578636565646564",
															"id": 2552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9970:31:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79",
																"typeString": "literal_string \"Contract: Supply Cap exceeded\""
															},
															"value": "Contract: Supply Cap exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79",
																"typeString": "literal_string \"Contract: Supply Cap exceeded\""
															}
														],
														"id": 2545,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9929:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9929:73:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2554,
												"nodeType": "ExpressionStatement",
												"src": "9929:73:16"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2556,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2535,
															"src": "10030:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2555,
														"name": "TokensMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2137,
														"src": "10017:12:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10017:21:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2558,
												"nodeType": "EmitStatement",
												"src": "10012:26:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2560,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1906,
																"src": "10054:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10054:12:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2562,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2535,
															"src": "10068:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2559,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "10048:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10048:28:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2564,
												"nodeType": "ExpressionStatement",
												"src": "10048:28:16"
											}
										]
									},
									"documentation": {
										"id": 2533,
										"nodeType": "StructuredDocumentation",
										"src": "9618:229:16",
										"text": " @dev Function to mint tokens to the caller.\n      Only callable by an address with the _MINT role, and if minting is enabled and contract is not paused.\n @param _amount The amount of tokens to mint."
									},
									"functionSelector": "a0712d68",
									"id": 2566,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2538,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2537,
												"name": "pause",
												"nameLocations": [
													"9889:5:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2297,
												"src": "9889:5:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "9889:5:16"
										},
										{
											"id": 2540,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2539,
												"name": "mintDis",
												"nameLocations": [
													"9895:7:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2308,
												"src": "9895:7:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "9895:7:16"
										},
										{
											"arguments": [
												{
													"id": 2542,
													"name": "_MINT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2080,
													"src": "9912:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2543,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2541,
												"name": "onlyRole",
												"nameLocations": [
													"9903:8:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "9903:8:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "9903:15:16"
										}
									],
									"name": "mint",
									"nameLocation": "9861:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2535,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "9871:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2566,
												"src": "9866:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2534,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9866:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9865:14:16"
									},
									"returnParameters": {
										"id": 2544,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9919:0:16"
									},
									"scope": 2791,
									"src": "9852:231:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2589,
										"nodeType": "Block",
										"src": "10459:96:16",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2578,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2569,
															"src": "10488:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2579,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1906,
																"src": "10497:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10497:12:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2577,
														"name": "TokensBurned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2151,
														"src": "10475:12:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 2581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10475:35:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2582,
												"nodeType": "EmitStatement",
												"src": "10470:40:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2584,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1906,
																"src": "10526:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10526:12:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2586,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2569,
															"src": "10540:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2583,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 993,
														"src": "10520:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10520:28:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2588,
												"nodeType": "ExpressionStatement",
												"src": "10520:28:16"
											}
										]
									},
									"documentation": {
										"id": 2567,
										"nodeType": "StructuredDocumentation",
										"src": "10173:222:16",
										"text": " @dev Function to burn tokens from the caller's balance.\n      Only callable by an address with the _BURN role, and if the contract is not paused.\n @param _amount The amount of tokens to burn."
									},
									"functionSelector": "42966c68",
									"id": 2590,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2572,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2571,
												"name": "pause",
												"nameLocations": [
													"10437:5:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2297,
												"src": "10437:5:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "10437:5:16"
										},
										{
											"arguments": [
												{
													"id": 2574,
													"name": "_BURN",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2092,
													"src": "10452:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2575,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2573,
												"name": "onlyRole",
												"nameLocations": [
													"10443:8:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "10443:8:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "10443:15:16"
										}
									],
									"name": "burn",
									"nameLocation": "10409:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2569,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "10419:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2590,
												"src": "10414:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2568,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10414:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10413:14:16"
									},
									"returnParameters": {
										"id": 2576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10459:0:16"
									},
									"scope": 2791,
									"src": "10400:155:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2615,
										"nodeType": "Block",
										"src": "10925:99:16",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2604,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2593,
															"src": "10957:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2605,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2595,
															"src": "10964:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2606,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1906,
																"src": "10973:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10973:12:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2603,
														"name": "TokensBurnedFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2160,
														"src": "10940:16:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 2608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10940:46:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2609,
												"nodeType": "EmitStatement",
												"src": "10935:51:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2611,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2593,
															"src": "11002:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2612,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2595,
															"src": "11009:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2610,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 993,
														"src": "10996:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10996:21:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2614,
												"nodeType": "ExpressionStatement",
												"src": "10996:21:16"
											}
										]
									},
									"documentation": {
										"id": 2591,
										"nodeType": "StructuredDocumentation",
										"src": "10561:277:16",
										"text": " @dev Function to burn tokens from a specific address.\n      Only callable by an address with the _BURNFROM role, and if the contract is not paused.\n @param _from The address to burn tokens from.\n @param _amount The amount of tokens to burn."
									},
									"functionSelector": "79cc6790",
									"id": 2616,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2598,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2597,
												"name": "pause",
												"nameLocations": [
													"10899:5:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2297,
												"src": "10899:5:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "10899:5:16"
										},
										{
											"arguments": [
												{
													"id": 2600,
													"name": "_BURNFROM",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2098,
													"src": "10914:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2601,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2599,
												"name": "onlyRole",
												"nameLocations": [
													"10905:8:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "10905:8:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "10905:19:16"
										}
									],
									"name": "burnFrom",
									"nameLocation": "10852:8:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2593,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "10869:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2616,
												"src": "10861:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10861:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2595,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "10881:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2616,
												"src": "10876:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2594,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10876:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10860:29:16"
									},
									"returnParameters": {
										"id": 2602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10925:0:16"
									},
									"scope": 2791,
									"src": "10843:181:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										803
									],
									"body": {
										"id": 2685,
										"nodeType": "Block",
										"src": "11629:631:16",
										"statements": [
											{
												"assignments": [
													2632
												],
												"declarations": [
													{
														"constant": false,
														"id": 2632,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "11647:7:16",
														"nodeType": "VariableDeclaration",
														"scope": 2685,
														"src": "11639:15:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2631,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11639:7:16",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2635,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2633,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1906,
														"src": "11657:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 2634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11657:12:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11639:30:16"
											},
											{
												"assignments": [
													2637
												],
												"declarations": [
													{
														"constant": false,
														"id": 2637,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11687:16:16",
														"nodeType": "VariableDeclaration",
														"scope": 2685,
														"src": "11679:24:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2636,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11679:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2642,
												"initialValue": {
													"arguments": [
														{
															"id": 2639,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2619,
															"src": "11716:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2640,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2632,
															"src": "11722:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2638,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "11706:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 2641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11706:24:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11679:51:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2644,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2637,
																"src": "11748:16:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2645,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2623,
																"src": "11768:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11748:25:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 2647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11775:42:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															},
															"value": "ERC20: transfer amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															}
														],
														"id": 2643,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11740:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11740:78:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2649,
												"nodeType": "ExpressionStatement",
												"src": "11740:78:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2651,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2619,
															"src": "11903:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2652,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2632,
															"src": "11909:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2653,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2637,
																"src": "11918:16:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2654,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2623,
																"src": "11937:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11918:24:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2650,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1011,
															1071
														],
														"referencedDeclaration": 1011,
														"src": "11894:8:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11894:49:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2657,
												"nodeType": "ExpressionStatement",
												"src": "11894:49:16"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 2658,
															"name": "whitelistedAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2235,
															"src": "11958:18:16",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2660,
														"indexExpression": {
															"id": 2659,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2632,
															"src": "11977:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11958:27:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "74727565",
														"id": 2661,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11989:4:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "11958:35:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2681,
													"nodeType": "Block",
													"src": "12052:180:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2671,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2619,
																		"src": "12123:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2672,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2621,
																		"src": "12129:2:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2673,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2623,
																		"src": "12133:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2670,
																	"name": "_transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 850,
																	"src": "12113:9:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12113:26:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2675,
															"nodeType": "ExpressionStatement",
															"src": "12113:26:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2677,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2619,
																		"src": "12209:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2678,
																		"name": "txFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2123,
																		"src": "12215:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2676,
																	"name": "_burn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 993,
																	"src": "12203:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 2679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12203:18:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2680,
															"nodeType": "ExpressionStatement",
															"src": "12203:18:16"
														}
													]
												},
												"id": 2682,
												"nodeType": "IfStatement",
												"src": "11954:278:16",
												"trueBody": {
													"id": 2669,
													"nodeType": "Block",
													"src": "11995:51:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2664,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2619,
																		"src": "12019:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2665,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2621,
																		"src": "12025:2:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2666,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2623,
																		"src": "12029:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2663,
																	"name": "_transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 850,
																	"src": "12009:9:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12009:26:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2668,
															"nodeType": "ExpressionStatement",
															"src": "12009:26:16"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2683,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12249:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2630,
												"id": 2684,
												"nodeType": "Return",
												"src": "12242:11:16"
											}
										]
									},
									"documentation": {
										"id": 2617,
										"nodeType": "StructuredDocumentation",
										"src": "11111:398:16",
										"text": " @dev Overrides the `transferFrom` function to apply a transaction fee unless the sender is whitelisted.\n      The transfer will reduce the spender's allowance if applicable.\n @param from The address sending tokens.\n @param to The address receiving tokens.\n @param value The amount of tokens to transfer.\n @return True if the transfer was successful."
									},
									"functionSelector": "23b872dd",
									"id": 2686,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2626,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2625,
												"name": "nonReentrant",
												"nameLocations": [
													"11577:12:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1979,
												"src": "11577:12:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "11577:12:16"
										}
									],
									"name": "transferFrom",
									"nameLocation": "11523:12:16",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2627,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11605:8:16"
									},
									"parameters": {
										"id": 2624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2619,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11544:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2686,
												"src": "11536:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11536:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2621,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11558:2:16",
												"nodeType": "VariableDeclaration",
												"scope": 2686,
												"src": "11550:10:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11550:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2623,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11570:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2686,
												"src": "11562:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11562:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11535:41:16"
									},
									"returnParameters": {
										"id": 2630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2686,
												"src": "11623:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2628,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11623:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11622:6:16"
									},
									"scope": 2791,
									"src": "11514:746:16",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										730
									],
									"body": {
										"id": 2729,
										"nodeType": "Block",
										"src": "12639:338:16",
										"statements": [
											{
												"assignments": [
													2700
												],
												"declarations": [
													{
														"constant": false,
														"id": 2700,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "12657:5:16",
														"nodeType": "VariableDeclaration",
														"scope": 2729,
														"src": "12649:13:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2699,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12649:7:16",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2703,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2701,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1906,
														"src": "12665:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 2702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12665:12:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12649:28:16"
											},
											{
												"condition": {
													"baseExpression": {
														"id": 2704,
														"name": "whitelistedAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2235,
														"src": "12692:18:16",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2706,
													"indexExpression": {
														"id": 2705,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2700,
														"src": "12711:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12692:25:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2725,
													"nodeType": "Block",
													"src": "12777:172:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2715,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2700,
																		"src": "12850:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2716,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2689,
																		"src": "12857:2:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2717,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2691,
																		"src": "12861:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2714,
																	"name": "_transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 850,
																	"src": "12840:9:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12840:27:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2719,
															"nodeType": "ExpressionStatement",
															"src": "12840:27:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2721,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2700,
																		"src": "12887:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2722,
																		"name": "txFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2123,
																		"src": "12894:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2720,
																	"name": "_burn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 993,
																	"src": "12881:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 2723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12881:19:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2724,
															"nodeType": "ExpressionStatement",
															"src": "12881:19:16"
														}
													]
												},
												"id": 2726,
												"nodeType": "IfStatement",
												"src": "12688:261:16",
												"trueBody": {
													"id": 2713,
													"nodeType": "Block",
													"src": "12719:52:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2708,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2700,
																		"src": "12743:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2709,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2689,
																		"src": "12750:2:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2710,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2691,
																		"src": "12754:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2707,
																	"name": "_transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 850,
																	"src": "12733:9:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2711,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12733:27:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2712,
															"nodeType": "ExpressionStatement",
															"src": "12733:27:16"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2727,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12966:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2698,
												"id": 2728,
												"nodeType": "Return",
												"src": "12959:11:16"
											}
										]
									},
									"documentation": {
										"id": 2687,
										"nodeType": "StructuredDocumentation",
										"src": "12266:271:16",
										"text": " @dev Overrides the `transfer` function to apply a transaction fee unless the sender is whitelisted.\n @param to The address receiving tokens.\n @param value The amount of tokens to transfer.\n @return True if the transfer was successful."
									},
									"functionSelector": "a9059cbb",
									"id": 2730,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2694,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2693,
												"name": "nonReentrant",
												"nameLocations": [
													"12587:12:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1979,
												"src": "12587:12:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "12587:12:16"
										}
									],
									"name": "transfer",
									"nameLocation": "12551:8:16",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2695,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12615:8:16"
									},
									"parameters": {
										"id": 2692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12568:2:16",
												"nodeType": "VariableDeclaration",
												"scope": 2730,
												"src": "12560:10:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12560:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12580:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2730,
												"src": "12572:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12572:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12559:27:16"
									},
									"returnParameters": {
										"id": 2698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2697,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2730,
												"src": "12633:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2696,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12633:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12632:6:16"
									},
									"scope": 2791,
									"src": "12542:435:16",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2762,
										"nodeType": "Block",
										"src": "13503:135:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2750,
															"name": "_dest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2736,
															"src": "13541:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2751,
															"name": "_ERC20Amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2738,
															"src": "13548:12:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2747,
																	"name": "_ERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2734,
																	"src": "13520:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1198",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1198",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 2746,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1198,
																"src": "13513:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1198_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13513:14:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1198",
																"typeString": "contract IERC20"
															}
														},
														"id": 2749,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13528:12:16",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1271,
														"src": "13513:27:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1198_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1198_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13513:48:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2753,
												"nodeType": "ExpressionStatement",
												"src": "13513:48:16"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2755,
															"name": "_ERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2734,
															"src": "13589:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1198",
																"typeString": "contract IERC20"
															}
														},
														{
															"expression": {
																"id": 2756,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "13597:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13603:6:16",
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "13597:12:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2758,
															"name": "_dest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2736,
															"src": "13611:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2759,
															"name": "_ERC20Amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2738,
															"src": "13618:12:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1198",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2754,
														"name": "ERC20Rescued",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2230,
														"src": "13576:12:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_contract$_IERC20_$1198_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,uint256,address,uint256)"
														}
													},
													"id": 2760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13576:55:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2761,
												"nodeType": "EmitStatement",
												"src": "13571:60:16"
											}
										]
									},
									"documentation": {
										"id": 2731,
										"nodeType": "StructuredDocumentation",
										"src": "13062:330:16",
										"text": " @dev Function to rescue ERC20 tokens sent to the contract by mistake.\n      Only callable by an account with the _RESCUE role.\n @param _ERC20 The ERC20 token contract to rescue.\n @param _dest The address to send the rescued tokens to.\n @param _ERC20Amount The amount of tokens to rescue."
									},
									"functionSelector": "41f431fd",
									"id": 2763,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2741,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2740,
												"name": "nonReentrant",
												"nameLocations": [
													"13465:12:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1979,
												"src": "13465:12:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "13465:12:16"
										},
										{
											"arguments": [
												{
													"id": 2743,
													"name": "_RESCUE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2116,
													"src": "13494:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2744,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2742,
												"name": "onlyRole",
												"nameLocations": [
													"13485:8:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "13485:8:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "13485:17:16"
										}
									],
									"name": "moveERC20",
									"nameLocation": "13406:9:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2734,
												"mutability": "mutable",
												"name": "_ERC20",
												"nameLocation": "13423:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2763,
												"src": "13416:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1198",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2733,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2732,
														"name": "IERC20",
														"nameLocations": [
															"13416:6:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1198,
														"src": "13416:6:16"
													},
													"referencedDeclaration": 1198,
													"src": "13416:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1198",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2736,
												"mutability": "mutable",
												"name": "_dest",
												"nameLocation": "13439:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2763,
												"src": "13431:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13431:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2738,
												"mutability": "mutable",
												"name": "_ERC20Amount",
												"nameLocation": "13451:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2763,
												"src": "13446:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2737,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13446:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13415:49:16"
									},
									"returnParameters": {
										"id": 2745,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13503:0:16"
									},
									"scope": 2791,
									"src": "13397:241:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2789,
										"nodeType": "Block",
										"src": "14021:105:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2779,
															"name": "_etherAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2768,
															"src": "14046:12:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2776,
															"name": "_dest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2766,
															"src": "14031:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 2778,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14037:8:16",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "14031:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14031:28:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2781,
												"nodeType": "ExpressionStatement",
												"src": "14031:28:16"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2783,
															"name": "_dest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2766,
															"src": "14085:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"expression": {
																"id": 2784,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "14092:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14098:6:16",
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "14092:12:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2786,
															"name": "_etherAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2768,
															"src": "14106:12:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2782,
														"name": "ETHRescued",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2218,
														"src": "14074:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14074:45:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2788,
												"nodeType": "EmitStatement",
												"src": "14069:50:16"
											}
										]
									},
									"documentation": {
										"id": 2764,
										"nodeType": "StructuredDocumentation",
										"src": "13644:273:16",
										"text": " @dev Function to rescue Ether sent to the contract by mistake.\n      Only callable by an account with the _RESCUE role.\n @param _dest The address to send the rescued Ether to.\n @param _etherAmount The amount of Ether to rescue (in wei)."
									},
									"functionSelector": "48132f48",
									"id": 2790,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2771,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2770,
												"name": "nonReentrant",
												"nameLocations": [
													"13983:12:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1979,
												"src": "13983:12:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "13983:12:16"
										},
										{
											"arguments": [
												{
													"id": 2773,
													"name": "_RESCUE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2116,
													"src": "14012:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2774,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2772,
												"name": "onlyRole",
												"nameLocations": [
													"14003:8:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "14003:8:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "14003:17:16"
										}
									],
									"name": "ethRescue",
									"nameLocation": "13931:9:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2766,
												"mutability": "mutable",
												"name": "_dest",
												"nameLocation": "13957:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2790,
												"src": "13941:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13941:15:16",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2768,
												"mutability": "mutable",
												"name": "_etherAmount",
												"nameLocation": "13969:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2790,
												"src": "13964:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2767,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13964:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13940:42:16"
									},
									"returnParameters": {
										"id": 2775,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14021:0:16"
									},
									"scope": 2791,
									"src": "13922:204:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2792,
							"src": "768:13365:16",
							"usedErrors": [
								305,
								308,
								480,
								485,
								490,
								499,
								504,
								509,
								1238,
								1960
							],
							"usedEvents": [
								317,
								326,
								335,
								1132,
								1141,
								2137,
								2144,
								2151,
								2160,
								2167,
								2174,
								2181,
								2188,
								2195,
								2202,
								2209,
								2218,
								2230
							]
						}
					],
					"src": "36:14098:16"
				},
				"id": 16
			}
		}
	}
}