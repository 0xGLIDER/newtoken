{
	"id": "ce9b21dcfc9bfa29146363abe5d36bba",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/token.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity ^0.8.0;\n\nimport {AccessControl} from \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport {SafeERC20} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {ReentrancyGuard} from \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n/**\n * @title Token\n * @dev This contract implements an ERC20 token with additional features such as minting, burning, pausing, supply capping,\n * and transfer fee mechanisms. It uses role-based access control for administrative functions and is protected against reentrancy attacks.\n */\ncontract Token is ERC20, AccessControl, ReentrancyGuard {\n\n    using SafeERC20 for IERC20;\n    \n    // Role identifiers for different administrative actions\n    bytes32 public constant _MINT = keccak256(\"_MINT\");\n    bytes32 public constant _MINTTO = keccak256(\"_MINTTO\");\n    bytes32 public constant _BURN = keccak256(\"_BURN\");\n    bytes32 public constant _BURNFROM = keccak256(\"_BURNFROM\");\n    bytes32 public constant _SUPPLY = keccak256(\"_SUPPLY\");\n    bytes32 public constant _ADMIN = keccak256(\"_ADMIN\");\n    bytes32 public constant _RESCUE = keccak256(\"_RESCUE\");\n   \n    uint private _cap; // Maximum supply cap for the token\n    address public vault; // Address where transaction fees are sent\n    uint public txFee = 0.005 ether; // Transaction fee for transfers\n    \n    bool public paused; // Flag to pause the contract's operations\n    bool public mintDisabled; // Flag to disable minting\n    bool public mintToDisabled; // Flag to disable minting to specific addresses\n    \n    // Events for logging important contract actions\n    event TokensMinted(uint _amount);\n    event TokensMintedTo(address _to, uint _amount);\n    event TokensBurned(uint _amount, address _burner);\n    event TokensBurnedFrom(address _from, uint _amount, address _burner);\n    event SupplyCapChanged(uint _newCap, address _changedBy);\n    event ContractPaused(uint _blockHeight, address _pausedBy);\n    event ContractUnpaused(uint _blockHeight, address _unpausedBy);\n    event MintingEnabled(uint _blockHeight, address _enabledBy);\n    event MintingDisabled(uint _blockHeight, address _disabledBy);\n    event MintingToEnabled(uint _blockHeight, address _enabledBy);\n    event MintingToDisabled(uint _blockHeight, address _disabledBy);\n    event ETHRescued(address _dest, uint _blockHeight, uint _amount);\n    event ERC20Rescued(IERC20 _token, uint _blockHeight, address _dest, uint _amount);\n\n    mapping(address => bool) public whitelistedAddress; // Mapping to track addresses that are exempt from transfer fees\n   \n    /**\n     * @dev Constructor to initialize the token contract with a vault address and an initial supply of tokens.\n     * @param _vault The address where transaction fees will be sent.\n     */\n    constructor(address _vault) ERC20(\"Token\", \"TKN\") {\n        _cap = 10000000 ether; // Set the supply cap to 10 million tokens\n        mintDisabled = false; // Initially enable minting\n        mintToDisabled = false; // Initially enable minting to specific addresses\n        vault = _vault;\n        _grantRole(DEFAULT_ADMIN_ROLE, _msgSender());\n\n        // Grant initial roles and mint an initial supply of tokens for testing\n        _grantRole(_ADMIN, _msgSender());\n        _grantRole(_MINT, _msgSender());\n        _grantRole(_BURN, _msgSender());\n        _mint(_msgSender(), 1000000 ether); // Mint 1 million tokens to the deployer\n    }\n    \n    /**\n     * @dev Function to pause or unpause the contract's operations.\n     * Only callable by an admin.\n     * @param _paused Boolean indicating whether the contract should be paused.\n     */\n    function setPaused(bool _paused) external {\n        require(hasRole(_ADMIN, _msgSender()), \"Contract: Need Admin\");\n        paused = _paused;\n\n        if (_paused) {\n            emit ContractPaused(block.number, _msgSender());\n        } else {\n            emit ContractUnpaused(block.number, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Function to disable or enable minting.\n     * Only callable by an admin.\n     * @param _disableMinting Boolean indicating whether minting should be disabled.\n     */\n    function disableMint(bool _disableMinting) external {\n        require(hasRole(_ADMIN, _msgSender()), \"Contract: Need Admin\");\n        mintDisabled = _disableMinting;\n\n        if (_disableMinting) {\n            emit MintingDisabled(block.number, _msgSender());\n        } else {\n            emit MintingEnabled(block.number, _msgSender());\n        }\n    }   \n\n    /**\n     * @dev Function to disable or enable minting to specific addresses.\n     * Only callable by an admin.\n     * @param _disableMintTo Boolean indicating whether minting to specific addresses should be disabled.\n     */\n    function disableMintTo(bool _disableMintTo) external {\n        require(hasRole(_ADMIN, _msgSender()), \"Need Admin\");\n        mintToDisabled = _disableMintTo;\n\n        if (_disableMintTo) {\n            emit MintingToDisabled(block.number, _msgSender());\n        } else {\n            emit MintingToEnabled(block.number, _msgSender());\n        }\n    }\n    \n    /**\n     * @dev Modifier to ensure that the contract is not paused before executing the function.\n     */\n    modifier pause() {\n        require(!paused, \"Contract: Contract is Paused\");\n        _;\n    }\n    \n    /**\n     * @dev Modifier to ensure that minting is not disabled before executing the function.\n     */\n    modifier mintDis() {\n        require(!mintDisabled, \"Minting disabled\");\n        _;\n    }\n    \n    /**\n     * @dev Modifier to ensure that minting to specific addresses is not disabled before executing the function.\n     */\n    modifier mintToDis() {\n        require(!mintToDisabled, \"Minting to disabled\");\n        _;\n    }\n    \n    /**\n     * @dev Function to mint tokens to a specific address.\n     * Only callable by an address with the _MINTTO role, and if minting to is enabled and contract is not paused.\n     * @param _to The address to mint tokens to.\n     * @param _amount The amount of tokens to mint.\n     */\n    function mintTo(address _to, uint _amount) external pause mintToDis {\n        require(hasRole(_MINTTO, _msgSender()), \"Contract: Need Minto\");\n        require(totalSupply() + _amount <= _cap, \"Contract: Supply Cap exceeded\");\n        emit TokensMintedTo(_to, _amount);\n        _mint(_to, _amount);\n    }\n\n    /**\n     * @dev Function to mint tokens to the caller.\n     * Only callable by an address with the _MINT role, and if minting is enabled and contract is not paused.\n     * @param _amount The amount of tokens to mint.\n     */\n    function mint(uint _amount) external pause mintDis {\n        require(hasRole(_MINT, _msgSender()), \"Contract: Need Mint\");\n        require(totalSupply() + _amount <= _cap, \"Contract: Supply Cap exceeded\");\n        emit TokensMinted(_amount);\n        _mint(_msgSender(), _amount);\n    }\n    \n    /**\n     * @dev Function to burn tokens from the caller's balance.\n     * Only callable by an address with the _BURN role, and if the contract is not paused.\n     * @param _amount The amount of tokens to burn.\n     */\n    function burn(uint _amount) external pause { \n        require(hasRole(_BURN, _msgSender()), \"Contract: Need Burn\");\n        emit TokensBurned(_amount, _msgSender());\n        _burn(_msgSender(), _amount);\n    }\n    \n    /**\n     * @dev Function to burn tokens from a specific address.\n     * Only callable by an address with the _BURNFROM role, and if the contract is not paused.\n     * @param _from The address to burn tokens from.\n     * @param _amount The amount of tokens to burn.\n     */\n    function burnFrom(address _from, uint _amount) external pause {\n        require(hasRole(_BURNFROM, _msgSender()), \"Contract: Need Burnfrom\");\n        emit TokensBurnedFrom(_from, _amount, _msgSender());\n        _burn(_from, _amount);\n    }\n    \n    /**\n     * @dev Function to change the supply cap of the token.\n     * Only callable by an address with the _SUPPLY role, and if the contract is not paused.\n     * @param _supplyCap The new supply cap.\n     */\n    function setSupplyCap(uint _supplyCap) external pause {\n        require(hasRole(_SUPPLY, _msgSender()), \"Need Supply\");\n        require(_supplyCap >= totalSupply(), \"Contract: Supply Cap too low\");\n        _cap = _supplyCap;\n        emit SupplyCapChanged(_supplyCap, _msgSender());\n    }\n    \n    /**\n     * @dev Function to get the current supply cap.\n     * @return The current supply cap.\n     */\n    function supplyCap() public view returns (uint) {\n        return _cap;\n    }\n    \n    /**\n     * @dev Internal function to update the token balances, ensuring the supply cap is not exceeded.\n     * @param from The address sending tokens.\n     * @param to The address receiving tokens.\n     * @param amount The amount of tokens being transferred.\n     */\n    function _update(address from, address to, uint256 amount) internal virtual override {\n        if (from == address(0)) { \n            require(totalSupply() + amount <= _cap, \"Contract: Supply Cap exceeded\");\n        }\n        super._update(from, to, amount);\n    }\n\n    /**\n     * @dev Function to transfer tokens from one address to another, applying a transaction fee unless the sender is whitelisted.\n     * @param from The address sending tokens.\n     * @param to The address receiving tokens.\n     * @param value The amount of tokens to transfer.\n     * @return True if the transfer was successful.\n     */\n    function transferFrom(address from, address to, uint256 value) nonReentrant public virtual override returns (bool) {\n        address spender = _msgSender();\n        if (whitelistedAddress[spender]) {\n            _transfer(from, to, value);\n        } else {\n            _transfer(from, to, value);\n            _transfer(from, vault, txFee);\n        }\n        return true;\n    }\n\n    /**\n     * @dev Function to transfer tokens from the caller's address to another, applying a transaction fee unless the sender is whitelisted.\n     * @param to The address receiving tokens.\n     * @param value The amount of tokens to transfer.\n     * @return True if the transfer was successful.\n     */\n    function transfer(address to, uint256 value) nonReentrant public virtual override returns (bool) {\n        address owner = _msgSender();\n        if (whitelistedAddress[owner]) {\n            _transfer(owner, to, value);\n        } else {\n            _transfer(owner, to, value);\n            _transfer(owner, vault, txFee);\n        }\n        return true;\n    }\n\n    /**\n     * @dev Function to add or remove an address from the whitelist.\n     * Whitelisted addresses are exempt from transfer fees.\n     * Only callable by an admin.\n     * @param _whitelist The address to whitelist or remove from the whitelist.\n     * @param _status Boolean indicating whether to add (true) or remove (false) the address from the whitelist.\n     */\n    function setWhitelistAddress(address _whitelist, bool _status) external {\n        require(hasRole(_ADMIN, msg.sender), \"Need Admin\");\n        require(_whitelist != address(0), \"Invalid address\");\n        whitelistedAddress[_whitelist] = _status;\n    }\n\n    /**\n     * @dev Function to rescue ERC20 tokens sent to the contract by mistake.\n     * Only callable by an address with the _RESCUE role.\n     * @param _ERC20 The address of the ERC20 token to rescue.\n     * @param _dest The address to send the rescued tokens to.\n     * @param _ERC20Amount The amount of tokens to rescue.\n     */\n    function moveERC20(IERC20 _ERC20, address _dest, uint _ERC20Amount) nonReentrant public {\n        require(hasRole(_RESCUE, msg.sender), \"Need RESCUE\");\n        IERC20(_ERC20).safeTransfer(_dest, _ERC20Amount);\n        emit ERC20Rescued(_ERC20, block.number, _dest, _ERC20Amount);\n    }\n\n    /**\n     * @dev Function to rescue Ether sent to the contract by mistake.\n     * Only callable by an address with the _RESCUE role.\n     * @param _dest The address to send the rescued Ether to.\n     * @param _etherAmount The amount of Ether to rescue.\n     */\n    function ethRescue(address payable _dest, uint _etherAmount) nonReentrant public {\n        require(hasRole(_RESCUE, msg.sender), \"Need RESCUE\");\n        _dest.transfer(_etherAmount);\n        emit ETHRescued(_dest, block.number, _etherAmount);\n    }\n    \n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 526,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 603,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 609,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 611,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 613,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 615,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP DUP5 0xF 0xA7 0x25 SLT SGT GASPRICE 0xCB 0xE1 STATICCALL MSIZE 0xDF 0xC4 SWAP2 MSTORE8 TLOAD 0xD1 0xA9 MLOAD SWAP3 SIGNEXTEND GT NUMBER 0xD BASEFEE SWAP11 LOG1 PUSH18 0x2B6A7864736F6C634300081A003300000000 ",
							"sourceMap": "751:5018:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP DUP5 0xF 0xA7 0x25 SLT SGT GASPRICE 0xCB 0xE1 STATICCALL MSIZE 0xDF 0xC4 SWAP2 MSTORE8 TLOAD 0xD1 0xA9 MLOAD SWAP3 SIGNEXTEND GT NUMBER 0xD BASEFEE SWAP11 LOG1 PUSH18 0x2B6A7864736F6C634300081A003300000000 ",
							"sourceMap": "751:5018:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 SGT PUSH1 0x72 0xB9 DELEGATECALL 0xC0 PUSH25 0xED84D9AED48871292807A66BDE8217A15371A57AAB632C0064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "195:6066:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 SGT PUSH1 0x72 0xB9 DELEGATECALL 0xC0 PUSH25 0xED84D9AED48871292807A66BDE8217A15371A57AAB632C0064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "195:6066:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/token.sol": {
				"Token": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_vault",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_blockHeight",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_pausedBy",
									"type": "address"
								}
							],
							"name": "ContractPaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_blockHeight",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_unpausedBy",
									"type": "address"
								}
							],
							"name": "ContractUnpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_blockHeight",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_dest",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "ERC20Rescued",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_dest",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_blockHeight",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "ETHRescued",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_blockHeight",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_disabledBy",
									"type": "address"
								}
							],
							"name": "MintingDisabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_blockHeight",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_enabledBy",
									"type": "address"
								}
							],
							"name": "MintingEnabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_blockHeight",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_disabledBy",
									"type": "address"
								}
							],
							"name": "MintingToDisabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_blockHeight",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_enabledBy",
									"type": "address"
								}
							],
							"name": "MintingToEnabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_newCap",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_changedBy",
									"type": "address"
								}
							],
							"name": "SupplyCapChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_burner",
									"type": "address"
								}
							],
							"name": "TokensBurned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_burner",
									"type": "address"
								}
							],
							"name": "TokensBurnedFrom",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "TokensMinted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "TokensMintedTo",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_ADMIN",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_BURN",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_BURNFROM",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_MINT",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_MINTTO",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_RESCUE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_SUPPLY",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_disableMinting",
									"type": "bool"
								}
							],
							"name": "disableMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_disableMintTo",
									"type": "bool"
								}
							],
							"name": "disableMintTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_dest",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_etherAmount",
									"type": "uint256"
								}
							],
							"name": "ethRescue",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintDisabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mintTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintToDisabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_ERC20",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_dest",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_ERC20Amount",
									"type": "uint256"
								}
							],
							"name": "moveERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_paused",
									"type": "bool"
								}
							],
							"name": "setPaused",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_supplyCap",
									"type": "uint256"
								}
							],
							"name": "setSupplyCap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_whitelist",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_status",
									"type": "bool"
								}
							],
							"name": "setWhitelistAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "supplyCap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "txFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vault",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "whitelistedAddress",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This contract implements an ERC20 token with additional features such as minting, burning, pausing, supply capping, and transfer fee mechanisms. It uses role-based access control for administrative functions and is protected against reentrancy attacks.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Function to burn tokens from the caller's balance. Only callable by an address with the _BURN role, and if the contract is not paused.",
								"params": {
									"_amount": "The amount of tokens to burn."
								}
							},
							"burnFrom(address,uint256)": {
								"details": "Function to burn tokens from a specific address. Only callable by an address with the _BURNFROM role, and if the contract is not paused.",
								"params": {
									"_amount": "The amount of tokens to burn.",
									"_from": "The address to burn tokens from."
								}
							},
							"constructor": {
								"details": "Constructor to initialize the token contract with a vault address and an initial supply of tokens.",
								"params": {
									"_vault": "The address where transaction fees will be sent."
								}
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"disableMint(bool)": {
								"details": "Function to disable or enable minting. Only callable by an admin.",
								"params": {
									"_disableMinting": "Boolean indicating whether minting should be disabled."
								}
							},
							"disableMintTo(bool)": {
								"details": "Function to disable or enable minting to specific addresses. Only callable by an admin.",
								"params": {
									"_disableMintTo": "Boolean indicating whether minting to specific addresses should be disabled."
								}
							},
							"ethRescue(address,uint256)": {
								"details": "Function to rescue Ether sent to the contract by mistake. Only callable by an address with the _RESCUE role.",
								"params": {
									"_dest": "The address to send the rescued Ether to.",
									"_etherAmount": "The amount of Ether to rescue."
								}
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"mint(uint256)": {
								"details": "Function to mint tokens to the caller. Only callable by an address with the _MINT role, and if minting is enabled and contract is not paused.",
								"params": {
									"_amount": "The amount of tokens to mint."
								}
							},
							"mintTo(address,uint256)": {
								"details": "Function to mint tokens to a specific address. Only callable by an address with the _MINTTO role, and if minting to is enabled and contract is not paused.",
								"params": {
									"_amount": "The amount of tokens to mint.",
									"_to": "The address to mint tokens to."
								}
							},
							"moveERC20(address,address,uint256)": {
								"details": "Function to rescue ERC20 tokens sent to the contract by mistake. Only callable by an address with the _RESCUE role.",
								"params": {
									"_ERC20": "The address of the ERC20 token to rescue.",
									"_ERC20Amount": "The amount of tokens to rescue.",
									"_dest": "The address to send the rescued tokens to."
								}
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"setPaused(bool)": {
								"details": "Function to pause or unpause the contract's operations. Only callable by an admin.",
								"params": {
									"_paused": "Boolean indicating whether the contract should be paused."
								}
							},
							"setSupplyCap(uint256)": {
								"details": "Function to change the supply cap of the token. Only callable by an address with the _SUPPLY role, and if the contract is not paused.",
								"params": {
									"_supplyCap": "The new supply cap."
								}
							},
							"setWhitelistAddress(address,bool)": {
								"details": "Function to add or remove an address from the whitelist. Whitelisted addresses are exempt from transfer fees. Only callable by an admin.",
								"params": {
									"_status": "Boolean indicating whether to add (true) or remove (false) the address from the whitelist.",
									"_whitelist": "The address to whitelist or remove from the whitelist."
								}
							},
							"supplyCap()": {
								"details": "Function to get the current supply cap.",
								"returns": {
									"_0": "The current supply cap."
								}
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "Function to transfer tokens from the caller's address to another, applying a transaction fee unless the sender is whitelisted.",
								"params": {
									"to": "The address receiving tokens.",
									"value": "The amount of tokens to transfer."
								},
								"returns": {
									"_0": "True if the transfer was successful."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Function to transfer tokens from one address to another, applying a transaction fee unless the sender is whitelisted.",
								"params": {
									"from": "The address sending tokens.",
									"to": "The address receiving tokens.",
									"value": "The amount of tokens to transfer."
								},
								"returns": {
									"_0": "True if the transfer was successful."
								}
							}
						},
						"title": "Token",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/token.sol\":740:12422  contract Token is ERC20, AccessControl, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"src/token.sol\":1467:1478  0.005 ether */\n  0x11c37937e08000\n    /* \"src/token.sol\":1447:1478  uint public txFee = 0.005 ether */\n  0x09\n  sstore\n    /* \"src/token.sol\":2947:3586  constructor(address _vault) ERC20(\"Token\", \"TKN\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x546f6b656e000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x544b4e0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x06\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"src/token.sol\":3014:3028  10000000 ether */\n  0x084595161401484a000000\n    /* \"src/token.sol\":3007:3011  _cap */\n  0x07\n    /* \"src/token.sol\":3007:3028  _cap = 10000000 ether */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"src/token.sol\":3096:3101  false */\n  0x00\n    /* \"src/token.sol\":3081:3093  mintDisabled */\n  0x0a\n  0x01\n    /* \"src/token.sol\":3081:3101  mintDisabled = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/token.sol\":3156:3161  false */\n  0x00\n    /* \"src/token.sol\":3139:3153  mintToDisabled */\n  0x0a\n  0x02\n    /* \"src/token.sol\":3139:3161  mintToDisabled = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/token.sol\":3229:3235  _vault */\n  dup1\n    /* \"src/token.sol\":3221:3226  vault */\n  0x08\n  0x00\n    /* \"src/token.sol\":3221:3235  vault = _vault */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/token.sol\":3245:3289  _grantRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n  tag_13\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"src/token.sol\":3256:3274  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"src/token.sol\":3276:3288  _msgSender() */\n  tag_14\n    /* \"src/token.sol\":3276:3286  _msgSender */\n  shl(0x20, tag_15)\n    /* \"src/token.sol\":3276:3288  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"src/token.sol\":3245:3255  _grantRole */\n  shl(0x20, tag_16)\n    /* \"src/token.sol\":3245:3289  _grantRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n  pop\n    /* \"src/token.sol\":3380:3412  _grantRole(_ADMIN, _msgSender()) */\n  tag_17\n    /* \"src/token.sol\":1230:1249  keccak256(\"_ADMIN\") */\n  0xae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d3\n    /* \"src/token.sol\":3399:3411  _msgSender() */\n  tag_18\n    /* \"src/token.sol\":3399:3409  _msgSender */\n  shl(0x20, tag_15)\n    /* \"src/token.sol\":3399:3411  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"src/token.sol\":3380:3390  _grantRole */\n  shl(0x20, tag_16)\n    /* \"src/token.sol\":3380:3412  _grantRole(_ADMIN, _msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n  pop\n    /* \"src/token.sol\":3422:3453  _grantRole(_MINT, _msgSender()) */\n  tag_19\n    /* \"src/token.sol\":933:951  keccak256(\"_MINT\") */\n  0x8c66330d9d4f6aba064f25ef2a307366ea6d917616f44c075aa60fa15e5cb1cb\n    /* \"src/token.sol\":3440:3452  _msgSender() */\n  tag_20\n    /* \"src/token.sol\":3440:3450  _msgSender */\n  shl(0x20, tag_15)\n    /* \"src/token.sol\":3440:3452  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"src/token.sol\":3422:3432  _grantRole */\n  shl(0x20, tag_16)\n    /* \"src/token.sol\":3422:3453  _grantRole(_MINT, _msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n  pop\n    /* \"src/token.sol\":3463:3494  _grantRole(_BURN, _msgSender()) */\n  tag_21\n    /* \"src/token.sol\":1049:1067  keccak256(\"_BURN\") */\n  0x9edfad36e7d4d9da54b4f78f22bf97cb5b58bb7998294a4288da41c15c647c45\n    /* \"src/token.sol\":3481:3493  _msgSender() */\n  tag_22\n    /* \"src/token.sol\":3481:3491  _msgSender */\n  shl(0x20, tag_15)\n    /* \"src/token.sol\":3481:3493  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_22:\n    /* \"src/token.sol\":3463:3473  _grantRole */\n  shl(0x20, tag_16)\n    /* \"src/token.sol\":3463:3494  _grantRole(_BURN, _msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_21:\n  pop\n    /* \"src/token.sol\":3504:3538  _mint(_msgSender(), 1000000 ether) */\n  tag_23\n    /* \"src/token.sol\":3510:3522  _msgSender() */\n  tag_24\n    /* \"src/token.sol\":3510:3520  _msgSender */\n  shl(0x20, tag_15)\n    /* \"src/token.sol\":3510:3522  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_24:\n    /* \"src/token.sol\":3524:3537  1000000 ether */\n  0xd3c21bcecceda1000000\n    /* \"src/token.sol\":3504:3509  _mint */\n  shl(0x20, tag_25)\n    /* \"src/token.sol\":3504:3538  _mint(_msgSender(), 1000000 ether) */\n  0x20\n  shr\n  jump\t// in\ntag_23:\n    /* \"src/token.sol\":2947:3586  constructor(address _vault) ERC20(\"Token\", \"TKN\") {... */\n  pop\n    /* \"src/token.sol\":740:12422  contract Token is ERC20, AccessControl, ReentrancyGuard {... */\n  jump(tag_26)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_15:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  tag_29\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n  shl(0x20, tag_30)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_29:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_31\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x05\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_32\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n  shl(0x20, tag_15)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_32:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  pop\n  jump(tag_28)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_31:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_28:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_36\n  swap2\n  swap1\n  tag_37\n  jump\t// in\ntag_36:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_38\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  shl(0x20, tag_39)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_38:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_30:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  0x05\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"src/token.sol\":8978:9242  function _update(address from, address to, uint256 amount) internal virtual override {... */\ntag_39:\n    /* \"src/token.sol\":9093:9094  0 */\n  0x00\n    /* \"src/token.sol\":9077:9095  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"src/token.sol\":9077:9081  from */\n  dup4\n    /* \"src/token.sol\":9077:9095  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"src/token.sol\":9073:9195  if (from == address(0)) { ... */\n  tag_42\n  jumpi\n    /* \"src/token.sol\":9146:9150  _cap */\n  sload(0x07)\n    /* \"src/token.sol\":9136:9142  amount */\n  dup2\n    /* \"src/token.sol\":9120:9133  totalSupply() */\n  tag_43\n    /* \"src/token.sol\":9120:9131  totalSupply */\n  shl(0x20, tag_44)\n    /* \"src/token.sol\":9120:9133  totalSupply() */\n  0x20\n  shr\n  jump\t// in\ntag_43:\n    /* \"src/token.sol\":9120:9142  totalSupply() + amount */\n  tag_45\n  swap2\n  swap1\n  tag_46\n  jump\t// in\ntag_45:\n    /* \"src/token.sol\":9120:9150  totalSupply() + amount <= _cap */\n  gt\n  iszero\n    /* \"src/token.sol\":9112:9184  require(totalSupply() + amount <= _cap, \"Contract: Supply Cap exceeded\") */\n  tag_47\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_48\n  swap1\n  tag_49\n  jump\t// in\ntag_48:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_47:\n    /* \"src/token.sol\":9073:9195  if (from == address(0)) { ... */\ntag_42:\n    /* \"src/token.sol\":9204:9235  super._update(from, to, amount) */\n  tag_50\n    /* \"src/token.sol\":9218:9222  from */\n  dup4\n    /* \"src/token.sol\":9224:9226  to */\n  dup4\n    /* \"src/token.sol\":9228:9234  amount */\n  dup4\n    /* \"src/token.sol\":9204:9217  super._update */\n  shl(0x20, tag_51)\n    /* \"src/token.sol\":9204:9235  super._update(from, to, amount) */\n  0x20\n  shr\n  jump\t// in\ntag_50:\n    /* \"src/token.sol\":8978:9242  function _update(address from, address to, uint256 amount) internal virtual override {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\ntag_44:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n  sload(0x02)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_51:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_54\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_55\n  swap2\n  swap1\n  tag_46\n  jump\t// in\ntag_55:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  jump(tag_56)\ntag_54:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_57\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_58\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_59\n  jump\t// in\ntag_58:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_57:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_56:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_60\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_61)\ntag_60:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_61:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_62\n  swap2\n  swap1\n  tag_63\n  jump\t// in\ntag_62:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_65:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_67:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_68:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_103\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_67\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_69:\n    /* \"#utility.yul\":641:665   */\n  tag_105\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_68\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_106\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_106:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_70:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_108\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_69\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_110\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_111\n  tag_65\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":932:1051   */\ntag_110:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_112\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_70\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1301   */\ntag_71:\n    /* \"#utility.yul\":1254:1260   */\n  0x00\n    /* \"#utility.yul\":1288:1293   */\n  dup2\n    /* \"#utility.yul\":1282:1294   */\n  mload\n    /* \"#utility.yul\":1272:1294   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1301   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:1487   */\ntag_72:\n    /* \"#utility.yul\":1355:1432   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1345:1433   */\n  mstore\n    /* \"#utility.yul\":1452:1456   */\n  0x41\n    /* \"#utility.yul\":1449:1450   */\n  0x04\n    /* \"#utility.yul\":1442:1457   */\n  mstore\n    /* \"#utility.yul\":1476:1480   */\n  0x24\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1466:1481   */\n  revert\n    /* \"#utility.yul\":1493:1673   */\ntag_73:\n    /* \"#utility.yul\":1541:1618   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1531:1619   */\n  mstore\n    /* \"#utility.yul\":1638:1642   */\n  0x22\n    /* \"#utility.yul\":1635:1636   */\n  0x04\n    /* \"#utility.yul\":1628:1643   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x24\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1667   */\n  revert\n    /* \"#utility.yul\":1679:1999   */\ntag_74:\n    /* \"#utility.yul\":1723:1729   */\n  0x00\n    /* \"#utility.yul\":1760:1761   */\n  0x02\n    /* \"#utility.yul\":1754:1758   */\n  dup3\n    /* \"#utility.yul\":1750:1762   */\n  div\n    /* \"#utility.yul\":1740:1762   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:1808   */\n  0x01\n    /* \"#utility.yul\":1801:1805   */\n  dup3\n    /* \"#utility.yul\":1797:1809   */\n  and\n    /* \"#utility.yul\":1828:1846   */\n  dup1\n    /* \"#utility.yul\":1818:1899   */\n  tag_117\n  jumpi\n    /* \"#utility.yul\":1884:1888   */\n  0x7f\n    /* \"#utility.yul\":1876:1882   */\n  dup3\n    /* \"#utility.yul\":1872:1889   */\n  and\n    /* \"#utility.yul\":1862:1889   */\n  swap2\n  pop\n    /* \"#utility.yul\":1818:1899   */\ntag_117:\n    /* \"#utility.yul\":1946:1948   */\n  0x20\n    /* \"#utility.yul\":1938:1944   */\n  dup3\n    /* \"#utility.yul\":1935:1949   */\n  lt\n    /* \"#utility.yul\":1915:1933   */\n  dup2\n    /* \"#utility.yul\":1912:1950   */\n  sub\n    /* \"#utility.yul\":1909:1993   */\n  tag_118\n  jumpi\n    /* \"#utility.yul\":1965:1983   */\n  tag_119\n  tag_73\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":1909:1993   */\ntag_118:\n    /* \"#utility.yul\":1730:1999   */\n  pop\n    /* \"#utility.yul\":1679:1999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2005:2146   */\ntag_75:\n    /* \"#utility.yul\":2054:2058   */\n  0x00\n    /* \"#utility.yul\":2077:2080   */\n  dup2\n    /* \"#utility.yul\":2069:2080   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2103   */\n  dup2\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2090:2104   */\n  mstore\n    /* \"#utility.yul\":2134:2138   */\n  0x20\n    /* \"#utility.yul\":2131:2132   */\n  0x00\n    /* \"#utility.yul\":2121:2139   */\n  keccak256\n    /* \"#utility.yul\":2113:2139   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2146   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2152:2245   */\ntag_76:\n    /* \"#utility.yul\":2189:2195   */\n  0x00\n    /* \"#utility.yul\":2236:2238   */\n  0x20\n    /* \"#utility.yul\":2231:2233   */\n  0x1f\n    /* \"#utility.yul\":2224:2229   */\n  dup4\n    /* \"#utility.yul\":2220:2234   */\n  add\n    /* \"#utility.yul\":2216:2239   */\n  div\n    /* \"#utility.yul\":2206:2239   */\n  swap1\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2251:2358   */\ntag_77:\n    /* \"#utility.yul\":2295:2303   */\n  0x00\n    /* \"#utility.yul\":2345:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2343   */\n  dup3\n    /* \"#utility.yul\":2335:2351   */\n  shl\n    /* \"#utility.yul\":2314:2351   */\n  swap1\n  pop\n    /* \"#utility.yul\":2251:2358   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2757   */\ntag_78:\n    /* \"#utility.yul\":2433:2439   */\n  0x00\n    /* \"#utility.yul\":2483:2484   */\n  0x08\n    /* \"#utility.yul\":2471:2481   */\n  dup4\n    /* \"#utility.yul\":2467:2485   */\n  mul\n    /* \"#utility.yul\":2506:2603   */\n  tag_124\n    /* \"#utility.yul\":2536:2602   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2525:2534   */\n  dup3\n    /* \"#utility.yul\":2506:2603   */\n  tag_77\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":2624:2663   */\n  tag_125\n    /* \"#utility.yul\":2654:2662   */\n  dup7\n    /* \"#utility.yul\":2643:2652   */\n  dup4\n    /* \"#utility.yul\":2624:2663   */\n  tag_77\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":2612:2663   */\n  swap6\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  dup1\n    /* \"#utility.yul\":2692:2701   */\n  not\n    /* \"#utility.yul\":2685:2690   */\n  dup5\n    /* \"#utility.yul\":2681:2702   */\n  and\n    /* \"#utility.yul\":2672:2702   */\n  swap4\n  pop\n    /* \"#utility.yul\":2745:2749   */\n  dup1\n    /* \"#utility.yul\":2735:2743   */\n  dup7\n    /* \"#utility.yul\":2731:2750   */\n  and\n    /* \"#utility.yul\":2724:2729   */\n  dup5\n    /* \"#utility.yul\":2721:2751   */\n  or\n    /* \"#utility.yul\":2711:2751   */\n  swap3\n  pop\n    /* \"#utility.yul\":2440:2757   */\n  pop\n  pop\n    /* \"#utility.yul\":2364:2757   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2763:2840   */\ntag_79:\n    /* \"#utility.yul\":2800:2807   */\n  0x00\n    /* \"#utility.yul\":2829:2834   */\n  dup2\n    /* \"#utility.yul\":2818:2834   */\n  swap1\n  pop\n    /* \"#utility.yul\":2763:2840   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2846:2906   */\ntag_80:\n    /* \"#utility.yul\":2874:2877   */\n  0x00\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2888:2900   */\n  swap1\n  pop\n    /* \"#utility.yul\":2846:2906   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2912:3054   */\ntag_81:\n    /* \"#utility.yul\":2962:2971   */\n  0x00\n    /* \"#utility.yul\":2995:3048   */\n  tag_129\n    /* \"#utility.yul\":3013:3047   */\n  tag_130\n    /* \"#utility.yul\":3022:3046   */\n  tag_131\n    /* \"#utility.yul\":3040:3045   */\n  dup5\n    /* \"#utility.yul\":3022:3046   */\n  tag_79\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":3013:3047   */\n  tag_80\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":2995:3048   */\n  tag_79\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":2982:3048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2912:3054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3060:3135   */\ntag_82:\n    /* \"#utility.yul\":3103:3106   */\n  0x00\n    /* \"#utility.yul\":3124:3129   */\n  dup2\n    /* \"#utility.yul\":3117:3129   */\n  swap1\n  pop\n    /* \"#utility.yul\":3060:3135   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3141:3410   */\ntag_83:\n    /* \"#utility.yul\":3251:3290   */\n  tag_134\n    /* \"#utility.yul\":3282:3289   */\n  dup4\n    /* \"#utility.yul\":3251:3290   */\n  tag_81\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":3312:3403   */\n  tag_135\n    /* \"#utility.yul\":3361:3402   */\n  tag_136\n    /* \"#utility.yul\":3385:3401   */\n  dup3\n    /* \"#utility.yul\":3361:3402   */\n  tag_82\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":3353:3359   */\n  dup5\n    /* \"#utility.yul\":3346:3350   */\n  dup5\n    /* \"#utility.yul\":3340:3351   */\n  sload\n    /* \"#utility.yul\":3312:3403   */\n  tag_78\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":3306:3310   */\n  dup3\n    /* \"#utility.yul\":3299:3404   */\n  sstore\n    /* \"#utility.yul\":3217:3410   */\n  pop\n    /* \"#utility.yul\":3141:3410   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3416:3489   */\ntag_84:\n    /* \"#utility.yul\":3461:3464   */\n  0x00\n    /* \"#utility.yul\":3416:3489   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3495:3684   */\ntag_85:\n    /* \"#utility.yul\":3572:3604   */\n  tag_139\n  tag_84\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":3613:3678   */\n  tag_140\n    /* \"#utility.yul\":3671:3677   */\n  dup2\n    /* \"#utility.yul\":3663:3669   */\n  dup5\n    /* \"#utility.yul\":3657:3661   */\n  dup5\n    /* \"#utility.yul\":3613:3678   */\n  tag_83\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":3548:3684   */\n  pop\n    /* \"#utility.yul\":3495:3684   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3690:3876   */\ntag_86:\n    /* \"#utility.yul\":3750:3870   */\ntag_142:\n    /* \"#utility.yul\":3767:3770   */\n  dup2\n    /* \"#utility.yul\":3760:3765   */\n  dup2\n    /* \"#utility.yul\":3757:3771   */\n  lt\n    /* \"#utility.yul\":3750:3870   */\n  iszero\n  tag_144\n  jumpi\n    /* \"#utility.yul\":3821:3860   */\n  tag_145\n    /* \"#utility.yul\":3858:3859   */\n  0x00\n    /* \"#utility.yul\":3851:3856   */\n  dup3\n    /* \"#utility.yul\":3821:3860   */\n  tag_85\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":3794:3795   */\n  0x01\n    /* \"#utility.yul\":3787:3792   */\n  dup2\n    /* \"#utility.yul\":3783:3796   */\n  add\n    /* \"#utility.yul\":3774:3796   */\n  swap1\n  pop\n    /* \"#utility.yul\":3750:3870   */\n  jump(tag_142)\ntag_144:\n    /* \"#utility.yul\":3690:3876   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3882:4425   */\ntag_87:\n    /* \"#utility.yul\":3983:3985   */\n  0x1f\n    /* \"#utility.yul\":3978:3981   */\n  dup3\n    /* \"#utility.yul\":3975:3986   */\n  gt\n    /* \"#utility.yul\":3972:4418   */\n  iszero\n  tag_147\n  jumpi\n    /* \"#utility.yul\":4017:4055   */\n  tag_148\n    /* \"#utility.yul\":4049:4054   */\n  dup2\n    /* \"#utility.yul\":4017:4055   */\n  tag_75\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":4101:4130   */\n  tag_149\n    /* \"#utility.yul\":4119:4129   */\n  dup5\n    /* \"#utility.yul\":4101:4130   */\n  tag_76\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":4091:4099   */\n  dup2\n    /* \"#utility.yul\":4087:4131   */\n  add\n    /* \"#utility.yul\":4284:4286   */\n  0x20\n    /* \"#utility.yul\":4272:4282   */\n  dup6\n    /* \"#utility.yul\":4269:4287   */\n  lt\n    /* \"#utility.yul\":4266:4315   */\n  iszero\n  tag_150\n  jumpi\n    /* \"#utility.yul\":4305:4313   */\n  dup2\n    /* \"#utility.yul\":4290:4313   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4315   */\ntag_150:\n    /* \"#utility.yul\":4328:4408   */\n  tag_151\n    /* \"#utility.yul\":4384:4406   */\n  tag_152\n    /* \"#utility.yul\":4402:4405   */\n  dup6\n    /* \"#utility.yul\":4384:4406   */\n  tag_76\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":4374:4382   */\n  dup4\n    /* \"#utility.yul\":4370:4407   */\n  add\n    /* \"#utility.yul\":4357:4368   */\n  dup3\n    /* \"#utility.yul\":4328:4408   */\n  tag_86\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":3987:4418   */\n  pop\n  pop\n    /* \"#utility.yul\":3972:4418   */\ntag_147:\n    /* \"#utility.yul\":3882:4425   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4431:4548   */\ntag_88:\n    /* \"#utility.yul\":4485:4493   */\n  0x00\n    /* \"#utility.yul\":4535:4540   */\n  dup3\n    /* \"#utility.yul\":4529:4533   */\n  dup3\n    /* \"#utility.yul\":4525:4541   */\n  shr\n    /* \"#utility.yul\":4504:4541   */\n  swap1\n  pop\n    /* \"#utility.yul\":4431:4548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4554:4723   */\ntag_89:\n    /* \"#utility.yul\":4598:4604   */\n  0x00\n    /* \"#utility.yul\":4631:4682   */\n  tag_155\n    /* \"#utility.yul\":4679:4680   */\n  0x00\n    /* \"#utility.yul\":4675:4681   */\n  not\n    /* \"#utility.yul\":4667:4672   */\n  dup5\n    /* \"#utility.yul\":4664:4665   */\n  0x08\n    /* \"#utility.yul\":4660:4673   */\n  mul\n    /* \"#utility.yul\":4631:4682   */\n  tag_88\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":4627:4683   */\n  not\n    /* \"#utility.yul\":4712:4716   */\n  dup1\n    /* \"#utility.yul\":4706:4710   */\n  dup4\n    /* \"#utility.yul\":4702:4717   */\n  and\n    /* \"#utility.yul\":4692:4717   */\n  swap2\n  pop\n    /* \"#utility.yul\":4605:4723   */\n  pop\n    /* \"#utility.yul\":4554:4723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4728:5023   */\ntag_90:\n    /* \"#utility.yul\":4804:4808   */\n  0x00\n    /* \"#utility.yul\":4950:4979   */\n  tag_157\n    /* \"#utility.yul\":4975:4978   */\n  dup4\n    /* \"#utility.yul\":4969:4973   */\n  dup4\n    /* \"#utility.yul\":4950:4979   */\n  tag_89\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":4942:4979   */\n  swap2\n  pop\n    /* \"#utility.yul\":5012:5015   */\n  dup3\n    /* \"#utility.yul\":5009:5010   */\n  0x02\n    /* \"#utility.yul\":5005:5016   */\n  mul\n    /* \"#utility.yul\":4999:5003   */\n  dup3\n    /* \"#utility.yul\":4996:5017   */\n  or\n    /* \"#utility.yul\":4988:5017   */\n  swap1\n  pop\n    /* \"#utility.yul\":4728:5023   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:6423   */\ntag_9:\n    /* \"#utility.yul\":5145:5182   */\n  tag_159\n    /* \"#utility.yul\":5178:5181   */\n  dup3\n    /* \"#utility.yul\":5145:5182   */\n  tag_71\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":5247:5265   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5239:5245   */\n  dup2\n    /* \"#utility.yul\":5236:5266   */\n  gt\n    /* \"#utility.yul\":5233:5289   */\n  iszero\n  tag_160\n  jumpi\n    /* \"#utility.yul\":5269:5287   */\n  tag_161\n  tag_72\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":5233:5289   */\ntag_160:\n    /* \"#utility.yul\":5313:5351   */\n  tag_162\n    /* \"#utility.yul\":5345:5349   */\n  dup3\n    /* \"#utility.yul\":5339:5350   */\n  sload\n    /* \"#utility.yul\":5313:5351   */\n  tag_74\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":5398:5465   */\n  tag_163\n    /* \"#utility.yul\":5458:5464   */\n  dup3\n    /* \"#utility.yul\":5450:5456   */\n  dup3\n    /* \"#utility.yul\":5444:5448   */\n  dup6\n    /* \"#utility.yul\":5398:5465   */\n  tag_87\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":5492:5493   */\n  0x00\n    /* \"#utility.yul\":5516:5520   */\n  0x20\n    /* \"#utility.yul\":5503:5520   */\n  swap1\n  pop\n    /* \"#utility.yul\":5548:5550   */\n  0x1f\n    /* \"#utility.yul\":5540:5546   */\n  dup4\n    /* \"#utility.yul\":5537:5551   */\n  gt\n    /* \"#utility.yul\":5565:5566   */\n  0x01\n    /* \"#utility.yul\":5560:6178   */\n  dup2\n  eq\n  tag_165\n  jumpi\n    /* \"#utility.yul\":6222:6223   */\n  0x00\n    /* \"#utility.yul\":6239:6245   */\n  dup5\n    /* \"#utility.yul\":6236:6313   */\n  iszero\n  tag_166\n  jumpi\n    /* \"#utility.yul\":6288:6297   */\n  dup3\n    /* \"#utility.yul\":6283:6286   */\n  dup8\n    /* \"#utility.yul\":6279:6298   */\n  add\n    /* \"#utility.yul\":6273:6299   */\n  mload\n    /* \"#utility.yul\":6264:6299   */\n  swap1\n  pop\n    /* \"#utility.yul\":6236:6313   */\ntag_166:\n    /* \"#utility.yul\":6339:6406   */\n  tag_167\n    /* \"#utility.yul\":6399:6405   */\n  dup6\n    /* \"#utility.yul\":6392:6397   */\n  dup3\n    /* \"#utility.yul\":6339:6406   */\n  tag_90\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":6333:6337   */\n  dup7\n    /* \"#utility.yul\":6326:6407   */\n  sstore\n    /* \"#utility.yul\":6195:6417   */\n  pop\n    /* \"#utility.yul\":5530:6417   */\n  jump(tag_164)\n    /* \"#utility.yul\":5560:6178   */\ntag_165:\n    /* \"#utility.yul\":5612:5616   */\n  0x1f\n    /* \"#utility.yul\":5608:5617   */\n  not\n    /* \"#utility.yul\":5600:5606   */\n  dup5\n    /* \"#utility.yul\":5596:5618   */\n  and\n    /* \"#utility.yul\":5646:5683   */\n  tag_168\n    /* \"#utility.yul\":5678:5682   */\n  dup7\n    /* \"#utility.yul\":5646:5683   */\n  tag_75\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":5705:5706   */\n  0x00\n    /* \"#utility.yul\":5719:5927   */\ntag_169:\n    /* \"#utility.yul\":5733:5740   */\n  dup3\n    /* \"#utility.yul\":5730:5731   */\n  dup2\n    /* \"#utility.yul\":5727:5741   */\n  lt\n    /* \"#utility.yul\":5719:5927   */\n  iszero\n  tag_171\n  jumpi\n    /* \"#utility.yul\":5812:5821   */\n  dup5\n    /* \"#utility.yul\":5807:5810   */\n  dup10\n    /* \"#utility.yul\":5803:5822   */\n  add\n    /* \"#utility.yul\":5797:5823   */\n  mload\n    /* \"#utility.yul\":5789:5795   */\n  dup3\n    /* \"#utility.yul\":5782:5824   */\n  sstore\n    /* \"#utility.yul\":5863:5864   */\n  0x01\n    /* \"#utility.yul\":5855:5861   */\n  dup3\n    /* \"#utility.yul\":5851:5865   */\n  add\n    /* \"#utility.yul\":5841:5865   */\n  swap2\n  pop\n    /* \"#utility.yul\":5910:5912   */\n  0x20\n    /* \"#utility.yul\":5899:5908   */\n  dup6\n    /* \"#utility.yul\":5895:5913   */\n  add\n    /* \"#utility.yul\":5882:5913   */\n  swap5\n  pop\n    /* \"#utility.yul\":5756:5760   */\n  0x20\n    /* \"#utility.yul\":5753:5754   */\n  dup2\n    /* \"#utility.yul\":5749:5761   */\n  add\n    /* \"#utility.yul\":5744:5761   */\n  swap1\n  pop\n    /* \"#utility.yul\":5719:5927   */\n  jump(tag_169)\ntag_171:\n    /* \"#utility.yul\":5955:5961   */\n  dup7\n    /* \"#utility.yul\":5946:5953   */\n  dup4\n    /* \"#utility.yul\":5943:5962   */\n  lt\n    /* \"#utility.yul\":5940:6119   */\n  iszero\n  tag_172\n  jumpi\n    /* \"#utility.yul\":6013:6022   */\n  dup5\n    /* \"#utility.yul\":6008:6011   */\n  dup10\n    /* \"#utility.yul\":6004:6023   */\n  add\n    /* \"#utility.yul\":5998:6024   */\n  mload\n    /* \"#utility.yul\":6056:6104   */\n  tag_173\n    /* \"#utility.yul\":6098:6102   */\n  0x1f\n    /* \"#utility.yul\":6090:6096   */\n  dup10\n    /* \"#utility.yul\":6086:6103   */\n  and\n    /* \"#utility.yul\":6075:6084   */\n  dup3\n    /* \"#utility.yul\":6056:6104   */\n  tag_89\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":6048:6054   */\n  dup4\n    /* \"#utility.yul\":6041:6105   */\n  sstore\n    /* \"#utility.yul\":5963:6119   */\n  pop\n    /* \"#utility.yul\":5940:6119   */\ntag_172:\n    /* \"#utility.yul\":6165:6166   */\n  0x01\n    /* \"#utility.yul\":6161:6162   */\n  0x02\n    /* \"#utility.yul\":6153:6159   */\n  dup9\n    /* \"#utility.yul\":6149:6163   */\n  mul\n    /* \"#utility.yul\":6145:6167   */\n  add\n    /* \"#utility.yul\":6139:6143   */\n  dup9\n    /* \"#utility.yul\":6132:6168   */\n  sstore\n    /* \"#utility.yul\":5567:6178   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5530:6417   */\ntag_164:\n  pop\n    /* \"#utility.yul\":5120:6423   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5028:6423   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6429:6547   */\ntag_91:\n    /* \"#utility.yul\":6516:6540   */\n  tag_175\n    /* \"#utility.yul\":6534:6539   */\n  dup2\n    /* \"#utility.yul\":6516:6540   */\n  tag_68\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":6511:6514   */\n  dup3\n    /* \"#utility.yul\":6504:6541   */\n  mstore\n    /* \"#utility.yul\":6429:6547   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6553:6775   */\ntag_37:\n    /* \"#utility.yul\":6646:6650   */\n  0x00\n    /* \"#utility.yul\":6684:6686   */\n  0x20\n    /* \"#utility.yul\":6673:6682   */\n  dup3\n    /* \"#utility.yul\":6669:6687   */\n  add\n    /* \"#utility.yul\":6661:6687   */\n  swap1\n  pop\n    /* \"#utility.yul\":6697:6768   */\n  tag_177\n    /* \"#utility.yul\":6765:6766   */\n  0x00\n    /* \"#utility.yul\":6754:6763   */\n  dup4\n    /* \"#utility.yul\":6750:6767   */\n  add\n    /* \"#utility.yul\":6741:6747   */\n  dup5\n    /* \"#utility.yul\":6697:6768   */\n  tag_91\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":6553:6775   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6781:6961   */\ntag_92:\n    /* \"#utility.yul\":6829:6906   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6826:6827   */\n  0x00\n    /* \"#utility.yul\":6819:6907   */\n  mstore\n    /* \"#utility.yul\":6926:6930   */\n  0x11\n    /* \"#utility.yul\":6923:6924   */\n  0x04\n    /* \"#utility.yul\":6916:6931   */\n  mstore\n    /* \"#utility.yul\":6950:6954   */\n  0x24\n    /* \"#utility.yul\":6947:6948   */\n  0x00\n    /* \"#utility.yul\":6940:6955   */\n  revert\n    /* \"#utility.yul\":6967:7158   */\ntag_46:\n    /* \"#utility.yul\":7007:7010   */\n  0x00\n    /* \"#utility.yul\":7026:7046   */\n  tag_180\n    /* \"#utility.yul\":7044:7045   */\n  dup3\n    /* \"#utility.yul\":7026:7046   */\n  tag_79\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":7021:7046   */\n  swap2\n  pop\n    /* \"#utility.yul\":7060:7080   */\n  tag_181\n    /* \"#utility.yul\":7078:7079   */\n  dup4\n    /* \"#utility.yul\":7060:7080   */\n  tag_79\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":7055:7080   */\n  swap3\n  pop\n    /* \"#utility.yul\":7103:7104   */\n  dup3\n    /* \"#utility.yul\":7100:7101   */\n  dup3\n    /* \"#utility.yul\":7096:7105   */\n  add\n    /* \"#utility.yul\":7089:7105   */\n  swap1\n  pop\n    /* \"#utility.yul\":7124:7127   */\n  dup1\n    /* \"#utility.yul\":7121:7122   */\n  dup3\n    /* \"#utility.yul\":7118:7128   */\n  gt\n    /* \"#utility.yul\":7115:7151   */\n  iszero\n  tag_182\n  jumpi\n    /* \"#utility.yul\":7131:7149   */\n  tag_183\n  tag_92\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":7115:7151   */\ntag_182:\n    /* \"#utility.yul\":6967:7158   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7164:7333   */\ntag_93:\n    /* \"#utility.yul\":7248:7259   */\n  0x00\n    /* \"#utility.yul\":7282:7288   */\n  dup3\n    /* \"#utility.yul\":7277:7280   */\n  dup3\n    /* \"#utility.yul\":7270:7289   */\n  mstore\n    /* \"#utility.yul\":7322:7326   */\n  0x20\n    /* \"#utility.yul\":7317:7320   */\n  dup3\n    /* \"#utility.yul\":7313:7327   */\n  add\n    /* \"#utility.yul\":7298:7327   */\n  swap1\n  pop\n    /* \"#utility.yul\":7164:7333   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7339:7518   */\ntag_94:\n    /* \"#utility.yul\":7479:7510   */\n  0x436f6e74726163743a20537570706c7920436170206578636565646564000000\n    /* \"#utility.yul\":7475:7476   */\n  0x00\n    /* \"#utility.yul\":7467:7473   */\n  dup3\n    /* \"#utility.yul\":7463:7477   */\n  add\n    /* \"#utility.yul\":7456:7511   */\n  mstore\n    /* \"#utility.yul\":7339:7518   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7524:7890   */\ntag_95:\n    /* \"#utility.yul\":7666:7669   */\n  0x00\n    /* \"#utility.yul\":7687:7754   */\n  tag_187\n    /* \"#utility.yul\":7751:7753   */\n  0x1d\n    /* \"#utility.yul\":7746:7749   */\n  dup4\n    /* \"#utility.yul\":7687:7754   */\n  tag_93\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":7680:7754   */\n  swap2\n  pop\n    /* \"#utility.yul\":7763:7856   */\n  tag_188\n    /* \"#utility.yul\":7852:7855   */\n  dup3\n    /* \"#utility.yul\":7763:7856   */\n  tag_94\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":7881:7883   */\n  0x20\n    /* \"#utility.yul\":7876:7879   */\n  dup3\n    /* \"#utility.yul\":7872:7884   */\n  add\n    /* \"#utility.yul\":7865:7884   */\n  swap1\n  pop\n    /* \"#utility.yul\":7524:7890   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7896:8315   */\ntag_49:\n    /* \"#utility.yul\":8062:8066   */\n  0x00\n    /* \"#utility.yul\":8100:8102   */\n  0x20\n    /* \"#utility.yul\":8089:8098   */\n  dup3\n    /* \"#utility.yul\":8085:8103   */\n  add\n    /* \"#utility.yul\":8077:8103   */\n  swap1\n  pop\n    /* \"#utility.yul\":8149:8158   */\n  dup2\n    /* \"#utility.yul\":8143:8147   */\n  dup2\n    /* \"#utility.yul\":8139:8159   */\n  sub\n    /* \"#utility.yul\":8135:8136   */\n  0x00\n    /* \"#utility.yul\":8124:8133   */\n  dup4\n    /* \"#utility.yul\":8120:8137   */\n  add\n    /* \"#utility.yul\":8113:8160   */\n  mstore\n    /* \"#utility.yul\":8177:8308   */\n  tag_190\n    /* \"#utility.yul\":8303:8307   */\n  dup2\n    /* \"#utility.yul\":8177:8308   */\n  tag_95\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":8169:8308   */\n  swap1\n  pop\n    /* \"#utility.yul\":7896:8315   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8321:8439   */\ntag_96:\n    /* \"#utility.yul\":8408:8432   */\n  tag_192\n    /* \"#utility.yul\":8426:8431   */\n  dup2\n    /* \"#utility.yul\":8408:8432   */\n  tag_79\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":8403:8406   */\n  dup3\n    /* \"#utility.yul\":8396:8433   */\n  mstore\n    /* \"#utility.yul\":8321:8439   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8445:8887   */\ntag_59:\n    /* \"#utility.yul\":8594:8598   */\n  0x00\n    /* \"#utility.yul\":8632:8634   */\n  0x60\n    /* \"#utility.yul\":8621:8630   */\n  dup3\n    /* \"#utility.yul\":8617:8635   */\n  add\n    /* \"#utility.yul\":8609:8635   */\n  swap1\n  pop\n    /* \"#utility.yul\":8645:8716   */\n  tag_194\n    /* \"#utility.yul\":8713:8714   */\n  0x00\n    /* \"#utility.yul\":8702:8711   */\n  dup4\n    /* \"#utility.yul\":8698:8715   */\n  add\n    /* \"#utility.yul\":8689:8695   */\n  dup7\n    /* \"#utility.yul\":8645:8716   */\n  tag_91\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":8726:8798   */\n  tag_195\n    /* \"#utility.yul\":8794:8796   */\n  0x20\n    /* \"#utility.yul\":8783:8792   */\n  dup4\n    /* \"#utility.yul\":8779:8797   */\n  add\n    /* \"#utility.yul\":8770:8776   */\n  dup6\n    /* \"#utility.yul\":8726:8798   */\n  tag_96\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":8808:8880   */\n  tag_196\n    /* \"#utility.yul\":8876:8878   */\n  0x40\n    /* \"#utility.yul\":8865:8874   */\n  dup4\n    /* \"#utility.yul\":8861:8879   */\n  add\n    /* \"#utility.yul\":8852:8858   */\n  dup5\n    /* \"#utility.yul\":8808:8880   */\n  tag_96\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":8445:8887   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8893:9115   */\ntag_63:\n    /* \"#utility.yul\":8986:8990   */\n  0x00\n    /* \"#utility.yul\":9024:9026   */\n  0x20\n    /* \"#utility.yul\":9013:9022   */\n  dup3\n    /* \"#utility.yul\":9009:9027   */\n  add\n    /* \"#utility.yul\":9001:9027   */\n  swap1\n  pop\n    /* \"#utility.yul\":9037:9108   */\n  tag_198\n    /* \"#utility.yul\":9105:9106   */\n  0x00\n    /* \"#utility.yul\":9094:9103   */\n  dup4\n    /* \"#utility.yul\":9090:9107   */\n  add\n    /* \"#utility.yul\":9081:9087   */\n  dup5\n    /* \"#utility.yul\":9037:9108   */\n  tag_96\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":8893:9115   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"src/token.sol\":740:12422  contract Token is ERC20, AccessControl, ReentrancyGuard {... */\ntag_26:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/token.sol\":740:12422  contract Token is ERC20, AccessControl, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x79cc6790\n      gt\n      tag_44\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_45\n      jumpi\n      dup1\n      0xd547741f\n      gt\n      tag_46\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xdeb6db36\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xea5cb532\n      eq\n      tag_41\n      jumpi\n      dup1\n      0xf2250d3d\n      eq\n      tag_42\n      jumpi\n      dup1\n      0xfbfa77cf\n      eq\n      tag_43\n      jumpi\n      jump(tag_2)\n    tag_46:\n      dup1\n      0xa9059cbb\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xb6a3f59a\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xc30796ab\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xcf820461\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xd1c9f69b\n      eq\n      tag_37\n      jumpi\n      jump(tag_2)\n    tag_45:\n      dup1\n      0x91d14854\n      gt\n      tag_47\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x956feccf\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_32\n      jumpi\n      jump(tag_2)\n    tag_47:\n      dup1\n      0x79cc6790\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x7e92a7fd\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x8d580b9f\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x8ebed5b1\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x8f770ad0\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_44:\n      dup1\n      0x3f914aef\n      gt\n      tag_48\n      jumpi\n      dup1\n      0x51557289\n      gt\n      tag_49\n      jumpi\n      dup1\n      0x51557289\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x53a4c31e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x6ba77a38\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_49:\n      dup1\n      0x3f914aef\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x41f431fd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x449a52f8\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x48132f48\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_48:\n      dup1\n      0x23b872dd\n      gt\n      tag_50\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_50:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x16c38b3c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/token.sol\":3794:4116  function setPaused(bool _paused) external {... */\n    tag_6:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n    tag_66:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/token.sol\":9594:9970  function transferFrom(address from, address to, uint256 value) nonReentrant public virtual override returns (bool) {... */\n    tag_8:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_9:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_10:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n    tag_85:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_11:\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_12:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n    tag_93:\n      stop\n        /* \"src/token.sol\":11019:11270  function setWhitelistAddress(address _whitelist, bool _status) external {... */\n    tag_13:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      tag_99\n      jump\t// in\n    tag_96:\n      stop\n        /* \"src/token.sol\":11612:11897  function moveERC20(IERC20 _ERC20, address _dest, uint _ERC20Amount) nonReentrant public {... */\n    tag_14:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      tag_103\n      jump\t// in\n    tag_100:\n      stop\n        /* \"src/token.sol\":7257:7466  function burn(uint _amount) external pause { ... */\n    tag_15:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      tag_107\n      jump\t// in\n    tag_104:\n      stop\n        /* \"src/token.sol\":6202:6505  function mintTo(address _to, uint _amount) external pause mintToDis {... */\n    tag_16:\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_109:\n      tag_110\n      jump\t// in\n    tag_108:\n      stop\n        /* \"src/token.sol\":12167:12415  function ethRescue(address payable _dest, uint _etherAmount) nonReentrant public {... */\n    tag_17:\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      tag_114\n      jump\t// in\n    tag_111:\n      stop\n        /* \"src/token.sol\":1197:1249  bytes32 public constant _ADMIN = keccak256(\"_ADMIN\") */\n    tag_18:\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_117\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/token.sol\":1017:1067  bytes32 public constant _BURN = keccak256(\"_BURN\") */\n    tag_19:\n      tag_118\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      tag_120\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/token.sol\":1522:1540  bool public paused */\n    tag_20:\n      tag_121\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      tag_123\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/token.sol\":1073:1131  bytes32 public constant _BURNFROM = keccak256(\"_BURNFROM\") */\n    tag_21:\n      tag_124\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      tag_126\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_22:\n      tag_127\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_128\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      tag_130\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      tag_131\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/token.sol\":7753:7992  function burnFrom(address _from, uint _amount) external pause {... */\n    tag_23:\n      tag_132\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_133\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_133:\n      tag_134\n      jump\t// in\n    tag_132:\n      stop\n        /* \"src/token.sol\":957:1011  bytes32 public constant _MINTTO = keccak256(\"_MINTTO\") */\n    tag_24:\n      tag_135\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      tag_137\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/token.sol\":1255:1309  bytes32 public constant _RESCUE = keccak256(\"_RESCUE\") */\n    tag_25:\n      tag_138\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      tag_140\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/token.sol\":901:951  bytes32 public constant _MINT = keccak256(\"_MINT\") */\n    tag_26:\n      tag_141\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      tag_143\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/token.sol\":8620:8696  function supplyCap() public view returns (uint) {... */\n    tag_27:\n      tag_144\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      tag_146\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_28:\n      tag_147\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_148\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_148:\n      tag_149\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      tag_150\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/token.sol\":1589:1613  bool public mintDisabled */\n    tag_29:\n      tag_151\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      tag_153\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_30:\n      tag_154\n      tag_155\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      tag_156\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/token.sol\":6740:7025  function mint(uint _amount) external pause mintDis {... */\n    tag_31:\n      tag_157\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_158\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_158:\n      tag_159\n      jump\t// in\n    tag_157:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_32:\n      tag_160\n      tag_161\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      tag_162\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/token.sol\":10284:10641  function transfer(address to, uint256 value) nonReentrant public virtual override returns (bool) {... */\n    tag_33:\n      tag_163\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_164\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_164:\n      tag_165\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      tag_166\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/token.sol\":8216:8503  function setSupplyCap(uint _supplyCap) external pause {... */\n    tag_34:\n      tag_167\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_168\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_168:\n      tag_169\n      jump\t// in\n    tag_167:\n      stop\n        /* \"src/token.sol\":2625:2675  mapping(address => bool) public whitelistedAddress */\n    tag_35:\n      tag_170\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_171\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_171:\n      tag_172\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      tag_173\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/token.sol\":1447:1478  uint public txFee = 0.005 ether */\n    tag_36:\n      tag_174\n      tag_175\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      tag_176\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/token.sol\":1646:1672  bool public mintToDisabled */\n    tag_37:\n      tag_177\n      tag_178\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      tag_179\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_38:\n      tag_180\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_181\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_181:\n      tag_182\n      jump\t// in\n    tag_180:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_39:\n      tag_183\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_184\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n      tag_186\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      tag_187\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/token.sol\":4308:4661  function disableMint(bool _disableMinting) external {... */\n    tag_40:\n      tag_188\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_189\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_189:\n      tag_190\n      jump\t// in\n    tag_188:\n      stop\n        /* \"src/token.sol\":1137:1191  bytes32 public constant _SUPPLY = keccak256(\"_SUPPLY\") */\n    tag_41:\n      tag_191\n      tag_192\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      tag_193\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/token.sol\":4899:5247  function disableMintTo(bool _disableMintTo) external {... */\n    tag_42:\n      tag_194\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_195\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_195:\n      tag_196\n      jump\t// in\n    tag_194:\n      stop\n        /* \"src/token.sol\":1378:1398  address public vault */\n    tag_43:\n      tag_197\n      tag_198\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      tag_199\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2688:2720  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2684  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_202\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_203\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2748:2759  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2747  super.supportsInterface */\n      tag_204\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_202:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_206\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_208\n      swap1\n      tag_207\n      jump\t// in\n    tag_208:\n      dup1\n      iszero\n      tag_209\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_210\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_209)\n    tag_210:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_211:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_211\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_209:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_213\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_214\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_215\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_216\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/token.sol\":3794:4116  function setPaused(bool _paused) external {... */\n    tag_69:\n        /* \"src/token.sol\":3854:3883  hasRole(_ADMIN, _msgSender()) */\n      tag_218\n        /* \"src/token.sol\":1230:1249  keccak256(\"_ADMIN\") */\n      0xae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d3\n        /* \"src/token.sol\":3870:3882  _msgSender() */\n      tag_219\n        /* \"src/token.sol\":3870:3880  _msgSender */\n      tag_214\n        /* \"src/token.sol\":3870:3882  _msgSender() */\n      jump\t// in\n    tag_219:\n        /* \"src/token.sol\":3854:3861  hasRole */\n      tag_149\n        /* \"src/token.sol\":3854:3883  hasRole(_ADMIN, _msgSender()) */\n      jump\t// in\n    tag_218:\n        /* \"src/token.sol\":3846:3908  require(hasRole(_ADMIN, _msgSender()), \"Contract: Need Admin\") */\n      tag_220\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap1\n      tag_222\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_220:\n        /* \"src/token.sol\":3927:3934  _paused */\n      dup1\n        /* \"src/token.sol\":3918:3924  paused */\n      0x0a\n      0x00\n        /* \"src/token.sol\":3918:3934  paused = _paused */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/token.sol\":3949:3956  _paused */\n      dup1\n        /* \"src/token.sol\":3945:4110  if (_paused) {... */\n      iszero\n      tag_223\n      jumpi\n        /* \"src/token.sol\":3977:4019  ContractPaused(block.number, _msgSender()) */\n      0xd8c9c5623123df8e137854c59a08f9084b75609fe24584228d44ffdce5ab920a\n        /* \"src/token.sol\":3992:4004  block.number */\n      number\n        /* \"src/token.sol\":4006:4018  _msgSender() */\n      tag_224\n        /* \"src/token.sol\":4006:4016  _msgSender */\n      tag_214\n        /* \"src/token.sol\":4006:4018  _msgSender() */\n      jump\t// in\n    tag_224:\n        /* \"src/token.sol\":3977:4019  ContractPaused(block.number, _msgSender()) */\n      mload(0x40)\n      tag_225\n      swap3\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/token.sol\":3945:4110  if (_paused) {... */\n      jump(tag_227)\n    tag_223:\n        /* \"src/token.sol\":4055:4099  ContractUnpaused(block.number, _msgSender()) */\n      0x1e7a7234ad01ed7353bf129217f5c162773639a6cb22773e84bcd5a2b0ef362e\n        /* \"src/token.sol\":4072:4084  block.number */\n      number\n        /* \"src/token.sol\":4086:4098  _msgSender() */\n      tag_228\n        /* \"src/token.sol\":4086:4096  _msgSender */\n      tag_214\n        /* \"src/token.sol\":4086:4098  _msgSender() */\n      jump\t// in\n    tag_228:\n        /* \"src/token.sol\":4055:4099  ContractUnpaused(block.number, _msgSender()) */\n      mload(0x40)\n      tag_229\n      swap3\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/token.sol\":3945:4110  if (_paused) {... */\n    tag_227:\n        /* \"src/token.sol\":3794:4116  function setPaused(bool _paused) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"src/token.sol\":9594:9970  function transferFrom(address from, address to, uint256 value) nonReentrant public virtual override returns (bool) {... */\n    tag_77:\n        /* \"src/token.sol\":9703:9707  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_232\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_233\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_232:\n        /* \"src/token.sol\":9719:9734  address spender */\n      0x00\n        /* \"src/token.sol\":9737:9749  _msgSender() */\n      tag_235\n        /* \"src/token.sol\":9737:9747  _msgSender */\n      tag_214\n        /* \"src/token.sol\":9737:9749  _msgSender() */\n      jump\t// in\n    tag_235:\n        /* \"src/token.sol\":9719:9749  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"src/token.sol\":9763:9781  whitelistedAddress */\n      0x0b\n        /* \"src/token.sol\":9763:9790  whitelistedAddress[spender] */\n      0x00\n        /* \"src/token.sol\":9782:9789  spender */\n      dup3\n        /* \"src/token.sol\":9763:9790  whitelistedAddress[spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/token.sol\":9759:9943  if (whitelistedAddress[spender]) {... */\n      iszero\n      tag_236\n      jumpi\n        /* \"src/token.sol\":9806:9832  _transfer(from, to, value) */\n      tag_237\n        /* \"src/token.sol\":9816:9820  from */\n      dup6\n        /* \"src/token.sol\":9822:9824  to */\n      dup6\n        /* \"src/token.sol\":9826:9831  value */\n      dup6\n        /* \"src/token.sol\":9806:9815  _transfer */\n      tag_238\n        /* \"src/token.sol\":9806:9832  _transfer(from, to, value) */\n      jump\t// in\n    tag_237:\n        /* \"src/token.sol\":9759:9943  if (whitelistedAddress[spender]) {... */\n      jump(tag_239)\n    tag_236:\n        /* \"src/token.sol\":9863:9889  _transfer(from, to, value) */\n      tag_240\n        /* \"src/token.sol\":9873:9877  from */\n      dup6\n        /* \"src/token.sol\":9879:9881  to */\n      dup6\n        /* \"src/token.sol\":9883:9888  value */\n      dup6\n        /* \"src/token.sol\":9863:9872  _transfer */\n      tag_238\n        /* \"src/token.sol\":9863:9889  _transfer(from, to, value) */\n      jump\t// in\n    tag_240:\n        /* \"src/token.sol\":9903:9932  _transfer(from, vault, txFee) */\n      tag_241\n        /* \"src/token.sol\":9913:9917  from */\n      dup6\n        /* \"src/token.sol\":9919:9924  vault */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/token.sol\":9926:9931  txFee */\n      sload(0x09)\n        /* \"src/token.sol\":9903:9912  _transfer */\n      tag_238\n        /* \"src/token.sol\":9903:9932  _transfer(from, vault, txFee) */\n      jump\t// in\n    tag_241:\n        /* \"src/token.sol\":9759:9943  if (whitelistedAddress[spender]) {... */\n    tag_239:\n        /* \"src/token.sol\":9959:9963  true */\n      0x01\n        /* \"src/token.sol\":9952:9963  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_242\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_243\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_242:\n        /* \"src/token.sol\":9594:9970  function transferFrom(address from, address to, uint256 value) nonReentrant public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3908:3912  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_245\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4313:4317  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n      tag_82\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_247\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_248\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_247:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_250\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_251\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_250:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      tag_254\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5453  _msgSender */\n      tag_214\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      jump\t// in\n    tag_254:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5439  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_255\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_255:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_257\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_256:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/token.sol\":11019:11270  function setWhitelistAddress(address _whitelist, bool _status) external {... */\n    tag_99:\n        /* \"src/token.sol\":11109:11136  hasRole(_ADMIN, msg.sender) */\n      tag_259\n        /* \"src/token.sol\":1230:1249  keccak256(\"_ADMIN\") */\n      0xae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d3\n        /* \"src/token.sol\":11125:11135  msg.sender */\n      caller\n        /* \"src/token.sol\":11109:11116  hasRole */\n      tag_149\n        /* \"src/token.sol\":11109:11136  hasRole(_ADMIN, msg.sender) */\n      jump\t// in\n    tag_259:\n        /* \"src/token.sol\":11101:11151  require(hasRole(_ADMIN, msg.sender), \"Need Admin\") */\n      tag_260\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_261\n      swap1\n      tag_262\n      jump\t// in\n    tag_261:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_260:\n        /* \"src/token.sol\":11191:11192  0 */\n      0x00\n        /* \"src/token.sol\":11169:11193  _whitelist != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/token.sol\":11169:11179  _whitelist */\n      dup3\n        /* \"src/token.sol\":11169:11193  _whitelist != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/token.sol\":11161:11213  require(_whitelist != address(0), \"Invalid address\") */\n      tag_263\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap1\n      tag_265\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_263:\n        /* \"src/token.sol\":11256:11263  _status */\n      dup1\n        /* \"src/token.sol\":11223:11241  whitelistedAddress */\n      0x0b\n        /* \"src/token.sol\":11223:11253  whitelistedAddress[_whitelist] */\n      0x00\n        /* \"src/token.sol\":11242:11252  _whitelist */\n      dup5\n        /* \"src/token.sol\":11223:11253  whitelistedAddress[_whitelist] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/token.sol\":11223:11263  whitelistedAddress[_whitelist] = _status */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/token.sol\":11019:11270  function setWhitelistAddress(address _whitelist, bool _status) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/token.sol\":11612:11897  function moveERC20(IERC20 _ERC20, address _dest, uint _ERC20Amount) nonReentrant public {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_267\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_233\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_267:\n        /* \"src/token.sol\":11718:11746  hasRole(_RESCUE, msg.sender) */\n      tag_269\n        /* \"src/token.sol\":1289:1309  keccak256(\"_RESCUE\") */\n      0x508f8f8be8f5dbcb88f4f4500430b8b3684c471ed936f31fea912c78ad46a6b9\n        /* \"src/token.sol\":11735:11745  msg.sender */\n      caller\n        /* \"src/token.sol\":11718:11725  hasRole */\n      tag_149\n        /* \"src/token.sol\":11718:11746  hasRole(_RESCUE, msg.sender) */\n      jump\t// in\n    tag_269:\n        /* \"src/token.sol\":11710:11762  require(hasRole(_RESCUE, msg.sender), \"Need RESCUE\") */\n      tag_270\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_271\n      swap1\n      tag_272\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_270:\n        /* \"src/token.sol\":11772:11820  IERC20(_ERC20).safeTransfer(_dest, _ERC20Amount) */\n      tag_273\n        /* \"src/token.sol\":11800:11805  _dest */\n      dup3\n        /* \"src/token.sol\":11807:11819  _ERC20Amount */\n      dup3\n        /* \"src/token.sol\":11779:11785  _ERC20 */\n      dup6\n        /* \"src/token.sol\":11772:11799  IERC20(_ERC20).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_274\n      swap1\n        /* \"src/token.sol\":11772:11820  IERC20(_ERC20).safeTransfer(_dest, _ERC20Amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_273:\n        /* \"src/token.sol\":11835:11890  ERC20Rescued(_ERC20, block.number, _dest, _ERC20Amount) */\n      0x494215f965756bbc8b7f57addd2a0ebdbce467a4999f8320c67adc1771885d7b\n        /* \"src/token.sol\":11848:11854  _ERC20 */\n      dup4\n        /* \"src/token.sol\":11856:11868  block.number */\n      number\n        /* \"src/token.sol\":11870:11875  _dest */\n      dup5\n        /* \"src/token.sol\":11877:11889  _ERC20Amount */\n      dup5\n        /* \"src/token.sol\":11835:11890  ERC20Rescued(_ERC20, block.number, _dest, _ERC20Amount) */\n      mload(0x40)\n      tag_275\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_276\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_277\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_243\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_277:\n        /* \"src/token.sol\":11612:11897  function moveERC20(IERC20 _ERC20, address _dest, uint _ERC20Amount) nonReentrant public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/token.sol\":7257:7466  function burn(uint _amount) external pause { ... */\n    tag_107:\n        /* \"src/token.sol\":5403:5409  paused */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/token.sol\":5402:5409  !paused */\n      iszero\n        /* \"src/token.sol\":5394:5442  require(!paused, \"Contract: Contract is Paused\") */\n      tag_279\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_280\n      swap1\n      tag_281\n      jump\t// in\n    tag_280:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_279:\n        /* \"src/token.sol\":7319:7347  hasRole(_BURN, _msgSender()) */\n      tag_283\n        /* \"src/token.sol\":1049:1067  keccak256(\"_BURN\") */\n      0x9edfad36e7d4d9da54b4f78f22bf97cb5b58bb7998294a4288da41c15c647c45\n        /* \"src/token.sol\":7334:7346  _msgSender() */\n      tag_284\n        /* \"src/token.sol\":7334:7344  _msgSender */\n      tag_214\n        /* \"src/token.sol\":7334:7346  _msgSender() */\n      jump\t// in\n    tag_284:\n        /* \"src/token.sol\":7319:7326  hasRole */\n      tag_149\n        /* \"src/token.sol\":7319:7347  hasRole(_BURN, _msgSender()) */\n      jump\t// in\n    tag_283:\n        /* \"src/token.sol\":7311:7371  require(hasRole(_BURN, _msgSender()), \"Contract: Need Burn\") */\n      tag_285\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_286\n      swap1\n      tag_287\n      jump\t// in\n    tag_286:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_285:\n        /* \"src/token.sol\":7386:7421  TokensBurned(_amount, _msgSender()) */\n      0x63706707d038997d2210eb026bb1339397deab463921538a81bb98e69ee54ca8\n        /* \"src/token.sol\":7399:7406  _amount */\n      dup2\n        /* \"src/token.sol\":7408:7420  _msgSender() */\n      tag_288\n        /* \"src/token.sol\":7408:7418  _msgSender */\n      tag_214\n        /* \"src/token.sol\":7408:7420  _msgSender() */\n      jump\t// in\n    tag_288:\n        /* \"src/token.sol\":7386:7421  TokensBurned(_amount, _msgSender()) */\n      mload(0x40)\n      tag_289\n      swap3\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_289:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/token.sol\":7431:7459  _burn(_msgSender(), _amount) */\n      tag_290\n        /* \"src/token.sol\":7437:7449  _msgSender() */\n      tag_291\n        /* \"src/token.sol\":7437:7447  _msgSender */\n      tag_214\n        /* \"src/token.sol\":7437:7449  _msgSender() */\n      jump\t// in\n    tag_291:\n        /* \"src/token.sol\":7451:7458  _amount */\n      dup3\n        /* \"src/token.sol\":7431:7436  _burn */\n      tag_292\n        /* \"src/token.sol\":7431:7459  _burn(_msgSender(), _amount) */\n      jump\t// in\n    tag_290:\n        /* \"src/token.sol\":7257:7466  function burn(uint _amount) external pause { ... */\n      pop\n      jump\t// out\n        /* \"src/token.sol\":6202:6505  function mintTo(address _to, uint _amount) external pause mintToDis {... */\n    tag_110:\n        /* \"src/token.sol\":5403:5409  paused */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/token.sol\":5402:5409  !paused */\n      iszero\n        /* \"src/token.sol\":5394:5442  require(!paused, \"Contract: Contract is Paused\") */\n      tag_294\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_295\n      swap1\n      tag_281\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_294:\n        /* \"src/token.sol\":5845:5859  mintToDisabled */\n      0x0a\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/token.sol\":5844:5859  !mintToDisabled */\n      iszero\n        /* \"src/token.sol\":5836:5883  require(!mintToDisabled, \"Minting to disabled\") */\n      tag_297\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_298\n      swap1\n      tag_299\n      jump\t// in\n    tag_298:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_297:\n        /* \"src/token.sol\":6288:6318  hasRole(_MINTTO, _msgSender()) */\n      tag_301\n        /* \"src/token.sol\":991:1011  keccak256(\"_MINTTO\") */\n      0x7d800f56a05adcb6245df540492a560d0e668aac15ee6c7dd40668064913da33\n        /* \"src/token.sol\":6305:6317  _msgSender() */\n      tag_302\n        /* \"src/token.sol\":6305:6315  _msgSender */\n      tag_214\n        /* \"src/token.sol\":6305:6317  _msgSender() */\n      jump\t// in\n    tag_302:\n        /* \"src/token.sol\":6288:6295  hasRole */\n      tag_149\n        /* \"src/token.sol\":6288:6318  hasRole(_MINTTO, _msgSender()) */\n      jump\t// in\n    tag_301:\n        /* \"src/token.sol\":6280:6343  require(hasRole(_MINTTO, _msgSender()), \"Contract: Need Minto\") */\n      tag_303\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_304\n      swap1\n      tag_305\n      jump\t// in\n    tag_304:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_303:\n        /* \"src/token.sol\":6388:6392  _cap */\n      sload(0x07)\n        /* \"src/token.sol\":6377:6384  _amount */\n      dup2\n        /* \"src/token.sol\":6361:6374  totalSupply() */\n      tag_306\n        /* \"src/token.sol\":6361:6372  totalSupply */\n      tag_71\n        /* \"src/token.sol\":6361:6374  totalSupply() */\n      jump\t// in\n    tag_306:\n        /* \"src/token.sol\":6361:6384  totalSupply() + _amount */\n      tag_307\n      swap2\n      swap1\n      tag_308\n      jump\t// in\n    tag_307:\n        /* \"src/token.sol\":6361:6392  totalSupply() + _amount <= _cap */\n      gt\n      iszero\n        /* \"src/token.sol\":6353:6426  require(totalSupply() + _amount <= _cap, \"Contract: Supply Cap exceeded\") */\n      tag_309\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_310\n      swap1\n      tag_311\n      jump\t// in\n    tag_310:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_309:\n        /* \"src/token.sol\":6441:6469  TokensMintedTo(_to, _amount) */\n      0xe98063832b4ff0356868961b75f7f49b096b14ea066c9725301ad197f2f63147\n        /* \"src/token.sol\":6456:6459  _to */\n      dup3\n        /* \"src/token.sol\":6461:6468  _amount */\n      dup3\n        /* \"src/token.sol\":6441:6469  TokensMintedTo(_to, _amount) */\n      mload(0x40)\n      tag_312\n      swap3\n      swap2\n      swap1\n      tag_313\n      jump\t// in\n    tag_312:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/token.sol\":6479:6498  _mint(_to, _amount) */\n      tag_314\n        /* \"src/token.sol\":6485:6488  _to */\n      dup3\n        /* \"src/token.sol\":6490:6497  _amount */\n      dup3\n        /* \"src/token.sol\":6479:6484  _mint */\n      tag_315\n        /* \"src/token.sol\":6479:6498  _mint(_to, _amount) */\n      jump\t// in\n    tag_314:\n        /* \"src/token.sol\":6202:6505  function mintTo(address _to, uint _amount) external pause mintToDis {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/token.sol\":12167:12415  function ethRescue(address payable _dest, uint _etherAmount) nonReentrant public {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_317\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_233\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_317:\n        /* \"src/token.sol\":12266:12294  hasRole(_RESCUE, msg.sender) */\n      tag_319\n        /* \"src/token.sol\":1289:1309  keccak256(\"_RESCUE\") */\n      0x508f8f8be8f5dbcb88f4f4500430b8b3684c471ed936f31fea912c78ad46a6b9\n        /* \"src/token.sol\":12283:12293  msg.sender */\n      caller\n        /* \"src/token.sol\":12266:12273  hasRole */\n      tag_149\n        /* \"src/token.sol\":12266:12294  hasRole(_RESCUE, msg.sender) */\n      jump\t// in\n    tag_319:\n        /* \"src/token.sol\":12258:12310  require(hasRole(_RESCUE, msg.sender), \"Need RESCUE\") */\n      tag_320\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_321\n      swap1\n      tag_272\n      jump\t// in\n    tag_321:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_320:\n        /* \"src/token.sol\":12320:12325  _dest */\n      dup2\n        /* \"src/token.sol\":12320:12334  _dest.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/token.sol\":12320:12348  _dest.transfer(_etherAmount) */\n      0x08fc\n        /* \"src/token.sol\":12335:12347  _etherAmount */\n      dup3\n        /* \"src/token.sol\":12320:12348  _dest.transfer(_etherAmount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_323\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_323:\n      pop\n        /* \"src/token.sol\":12363:12408  ETHRescued(_dest, block.number, _etherAmount) */\n      0x3b1c0368c81e47d03164182dc6f9fcf4f5e4b3bd9462d74960d729f73138ce36\n        /* \"src/token.sol\":12374:12379  _dest */\n      dup3\n        /* \"src/token.sol\":12381:12393  block.number */\n      number\n        /* \"src/token.sol\":12395:12407  _etherAmount */\n      dup4\n        /* \"src/token.sol\":12363:12408  ETHRescued(_dest, block.number, _etherAmount) */\n      mload(0x40)\n      tag_324\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_325\n      jump\t// in\n    tag_324:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_326\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_243\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_326:\n        /* \"src/token.sol\":12167:12415  function ethRescue(address payable _dest, uint _etherAmount) nonReentrant public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/token.sol\":1197:1249  bytes32 public constant _ADMIN = keccak256(\"_ADMIN\") */\n    tag_116:\n        /* \"src/token.sol\":1230:1249  keccak256(\"_ADMIN\") */\n      0xae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d3\n        /* \"src/token.sol\":1197:1249  bytes32 public constant _ADMIN = keccak256(\"_ADMIN\") */\n      dup2\n      jump\t// out\n        /* \"src/token.sol\":1017:1067  bytes32 public constant _BURN = keccak256(\"_BURN\") */\n    tag_119:\n        /* \"src/token.sol\":1049:1067  keccak256(\"_BURN\") */\n      0x9edfad36e7d4d9da54b4f78f22bf97cb5b58bb7998294a4288da41c15c647c45\n        /* \"src/token.sol\":1017:1067  bytes32 public constant _BURN = keccak256(\"_BURN\") */\n      dup2\n      jump\t// out\n        /* \"src/token.sol\":1522:1540  bool public paused */\n    tag_122:\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"src/token.sol\":1073:1131  bytes32 public constant _BURNFROM = keccak256(\"_BURNFROM\") */\n    tag_125:\n        /* \"src/token.sol\":1109:1131  keccak256(\"_BURNFROM\") */\n      0xc8a3befa5973ff6e159afc769978d92f26bae29c51a73d11c9112a05b68d25e6\n        /* \"src/token.sol\":1073:1131  bytes32 public constant _BURNFROM = keccak256(\"_BURNFROM\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/token.sol\":7753:7992  function burnFrom(address _from, uint _amount) external pause {... */\n    tag_134:\n        /* \"src/token.sol\":5403:5409  paused */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/token.sol\":5402:5409  !paused */\n      iszero\n        /* \"src/token.sol\":5394:5442  require(!paused, \"Contract: Contract is Paused\") */\n      tag_329\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_330\n      swap1\n      tag_281\n      jump\t// in\n    tag_330:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_329:\n        /* \"src/token.sol\":7833:7865  hasRole(_BURNFROM, _msgSender()) */\n      tag_332\n        /* \"src/token.sol\":1109:1131  keccak256(\"_BURNFROM\") */\n      0xc8a3befa5973ff6e159afc769978d92f26bae29c51a73d11c9112a05b68d25e6\n        /* \"src/token.sol\":7852:7864  _msgSender() */\n      tag_333\n        /* \"src/token.sol\":7852:7862  _msgSender */\n      tag_214\n        /* \"src/token.sol\":7852:7864  _msgSender() */\n      jump\t// in\n    tag_333:\n        /* \"src/token.sol\":7833:7840  hasRole */\n      tag_149\n        /* \"src/token.sol\":7833:7865  hasRole(_BURNFROM, _msgSender()) */\n      jump\t// in\n    tag_332:\n        /* \"src/token.sol\":7825:7893  require(hasRole(_BURNFROM, _msgSender()), \"Contract: Need Burnfrom\") */\n      tag_334\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_335\n      swap1\n      tag_336\n      jump\t// in\n    tag_335:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_334:\n        /* \"src/token.sol\":7908:7954  TokensBurnedFrom(_from, _amount, _msgSender()) */\n      0xe419ce2aab145a1feaf5893bb6a9478f9282415bbd81c76d5cfff2d4f13431dd\n        /* \"src/token.sol\":7925:7930  _from */\n      dup3\n        /* \"src/token.sol\":7932:7939  _amount */\n      dup3\n        /* \"src/token.sol\":7941:7953  _msgSender() */\n      tag_337\n        /* \"src/token.sol\":7941:7951  _msgSender */\n      tag_214\n        /* \"src/token.sol\":7941:7953  _msgSender() */\n      jump\t// in\n    tag_337:\n        /* \"src/token.sol\":7908:7954  TokensBurnedFrom(_from, _amount, _msgSender()) */\n      mload(0x40)\n      tag_338\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_339\n      jump\t// in\n    tag_338:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/token.sol\":7964:7985  _burn(_from, _amount) */\n      tag_340\n        /* \"src/token.sol\":7970:7975  _from */\n      dup3\n        /* \"src/token.sol\":7977:7984  _amount */\n      dup3\n        /* \"src/token.sol\":7964:7969  _burn */\n      tag_292\n        /* \"src/token.sol\":7964:7985  _burn(_from, _amount) */\n      jump\t// in\n    tag_340:\n        /* \"src/token.sol\":7753:7992  function burnFrom(address _from, uint _amount) external pause {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/token.sol\":957:1011  bytes32 public constant _MINTTO = keccak256(\"_MINTTO\") */\n    tag_136:\n        /* \"src/token.sol\":991:1011  keccak256(\"_MINTTO\") */\n      0x7d800f56a05adcb6245df540492a560d0e668aac15ee6c7dd40668064913da33\n        /* \"src/token.sol\":957:1011  bytes32 public constant _MINTTO = keccak256(\"_MINTTO\") */\n      dup2\n      jump\t// out\n        /* \"src/token.sol\":1255:1309  bytes32 public constant _RESCUE = keccak256(\"_RESCUE\") */\n    tag_139:\n        /* \"src/token.sol\":1289:1309  keccak256(\"_RESCUE\") */\n      0x508f8f8be8f5dbcb88f4f4500430b8b3684c471ed936f31fea912c78ad46a6b9\n        /* \"src/token.sol\":1255:1309  bytes32 public constant _RESCUE = keccak256(\"_RESCUE\") */\n      dup2\n      jump\t// out\n        /* \"src/token.sol\":901:951  bytes32 public constant _MINT = keccak256(\"_MINT\") */\n    tag_142:\n        /* \"src/token.sol\":933:951  keccak256(\"_MINT\") */\n      0x8c66330d9d4f6aba064f25ef2a307366ea6d917616f44c075aa60fa15e5cb1cb\n        /* \"src/token.sol\":901:951  bytes32 public constant _MINT = keccak256(\"_MINT\") */\n      dup2\n      jump\t// out\n        /* \"src/token.sol\":8620:8696  function supplyCap() public view returns (uint) {... */\n    tag_145:\n        /* \"src/token.sol\":8662:8666  uint */\n      0x00\n        /* \"src/token.sol\":8685:8689  _cap */\n      sload(0x07)\n        /* \"src/token.sol\":8678:8689  return _cap */\n      swap1\n      pop\n        /* \"src/token.sol\":8620:8696  function supplyCap() public view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/token.sol\":1589:1613  bool public mintDisabled */\n    tag_152:\n      0x0a\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_344\n      swap1\n      tag_207\n      jump\t// in\n    tag_344:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_345\n      swap1\n      tag_207\n      jump\t// in\n    tag_345:\n      dup1\n      iszero\n      tag_346\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_347\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_346)\n    tag_347:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_348:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_348\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_346:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"src/token.sol\":6740:7025  function mint(uint _amount) external pause mintDis {... */\n    tag_159:\n        /* \"src/token.sol\":5403:5409  paused */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/token.sol\":5402:5409  !paused */\n      iszero\n        /* \"src/token.sol\":5394:5442  require(!paused, \"Contract: Contract is Paused\") */\n      tag_350\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_281\n      jump\t// in\n    tag_351:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_350:\n        /* \"src/token.sol\":5615:5627  mintDisabled */\n      0x0a\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/token.sol\":5614:5627  !mintDisabled */\n      iszero\n        /* \"src/token.sol\":5606:5648  require(!mintDisabled, \"Minting disabled\") */\n      tag_353\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_354\n      swap1\n      tag_355\n      jump\t// in\n    tag_354:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_353:\n        /* \"src/token.sol\":6809:6837  hasRole(_MINT, _msgSender()) */\n      tag_357\n        /* \"src/token.sol\":933:951  keccak256(\"_MINT\") */\n      0x8c66330d9d4f6aba064f25ef2a307366ea6d917616f44c075aa60fa15e5cb1cb\n        /* \"src/token.sol\":6824:6836  _msgSender() */\n      tag_358\n        /* \"src/token.sol\":6824:6834  _msgSender */\n      tag_214\n        /* \"src/token.sol\":6824:6836  _msgSender() */\n      jump\t// in\n    tag_358:\n        /* \"src/token.sol\":6809:6816  hasRole */\n      tag_149\n        /* \"src/token.sol\":6809:6837  hasRole(_MINT, _msgSender()) */\n      jump\t// in\n    tag_357:\n        /* \"src/token.sol\":6801:6861  require(hasRole(_MINT, _msgSender()), \"Contract: Need Mint\") */\n      tag_359\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_360\n      swap1\n      tag_361\n      jump\t// in\n    tag_360:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_359:\n        /* \"src/token.sol\":6906:6910  _cap */\n      sload(0x07)\n        /* \"src/token.sol\":6895:6902  _amount */\n      dup2\n        /* \"src/token.sol\":6879:6892  totalSupply() */\n      tag_362\n        /* \"src/token.sol\":6879:6890  totalSupply */\n      tag_71\n        /* \"src/token.sol\":6879:6892  totalSupply() */\n      jump\t// in\n    tag_362:\n        /* \"src/token.sol\":6879:6902  totalSupply() + _amount */\n      tag_363\n      swap2\n      swap1\n      tag_308\n      jump\t// in\n    tag_363:\n        /* \"src/token.sol\":6879:6910  totalSupply() + _amount <= _cap */\n      gt\n      iszero\n        /* \"src/token.sol\":6871:6944  require(totalSupply() + _amount <= _cap, \"Contract: Supply Cap exceeded\") */\n      tag_364\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_365\n      swap1\n      tag_311\n      jump\t// in\n    tag_365:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_364:\n        /* \"src/token.sol\":6959:6980  TokensMinted(_amount) */\n      0x772f66a00a405709c30e7f18feadcc8f123b20c09c7260165d3eec36c9f21372\n        /* \"src/token.sol\":6972:6979  _amount */\n      dup2\n        /* \"src/token.sol\":6959:6980  TokensMinted(_amount) */\n      mload(0x40)\n      tag_366\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_366:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/token.sol\":6990:7018  _mint(_msgSender(), _amount) */\n      tag_367\n        /* \"src/token.sol\":6996:7008  _msgSender() */\n      tag_368\n        /* \"src/token.sol\":6996:7006  _msgSender */\n      tag_214\n        /* \"src/token.sol\":6996:7008  _msgSender() */\n      jump\t// in\n    tag_368:\n        /* \"src/token.sol\":7010:7017  _amount */\n      dup3\n        /* \"src/token.sol\":6990:6995  _mint */\n      tag_315\n        /* \"src/token.sol\":6990:7018  _mint(_msgSender(), _amount) */\n      jump\t// in\n    tag_367:\n        /* \"src/token.sol\":6740:7025  function mint(uint _amount) external pause mintDis {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_161:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"src/token.sol\":10284:10641  function transfer(address to, uint256 value) nonReentrant public virtual override returns (bool) {... */\n    tag_165:\n        /* \"src/token.sol\":10375:10379  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_370\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_233\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_370:\n        /* \"src/token.sol\":10391:10404  address owner */\n      0x00\n        /* \"src/token.sol\":10407:10419  _msgSender() */\n      tag_372\n        /* \"src/token.sol\":10407:10417  _msgSender */\n      tag_214\n        /* \"src/token.sol\":10407:10419  _msgSender() */\n      jump\t// in\n    tag_372:\n        /* \"src/token.sol\":10391:10419  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"src/token.sol\":10433:10451  whitelistedAddress */\n      0x0b\n        /* \"src/token.sol\":10433:10458  whitelistedAddress[owner] */\n      0x00\n        /* \"src/token.sol\":10452:10457  owner */\n      dup3\n        /* \"src/token.sol\":10433:10458  whitelistedAddress[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/token.sol\":10429:10614  if (whitelistedAddress[owner]) {... */\n      iszero\n      tag_373\n      jumpi\n        /* \"src/token.sol\":10474:10501  _transfer(owner, to, value) */\n      tag_374\n        /* \"src/token.sol\":10484:10489  owner */\n      dup2\n        /* \"src/token.sol\":10491:10493  to */\n      dup6\n        /* \"src/token.sol\":10495:10500  value */\n      dup6\n        /* \"src/token.sol\":10474:10483  _transfer */\n      tag_238\n        /* \"src/token.sol\":10474:10501  _transfer(owner, to, value) */\n      jump\t// in\n    tag_374:\n        /* \"src/token.sol\":10429:10614  if (whitelistedAddress[owner]) {... */\n      jump(tag_375)\n    tag_373:\n        /* \"src/token.sol\":10532:10559  _transfer(owner, to, value) */\n      tag_376\n        /* \"src/token.sol\":10542:10547  owner */\n      dup2\n        /* \"src/token.sol\":10549:10551  to */\n      dup6\n        /* \"src/token.sol\":10553:10558  value */\n      dup6\n        /* \"src/token.sol\":10532:10541  _transfer */\n      tag_238\n        /* \"src/token.sol\":10532:10559  _transfer(owner, to, value) */\n      jump\t// in\n    tag_376:\n        /* \"src/token.sol\":10573:10603  _transfer(owner, vault, txFee) */\n      tag_377\n        /* \"src/token.sol\":10583:10588  owner */\n      dup2\n        /* \"src/token.sol\":10590:10595  vault */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/token.sol\":10597:10602  txFee */\n      sload(0x09)\n        /* \"src/token.sol\":10573:10582  _transfer */\n      tag_238\n        /* \"src/token.sol\":10573:10603  _transfer(owner, vault, txFee) */\n      jump\t// in\n    tag_377:\n        /* \"src/token.sol\":10429:10614  if (whitelistedAddress[owner]) {... */\n    tag_375:\n        /* \"src/token.sol\":10630:10634  true */\n      0x01\n        /* \"src/token.sol\":10623:10634  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_378\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_243\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_378:\n        /* \"src/token.sol\":10284:10641  function transfer(address to, uint256 value) nonReentrant public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/token.sol\":8216:8503  function setSupplyCap(uint _supplyCap) external pause {... */\n    tag_169:\n        /* \"src/token.sol\":5403:5409  paused */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/token.sol\":5402:5409  !paused */\n      iszero\n        /* \"src/token.sol\":5394:5442  require(!paused, \"Contract: Contract is Paused\") */\n      tag_380\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_381\n      swap1\n      tag_281\n      jump\t// in\n    tag_381:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_380:\n        /* \"src/token.sol\":8288:8318  hasRole(_SUPPLY, _msgSender()) */\n      tag_383\n        /* \"src/token.sol\":1171:1191  keccak256(\"_SUPPLY\") */\n      0xea4defabeb90fa1e79f929d6c8d482fee8a115926a592b79634d39a67cce3b62\n        /* \"src/token.sol\":8305:8317  _msgSender() */\n      tag_384\n        /* \"src/token.sol\":8305:8315  _msgSender */\n      tag_214\n        /* \"src/token.sol\":8305:8317  _msgSender() */\n      jump\t// in\n    tag_384:\n        /* \"src/token.sol\":8288:8295  hasRole */\n      tag_149\n        /* \"src/token.sol\":8288:8318  hasRole(_SUPPLY, _msgSender()) */\n      jump\t// in\n    tag_383:\n        /* \"src/token.sol\":8280:8334  require(hasRole(_SUPPLY, _msgSender()), \"Need Supply\") */\n      tag_385\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_386\n      swap1\n      tag_387\n      jump\t// in\n    tag_386:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_385:\n        /* \"src/token.sol\":8366:8379  totalSupply() */\n      tag_388\n        /* \"src/token.sol\":8366:8377  totalSupply */\n      tag_71\n        /* \"src/token.sol\":8366:8379  totalSupply() */\n      jump\t// in\n    tag_388:\n        /* \"src/token.sol\":8352:8362  _supplyCap */\n      dup2\n        /* \"src/token.sol\":8352:8379  _supplyCap >= totalSupply() */\n      lt\n      iszero\n        /* \"src/token.sol\":8344:8412  require(_supplyCap >= totalSupply(), \"Contract: Supply Cap too low\") */\n      tag_389\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_390\n      swap1\n      tag_391\n      jump\t// in\n    tag_390:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_389:\n        /* \"src/token.sol\":8429:8439  _supplyCap */\n      dup1\n        /* \"src/token.sol\":8422:8426  _cap */\n      0x07\n        /* \"src/token.sol\":8422:8439  _cap = _supplyCap */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/token.sol\":8454:8496  SupplyCapChanged(_supplyCap, _msgSender()) */\n      0xa11cbdeb4d62442fae7c8ec6286585b17c47acb7b17bbcab1beadce84befa300\n        /* \"src/token.sol\":8471:8481  _supplyCap */\n      dup2\n        /* \"src/token.sol\":8483:8495  _msgSender() */\n      tag_392\n        /* \"src/token.sol\":8483:8493  _msgSender */\n      tag_214\n        /* \"src/token.sol\":8483:8495  _msgSender() */\n      jump\t// in\n    tag_392:\n        /* \"src/token.sol\":8454:8496  SupplyCapChanged(_supplyCap, _msgSender()) */\n      mload(0x40)\n      tag_393\n      swap3\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_393:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/token.sol\":8216:8503  function setSupplyCap(uint _supplyCap) external pause {... */\n      pop\n      jump\t// out\n        /* \"src/token.sol\":2625:2675  mapping(address => bool) public whitelistedAddress */\n    tag_172:\n      mstore(0x20, 0x0b)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"src/token.sol\":1447:1478  uint public txFee = 0.005 ether */\n    tag_175:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"src/token.sol\":1646:1672  bool public mintToDisabled */\n    tag_178:\n      0x0a\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_394\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4730:4734  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4729  getRoleAdmin */\n      tag_82\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      jump\t// in\n    tag_394:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_396\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_248\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_396:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_398\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_257\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n    tag_398:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/token.sol\":4308:4661  function disableMint(bool _disableMinting) external {... */\n    tag_190:\n        /* \"src/token.sol\":4378:4407  hasRole(_ADMIN, _msgSender()) */\n      tag_401\n        /* \"src/token.sol\":1230:1249  keccak256(\"_ADMIN\") */\n      0xae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d3\n        /* \"src/token.sol\":4394:4406  _msgSender() */\n      tag_402\n        /* \"src/token.sol\":4394:4404  _msgSender */\n      tag_214\n        /* \"src/token.sol\":4394:4406  _msgSender() */\n      jump\t// in\n    tag_402:\n        /* \"src/token.sol\":4378:4385  hasRole */\n      tag_149\n        /* \"src/token.sol\":4378:4407  hasRole(_ADMIN, _msgSender()) */\n      jump\t// in\n    tag_401:\n        /* \"src/token.sol\":4370:4432  require(hasRole(_ADMIN, _msgSender()), \"Contract: Need Admin\") */\n      tag_403\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_404\n      swap1\n      tag_222\n      jump\t// in\n    tag_404:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_403:\n        /* \"src/token.sol\":4457:4472  _disableMinting */\n      dup1\n        /* \"src/token.sol\":4442:4454  mintDisabled */\n      0x0a\n      0x01\n        /* \"src/token.sol\":4442:4472  mintDisabled = _disableMinting */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/token.sol\":4487:4502  _disableMinting */\n      dup1\n        /* \"src/token.sol\":4483:4655  if (_disableMinting) {... */\n      iszero\n      tag_405\n      jumpi\n        /* \"src/token.sol\":4523:4566  MintingDisabled(block.number, _msgSender()) */\n      0x5668502ca8e7b393c09d1dac964ca45a27870a78d7ba212b7a189450897ca05f\n        /* \"src/token.sol\":4539:4551  block.number */\n      number\n        /* \"src/token.sol\":4553:4565  _msgSender() */\n      tag_406\n        /* \"src/token.sol\":4553:4563  _msgSender */\n      tag_214\n        /* \"src/token.sol\":4553:4565  _msgSender() */\n      jump\t// in\n    tag_406:\n        /* \"src/token.sol\":4523:4566  MintingDisabled(block.number, _msgSender()) */\n      mload(0x40)\n      tag_407\n      swap3\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_407:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/token.sol\":4483:4655  if (_disableMinting) {... */\n      jump(tag_408)\n    tag_405:\n        /* \"src/token.sol\":4602:4644  MintingEnabled(block.number, _msgSender()) */\n      0x98e05482fdb38df5eb461fb932fa6e1af90a3569939ce5a8d92d699b102d6402\n        /* \"src/token.sol\":4617:4629  block.number */\n      number\n        /* \"src/token.sol\":4631:4643  _msgSender() */\n      tag_409\n        /* \"src/token.sol\":4631:4641  _msgSender */\n      tag_214\n        /* \"src/token.sol\":4631:4643  _msgSender() */\n      jump\t// in\n    tag_409:\n        /* \"src/token.sol\":4602:4644  MintingEnabled(block.number, _msgSender()) */\n      mload(0x40)\n      tag_410\n      swap3\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_410:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/token.sol\":4483:4655  if (_disableMinting) {... */\n    tag_408:\n        /* \"src/token.sol\":4308:4661  function disableMint(bool _disableMinting) external {... */\n      pop\n      jump\t// out\n        /* \"src/token.sol\":1137:1191  bytes32 public constant _SUPPLY = keccak256(\"_SUPPLY\") */\n    tag_192:\n        /* \"src/token.sol\":1171:1191  keccak256(\"_SUPPLY\") */\n      0xea4defabeb90fa1e79f929d6c8d482fee8a115926a592b79634d39a67cce3b62\n        /* \"src/token.sol\":1137:1191  bytes32 public constant _SUPPLY = keccak256(\"_SUPPLY\") */\n      dup2\n      jump\t// out\n        /* \"src/token.sol\":4899:5247  function disableMintTo(bool _disableMintTo) external {... */\n    tag_196:\n        /* \"src/token.sol\":4970:4999  hasRole(_ADMIN, _msgSender()) */\n      tag_412\n        /* \"src/token.sol\":1230:1249  keccak256(\"_ADMIN\") */\n      0xae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d3\n        /* \"src/token.sol\":4986:4998  _msgSender() */\n      tag_413\n        /* \"src/token.sol\":4986:4996  _msgSender */\n      tag_214\n        /* \"src/token.sol\":4986:4998  _msgSender() */\n      jump\t// in\n    tag_413:\n        /* \"src/token.sol\":4970:4977  hasRole */\n      tag_149\n        /* \"src/token.sol\":4970:4999  hasRole(_ADMIN, _msgSender()) */\n      jump\t// in\n    tag_412:\n        /* \"src/token.sol\":4962:5014  require(hasRole(_ADMIN, _msgSender()), \"Need Admin\") */\n      tag_414\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_415\n      swap1\n      tag_262\n      jump\t// in\n    tag_415:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_414:\n        /* \"src/token.sol\":5041:5055  _disableMintTo */\n      dup1\n        /* \"src/token.sol\":5024:5038  mintToDisabled */\n      0x0a\n      0x02\n        /* \"src/token.sol\":5024:5055  mintToDisabled = _disableMintTo */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/token.sol\":5070:5084  _disableMintTo */\n      dup1\n        /* \"src/token.sol\":5066:5241  if (_disableMintTo) {... */\n      iszero\n      tag_416\n      jumpi\n        /* \"src/token.sol\":5105:5150  MintingToDisabled(block.number, _msgSender()) */\n      0x218e25f0a7435729f5a66aae50a9ed0084535a0080300c1c2e8366d8df7136ed\n        /* \"src/token.sol\":5123:5135  block.number */\n      number\n        /* \"src/token.sol\":5137:5149  _msgSender() */\n      tag_417\n        /* \"src/token.sol\":5137:5147  _msgSender */\n      tag_214\n        /* \"src/token.sol\":5137:5149  _msgSender() */\n      jump\t// in\n    tag_417:\n        /* \"src/token.sol\":5105:5150  MintingToDisabled(block.number, _msgSender()) */\n      mload(0x40)\n      tag_418\n      swap3\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_418:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/token.sol\":5066:5241  if (_disableMintTo) {... */\n      jump(tag_419)\n    tag_416:\n        /* \"src/token.sol\":5186:5230  MintingToEnabled(block.number, _msgSender()) */\n      0x41606e1dcee38320f9edbfcd642aeaa81bb2140c705de9d4a7814024a1e9a314\n        /* \"src/token.sol\":5203:5215  block.number */\n      number\n        /* \"src/token.sol\":5217:5229  _msgSender() */\n      tag_420\n        /* \"src/token.sol\":5217:5227  _msgSender */\n      tag_214\n        /* \"src/token.sol\":5217:5229  _msgSender() */\n      jump\t// in\n    tag_420:\n        /* \"src/token.sol\":5186:5230  MintingToEnabled(block.number, _msgSender()) */\n      mload(0x40)\n      tag_421\n      swap3\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_421:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/token.sol\":5066:5241  if (_disableMintTo) {... */\n    tag_419:\n        /* \"src/token.sol\":4899:5247  function disableMintTo(bool _disableMintTo) external {... */\n      pop\n      jump\t// out\n        /* \"src/token.sol\":1378:1398  address public vault */\n    tag_198:\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_425\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_426\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_425:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_233:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x06)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_428\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_429\n      swap1\n      tag_430\n      jump\t// in\n    tag_429:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_428:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_238:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_432\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_433\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_433:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_432:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_434\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_435\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_435:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_434:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_436\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_437\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_436:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_243:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_248:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_440\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      tag_441\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3292  _msgSender */\n      tag_214\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      jump\t// in\n    tag_441:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_442\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_440:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_251:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_444\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_149\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_444:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_445\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_446\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n      tag_214\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      jump\t// in\n    tag_446:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      pop\n      jump(tag_443)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_445:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_443:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_257:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6808:6812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      tag_449\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6836:6840  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6842:6849  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6835  hasRole */\n      tag_149\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      jump\t// in\n    tag_449:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      iszero\n      tag_450\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6898:6903  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6872  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6873:6877  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6886  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6887:6894  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6903  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      tag_451\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6959  _msgSender */\n      tag_214\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      jump\t// in\n    tag_451:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6940:6947  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6934:6938  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6983:6987  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      pop\n      jump(tag_448)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n    tag_450:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7025:7030  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7018:7030  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_448:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_274:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_454\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1405:1410  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1432  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1441  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1444:1446  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1448:1453  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_455\n      swap3\n      swap2\n      swap1\n      tag_313\n      jump\t// in\n    tag_455:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1404  _callOptionalReturn */\n      tag_456\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_454:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n    tag_292:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8336:8337  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8324  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n      tag_458\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8388:8389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_459\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_459:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n    tag_458:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      tag_460\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8419:8426  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8436:8437  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8440:8445  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8418  _update */\n      tag_437\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      jump\t// in\n    tag_460:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_315:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_462\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_463\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_463:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_462:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_464\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_437\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_464:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_426:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_466\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_467\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_467:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_466:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_468\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_469\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_469:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_468:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_470\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_471\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_471:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_470:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/token.sol\":8978:9242  function _update(address from, address to, uint256 amount) internal virtual override {... */\n    tag_437:\n        /* \"src/token.sol\":9093:9094  0 */\n      0x00\n        /* \"src/token.sol\":9077:9095  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/token.sol\":9077:9081  from */\n      dup4\n        /* \"src/token.sol\":9077:9095  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/token.sol\":9073:9195  if (from == address(0)) { ... */\n      tag_473\n      jumpi\n        /* \"src/token.sol\":9146:9150  _cap */\n      sload(0x07)\n        /* \"src/token.sol\":9136:9142  amount */\n      dup2\n        /* \"src/token.sol\":9120:9133  totalSupply() */\n      tag_474\n        /* \"src/token.sol\":9120:9131  totalSupply */\n      tag_71\n        /* \"src/token.sol\":9120:9133  totalSupply() */\n      jump\t// in\n    tag_474:\n        /* \"src/token.sol\":9120:9142  totalSupply() + amount */\n      tag_475\n      swap2\n      swap1\n      tag_308\n      jump\t// in\n    tag_475:\n        /* \"src/token.sol\":9120:9150  totalSupply() + amount <= _cap */\n      gt\n      iszero\n        /* \"src/token.sol\":9112:9184  require(totalSupply() + amount <= _cap, \"Contract: Supply Cap exceeded\") */\n      tag_476\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_477\n      swap1\n      tag_311\n      jump\t// in\n    tag_477:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_476:\n        /* \"src/token.sol\":9073:9195  if (from == address(0)) { ... */\n    tag_473:\n        /* \"src/token.sol\":9204:9235  super._update(from, to, amount) */\n      tag_478\n        /* \"src/token.sol\":9218:9222  from */\n      dup4\n        /* \"src/token.sol\":9224:9226  to */\n      dup4\n        /* \"src/token.sol\":9228:9234  amount */\n      dup4\n        /* \"src/token.sol\":9204:9217  super._update */\n      tag_479\n        /* \"src/token.sol\":9204:9235  super._update(from, to, amount) */\n      jump\t// in\n    tag_478:\n        /* \"src/token.sol\":8978:9242  function _update(address from, address to, uint256 amount) internal virtual override {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_442:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_481\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_149\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_481:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_482\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3598:3605  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3607:3611  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_483\n      swap3\n      swap2\n      swap1\n      tag_484\n      jump\t// in\n    tag_483:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_482:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_456:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_486\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4512:4517  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_487\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_486:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_488\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_489\n      swap2\n      swap1\n      tag_490\n      jump\t// in\n    tag_489:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_488:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_491\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4664:4669  token */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_492\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_492:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n    tag_491:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4129:4688  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_479:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_494\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_495\n      swap2\n      swap1\n      tag_308\n      jump\t// in\n    tag_495:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_496)\n    tag_494:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_497\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_498\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_499\n      jump\t// in\n    tag_498:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_497:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_496:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_500\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_501)\n    tag_500:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_501:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_502\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_502:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_487:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_504\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2832  functionCallWithValue */\n      tag_505\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      jump\t// in\n    tag_504:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2804:2849  return functionCallWithValue(target, data, 0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_505:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3279:3291  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3331:3336  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3328  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3336  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n      iszero\n      tag_507\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3394:3398  this */\n      address\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      0xcd78605900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_508\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_508:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n    tag_507:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3435:3458  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3468  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3473  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_509\n      swap2\n      swap1\n      tag_510\n      jump\t// in\n    tag_509:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_513\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_512)\n    tag_513:\n      0x60\n      swap2\n      pop\n    tag_512:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_514\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_515\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_514:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_515:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_517\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_518\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_519\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_518:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_520)\n    tag_517:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5066:5067  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5055  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_521\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5093:5094  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5077  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_521:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_522\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5138:5144  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_523\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_523:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_522:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      swap1\n      pop\n      jump(tag_516)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_520:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_516:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_519:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5894:5895  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5884  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      iszero\n      tag_525\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_525:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      0x1425ea4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":88:205   */\n    tag_528:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_530:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_531:\n        /* \"#utility.yul\":561:584   */\n      tag_612\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_530\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_613\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_613:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_532:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_615\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_531\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_53:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_617\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_618\n      tag_528\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":833:952   */\n    tag_617:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_619\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_532\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_533:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_534:\n        /* \"#utility.yul\":1268:1289   */\n      tag_622\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_533\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_56:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_624\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_534\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_535:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_536:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:1937   */\n    tag_537:\n        /* \"#utility.yul\":1887:1893   */\n      dup3\n        /* \"#utility.yul\":1882:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1880   */\n      dup4\n        /* \"#utility.yul\":1871:1894   */\n      mcopy\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup4\n        /* \"#utility.yul\":1914:1917   */\n      dup4\n        /* \"#utility.yul\":1910:1926   */\n      add\n        /* \"#utility.yul\":1903:1930   */\n      mstore\n        /* \"#utility.yul\":1798:1937   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1943:2045   */\n    tag_538:\n        /* \"#utility.yul\":1984:1990   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x1f\n        /* \"#utility.yul\":2031:2038   */\n      not\n        /* \"#utility.yul\":2026:2028   */\n      0x1f\n        /* \"#utility.yul\":2019:2024   */\n      dup4\n        /* \"#utility.yul\":2015:2029   */\n      add\n        /* \"#utility.yul\":2011:2039   */\n      and\n        /* \"#utility.yul\":2001:2039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2428   */\n    tag_539:\n        /* \"#utility.yul\":2139:2142   */\n      0x00\n        /* \"#utility.yul\":2167:2206   */\n      tag_630\n        /* \"#utility.yul\":2200:2205   */\n      dup3\n        /* \"#utility.yul\":2167:2206   */\n      tag_535\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":2222:2293   */\n      tag_631\n        /* \"#utility.yul\":2286:2292   */\n      dup2\n        /* \"#utility.yul\":2281:2284   */\n      dup6\n        /* \"#utility.yul\":2222:2293   */\n      tag_536\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":2215:2293   */\n      swap4\n      pop\n        /* \"#utility.yul\":2302:2367   */\n      tag_632\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2302:2367   */\n      tag_537\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":2392:2421   */\n      tag_633\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_538\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2143:2428   */\n      pop\n        /* \"#utility.yul\":2051:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2747   */\n    tag_60:\n        /* \"#utility.yul\":2547:2551   */\n      0x00\n        /* \"#utility.yul\":2585:2587   */\n      0x20\n        /* \"#utility.yul\":2574:2583   */\n      dup3\n        /* \"#utility.yul\":2570:2588   */\n      add\n        /* \"#utility.yul\":2562:2588   */\n      swap1\n      pop\n        /* \"#utility.yul\":2634:2643   */\n      dup2\n        /* \"#utility.yul\":2628:2632   */\n      dup2\n        /* \"#utility.yul\":2624:2644   */\n      sub\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2605:2622   */\n      add\n        /* \"#utility.yul\":2598:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2740   */\n      tag_635\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2726:2732   */\n      dup5\n        /* \"#utility.yul\":2662:2740   */\n      tag_539\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":2654:2740   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2879   */\n    tag_540:\n        /* \"#utility.yul\":2790:2797   */\n      0x00\n        /* \"#utility.yul\":2830:2872   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2823:2828   */\n      dup3\n        /* \"#utility.yul\":2819:2873   */\n      and\n        /* \"#utility.yul\":2808:2873   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2879   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2885:2981   */\n    tag_541:\n        /* \"#utility.yul\":2922:2929   */\n      0x00\n        /* \"#utility.yul\":2951:2975   */\n      tag_638\n        /* \"#utility.yul\":2969:2974   */\n      dup3\n        /* \"#utility.yul\":2951:2975   */\n      tag_540\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":2940:2975   */\n      swap1\n      pop\n        /* \"#utility.yul\":2885:2981   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2987:3109   */\n    tag_542:\n        /* \"#utility.yul\":3060:3084   */\n      tag_640\n        /* \"#utility.yul\":3078:3083   */\n      dup2\n        /* \"#utility.yul\":3060:3084   */\n      tag_541\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":3053:3058   */\n      dup2\n        /* \"#utility.yul\":3050:3085   */\n      eq\n        /* \"#utility.yul\":3040:3103   */\n      tag_641\n      jumpi\n        /* \"#utility.yul\":3099:3100   */\n      0x00\n        /* \"#utility.yul\":3096:3097   */\n      dup1\n        /* \"#utility.yul\":3089:3101   */\n      revert\n        /* \"#utility.yul\":3040:3103   */\n    tag_641:\n        /* \"#utility.yul\":2987:3109   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3254   */\n    tag_543:\n        /* \"#utility.yul\":3161:3166   */\n      0x00\n        /* \"#utility.yul\":3199:3205   */\n      dup2\n        /* \"#utility.yul\":3186:3206   */\n      calldataload\n        /* \"#utility.yul\":3177:3206   */\n      swap1\n      pop\n        /* \"#utility.yul\":3215:3248   */\n      tag_643\n        /* \"#utility.yul\":3242:3247   */\n      dup2\n        /* \"#utility.yul\":3215:3248   */\n      tag_542\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":3115:3254   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3260:3337   */\n    tag_544:\n        /* \"#utility.yul\":3297:3304   */\n      0x00\n        /* \"#utility.yul\":3326:3331   */\n      dup2\n        /* \"#utility.yul\":3315:3331   */\n      swap1\n      pop\n        /* \"#utility.yul\":3260:3337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3343:3465   */\n    tag_545:\n        /* \"#utility.yul\":3416:3440   */\n      tag_646\n        /* \"#utility.yul\":3434:3439   */\n      dup2\n        /* \"#utility.yul\":3416:3440   */\n      tag_544\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":3409:3414   */\n      dup2\n        /* \"#utility.yul\":3406:3441   */\n      eq\n        /* \"#utility.yul\":3396:3459   */\n      tag_647\n      jumpi\n        /* \"#utility.yul\":3455:3456   */\n      0x00\n        /* \"#utility.yul\":3452:3453   */\n      dup1\n        /* \"#utility.yul\":3445:3457   */\n      revert\n        /* \"#utility.yul\":3396:3459   */\n    tag_647:\n        /* \"#utility.yul\":3343:3465   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3471:3610   */\n    tag_546:\n        /* \"#utility.yul\":3517:3522   */\n      0x00\n        /* \"#utility.yul\":3555:3561   */\n      dup2\n        /* \"#utility.yul\":3542:3562   */\n      calldataload\n        /* \"#utility.yul\":3533:3562   */\n      swap1\n      pop\n        /* \"#utility.yul\":3571:3604   */\n      tag_649\n        /* \"#utility.yul\":3598:3603   */\n      dup2\n        /* \"#utility.yul\":3571:3604   */\n      tag_545\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":3471:3610   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3616:4090   */\n    tag_63:\n        /* \"#utility.yul\":3684:3690   */\n      0x00\n        /* \"#utility.yul\":3692:3698   */\n      dup1\n        /* \"#utility.yul\":3741:3743   */\n      0x40\n        /* \"#utility.yul\":3729:3738   */\n      dup4\n        /* \"#utility.yul\":3720:3727   */\n      dup6\n        /* \"#utility.yul\":3716:3739   */\n      sub\n        /* \"#utility.yul\":3712:3744   */\n      slt\n        /* \"#utility.yul\":3709:3828   */\n      iszero\n      tag_651\n      jumpi\n        /* \"#utility.yul\":3747:3826   */\n      tag_652\n      tag_528\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":3709:3828   */\n    tag_651:\n        /* \"#utility.yul\":3867:3868   */\n      0x00\n        /* \"#utility.yul\":3892:3945   */\n      tag_653\n        /* \"#utility.yul\":3937:3944   */\n      dup6\n        /* \"#utility.yul\":3928:3934   */\n      dup3\n        /* \"#utility.yul\":3917:3926   */\n      dup7\n        /* \"#utility.yul\":3913:3935   */\n      add\n        /* \"#utility.yul\":3892:3945   */\n      tag_543\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":3882:3945   */\n      swap3\n      pop\n        /* \"#utility.yul\":3838:3955   */\n      pop\n        /* \"#utility.yul\":3994:3996   */\n      0x20\n        /* \"#utility.yul\":4020:4073   */\n      tag_654\n        /* \"#utility.yul\":4065:4072   */\n      dup6\n        /* \"#utility.yul\":4056:4062   */\n      dup3\n        /* \"#utility.yul\":4045:4054   */\n      dup7\n        /* \"#utility.yul\":4041:4063   */\n      add\n        /* \"#utility.yul\":4020:4073   */\n      tag_546\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":4010:4073   */\n      swap2\n      pop\n        /* \"#utility.yul\":3965:4083   */\n      pop\n        /* \"#utility.yul\":3616:4090   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4096:4212   */\n    tag_547:\n        /* \"#utility.yul\":4166:4187   */\n      tag_656\n        /* \"#utility.yul\":4181:4186   */\n      dup2\n        /* \"#utility.yul\":4166:4187   */\n      tag_533\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":4159:4164   */\n      dup2\n        /* \"#utility.yul\":4156:4188   */\n      eq\n        /* \"#utility.yul\":4146:4206   */\n      tag_657\n      jumpi\n        /* \"#utility.yul\":4202:4203   */\n      0x00\n        /* \"#utility.yul\":4199:4200   */\n      dup1\n        /* \"#utility.yul\":4192:4204   */\n      revert\n        /* \"#utility.yul\":4146:4206   */\n    tag_657:\n        /* \"#utility.yul\":4096:4212   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4218:4351   */\n    tag_548:\n        /* \"#utility.yul\":4261:4266   */\n      0x00\n        /* \"#utility.yul\":4299:4305   */\n      dup2\n        /* \"#utility.yul\":4286:4306   */\n      calldataload\n        /* \"#utility.yul\":4277:4306   */\n      swap1\n      pop\n        /* \"#utility.yul\":4315:4345   */\n      tag_659\n        /* \"#utility.yul\":4339:4344   */\n      dup2\n        /* \"#utility.yul\":4315:4345   */\n      tag_547\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":4218:4351   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4357:4680   */\n    tag_68:\n        /* \"#utility.yul\":4413:4419   */\n      0x00\n        /* \"#utility.yul\":4462:4464   */\n      0x20\n        /* \"#utility.yul\":4450:4459   */\n      dup3\n        /* \"#utility.yul\":4441:4448   */\n      dup5\n        /* \"#utility.yul\":4437:4460   */\n      sub\n        /* \"#utility.yul\":4433:4465   */\n      slt\n        /* \"#utility.yul\":4430:4549   */\n      iszero\n      tag_661\n      jumpi\n        /* \"#utility.yul\":4468:4547   */\n      tag_662\n      tag_528\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":4430:4549   */\n    tag_661:\n        /* \"#utility.yul\":4588:4589   */\n      0x00\n        /* \"#utility.yul\":4613:4663   */\n      tag_663\n        /* \"#utility.yul\":4655:4662   */\n      dup5\n        /* \"#utility.yul\":4646:4652   */\n      dup3\n        /* \"#utility.yul\":4635:4644   */\n      dup6\n        /* \"#utility.yul\":4631:4653   */\n      add\n        /* \"#utility.yul\":4613:4663   */\n      tag_548\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":4603:4663   */\n      swap2\n      pop\n        /* \"#utility.yul\":4559:4673   */\n      pop\n        /* \"#utility.yul\":4357:4680   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4686:4804   */\n    tag_549:\n        /* \"#utility.yul\":4773:4797   */\n      tag_665\n        /* \"#utility.yul\":4791:4796   */\n      dup2\n        /* \"#utility.yul\":4773:4797   */\n      tag_544\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":4768:4771   */\n      dup3\n        /* \"#utility.yul\":4761:4798   */\n      mstore\n        /* \"#utility.yul\":4686:4804   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4810:5032   */\n    tag_73:\n        /* \"#utility.yul\":4903:4907   */\n      0x00\n        /* \"#utility.yul\":4941:4943   */\n      0x20\n        /* \"#utility.yul\":4930:4939   */\n      dup3\n        /* \"#utility.yul\":4926:4944   */\n      add\n        /* \"#utility.yul\":4918:4944   */\n      swap1\n      pop\n        /* \"#utility.yul\":4954:5025   */\n      tag_667\n        /* \"#utility.yul\":5022:5023   */\n      0x00\n        /* \"#utility.yul\":5011:5020   */\n      dup4\n        /* \"#utility.yul\":5007:5024   */\n      add\n        /* \"#utility.yul\":4998:5004   */\n      dup5\n        /* \"#utility.yul\":4954:5025   */\n      tag_549\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":4810:5032   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5038:5657   */\n    tag_76:\n        /* \"#utility.yul\":5115:5121   */\n      0x00\n        /* \"#utility.yul\":5123:5129   */\n      dup1\n        /* \"#utility.yul\":5131:5137   */\n      0x00\n        /* \"#utility.yul\":5180:5182   */\n      0x60\n        /* \"#utility.yul\":5168:5177   */\n      dup5\n        /* \"#utility.yul\":5159:5166   */\n      dup7\n        /* \"#utility.yul\":5155:5178   */\n      sub\n        /* \"#utility.yul\":5151:5183   */\n      slt\n        /* \"#utility.yul\":5148:5267   */\n      iszero\n      tag_669\n      jumpi\n        /* \"#utility.yul\":5186:5265   */\n      tag_670\n      tag_528\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":5148:5267   */\n    tag_669:\n        /* \"#utility.yul\":5306:5307   */\n      0x00\n        /* \"#utility.yul\":5331:5384   */\n      tag_671\n        /* \"#utility.yul\":5376:5383   */\n      dup7\n        /* \"#utility.yul\":5367:5373   */\n      dup3\n        /* \"#utility.yul\":5356:5365   */\n      dup8\n        /* \"#utility.yul\":5352:5374   */\n      add\n        /* \"#utility.yul\":5331:5384   */\n      tag_543\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":5321:5384   */\n      swap4\n      pop\n        /* \"#utility.yul\":5277:5394   */\n      pop\n        /* \"#utility.yul\":5433:5435   */\n      0x20\n        /* \"#utility.yul\":5459:5512   */\n      tag_672\n        /* \"#utility.yul\":5504:5511   */\n      dup7\n        /* \"#utility.yul\":5495:5501   */\n      dup3\n        /* \"#utility.yul\":5484:5493   */\n      dup8\n        /* \"#utility.yul\":5480:5502   */\n      add\n        /* \"#utility.yul\":5459:5512   */\n      tag_543\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":5449:5512   */\n      swap3\n      pop\n        /* \"#utility.yul\":5404:5522   */\n      pop\n        /* \"#utility.yul\":5561:5563   */\n      0x40\n        /* \"#utility.yul\":5587:5640   */\n      tag_673\n        /* \"#utility.yul\":5632:5639   */\n      dup7\n        /* \"#utility.yul\":5623:5629   */\n      dup3\n        /* \"#utility.yul\":5612:5621   */\n      dup8\n        /* \"#utility.yul\":5608:5630   */\n      add\n        /* \"#utility.yul\":5587:5640   */\n      tag_546\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":5577:5640   */\n      swap2\n      pop\n        /* \"#utility.yul\":5532:5650   */\n      pop\n        /* \"#utility.yul\":5038:5657   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5663:5740   */\n    tag_550:\n        /* \"#utility.yul\":5700:5707   */\n      0x00\n        /* \"#utility.yul\":5729:5734   */\n      dup2\n        /* \"#utility.yul\":5718:5734   */\n      swap1\n      pop\n        /* \"#utility.yul\":5663:5740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5746:5868   */\n    tag_551:\n        /* \"#utility.yul\":5819:5843   */\n      tag_676\n        /* \"#utility.yul\":5837:5842   */\n      dup2\n        /* \"#utility.yul\":5819:5843   */\n      tag_550\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":5812:5817   */\n      dup2\n        /* \"#utility.yul\":5809:5844   */\n      eq\n        /* \"#utility.yul\":5799:5862   */\n      tag_677\n      jumpi\n        /* \"#utility.yul\":5858:5859   */\n      0x00\n        /* \"#utility.yul\":5855:5856   */\n      dup1\n        /* \"#utility.yul\":5848:5860   */\n      revert\n        /* \"#utility.yul\":5799:5862   */\n    tag_677:\n        /* \"#utility.yul\":5746:5868   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5874:6013   */\n    tag_552:\n        /* \"#utility.yul\":5920:5925   */\n      0x00\n        /* \"#utility.yul\":5958:5964   */\n      dup2\n        /* \"#utility.yul\":5945:5965   */\n      calldataload\n        /* \"#utility.yul\":5936:5965   */\n      swap1\n      pop\n        /* \"#utility.yul\":5974:6007   */\n      tag_679\n        /* \"#utility.yul\":6001:6006   */\n      dup2\n        /* \"#utility.yul\":5974:6007   */\n      tag_551\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":5874:6013   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6019:6348   */\n    tag_81:\n        /* \"#utility.yul\":6078:6084   */\n      0x00\n        /* \"#utility.yul\":6127:6129   */\n      0x20\n        /* \"#utility.yul\":6115:6124   */\n      dup3\n        /* \"#utility.yul\":6106:6113   */\n      dup5\n        /* \"#utility.yul\":6102:6125   */\n      sub\n        /* \"#utility.yul\":6098:6130   */\n      slt\n        /* \"#utility.yul\":6095:6214   */\n      iszero\n      tag_681\n      jumpi\n        /* \"#utility.yul\":6133:6212   */\n      tag_682\n      tag_528\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":6095:6214   */\n    tag_681:\n        /* \"#utility.yul\":6253:6254   */\n      0x00\n        /* \"#utility.yul\":6278:6331   */\n      tag_683\n        /* \"#utility.yul\":6323:6330   */\n      dup5\n        /* \"#utility.yul\":6314:6320   */\n      dup3\n        /* \"#utility.yul\":6303:6312   */\n      dup6\n        /* \"#utility.yul\":6299:6321   */\n      add\n        /* \"#utility.yul\":6278:6331   */\n      tag_552\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":6268:6331   */\n      swap2\n      pop\n        /* \"#utility.yul\":6224:6341   */\n      pop\n        /* \"#utility.yul\":6019:6348   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6354:6472   */\n    tag_553:\n        /* \"#utility.yul\":6441:6465   */\n      tag_685\n        /* \"#utility.yul\":6459:6464   */\n      dup2\n        /* \"#utility.yul\":6441:6465   */\n      tag_550\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":6436:6439   */\n      dup3\n        /* \"#utility.yul\":6429:6466   */\n      mstore\n        /* \"#utility.yul\":6354:6472   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6478:6700   */\n    tag_84:\n        /* \"#utility.yul\":6571:6575   */\n      0x00\n        /* \"#utility.yul\":6609:6611   */\n      0x20\n        /* \"#utility.yul\":6598:6607   */\n      dup3\n        /* \"#utility.yul\":6594:6612   */\n      add\n        /* \"#utility.yul\":6586:6612   */\n      swap1\n      pop\n        /* \"#utility.yul\":6622:6693   */\n      tag_687\n        /* \"#utility.yul\":6690:6691   */\n      0x00\n        /* \"#utility.yul\":6679:6688   */\n      dup4\n        /* \"#utility.yul\":6675:6692   */\n      add\n        /* \"#utility.yul\":6666:6672   */\n      dup5\n        /* \"#utility.yul\":6622:6693   */\n      tag_553\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":6478:6700   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6706:7180   */\n    tag_87:\n        /* \"#utility.yul\":6774:6780   */\n      0x00\n        /* \"#utility.yul\":6782:6788   */\n      dup1\n        /* \"#utility.yul\":6831:6833   */\n      0x40\n        /* \"#utility.yul\":6819:6828   */\n      dup4\n        /* \"#utility.yul\":6810:6817   */\n      dup6\n        /* \"#utility.yul\":6806:6829   */\n      sub\n        /* \"#utility.yul\":6802:6834   */\n      slt\n        /* \"#utility.yul\":6799:6918   */\n      iszero\n      tag_689\n      jumpi\n        /* \"#utility.yul\":6837:6916   */\n      tag_690\n      tag_528\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":6799:6918   */\n    tag_689:\n        /* \"#utility.yul\":6957:6958   */\n      0x00\n        /* \"#utility.yul\":6982:7035   */\n      tag_691\n        /* \"#utility.yul\":7027:7034   */\n      dup6\n        /* \"#utility.yul\":7018:7024   */\n      dup3\n        /* \"#utility.yul\":7007:7016   */\n      dup7\n        /* \"#utility.yul\":7003:7025   */\n      add\n        /* \"#utility.yul\":6982:7035   */\n      tag_552\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":6972:7035   */\n      swap3\n      pop\n        /* \"#utility.yul\":6928:7045   */\n      pop\n        /* \"#utility.yul\":7084:7086   */\n      0x20\n        /* \"#utility.yul\":7110:7163   */\n      tag_692\n        /* \"#utility.yul\":7155:7162   */\n      dup6\n        /* \"#utility.yul\":7146:7152   */\n      dup3\n        /* \"#utility.yul\":7135:7144   */\n      dup7\n        /* \"#utility.yul\":7131:7153   */\n      add\n        /* \"#utility.yul\":7110:7163   */\n      tag_543\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":7100:7163   */\n      swap2\n      pop\n        /* \"#utility.yul\":7055:7173   */\n      pop\n        /* \"#utility.yul\":6706:7180   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7186:7272   */\n    tag_554:\n        /* \"#utility.yul\":7221:7228   */\n      0x00\n        /* \"#utility.yul\":7261:7265   */\n      0xff\n        /* \"#utility.yul\":7254:7259   */\n      dup3\n        /* \"#utility.yul\":7250:7266   */\n      and\n        /* \"#utility.yul\":7239:7266   */\n      swap1\n      pop\n        /* \"#utility.yul\":7186:7272   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7278:7390   */\n    tag_555:\n        /* \"#utility.yul\":7361:7383   */\n      tag_695\n        /* \"#utility.yul\":7377:7382   */\n      dup2\n        /* \"#utility.yul\":7361:7383   */\n      tag_554\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":7356:7359   */\n      dup3\n        /* \"#utility.yul\":7349:7384   */\n      mstore\n        /* \"#utility.yul\":7278:7390   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7396:7610   */\n    tag_92:\n        /* \"#utility.yul\":7485:7489   */\n      0x00\n        /* \"#utility.yul\":7523:7525   */\n      0x20\n        /* \"#utility.yul\":7512:7521   */\n      dup3\n        /* \"#utility.yul\":7508:7526   */\n      add\n        /* \"#utility.yul\":7500:7526   */\n      swap1\n      pop\n        /* \"#utility.yul\":7536:7603   */\n      tag_697\n        /* \"#utility.yul\":7600:7601   */\n      0x00\n        /* \"#utility.yul\":7589:7598   */\n      dup4\n        /* \"#utility.yul\":7585:7602   */\n      add\n        /* \"#utility.yul\":7576:7582   */\n      dup5\n        /* \"#utility.yul\":7536:7603   */\n      tag_555\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":7396:7610   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7616:8084   */\n    tag_98:\n        /* \"#utility.yul\":7681:7687   */\n      0x00\n        /* \"#utility.yul\":7689:7695   */\n      dup1\n        /* \"#utility.yul\":7738:7740   */\n      0x40\n        /* \"#utility.yul\":7726:7735   */\n      dup4\n        /* \"#utility.yul\":7717:7724   */\n      dup6\n        /* \"#utility.yul\":7713:7736   */\n      sub\n        /* \"#utility.yul\":7709:7741   */\n      slt\n        /* \"#utility.yul\":7706:7825   */\n      iszero\n      tag_699\n      jumpi\n        /* \"#utility.yul\":7744:7823   */\n      tag_700\n      tag_528\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":7706:7825   */\n    tag_699:\n        /* \"#utility.yul\":7864:7865   */\n      0x00\n        /* \"#utility.yul\":7889:7942   */\n      tag_701\n        /* \"#utility.yul\":7934:7941   */\n      dup6\n        /* \"#utility.yul\":7925:7931   */\n      dup3\n        /* \"#utility.yul\":7914:7923   */\n      dup7\n        /* \"#utility.yul\":7910:7932   */\n      add\n        /* \"#utility.yul\":7889:7942   */\n      tag_543\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":7879:7942   */\n      swap3\n      pop\n        /* \"#utility.yul\":7835:7952   */\n      pop\n        /* \"#utility.yul\":7991:7993   */\n      0x20\n        /* \"#utility.yul\":8017:8067   */\n      tag_702\n        /* \"#utility.yul\":8059:8066   */\n      dup6\n        /* \"#utility.yul\":8050:8056   */\n      dup3\n        /* \"#utility.yul\":8039:8048   */\n      dup7\n        /* \"#utility.yul\":8035:8057   */\n      add\n        /* \"#utility.yul\":8017:8067   */\n      tag_548\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":8007:8067   */\n      swap2\n      pop\n        /* \"#utility.yul\":7962:8077   */\n      pop\n        /* \"#utility.yul\":7616:8084   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8090:8201   */\n    tag_556:\n        /* \"#utility.yul\":8142:8149   */\n      0x00\n        /* \"#utility.yul\":8171:8195   */\n      tag_704\n        /* \"#utility.yul\":8189:8194   */\n      dup3\n        /* \"#utility.yul\":8171:8195   */\n      tag_541\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":8160:8195   */\n      swap1\n      pop\n        /* \"#utility.yul\":8090:8201   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8207:8359   */\n    tag_557:\n        /* \"#utility.yul\":8295:8334   */\n      tag_706\n        /* \"#utility.yul\":8328:8333   */\n      dup2\n        /* \"#utility.yul\":8295:8334   */\n      tag_556\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":8288:8293   */\n      dup2\n        /* \"#utility.yul\":8285:8335   */\n      eq\n        /* \"#utility.yul\":8275:8353   */\n      tag_707\n      jumpi\n        /* \"#utility.yul\":8349:8350   */\n      0x00\n        /* \"#utility.yul\":8346:8347   */\n      dup1\n        /* \"#utility.yul\":8339:8351   */\n      revert\n        /* \"#utility.yul\":8275:8353   */\n    tag_707:\n        /* \"#utility.yul\":8207:8359   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8365:8534   */\n    tag_558:\n        /* \"#utility.yul\":8426:8431   */\n      0x00\n        /* \"#utility.yul\":8464:8470   */\n      dup2\n        /* \"#utility.yul\":8451:8471   */\n      calldataload\n        /* \"#utility.yul\":8442:8471   */\n      swap1\n      pop\n        /* \"#utility.yul\":8480:8528   */\n      tag_709\n        /* \"#utility.yul\":8522:8527   */\n      dup2\n        /* \"#utility.yul\":8480:8528   */\n      tag_557\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":8365:8534   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8540:9189   */\n    tag_102:\n        /* \"#utility.yul\":8632:8638   */\n      0x00\n        /* \"#utility.yul\":8640:8646   */\n      dup1\n        /* \"#utility.yul\":8648:8654   */\n      0x00\n        /* \"#utility.yul\":8697:8699   */\n      0x60\n        /* \"#utility.yul\":8685:8694   */\n      dup5\n        /* \"#utility.yul\":8676:8683   */\n      dup7\n        /* \"#utility.yul\":8672:8695   */\n      sub\n        /* \"#utility.yul\":8668:8700   */\n      slt\n        /* \"#utility.yul\":8665:8784   */\n      iszero\n      tag_711\n      jumpi\n        /* \"#utility.yul\":8703:8782   */\n      tag_712\n      tag_528\n      jump\t// in\n    tag_712:\n        /* \"#utility.yul\":8665:8784   */\n    tag_711:\n        /* \"#utility.yul\":8823:8824   */\n      0x00\n        /* \"#utility.yul\":8848:8916   */\n      tag_713\n        /* \"#utility.yul\":8908:8915   */\n      dup7\n        /* \"#utility.yul\":8899:8905   */\n      dup3\n        /* \"#utility.yul\":8888:8897   */\n      dup8\n        /* \"#utility.yul\":8884:8906   */\n      add\n        /* \"#utility.yul\":8848:8916   */\n      tag_558\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":8838:8916   */\n      swap4\n      pop\n        /* \"#utility.yul\":8794:8926   */\n      pop\n        /* \"#utility.yul\":8965:8967   */\n      0x20\n        /* \"#utility.yul\":8991:9044   */\n      tag_714\n        /* \"#utility.yul\":9036:9043   */\n      dup7\n        /* \"#utility.yul\":9027:9033   */\n      dup3\n        /* \"#utility.yul\":9016:9025   */\n      dup8\n        /* \"#utility.yul\":9012:9034   */\n      add\n        /* \"#utility.yul\":8991:9044   */\n      tag_543\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":8981:9044   */\n      swap3\n      pop\n        /* \"#utility.yul\":8936:9054   */\n      pop\n        /* \"#utility.yul\":9093:9095   */\n      0x40\n        /* \"#utility.yul\":9119:9172   */\n      tag_715\n        /* \"#utility.yul\":9164:9171   */\n      dup7\n        /* \"#utility.yul\":9155:9161   */\n      dup3\n        /* \"#utility.yul\":9144:9153   */\n      dup8\n        /* \"#utility.yul\":9140:9162   */\n      add\n        /* \"#utility.yul\":9119:9172   */\n      tag_546\n      jump\t// in\n    tag_715:\n        /* \"#utility.yul\":9109:9172   */\n      swap2\n      pop\n        /* \"#utility.yul\":9064:9182   */\n      pop\n        /* \"#utility.yul\":8540:9189   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":9195:9524   */\n    tag_106:\n        /* \"#utility.yul\":9254:9260   */\n      0x00\n        /* \"#utility.yul\":9303:9305   */\n      0x20\n        /* \"#utility.yul\":9291:9300   */\n      dup3\n        /* \"#utility.yul\":9282:9289   */\n      dup5\n        /* \"#utility.yul\":9278:9301   */\n      sub\n        /* \"#utility.yul\":9274:9306   */\n      slt\n        /* \"#utility.yul\":9271:9390   */\n      iszero\n      tag_717\n      jumpi\n        /* \"#utility.yul\":9309:9388   */\n      tag_718\n      tag_528\n      jump\t// in\n    tag_718:\n        /* \"#utility.yul\":9271:9390   */\n    tag_717:\n        /* \"#utility.yul\":9429:9430   */\n      0x00\n        /* \"#utility.yul\":9454:9507   */\n      tag_719\n        /* \"#utility.yul\":9499:9506   */\n      dup5\n        /* \"#utility.yul\":9490:9496   */\n      dup3\n        /* \"#utility.yul\":9479:9488   */\n      dup6\n        /* \"#utility.yul\":9475:9497   */\n      add\n        /* \"#utility.yul\":9454:9507   */\n      tag_546\n      jump\t// in\n    tag_719:\n        /* \"#utility.yul\":9444:9507   */\n      swap2\n      pop\n        /* \"#utility.yul\":9400:9517   */\n      pop\n        /* \"#utility.yul\":9195:9524   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9530:9634   */\n    tag_559:\n        /* \"#utility.yul\":9575:9582   */\n      0x00\n        /* \"#utility.yul\":9604:9628   */\n      tag_721\n        /* \"#utility.yul\":9622:9627   */\n      dup3\n        /* \"#utility.yul\":9604:9628   */\n      tag_540\n      jump\t// in\n    tag_721:\n        /* \"#utility.yul\":9593:9628   */\n      swap1\n      pop\n        /* \"#utility.yul\":9530:9634   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9640:9778   */\n    tag_560:\n        /* \"#utility.yul\":9721:9753   */\n      tag_723\n        /* \"#utility.yul\":9747:9752   */\n      dup2\n        /* \"#utility.yul\":9721:9753   */\n      tag_559\n      jump\t// in\n    tag_723:\n        /* \"#utility.yul\":9714:9719   */\n      dup2\n        /* \"#utility.yul\":9711:9754   */\n      eq\n        /* \"#utility.yul\":9701:9772   */\n      tag_724\n      jumpi\n        /* \"#utility.yul\":9768:9769   */\n      0x00\n        /* \"#utility.yul\":9765:9766   */\n      dup1\n        /* \"#utility.yul\":9758:9770   */\n      revert\n        /* \"#utility.yul\":9701:9772   */\n    tag_724:\n        /* \"#utility.yul\":9640:9778   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9784:9939   */\n    tag_561:\n        /* \"#utility.yul\":9838:9843   */\n      0x00\n        /* \"#utility.yul\":9876:9882   */\n      dup2\n        /* \"#utility.yul\":9863:9883   */\n      calldataload\n        /* \"#utility.yul\":9854:9883   */\n      swap1\n      pop\n        /* \"#utility.yul\":9892:9933   */\n      tag_726\n        /* \"#utility.yul\":9927:9932   */\n      dup2\n        /* \"#utility.yul\":9892:9933   */\n      tag_560\n      jump\t// in\n    tag_726:\n        /* \"#utility.yul\":9784:9939   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9945:10435   */\n    tag_113:\n        /* \"#utility.yul\":10021:10027   */\n      0x00\n        /* \"#utility.yul\":10029:10035   */\n      dup1\n        /* \"#utility.yul\":10078:10080   */\n      0x40\n        /* \"#utility.yul\":10066:10075   */\n      dup4\n        /* \"#utility.yul\":10057:10064   */\n      dup6\n        /* \"#utility.yul\":10053:10076   */\n      sub\n        /* \"#utility.yul\":10049:10081   */\n      slt\n        /* \"#utility.yul\":10046:10165   */\n      iszero\n      tag_728\n      jumpi\n        /* \"#utility.yul\":10084:10163   */\n      tag_729\n      tag_528\n      jump\t// in\n    tag_729:\n        /* \"#utility.yul\":10046:10165   */\n    tag_728:\n        /* \"#utility.yul\":10204:10205   */\n      0x00\n        /* \"#utility.yul\":10229:10290   */\n      tag_730\n        /* \"#utility.yul\":10282:10289   */\n      dup6\n        /* \"#utility.yul\":10273:10279   */\n      dup3\n        /* \"#utility.yul\":10262:10271   */\n      dup7\n        /* \"#utility.yul\":10258:10280   */\n      add\n        /* \"#utility.yul\":10229:10290   */\n      tag_561\n      jump\t// in\n    tag_730:\n        /* \"#utility.yul\":10219:10290   */\n      swap3\n      pop\n        /* \"#utility.yul\":10175:10300   */\n      pop\n        /* \"#utility.yul\":10339:10341   */\n      0x20\n        /* \"#utility.yul\":10365:10418   */\n      tag_731\n        /* \"#utility.yul\":10410:10417   */\n      dup6\n        /* \"#utility.yul\":10401:10407   */\n      dup3\n        /* \"#utility.yul\":10390:10399   */\n      dup7\n        /* \"#utility.yul\":10386:10408   */\n      add\n        /* \"#utility.yul\":10365:10418   */\n      tag_546\n      jump\t// in\n    tag_731:\n        /* \"#utility.yul\":10355:10418   */\n      swap2\n      pop\n        /* \"#utility.yul\":10310:10428   */\n      pop\n        /* \"#utility.yul\":9945:10435   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10441:10770   */\n    tag_129:\n        /* \"#utility.yul\":10500:10506   */\n      0x00\n        /* \"#utility.yul\":10549:10551   */\n      0x20\n        /* \"#utility.yul\":10537:10546   */\n      dup3\n        /* \"#utility.yul\":10528:10535   */\n      dup5\n        /* \"#utility.yul\":10524:10547   */\n      sub\n        /* \"#utility.yul\":10520:10552   */\n      slt\n        /* \"#utility.yul\":10517:10636   */\n      iszero\n      tag_733\n      jumpi\n        /* \"#utility.yul\":10555:10634   */\n      tag_734\n      tag_528\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":10517:10636   */\n    tag_733:\n        /* \"#utility.yul\":10675:10676   */\n      0x00\n        /* \"#utility.yul\":10700:10753   */\n      tag_735\n        /* \"#utility.yul\":10745:10752   */\n      dup5\n        /* \"#utility.yul\":10736:10742   */\n      dup3\n        /* \"#utility.yul\":10725:10734   */\n      dup6\n        /* \"#utility.yul\":10721:10743   */\n      add\n        /* \"#utility.yul\":10700:10753   */\n      tag_543\n      jump\t// in\n    tag_735:\n        /* \"#utility.yul\":10690:10753   */\n      swap2\n      pop\n        /* \"#utility.yul\":10646:10763   */\n      pop\n        /* \"#utility.yul\":10441:10770   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10776:11250   */\n    tag_185:\n        /* \"#utility.yul\":10844:10850   */\n      0x00\n        /* \"#utility.yul\":10852:10858   */\n      dup1\n        /* \"#utility.yul\":10901:10903   */\n      0x40\n        /* \"#utility.yul\":10889:10898   */\n      dup4\n        /* \"#utility.yul\":10880:10887   */\n      dup6\n        /* \"#utility.yul\":10876:10899   */\n      sub\n        /* \"#utility.yul\":10872:10904   */\n      slt\n        /* \"#utility.yul\":10869:10988   */\n      iszero\n      tag_737\n      jumpi\n        /* \"#utility.yul\":10907:10986   */\n      tag_738\n      tag_528\n      jump\t// in\n    tag_738:\n        /* \"#utility.yul\":10869:10988   */\n    tag_737:\n        /* \"#utility.yul\":11027:11028   */\n      0x00\n        /* \"#utility.yul\":11052:11105   */\n      tag_739\n        /* \"#utility.yul\":11097:11104   */\n      dup6\n        /* \"#utility.yul\":11088:11094   */\n      dup3\n        /* \"#utility.yul\":11077:11086   */\n      dup7\n        /* \"#utility.yul\":11073:11095   */\n      add\n        /* \"#utility.yul\":11052:11105   */\n      tag_543\n      jump\t// in\n    tag_739:\n        /* \"#utility.yul\":11042:11105   */\n      swap3\n      pop\n        /* \"#utility.yul\":10998:11115   */\n      pop\n        /* \"#utility.yul\":11154:11156   */\n      0x20\n        /* \"#utility.yul\":11180:11233   */\n      tag_740\n        /* \"#utility.yul\":11225:11232   */\n      dup6\n        /* \"#utility.yul\":11216:11222   */\n      dup3\n        /* \"#utility.yul\":11205:11214   */\n      dup7\n        /* \"#utility.yul\":11201:11223   */\n      add\n        /* \"#utility.yul\":11180:11233   */\n      tag_543\n      jump\t// in\n    tag_740:\n        /* \"#utility.yul\":11170:11233   */\n      swap2\n      pop\n        /* \"#utility.yul\":11125:11243   */\n      pop\n        /* \"#utility.yul\":10776:11250   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11256:11374   */\n    tag_562:\n        /* \"#utility.yul\":11343:11367   */\n      tag_742\n        /* \"#utility.yul\":11361:11366   */\n      dup2\n        /* \"#utility.yul\":11343:11367   */\n      tag_541\n      jump\t// in\n    tag_742:\n        /* \"#utility.yul\":11338:11341   */\n      dup3\n        /* \"#utility.yul\":11331:11368   */\n      mstore\n        /* \"#utility.yul\":11256:11374   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11380:11602   */\n    tag_200:\n        /* \"#utility.yul\":11473:11477   */\n      0x00\n        /* \"#utility.yul\":11511:11513   */\n      0x20\n        /* \"#utility.yul\":11500:11509   */\n      dup3\n        /* \"#utility.yul\":11496:11514   */\n      add\n        /* \"#utility.yul\":11488:11514   */\n      swap1\n      pop\n        /* \"#utility.yul\":11524:11595   */\n      tag_744\n        /* \"#utility.yul\":11592:11593   */\n      0x00\n        /* \"#utility.yul\":11581:11590   */\n      dup4\n        /* \"#utility.yul\":11577:11594   */\n      add\n        /* \"#utility.yul\":11568:11574   */\n      dup5\n        /* \"#utility.yul\":11524:11595   */\n      tag_562\n      jump\t// in\n    tag_744:\n        /* \"#utility.yul\":11380:11602   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11608:11788   */\n    tag_563:\n        /* \"#utility.yul\":11656:11733   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11653:11654   */\n      0x00\n        /* \"#utility.yul\":11646:11734   */\n      mstore\n        /* \"#utility.yul\":11753:11757   */\n      0x22\n        /* \"#utility.yul\":11750:11751   */\n      0x04\n        /* \"#utility.yul\":11743:11758   */\n      mstore\n        /* \"#utility.yul\":11777:11781   */\n      0x24\n        /* \"#utility.yul\":11774:11775   */\n      0x00\n        /* \"#utility.yul\":11767:11782   */\n      revert\n        /* \"#utility.yul\":11794:12114   */\n    tag_207:\n        /* \"#utility.yul\":11838:11844   */\n      0x00\n        /* \"#utility.yul\":11875:11876   */\n      0x02\n        /* \"#utility.yul\":11869:11873   */\n      dup3\n        /* \"#utility.yul\":11865:11877   */\n      div\n        /* \"#utility.yul\":11855:11877   */\n      swap1\n      pop\n        /* \"#utility.yul\":11922:11923   */\n      0x01\n        /* \"#utility.yul\":11916:11920   */\n      dup3\n        /* \"#utility.yul\":11912:11924   */\n      and\n        /* \"#utility.yul\":11943:11961   */\n      dup1\n        /* \"#utility.yul\":11933:12014   */\n      tag_747\n      jumpi\n        /* \"#utility.yul\":11999:12003   */\n      0x7f\n        /* \"#utility.yul\":11991:11997   */\n      dup3\n        /* \"#utility.yul\":11987:12004   */\n      and\n        /* \"#utility.yul\":11977:12004   */\n      swap2\n      pop\n        /* \"#utility.yul\":11933:12014   */\n    tag_747:\n        /* \"#utility.yul\":12061:12063   */\n      0x20\n        /* \"#utility.yul\":12053:12059   */\n      dup3\n        /* \"#utility.yul\":12050:12064   */\n      lt\n        /* \"#utility.yul\":12030:12048   */\n      dup2\n        /* \"#utility.yul\":12027:12065   */\n      sub\n        /* \"#utility.yul\":12024:12108   */\n      tag_748\n      jumpi\n        /* \"#utility.yul\":12080:12098   */\n      tag_749\n      tag_563\n      jump\t// in\n    tag_749:\n        /* \"#utility.yul\":12024:12108   */\n    tag_748:\n        /* \"#utility.yul\":11845:12114   */\n      pop\n        /* \"#utility.yul\":11794:12114   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12120:12290   */\n    tag_564:\n        /* \"#utility.yul\":12260:12282   */\n      0x436f6e74726163743a204e6565642041646d696e000000000000000000000000\n        /* \"#utility.yul\":12256:12257   */\n      0x00\n        /* \"#utility.yul\":12248:12254   */\n      dup3\n        /* \"#utility.yul\":12244:12258   */\n      add\n        /* \"#utility.yul\":12237:12283   */\n      mstore\n        /* \"#utility.yul\":12120:12290   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12296:12662   */\n    tag_565:\n        /* \"#utility.yul\":12438:12441   */\n      0x00\n        /* \"#utility.yul\":12459:12526   */\n      tag_752\n        /* \"#utility.yul\":12523:12525   */\n      0x14\n        /* \"#utility.yul\":12518:12521   */\n      dup4\n        /* \"#utility.yul\":12459:12526   */\n      tag_536\n      jump\t// in\n    tag_752:\n        /* \"#utility.yul\":12452:12526   */\n      swap2\n      pop\n        /* \"#utility.yul\":12535:12628   */\n      tag_753\n        /* \"#utility.yul\":12624:12627   */\n      dup3\n        /* \"#utility.yul\":12535:12628   */\n      tag_564\n      jump\t// in\n    tag_753:\n        /* \"#utility.yul\":12653:12655   */\n      0x20\n        /* \"#utility.yul\":12648:12651   */\n      dup3\n        /* \"#utility.yul\":12644:12656   */\n      add\n        /* \"#utility.yul\":12637:12656   */\n      swap1\n      pop\n        /* \"#utility.yul\":12296:12662   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12668:13087   */\n    tag_222:\n        /* \"#utility.yul\":12834:12838   */\n      0x00\n        /* \"#utility.yul\":12872:12874   */\n      0x20\n        /* \"#utility.yul\":12861:12870   */\n      dup3\n        /* \"#utility.yul\":12857:12875   */\n      add\n        /* \"#utility.yul\":12849:12875   */\n      swap1\n      pop\n        /* \"#utility.yul\":12921:12930   */\n      dup2\n        /* \"#utility.yul\":12915:12919   */\n      dup2\n        /* \"#utility.yul\":12911:12931   */\n      sub\n        /* \"#utility.yul\":12907:12908   */\n      0x00\n        /* \"#utility.yul\":12896:12905   */\n      dup4\n        /* \"#utility.yul\":12892:12909   */\n      add\n        /* \"#utility.yul\":12885:12932   */\n      mstore\n        /* \"#utility.yul\":12949:13080   */\n      tag_755\n        /* \"#utility.yul\":13075:13079   */\n      dup2\n        /* \"#utility.yul\":12949:13080   */\n      tag_565\n      jump\t// in\n    tag_755:\n        /* \"#utility.yul\":12941:13080   */\n      swap1\n      pop\n        /* \"#utility.yul\":12668:13087   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13093:13425   */\n    tag_226:\n        /* \"#utility.yul\":13214:13218   */\n      0x00\n        /* \"#utility.yul\":13252:13254   */\n      0x40\n        /* \"#utility.yul\":13241:13250   */\n      dup3\n        /* \"#utility.yul\":13237:13255   */\n      add\n        /* \"#utility.yul\":13229:13255   */\n      swap1\n      pop\n        /* \"#utility.yul\":13265:13336   */\n      tag_757\n        /* \"#utility.yul\":13333:13334   */\n      0x00\n        /* \"#utility.yul\":13322:13331   */\n      dup4\n        /* \"#utility.yul\":13318:13335   */\n      add\n        /* \"#utility.yul\":13309:13315   */\n      dup6\n        /* \"#utility.yul\":13265:13336   */\n      tag_549\n      jump\t// in\n    tag_757:\n        /* \"#utility.yul\":13346:13418   */\n      tag_758\n        /* \"#utility.yul\":13414:13416   */\n      0x20\n        /* \"#utility.yul\":13403:13412   */\n      dup4\n        /* \"#utility.yul\":13399:13417   */\n      add\n        /* \"#utility.yul\":13390:13396   */\n      dup5\n        /* \"#utility.yul\":13346:13418   */\n      tag_562\n      jump\t// in\n    tag_758:\n        /* \"#utility.yul\":13093:13425   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13431:13591   */\n    tag_566:\n        /* \"#utility.yul\":13571:13583   */\n      0x4e6565642041646d696e00000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13567:13568   */\n      0x00\n        /* \"#utility.yul\":13559:13565   */\n      dup3\n        /* \"#utility.yul\":13555:13569   */\n      add\n        /* \"#utility.yul\":13548:13584   */\n      mstore\n        /* \"#utility.yul\":13431:13591   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13597:13963   */\n    tag_567:\n        /* \"#utility.yul\":13739:13742   */\n      0x00\n        /* \"#utility.yul\":13760:13827   */\n      tag_761\n        /* \"#utility.yul\":13824:13826   */\n      0x0a\n        /* \"#utility.yul\":13819:13822   */\n      dup4\n        /* \"#utility.yul\":13760:13827   */\n      tag_536\n      jump\t// in\n    tag_761:\n        /* \"#utility.yul\":13753:13827   */\n      swap2\n      pop\n        /* \"#utility.yul\":13836:13929   */\n      tag_762\n        /* \"#utility.yul\":13925:13928   */\n      dup3\n        /* \"#utility.yul\":13836:13929   */\n      tag_566\n      jump\t// in\n    tag_762:\n        /* \"#utility.yul\":13954:13956   */\n      0x20\n        /* \"#utility.yul\":13949:13952   */\n      dup3\n        /* \"#utility.yul\":13945:13957   */\n      add\n        /* \"#utility.yul\":13938:13957   */\n      swap1\n      pop\n        /* \"#utility.yul\":13597:13963   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13969:14388   */\n    tag_262:\n        /* \"#utility.yul\":14135:14139   */\n      0x00\n        /* \"#utility.yul\":14173:14175   */\n      0x20\n        /* \"#utility.yul\":14162:14171   */\n      dup3\n        /* \"#utility.yul\":14158:14176   */\n      add\n        /* \"#utility.yul\":14150:14176   */\n      swap1\n      pop\n        /* \"#utility.yul\":14222:14231   */\n      dup2\n        /* \"#utility.yul\":14216:14220   */\n      dup2\n        /* \"#utility.yul\":14212:14232   */\n      sub\n        /* \"#utility.yul\":14208:14209   */\n      0x00\n        /* \"#utility.yul\":14197:14206   */\n      dup4\n        /* \"#utility.yul\":14193:14210   */\n      add\n        /* \"#utility.yul\":14186:14233   */\n      mstore\n        /* \"#utility.yul\":14250:14381   */\n      tag_764\n        /* \"#utility.yul\":14376:14380   */\n      dup2\n        /* \"#utility.yul\":14250:14381   */\n      tag_567\n      jump\t// in\n    tag_764:\n        /* \"#utility.yul\":14242:14381   */\n      swap1\n      pop\n        /* \"#utility.yul\":13969:14388   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14394:14559   */\n    tag_568:\n        /* \"#utility.yul\":14534:14551   */\n      0x496e76616c696420616464726573730000000000000000000000000000000000\n        /* \"#utility.yul\":14530:14531   */\n      0x00\n        /* \"#utility.yul\":14522:14528   */\n      dup3\n        /* \"#utility.yul\":14518:14532   */\n      add\n        /* \"#utility.yul\":14511:14552   */\n      mstore\n        /* \"#utility.yul\":14394:14559   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14565:14931   */\n    tag_569:\n        /* \"#utility.yul\":14707:14710   */\n      0x00\n        /* \"#utility.yul\":14728:14795   */\n      tag_767\n        /* \"#utility.yul\":14792:14794   */\n      0x0f\n        /* \"#utility.yul\":14787:14790   */\n      dup4\n        /* \"#utility.yul\":14728:14795   */\n      tag_536\n      jump\t// in\n    tag_767:\n        /* \"#utility.yul\":14721:14795   */\n      swap2\n      pop\n        /* \"#utility.yul\":14804:14897   */\n      tag_768\n        /* \"#utility.yul\":14893:14896   */\n      dup3\n        /* \"#utility.yul\":14804:14897   */\n      tag_568\n      jump\t// in\n    tag_768:\n        /* \"#utility.yul\":14922:14924   */\n      0x20\n        /* \"#utility.yul\":14917:14920   */\n      dup3\n        /* \"#utility.yul\":14913:14925   */\n      add\n        /* \"#utility.yul\":14906:14925   */\n      swap1\n      pop\n        /* \"#utility.yul\":14565:14931   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14937:15356   */\n    tag_265:\n        /* \"#utility.yul\":15103:15107   */\n      0x00\n        /* \"#utility.yul\":15141:15143   */\n      0x20\n        /* \"#utility.yul\":15130:15139   */\n      dup3\n        /* \"#utility.yul\":15126:15144   */\n      add\n        /* \"#utility.yul\":15118:15144   */\n      swap1\n      pop\n        /* \"#utility.yul\":15190:15199   */\n      dup2\n        /* \"#utility.yul\":15184:15188   */\n      dup2\n        /* \"#utility.yul\":15180:15200   */\n      sub\n        /* \"#utility.yul\":15176:15177   */\n      0x00\n        /* \"#utility.yul\":15165:15174   */\n      dup4\n        /* \"#utility.yul\":15161:15178   */\n      add\n        /* \"#utility.yul\":15154:15201   */\n      mstore\n        /* \"#utility.yul\":15218:15349   */\n      tag_770\n        /* \"#utility.yul\":15344:15348   */\n      dup2\n        /* \"#utility.yul\":15218:15349   */\n      tag_569\n      jump\t// in\n    tag_770:\n        /* \"#utility.yul\":15210:15349   */\n      swap1\n      pop\n        /* \"#utility.yul\":14937:15356   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15362:15523   */\n    tag_570:\n        /* \"#utility.yul\":15502:15515   */\n      0x4e65656420524553435545000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15498:15499   */\n      0x00\n        /* \"#utility.yul\":15490:15496   */\n      dup3\n        /* \"#utility.yul\":15486:15500   */\n      add\n        /* \"#utility.yul\":15479:15516   */\n      mstore\n        /* \"#utility.yul\":15362:15523   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15529:15895   */\n    tag_571:\n        /* \"#utility.yul\":15671:15674   */\n      0x00\n        /* \"#utility.yul\":15692:15759   */\n      tag_773\n        /* \"#utility.yul\":15756:15758   */\n      0x0b\n        /* \"#utility.yul\":15751:15754   */\n      dup4\n        /* \"#utility.yul\":15692:15759   */\n      tag_536\n      jump\t// in\n    tag_773:\n        /* \"#utility.yul\":15685:15759   */\n      swap2\n      pop\n        /* \"#utility.yul\":15768:15861   */\n      tag_774\n        /* \"#utility.yul\":15857:15860   */\n      dup3\n        /* \"#utility.yul\":15768:15861   */\n      tag_570\n      jump\t// in\n    tag_774:\n        /* \"#utility.yul\":15886:15888   */\n      0x20\n        /* \"#utility.yul\":15881:15884   */\n      dup3\n        /* \"#utility.yul\":15877:15889   */\n      add\n        /* \"#utility.yul\":15870:15889   */\n      swap1\n      pop\n        /* \"#utility.yul\":15529:15895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15901:16320   */\n    tag_272:\n        /* \"#utility.yul\":16067:16071   */\n      0x00\n        /* \"#utility.yul\":16105:16107   */\n      0x20\n        /* \"#utility.yul\":16094:16103   */\n      dup3\n        /* \"#utility.yul\":16090:16108   */\n      add\n        /* \"#utility.yul\":16082:16108   */\n      swap1\n      pop\n        /* \"#utility.yul\":16154:16163   */\n      dup2\n        /* \"#utility.yul\":16148:16152   */\n      dup2\n        /* \"#utility.yul\":16144:16164   */\n      sub\n        /* \"#utility.yul\":16140:16141   */\n      0x00\n        /* \"#utility.yul\":16129:16138   */\n      dup4\n        /* \"#utility.yul\":16125:16142   */\n      add\n        /* \"#utility.yul\":16118:16165   */\n      mstore\n        /* \"#utility.yul\":16182:16313   */\n      tag_776\n        /* \"#utility.yul\":16308:16312   */\n      dup2\n        /* \"#utility.yul\":16182:16313   */\n      tag_571\n      jump\t// in\n    tag_776:\n        /* \"#utility.yul\":16174:16313   */\n      swap1\n      pop\n        /* \"#utility.yul\":15901:16320   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16326:16386   */\n    tag_572:\n        /* \"#utility.yul\":16354:16357   */\n      0x00\n        /* \"#utility.yul\":16375:16380   */\n      dup2\n        /* \"#utility.yul\":16368:16380   */\n      swap1\n      pop\n        /* \"#utility.yul\":16326:16386   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16392:16534   */\n    tag_573:\n        /* \"#utility.yul\":16442:16451   */\n      0x00\n        /* \"#utility.yul\":16475:16528   */\n      tag_779\n        /* \"#utility.yul\":16493:16527   */\n      tag_780\n        /* \"#utility.yul\":16502:16526   */\n      tag_781\n        /* \"#utility.yul\":16520:16525   */\n      dup5\n        /* \"#utility.yul\":16502:16526   */\n      tag_540\n      jump\t// in\n    tag_781:\n        /* \"#utility.yul\":16493:16527   */\n      tag_572\n      jump\t// in\n    tag_780:\n        /* \"#utility.yul\":16475:16528   */\n      tag_540\n      jump\t// in\n    tag_779:\n        /* \"#utility.yul\":16462:16528   */\n      swap1\n      pop\n        /* \"#utility.yul\":16392:16534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16540:16666   */\n    tag_574:\n        /* \"#utility.yul\":16590:16599   */\n      0x00\n        /* \"#utility.yul\":16623:16660   */\n      tag_783\n        /* \"#utility.yul\":16654:16659   */\n      dup3\n        /* \"#utility.yul\":16623:16660   */\n      tag_573\n      jump\t// in\n    tag_783:\n        /* \"#utility.yul\":16610:16660   */\n      swap1\n      pop\n        /* \"#utility.yul\":16540:16666   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16672:16813   */\n    tag_575:\n        /* \"#utility.yul\":16737:16746   */\n      0x00\n        /* \"#utility.yul\":16770:16807   */\n      tag_785\n        /* \"#utility.yul\":16801:16806   */\n      dup3\n        /* \"#utility.yul\":16770:16807   */\n      tag_574\n      jump\t// in\n    tag_785:\n        /* \"#utility.yul\":16757:16807   */\n      swap1\n      pop\n        /* \"#utility.yul\":16672:16813   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16819:16980   */\n    tag_576:\n        /* \"#utility.yul\":16921:16973   */\n      tag_787\n        /* \"#utility.yul\":16967:16972   */\n      dup2\n        /* \"#utility.yul\":16921:16973   */\n      tag_575\n      jump\t// in\n    tag_787:\n        /* \"#utility.yul\":16916:16919   */\n      dup3\n        /* \"#utility.yul\":16909:16974   */\n      mstore\n        /* \"#utility.yul\":16819:16980   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16986:17569   */\n    tag_276:\n        /* \"#utility.yul\":17178:17182   */\n      0x00\n        /* \"#utility.yul\":17216:17219   */\n      0x80\n        /* \"#utility.yul\":17205:17214   */\n      dup3\n        /* \"#utility.yul\":17201:17220   */\n      add\n        /* \"#utility.yul\":17193:17220   */\n      swap1\n      pop\n        /* \"#utility.yul\":17230:17316   */\n      tag_789\n        /* \"#utility.yul\":17313:17314   */\n      0x00\n        /* \"#utility.yul\":17302:17311   */\n      dup4\n        /* \"#utility.yul\":17298:17315   */\n      add\n        /* \"#utility.yul\":17289:17295   */\n      dup8\n        /* \"#utility.yul\":17230:17316   */\n      tag_576\n      jump\t// in\n    tag_789:\n        /* \"#utility.yul\":17326:17398   */\n      tag_790\n        /* \"#utility.yul\":17394:17396   */\n      0x20\n        /* \"#utility.yul\":17383:17392   */\n      dup4\n        /* \"#utility.yul\":17379:17397   */\n      add\n        /* \"#utility.yul\":17370:17376   */\n      dup7\n        /* \"#utility.yul\":17326:17398   */\n      tag_549\n      jump\t// in\n    tag_790:\n        /* \"#utility.yul\":17408:17480   */\n      tag_791\n        /* \"#utility.yul\":17476:17478   */\n      0x40\n        /* \"#utility.yul\":17465:17474   */\n      dup4\n        /* \"#utility.yul\":17461:17479   */\n      add\n        /* \"#utility.yul\":17452:17458   */\n      dup6\n        /* \"#utility.yul\":17408:17480   */\n      tag_562\n      jump\t// in\n    tag_791:\n        /* \"#utility.yul\":17490:17562   */\n      tag_792\n        /* \"#utility.yul\":17558:17560   */\n      0x60\n        /* \"#utility.yul\":17547:17556   */\n      dup4\n        /* \"#utility.yul\":17543:17561   */\n      add\n        /* \"#utility.yul\":17534:17540   */\n      dup5\n        /* \"#utility.yul\":17490:17562   */\n      tag_549\n      jump\t// in\n    tag_792:\n        /* \"#utility.yul\":16986:17569   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17575:17753   */\n    tag_577:\n        /* \"#utility.yul\":17715:17745   */\n      0x436f6e74726163743a20436f6e74726163742069732050617573656400000000\n        /* \"#utility.yul\":17711:17712   */\n      0x00\n        /* \"#utility.yul\":17703:17709   */\n      dup3\n        /* \"#utility.yul\":17699:17713   */\n      add\n        /* \"#utility.yul\":17692:17746   */\n      mstore\n        /* \"#utility.yul\":17575:17753   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17759:18125   */\n    tag_578:\n        /* \"#utility.yul\":17901:17904   */\n      0x00\n        /* \"#utility.yul\":17922:17989   */\n      tag_795\n        /* \"#utility.yul\":17986:17988   */\n      0x1c\n        /* \"#utility.yul\":17981:17984   */\n      dup4\n        /* \"#utility.yul\":17922:17989   */\n      tag_536\n      jump\t// in\n    tag_795:\n        /* \"#utility.yul\":17915:17989   */\n      swap2\n      pop\n        /* \"#utility.yul\":17998:18091   */\n      tag_796\n        /* \"#utility.yul\":18087:18090   */\n      dup3\n        /* \"#utility.yul\":17998:18091   */\n      tag_577\n      jump\t// in\n    tag_796:\n        /* \"#utility.yul\":18116:18118   */\n      0x20\n        /* \"#utility.yul\":18111:18114   */\n      dup3\n        /* \"#utility.yul\":18107:18119   */\n      add\n        /* \"#utility.yul\":18100:18119   */\n      swap1\n      pop\n        /* \"#utility.yul\":17759:18125   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18131:18550   */\n    tag_281:\n        /* \"#utility.yul\":18297:18301   */\n      0x00\n        /* \"#utility.yul\":18335:18337   */\n      0x20\n        /* \"#utility.yul\":18324:18333   */\n      dup3\n        /* \"#utility.yul\":18320:18338   */\n      add\n        /* \"#utility.yul\":18312:18338   */\n      swap1\n      pop\n        /* \"#utility.yul\":18384:18393   */\n      dup2\n        /* \"#utility.yul\":18378:18382   */\n      dup2\n        /* \"#utility.yul\":18374:18394   */\n      sub\n        /* \"#utility.yul\":18370:18371   */\n      0x00\n        /* \"#utility.yul\":18359:18368   */\n      dup4\n        /* \"#utility.yul\":18355:18372   */\n      add\n        /* \"#utility.yul\":18348:18395   */\n      mstore\n        /* \"#utility.yul\":18412:18543   */\n      tag_798\n        /* \"#utility.yul\":18538:18542   */\n      dup2\n        /* \"#utility.yul\":18412:18543   */\n      tag_578\n      jump\t// in\n    tag_798:\n        /* \"#utility.yul\":18404:18543   */\n      swap1\n      pop\n        /* \"#utility.yul\":18131:18550   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18556:18725   */\n    tag_579:\n        /* \"#utility.yul\":18696:18717   */\n      0x436f6e74726163743a204e656564204275726e00000000000000000000000000\n        /* \"#utility.yul\":18692:18693   */\n      0x00\n        /* \"#utility.yul\":18684:18690   */\n      dup3\n        /* \"#utility.yul\":18680:18694   */\n      add\n        /* \"#utility.yul\":18673:18718   */\n      mstore\n        /* \"#utility.yul\":18556:18725   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18731:19097   */\n    tag_580:\n        /* \"#utility.yul\":18873:18876   */\n      0x00\n        /* \"#utility.yul\":18894:18961   */\n      tag_801\n        /* \"#utility.yul\":18958:18960   */\n      0x13\n        /* \"#utility.yul\":18953:18956   */\n      dup4\n        /* \"#utility.yul\":18894:18961   */\n      tag_536\n      jump\t// in\n    tag_801:\n        /* \"#utility.yul\":18887:18961   */\n      swap2\n      pop\n        /* \"#utility.yul\":18970:19063   */\n      tag_802\n        /* \"#utility.yul\":19059:19062   */\n      dup3\n        /* \"#utility.yul\":18970:19063   */\n      tag_579\n      jump\t// in\n    tag_802:\n        /* \"#utility.yul\":19088:19090   */\n      0x20\n        /* \"#utility.yul\":19083:19086   */\n      dup3\n        /* \"#utility.yul\":19079:19091   */\n      add\n        /* \"#utility.yul\":19072:19091   */\n      swap1\n      pop\n        /* \"#utility.yul\":18731:19097   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19103:19522   */\n    tag_287:\n        /* \"#utility.yul\":19269:19273   */\n      0x00\n        /* \"#utility.yul\":19307:19309   */\n      0x20\n        /* \"#utility.yul\":19296:19305   */\n      dup3\n        /* \"#utility.yul\":19292:19310   */\n      add\n        /* \"#utility.yul\":19284:19310   */\n      swap1\n      pop\n        /* \"#utility.yul\":19356:19365   */\n      dup2\n        /* \"#utility.yul\":19350:19354   */\n      dup2\n        /* \"#utility.yul\":19346:19366   */\n      sub\n        /* \"#utility.yul\":19342:19343   */\n      0x00\n        /* \"#utility.yul\":19331:19340   */\n      dup4\n        /* \"#utility.yul\":19327:19344   */\n      add\n        /* \"#utility.yul\":19320:19367   */\n      mstore\n        /* \"#utility.yul\":19384:19515   */\n      tag_804\n        /* \"#utility.yul\":19510:19514   */\n      dup2\n        /* \"#utility.yul\":19384:19515   */\n      tag_580\n      jump\t// in\n    tag_804:\n        /* \"#utility.yul\":19376:19515   */\n      swap1\n      pop\n        /* \"#utility.yul\":19103:19522   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19528:19697   */\n    tag_581:\n        /* \"#utility.yul\":19668:19689   */\n      0x4d696e74696e6720746f2064697361626c656400000000000000000000000000\n        /* \"#utility.yul\":19664:19665   */\n      0x00\n        /* \"#utility.yul\":19656:19662   */\n      dup3\n        /* \"#utility.yul\":19652:19666   */\n      add\n        /* \"#utility.yul\":19645:19690   */\n      mstore\n        /* \"#utility.yul\":19528:19697   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19703:20069   */\n    tag_582:\n        /* \"#utility.yul\":19845:19848   */\n      0x00\n        /* \"#utility.yul\":19866:19933   */\n      tag_807\n        /* \"#utility.yul\":19930:19932   */\n      0x13\n        /* \"#utility.yul\":19925:19928   */\n      dup4\n        /* \"#utility.yul\":19866:19933   */\n      tag_536\n      jump\t// in\n    tag_807:\n        /* \"#utility.yul\":19859:19933   */\n      swap2\n      pop\n        /* \"#utility.yul\":19942:20035   */\n      tag_808\n        /* \"#utility.yul\":20031:20034   */\n      dup3\n        /* \"#utility.yul\":19942:20035   */\n      tag_581\n      jump\t// in\n    tag_808:\n        /* \"#utility.yul\":20060:20062   */\n      0x20\n        /* \"#utility.yul\":20055:20058   */\n      dup3\n        /* \"#utility.yul\":20051:20063   */\n      add\n        /* \"#utility.yul\":20044:20063   */\n      swap1\n      pop\n        /* \"#utility.yul\":19703:20069   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20075:20494   */\n    tag_299:\n        /* \"#utility.yul\":20241:20245   */\n      0x00\n        /* \"#utility.yul\":20279:20281   */\n      0x20\n        /* \"#utility.yul\":20268:20277   */\n      dup3\n        /* \"#utility.yul\":20264:20282   */\n      add\n        /* \"#utility.yul\":20256:20282   */\n      swap1\n      pop\n        /* \"#utility.yul\":20328:20337   */\n      dup2\n        /* \"#utility.yul\":20322:20326   */\n      dup2\n        /* \"#utility.yul\":20318:20338   */\n      sub\n        /* \"#utility.yul\":20314:20315   */\n      0x00\n        /* \"#utility.yul\":20303:20312   */\n      dup4\n        /* \"#utility.yul\":20299:20316   */\n      add\n        /* \"#utility.yul\":20292:20339   */\n      mstore\n        /* \"#utility.yul\":20356:20487   */\n      tag_810\n        /* \"#utility.yul\":20482:20486   */\n      dup2\n        /* \"#utility.yul\":20356:20487   */\n      tag_582\n      jump\t// in\n    tag_810:\n        /* \"#utility.yul\":20348:20487   */\n      swap1\n      pop\n        /* \"#utility.yul\":20075:20494   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20500:20670   */\n    tag_583:\n        /* \"#utility.yul\":20640:20662   */\n      0x436f6e74726163743a204e656564204d696e746f000000000000000000000000\n        /* \"#utility.yul\":20636:20637   */\n      0x00\n        /* \"#utility.yul\":20628:20634   */\n      dup3\n        /* \"#utility.yul\":20624:20638   */\n      add\n        /* \"#utility.yul\":20617:20663   */\n      mstore\n        /* \"#utility.yul\":20500:20670   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20676:21042   */\n    tag_584:\n        /* \"#utility.yul\":20818:20821   */\n      0x00\n        /* \"#utility.yul\":20839:20906   */\n      tag_813\n        /* \"#utility.yul\":20903:20905   */\n      0x14\n        /* \"#utility.yul\":20898:20901   */\n      dup4\n        /* \"#utility.yul\":20839:20906   */\n      tag_536\n      jump\t// in\n    tag_813:\n        /* \"#utility.yul\":20832:20906   */\n      swap2\n      pop\n        /* \"#utility.yul\":20915:21008   */\n      tag_814\n        /* \"#utility.yul\":21004:21007   */\n      dup3\n        /* \"#utility.yul\":20915:21008   */\n      tag_583\n      jump\t// in\n    tag_814:\n        /* \"#utility.yul\":21033:21035   */\n      0x20\n        /* \"#utility.yul\":21028:21031   */\n      dup3\n        /* \"#utility.yul\":21024:21036   */\n      add\n        /* \"#utility.yul\":21017:21036   */\n      swap1\n      pop\n        /* \"#utility.yul\":20676:21042   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21048:21467   */\n    tag_305:\n        /* \"#utility.yul\":21214:21218   */\n      0x00\n        /* \"#utility.yul\":21252:21254   */\n      0x20\n        /* \"#utility.yul\":21241:21250   */\n      dup3\n        /* \"#utility.yul\":21237:21255   */\n      add\n        /* \"#utility.yul\":21229:21255   */\n      swap1\n      pop\n        /* \"#utility.yul\":21301:21310   */\n      dup2\n        /* \"#utility.yul\":21295:21299   */\n      dup2\n        /* \"#utility.yul\":21291:21311   */\n      sub\n        /* \"#utility.yul\":21287:21288   */\n      0x00\n        /* \"#utility.yul\":21276:21285   */\n      dup4\n        /* \"#utility.yul\":21272:21289   */\n      add\n        /* \"#utility.yul\":21265:21312   */\n      mstore\n        /* \"#utility.yul\":21329:21460   */\n      tag_816\n        /* \"#utility.yul\":21455:21459   */\n      dup2\n        /* \"#utility.yul\":21329:21460   */\n      tag_584\n      jump\t// in\n    tag_816:\n        /* \"#utility.yul\":21321:21460   */\n      swap1\n      pop\n        /* \"#utility.yul\":21048:21467   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21473:21653   */\n    tag_585:\n        /* \"#utility.yul\":21521:21598   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21518:21519   */\n      0x00\n        /* \"#utility.yul\":21511:21599   */\n      mstore\n        /* \"#utility.yul\":21618:21622   */\n      0x11\n        /* \"#utility.yul\":21615:21616   */\n      0x04\n        /* \"#utility.yul\":21608:21623   */\n      mstore\n        /* \"#utility.yul\":21642:21646   */\n      0x24\n        /* \"#utility.yul\":21639:21640   */\n      0x00\n        /* \"#utility.yul\":21632:21647   */\n      revert\n        /* \"#utility.yul\":21659:21850   */\n    tag_308:\n        /* \"#utility.yul\":21699:21702   */\n      0x00\n        /* \"#utility.yul\":21718:21738   */\n      tag_819\n        /* \"#utility.yul\":21736:21737   */\n      dup3\n        /* \"#utility.yul\":21718:21738   */\n      tag_544\n      jump\t// in\n    tag_819:\n        /* \"#utility.yul\":21713:21738   */\n      swap2\n      pop\n        /* \"#utility.yul\":21752:21772   */\n      tag_820\n        /* \"#utility.yul\":21770:21771   */\n      dup4\n        /* \"#utility.yul\":21752:21772   */\n      tag_544\n      jump\t// in\n    tag_820:\n        /* \"#utility.yul\":21747:21772   */\n      swap3\n      pop\n        /* \"#utility.yul\":21795:21796   */\n      dup3\n        /* \"#utility.yul\":21792:21793   */\n      dup3\n        /* \"#utility.yul\":21788:21797   */\n      add\n        /* \"#utility.yul\":21781:21797   */\n      swap1\n      pop\n        /* \"#utility.yul\":21816:21819   */\n      dup1\n        /* \"#utility.yul\":21813:21814   */\n      dup3\n        /* \"#utility.yul\":21810:21820   */\n      gt\n        /* \"#utility.yul\":21807:21843   */\n      iszero\n      tag_821\n      jumpi\n        /* \"#utility.yul\":21823:21841   */\n      tag_822\n      tag_585\n      jump\t// in\n    tag_822:\n        /* \"#utility.yul\":21807:21843   */\n    tag_821:\n        /* \"#utility.yul\":21659:21850   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21856:22035   */\n    tag_586:\n        /* \"#utility.yul\":21996:22027   */\n      0x436f6e74726163743a20537570706c7920436170206578636565646564000000\n        /* \"#utility.yul\":21992:21993   */\n      0x00\n        /* \"#utility.yul\":21984:21990   */\n      dup3\n        /* \"#utility.yul\":21980:21994   */\n      add\n        /* \"#utility.yul\":21973:22028   */\n      mstore\n        /* \"#utility.yul\":21856:22035   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22041:22407   */\n    tag_587:\n        /* \"#utility.yul\":22183:22186   */\n      0x00\n        /* \"#utility.yul\":22204:22271   */\n      tag_825\n        /* \"#utility.yul\":22268:22270   */\n      0x1d\n        /* \"#utility.yul\":22263:22266   */\n      dup4\n        /* \"#utility.yul\":22204:22271   */\n      tag_536\n      jump\t// in\n    tag_825:\n        /* \"#utility.yul\":22197:22271   */\n      swap2\n      pop\n        /* \"#utility.yul\":22280:22373   */\n      tag_826\n        /* \"#utility.yul\":22369:22372   */\n      dup3\n        /* \"#utility.yul\":22280:22373   */\n      tag_586\n      jump\t// in\n    tag_826:\n        /* \"#utility.yul\":22398:22400   */\n      0x20\n        /* \"#utility.yul\":22393:22396   */\n      dup3\n        /* \"#utility.yul\":22389:22401   */\n      add\n        /* \"#utility.yul\":22382:22401   */\n      swap1\n      pop\n        /* \"#utility.yul\":22041:22407   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22413:22832   */\n    tag_311:\n        /* \"#utility.yul\":22579:22583   */\n      0x00\n        /* \"#utility.yul\":22617:22619   */\n      0x20\n        /* \"#utility.yul\":22606:22615   */\n      dup3\n        /* \"#utility.yul\":22602:22620   */\n      add\n        /* \"#utility.yul\":22594:22620   */\n      swap1\n      pop\n        /* \"#utility.yul\":22666:22675   */\n      dup2\n        /* \"#utility.yul\":22660:22664   */\n      dup2\n        /* \"#utility.yul\":22656:22676   */\n      sub\n        /* \"#utility.yul\":22652:22653   */\n      0x00\n        /* \"#utility.yul\":22641:22650   */\n      dup4\n        /* \"#utility.yul\":22637:22654   */\n      add\n        /* \"#utility.yul\":22630:22677   */\n      mstore\n        /* \"#utility.yul\":22694:22825   */\n      tag_828\n        /* \"#utility.yul\":22820:22824   */\n      dup2\n        /* \"#utility.yul\":22694:22825   */\n      tag_587\n      jump\t// in\n    tag_828:\n        /* \"#utility.yul\":22686:22825   */\n      swap1\n      pop\n        /* \"#utility.yul\":22413:22832   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22838:23170   */\n    tag_313:\n        /* \"#utility.yul\":22959:22963   */\n      0x00\n        /* \"#utility.yul\":22997:22999   */\n      0x40\n        /* \"#utility.yul\":22986:22995   */\n      dup3\n        /* \"#utility.yul\":22982:23000   */\n      add\n        /* \"#utility.yul\":22974:23000   */\n      swap1\n      pop\n        /* \"#utility.yul\":23010:23081   */\n      tag_830\n        /* \"#utility.yul\":23078:23079   */\n      0x00\n        /* \"#utility.yul\":23067:23076   */\n      dup4\n        /* \"#utility.yul\":23063:23080   */\n      add\n        /* \"#utility.yul\":23054:23060   */\n      dup6\n        /* \"#utility.yul\":23010:23081   */\n      tag_562\n      jump\t// in\n    tag_830:\n        /* \"#utility.yul\":23091:23163   */\n      tag_831\n        /* \"#utility.yul\":23159:23161   */\n      0x20\n        /* \"#utility.yul\":23148:23157   */\n      dup4\n        /* \"#utility.yul\":23144:23162   */\n      add\n        /* \"#utility.yul\":23135:23141   */\n      dup5\n        /* \"#utility.yul\":23091:23163   */\n      tag_549\n      jump\t// in\n    tag_831:\n        /* \"#utility.yul\":22838:23170   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23176:23310   */\n    tag_588:\n        /* \"#utility.yul\":23234:23243   */\n      0x00\n        /* \"#utility.yul\":23267:23304   */\n      tag_833\n        /* \"#utility.yul\":23298:23303   */\n      dup3\n        /* \"#utility.yul\":23267:23304   */\n      tag_574\n      jump\t// in\n    tag_833:\n        /* \"#utility.yul\":23254:23304   */\n      swap1\n      pop\n        /* \"#utility.yul\":23176:23310   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23316:23463   */\n    tag_589:\n        /* \"#utility.yul\":23411:23456   */\n      tag_835\n        /* \"#utility.yul\":23450:23455   */\n      dup2\n        /* \"#utility.yul\":23411:23456   */\n      tag_588\n      jump\t// in\n    tag_835:\n        /* \"#utility.yul\":23406:23409   */\n      dup3\n        /* \"#utility.yul\":23399:23457   */\n      mstore\n        /* \"#utility.yul\":23316:23463   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23469:23927   */\n    tag_325:\n        /* \"#utility.yul\":23626:23630   */\n      0x00\n        /* \"#utility.yul\":23664:23666   */\n      0x60\n        /* \"#utility.yul\":23653:23662   */\n      dup3\n        /* \"#utility.yul\":23649:23667   */\n      add\n        /* \"#utility.yul\":23641:23667   */\n      swap1\n      pop\n        /* \"#utility.yul\":23677:23756   */\n      tag_837\n        /* \"#utility.yul\":23753:23754   */\n      0x00\n        /* \"#utility.yul\":23742:23751   */\n      dup4\n        /* \"#utility.yul\":23738:23755   */\n      add\n        /* \"#utility.yul\":23729:23735   */\n      dup7\n        /* \"#utility.yul\":23677:23756   */\n      tag_589\n      jump\t// in\n    tag_837:\n        /* \"#utility.yul\":23766:23838   */\n      tag_838\n        /* \"#utility.yul\":23834:23836   */\n      0x20\n        /* \"#utility.yul\":23823:23832   */\n      dup4\n        /* \"#utility.yul\":23819:23837   */\n      add\n        /* \"#utility.yul\":23810:23816   */\n      dup6\n        /* \"#utility.yul\":23766:23838   */\n      tag_549\n      jump\t// in\n    tag_838:\n        /* \"#utility.yul\":23848:23920   */\n      tag_839\n        /* \"#utility.yul\":23916:23918   */\n      0x40\n        /* \"#utility.yul\":23905:23914   */\n      dup4\n        /* \"#utility.yul\":23901:23919   */\n      add\n        /* \"#utility.yul\":23892:23898   */\n      dup5\n        /* \"#utility.yul\":23848:23920   */\n      tag_549\n      jump\t// in\n    tag_839:\n        /* \"#utility.yul\":23469:23927   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23933:24106   */\n    tag_590:\n        /* \"#utility.yul\":24073:24098   */\n      0x436f6e74726163743a204e656564204275726e66726f6d000000000000000000\n        /* \"#utility.yul\":24069:24070   */\n      0x00\n        /* \"#utility.yul\":24061:24067   */\n      dup3\n        /* \"#utility.yul\":24057:24071   */\n      add\n        /* \"#utility.yul\":24050:24099   */\n      mstore\n        /* \"#utility.yul\":23933:24106   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24112:24478   */\n    tag_591:\n        /* \"#utility.yul\":24254:24257   */\n      0x00\n        /* \"#utility.yul\":24275:24342   */\n      tag_842\n        /* \"#utility.yul\":24339:24341   */\n      0x17\n        /* \"#utility.yul\":24334:24337   */\n      dup4\n        /* \"#utility.yul\":24275:24342   */\n      tag_536\n      jump\t// in\n    tag_842:\n        /* \"#utility.yul\":24268:24342   */\n      swap2\n      pop\n        /* \"#utility.yul\":24351:24444   */\n      tag_843\n        /* \"#utility.yul\":24440:24443   */\n      dup3\n        /* \"#utility.yul\":24351:24444   */\n      tag_590\n      jump\t// in\n    tag_843:\n        /* \"#utility.yul\":24469:24471   */\n      0x20\n        /* \"#utility.yul\":24464:24467   */\n      dup3\n        /* \"#utility.yul\":24460:24472   */\n      add\n        /* \"#utility.yul\":24453:24472   */\n      swap1\n      pop\n        /* \"#utility.yul\":24112:24478   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24484:24903   */\n    tag_336:\n        /* \"#utility.yul\":24650:24654   */\n      0x00\n        /* \"#utility.yul\":24688:24690   */\n      0x20\n        /* \"#utility.yul\":24677:24686   */\n      dup3\n        /* \"#utility.yul\":24673:24691   */\n      add\n        /* \"#utility.yul\":24665:24691   */\n      swap1\n      pop\n        /* \"#utility.yul\":24737:24746   */\n      dup2\n        /* \"#utility.yul\":24731:24735   */\n      dup2\n        /* \"#utility.yul\":24727:24747   */\n      sub\n        /* \"#utility.yul\":24723:24724   */\n      0x00\n        /* \"#utility.yul\":24712:24721   */\n      dup4\n        /* \"#utility.yul\":24708:24725   */\n      add\n        /* \"#utility.yul\":24701:24748   */\n      mstore\n        /* \"#utility.yul\":24765:24896   */\n      tag_845\n        /* \"#utility.yul\":24891:24895   */\n      dup2\n        /* \"#utility.yul\":24765:24896   */\n      tag_591\n      jump\t// in\n    tag_845:\n        /* \"#utility.yul\":24757:24896   */\n      swap1\n      pop\n        /* \"#utility.yul\":24484:24903   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24909:25351   */\n    tag_339:\n        /* \"#utility.yul\":25058:25062   */\n      0x00\n        /* \"#utility.yul\":25096:25098   */\n      0x60\n        /* \"#utility.yul\":25085:25094   */\n      dup3\n        /* \"#utility.yul\":25081:25099   */\n      add\n        /* \"#utility.yul\":25073:25099   */\n      swap1\n      pop\n        /* \"#utility.yul\":25109:25180   */\n      tag_847\n        /* \"#utility.yul\":25177:25178   */\n      0x00\n        /* \"#utility.yul\":25166:25175   */\n      dup4\n        /* \"#utility.yul\":25162:25179   */\n      add\n        /* \"#utility.yul\":25153:25159   */\n      dup7\n        /* \"#utility.yul\":25109:25180   */\n      tag_562\n      jump\t// in\n    tag_847:\n        /* \"#utility.yul\":25190:25262   */\n      tag_848\n        /* \"#utility.yul\":25258:25260   */\n      0x20\n        /* \"#utility.yul\":25247:25256   */\n      dup4\n        /* \"#utility.yul\":25243:25261   */\n      add\n        /* \"#utility.yul\":25234:25240   */\n      dup6\n        /* \"#utility.yul\":25190:25262   */\n      tag_549\n      jump\t// in\n    tag_848:\n        /* \"#utility.yul\":25272:25344   */\n      tag_849\n        /* \"#utility.yul\":25340:25342   */\n      0x40\n        /* \"#utility.yul\":25329:25338   */\n      dup4\n        /* \"#utility.yul\":25325:25343   */\n      add\n        /* \"#utility.yul\":25316:25322   */\n      dup5\n        /* \"#utility.yul\":25272:25344   */\n      tag_562\n      jump\t// in\n    tag_849:\n        /* \"#utility.yul\":24909:25351   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25357:25523   */\n    tag_592:\n        /* \"#utility.yul\":25497:25515   */\n      0x4d696e74696e672064697361626c656400000000000000000000000000000000\n        /* \"#utility.yul\":25493:25494   */\n      0x00\n        /* \"#utility.yul\":25485:25491   */\n      dup3\n        /* \"#utility.yul\":25481:25495   */\n      add\n        /* \"#utility.yul\":25474:25516   */\n      mstore\n        /* \"#utility.yul\":25357:25523   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25529:25895   */\n    tag_593:\n        /* \"#utility.yul\":25671:25674   */\n      0x00\n        /* \"#utility.yul\":25692:25759   */\n      tag_852\n        /* \"#utility.yul\":25756:25758   */\n      0x10\n        /* \"#utility.yul\":25751:25754   */\n      dup4\n        /* \"#utility.yul\":25692:25759   */\n      tag_536\n      jump\t// in\n    tag_852:\n        /* \"#utility.yul\":25685:25759   */\n      swap2\n      pop\n        /* \"#utility.yul\":25768:25861   */\n      tag_853\n        /* \"#utility.yul\":25857:25860   */\n      dup3\n        /* \"#utility.yul\":25768:25861   */\n      tag_592\n      jump\t// in\n    tag_853:\n        /* \"#utility.yul\":25886:25888   */\n      0x20\n        /* \"#utility.yul\":25881:25884   */\n      dup3\n        /* \"#utility.yul\":25877:25889   */\n      add\n        /* \"#utility.yul\":25870:25889   */\n      swap1\n      pop\n        /* \"#utility.yul\":25529:25895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25901:26320   */\n    tag_355:\n        /* \"#utility.yul\":26067:26071   */\n      0x00\n        /* \"#utility.yul\":26105:26107   */\n      0x20\n        /* \"#utility.yul\":26094:26103   */\n      dup3\n        /* \"#utility.yul\":26090:26108   */\n      add\n        /* \"#utility.yul\":26082:26108   */\n      swap1\n      pop\n        /* \"#utility.yul\":26154:26163   */\n      dup2\n        /* \"#utility.yul\":26148:26152   */\n      dup2\n        /* \"#utility.yul\":26144:26164   */\n      sub\n        /* \"#utility.yul\":26140:26141   */\n      0x00\n        /* \"#utility.yul\":26129:26138   */\n      dup4\n        /* \"#utility.yul\":26125:26142   */\n      add\n        /* \"#utility.yul\":26118:26165   */\n      mstore\n        /* \"#utility.yul\":26182:26313   */\n      tag_855\n        /* \"#utility.yul\":26308:26312   */\n      dup2\n        /* \"#utility.yul\":26182:26313   */\n      tag_593\n      jump\t// in\n    tag_855:\n        /* \"#utility.yul\":26174:26313   */\n      swap1\n      pop\n        /* \"#utility.yul\":25901:26320   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26326:26495   */\n    tag_594:\n        /* \"#utility.yul\":26466:26487   */\n      0x436f6e74726163743a204e656564204d696e7400000000000000000000000000\n        /* \"#utility.yul\":26462:26463   */\n      0x00\n        /* \"#utility.yul\":26454:26460   */\n      dup3\n        /* \"#utility.yul\":26450:26464   */\n      add\n        /* \"#utility.yul\":26443:26488   */\n      mstore\n        /* \"#utility.yul\":26326:26495   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26501:26867   */\n    tag_595:\n        /* \"#utility.yul\":26643:26646   */\n      0x00\n        /* \"#utility.yul\":26664:26731   */\n      tag_858\n        /* \"#utility.yul\":26728:26730   */\n      0x13\n        /* \"#utility.yul\":26723:26726   */\n      dup4\n        /* \"#utility.yul\":26664:26731   */\n      tag_536\n      jump\t// in\n    tag_858:\n        /* \"#utility.yul\":26657:26731   */\n      swap2\n      pop\n        /* \"#utility.yul\":26740:26833   */\n      tag_859\n        /* \"#utility.yul\":26829:26832   */\n      dup3\n        /* \"#utility.yul\":26740:26833   */\n      tag_594\n      jump\t// in\n    tag_859:\n        /* \"#utility.yul\":26858:26860   */\n      0x20\n        /* \"#utility.yul\":26853:26856   */\n      dup3\n        /* \"#utility.yul\":26849:26861   */\n      add\n        /* \"#utility.yul\":26842:26861   */\n      swap1\n      pop\n        /* \"#utility.yul\":26501:26867   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26873:27292   */\n    tag_361:\n        /* \"#utility.yul\":27039:27043   */\n      0x00\n        /* \"#utility.yul\":27077:27079   */\n      0x20\n        /* \"#utility.yul\":27066:27075   */\n      dup3\n        /* \"#utility.yul\":27062:27080   */\n      add\n        /* \"#utility.yul\":27054:27080   */\n      swap1\n      pop\n        /* \"#utility.yul\":27126:27135   */\n      dup2\n        /* \"#utility.yul\":27120:27124   */\n      dup2\n        /* \"#utility.yul\":27116:27136   */\n      sub\n        /* \"#utility.yul\":27112:27113   */\n      0x00\n        /* \"#utility.yul\":27101:27110   */\n      dup4\n        /* \"#utility.yul\":27097:27114   */\n      add\n        /* \"#utility.yul\":27090:27137   */\n      mstore\n        /* \"#utility.yul\":27154:27285   */\n      tag_861\n        /* \"#utility.yul\":27280:27284   */\n      dup2\n        /* \"#utility.yul\":27154:27285   */\n      tag_595\n      jump\t// in\n    tag_861:\n        /* \"#utility.yul\":27146:27285   */\n      swap1\n      pop\n        /* \"#utility.yul\":26873:27292   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27298:27459   */\n    tag_596:\n        /* \"#utility.yul\":27438:27451   */\n      0x4e65656420537570706c79000000000000000000000000000000000000000000\n        /* \"#utility.yul\":27434:27435   */\n      0x00\n        /* \"#utility.yul\":27426:27432   */\n      dup3\n        /* \"#utility.yul\":27422:27436   */\n      add\n        /* \"#utility.yul\":27415:27452   */\n      mstore\n        /* \"#utility.yul\":27298:27459   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27465:27831   */\n    tag_597:\n        /* \"#utility.yul\":27607:27610   */\n      0x00\n        /* \"#utility.yul\":27628:27695   */\n      tag_864\n        /* \"#utility.yul\":27692:27694   */\n      0x0b\n        /* \"#utility.yul\":27687:27690   */\n      dup4\n        /* \"#utility.yul\":27628:27695   */\n      tag_536\n      jump\t// in\n    tag_864:\n        /* \"#utility.yul\":27621:27695   */\n      swap2\n      pop\n        /* \"#utility.yul\":27704:27797   */\n      tag_865\n        /* \"#utility.yul\":27793:27796   */\n      dup3\n        /* \"#utility.yul\":27704:27797   */\n      tag_596\n      jump\t// in\n    tag_865:\n        /* \"#utility.yul\":27822:27824   */\n      0x20\n        /* \"#utility.yul\":27817:27820   */\n      dup3\n        /* \"#utility.yul\":27813:27825   */\n      add\n        /* \"#utility.yul\":27806:27825   */\n      swap1\n      pop\n        /* \"#utility.yul\":27465:27831   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27837:28256   */\n    tag_387:\n        /* \"#utility.yul\":28003:28007   */\n      0x00\n        /* \"#utility.yul\":28041:28043   */\n      0x20\n        /* \"#utility.yul\":28030:28039   */\n      dup3\n        /* \"#utility.yul\":28026:28044   */\n      add\n        /* \"#utility.yul\":28018:28044   */\n      swap1\n      pop\n        /* \"#utility.yul\":28090:28099   */\n      dup2\n        /* \"#utility.yul\":28084:28088   */\n      dup2\n        /* \"#utility.yul\":28080:28100   */\n      sub\n        /* \"#utility.yul\":28076:28077   */\n      0x00\n        /* \"#utility.yul\":28065:28074   */\n      dup4\n        /* \"#utility.yul\":28061:28078   */\n      add\n        /* \"#utility.yul\":28054:28101   */\n      mstore\n        /* \"#utility.yul\":28118:28249   */\n      tag_867\n        /* \"#utility.yul\":28244:28248   */\n      dup2\n        /* \"#utility.yul\":28118:28249   */\n      tag_597\n      jump\t// in\n    tag_867:\n        /* \"#utility.yul\":28110:28249   */\n      swap1\n      pop\n        /* \"#utility.yul\":27837:28256   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28262:28440   */\n    tag_598:\n        /* \"#utility.yul\":28402:28432   */\n      0x436f6e74726163743a20537570706c792043617020746f6f206c6f7700000000\n        /* \"#utility.yul\":28398:28399   */\n      0x00\n        /* \"#utility.yul\":28390:28396   */\n      dup3\n        /* \"#utility.yul\":28386:28400   */\n      add\n        /* \"#utility.yul\":28379:28433   */\n      mstore\n        /* \"#utility.yul\":28262:28440   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28446:28812   */\n    tag_599:\n        /* \"#utility.yul\":28588:28591   */\n      0x00\n        /* \"#utility.yul\":28609:28676   */\n      tag_870\n        /* \"#utility.yul\":28673:28675   */\n      0x1c\n        /* \"#utility.yul\":28668:28671   */\n      dup4\n        /* \"#utility.yul\":28609:28676   */\n      tag_536\n      jump\t// in\n    tag_870:\n        /* \"#utility.yul\":28602:28676   */\n      swap2\n      pop\n        /* \"#utility.yul\":28685:28778   */\n      tag_871\n        /* \"#utility.yul\":28774:28777   */\n      dup3\n        /* \"#utility.yul\":28685:28778   */\n      tag_598\n      jump\t// in\n    tag_871:\n        /* \"#utility.yul\":28803:28805   */\n      0x20\n        /* \"#utility.yul\":28798:28801   */\n      dup3\n        /* \"#utility.yul\":28794:28806   */\n      add\n        /* \"#utility.yul\":28787:28806   */\n      swap1\n      pop\n        /* \"#utility.yul\":28446:28812   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28818:29237   */\n    tag_391:\n        /* \"#utility.yul\":28984:28988   */\n      0x00\n        /* \"#utility.yul\":29022:29024   */\n      0x20\n        /* \"#utility.yul\":29011:29020   */\n      dup3\n        /* \"#utility.yul\":29007:29025   */\n      add\n        /* \"#utility.yul\":28999:29025   */\n      swap1\n      pop\n        /* \"#utility.yul\":29071:29080   */\n      dup2\n        /* \"#utility.yul\":29065:29069   */\n      dup2\n        /* \"#utility.yul\":29061:29081   */\n      sub\n        /* \"#utility.yul\":29057:29058   */\n      0x00\n        /* \"#utility.yul\":29046:29055   */\n      dup4\n        /* \"#utility.yul\":29042:29059   */\n      add\n        /* \"#utility.yul\":29035:29082   */\n      mstore\n        /* \"#utility.yul\":29099:29230   */\n      tag_873\n        /* \"#utility.yul\":29225:29229   */\n      dup2\n        /* \"#utility.yul\":29099:29230   */\n      tag_599\n      jump\t// in\n    tag_873:\n        /* \"#utility.yul\":29091:29230   */\n      swap1\n      pop\n        /* \"#utility.yul\":28818:29237   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29243:29424   */\n    tag_600:\n        /* \"#utility.yul\":29383:29416   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":29379:29380   */\n      0x00\n        /* \"#utility.yul\":29371:29377   */\n      dup3\n        /* \"#utility.yul\":29367:29381   */\n      add\n        /* \"#utility.yul\":29360:29417   */\n      mstore\n        /* \"#utility.yul\":29243:29424   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29430:29796   */\n    tag_601:\n        /* \"#utility.yul\":29572:29575   */\n      0x00\n        /* \"#utility.yul\":29593:29660   */\n      tag_876\n        /* \"#utility.yul\":29657:29659   */\n      0x1f\n        /* \"#utility.yul\":29652:29655   */\n      dup4\n        /* \"#utility.yul\":29593:29660   */\n      tag_536\n      jump\t// in\n    tag_876:\n        /* \"#utility.yul\":29586:29660   */\n      swap2\n      pop\n        /* \"#utility.yul\":29669:29762   */\n      tag_877\n        /* \"#utility.yul\":29758:29761   */\n      dup3\n        /* \"#utility.yul\":29669:29762   */\n      tag_600\n      jump\t// in\n    tag_877:\n        /* \"#utility.yul\":29787:29789   */\n      0x20\n        /* \"#utility.yul\":29782:29785   */\n      dup3\n        /* \"#utility.yul\":29778:29790   */\n      add\n        /* \"#utility.yul\":29771:29790   */\n      swap1\n      pop\n        /* \"#utility.yul\":29430:29796   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29802:30221   */\n    tag_430:\n        /* \"#utility.yul\":29968:29972   */\n      0x00\n        /* \"#utility.yul\":30006:30008   */\n      0x20\n        /* \"#utility.yul\":29995:30004   */\n      dup3\n        /* \"#utility.yul\":29991:30009   */\n      add\n        /* \"#utility.yul\":29983:30009   */\n      swap1\n      pop\n        /* \"#utility.yul\":30055:30064   */\n      dup2\n        /* \"#utility.yul\":30049:30053   */\n      dup2\n        /* \"#utility.yul\":30045:30065   */\n      sub\n        /* \"#utility.yul\":30041:30042   */\n      0x00\n        /* \"#utility.yul\":30030:30039   */\n      dup4\n        /* \"#utility.yul\":30026:30043   */\n      add\n        /* \"#utility.yul\":30019:30066   */\n      mstore\n        /* \"#utility.yul\":30083:30214   */\n      tag_879\n        /* \"#utility.yul\":30209:30213   */\n      dup2\n        /* \"#utility.yul\":30083:30214   */\n      tag_601\n      jump\t// in\n    tag_879:\n        /* \"#utility.yul\":30075:30214   */\n      swap1\n      pop\n        /* \"#utility.yul\":29802:30221   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30227:30559   */\n    tag_484:\n        /* \"#utility.yul\":30348:30352   */\n      0x00\n        /* \"#utility.yul\":30386:30388   */\n      0x40\n        /* \"#utility.yul\":30375:30384   */\n      dup3\n        /* \"#utility.yul\":30371:30389   */\n      add\n        /* \"#utility.yul\":30363:30389   */\n      swap1\n      pop\n        /* \"#utility.yul\":30399:30470   */\n      tag_881\n        /* \"#utility.yul\":30467:30468   */\n      0x00\n        /* \"#utility.yul\":30456:30465   */\n      dup4\n        /* \"#utility.yul\":30452:30469   */\n      add\n        /* \"#utility.yul\":30443:30449   */\n      dup6\n        /* \"#utility.yul\":30399:30470   */\n      tag_562\n      jump\t// in\n    tag_881:\n        /* \"#utility.yul\":30480:30552   */\n      tag_882\n        /* \"#utility.yul\":30548:30550   */\n      0x20\n        /* \"#utility.yul\":30537:30546   */\n      dup4\n        /* \"#utility.yul\":30533:30551   */\n      add\n        /* \"#utility.yul\":30524:30530   */\n      dup5\n        /* \"#utility.yul\":30480:30552   */\n      tag_553\n      jump\t// in\n    tag_882:\n        /* \"#utility.yul\":30227:30559   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30565:30702   */\n    tag_602:\n        /* \"#utility.yul\":30619:30624   */\n      0x00\n        /* \"#utility.yul\":30650:30656   */\n      dup2\n        /* \"#utility.yul\":30644:30657   */\n      mload\n        /* \"#utility.yul\":30635:30657   */\n      swap1\n      pop\n        /* \"#utility.yul\":30666:30696   */\n      tag_884\n        /* \"#utility.yul\":30690:30695   */\n      dup2\n        /* \"#utility.yul\":30666:30696   */\n      tag_547\n      jump\t// in\n    tag_884:\n        /* \"#utility.yul\":30565:30702   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30708:31053   */\n    tag_490:\n        /* \"#utility.yul\":30775:30781   */\n      0x00\n        /* \"#utility.yul\":30824:30826   */\n      0x20\n        /* \"#utility.yul\":30812:30821   */\n      dup3\n        /* \"#utility.yul\":30803:30810   */\n      dup5\n        /* \"#utility.yul\":30799:30822   */\n      sub\n        /* \"#utility.yul\":30795:30827   */\n      slt\n        /* \"#utility.yul\":30792:30911   */\n      iszero\n      tag_886\n      jumpi\n        /* \"#utility.yul\":30830:30909   */\n      tag_887\n      tag_528\n      jump\t// in\n    tag_887:\n        /* \"#utility.yul\":30792:30911   */\n    tag_886:\n        /* \"#utility.yul\":30950:30951   */\n      0x00\n        /* \"#utility.yul\":30975:31036   */\n      tag_888\n        /* \"#utility.yul\":31028:31035   */\n      dup5\n        /* \"#utility.yul\":31019:31025   */\n      dup3\n        /* \"#utility.yul\":31008:31017   */\n      dup6\n        /* \"#utility.yul\":31004:31026   */\n      add\n        /* \"#utility.yul\":30975:31036   */\n      tag_602\n      jump\t// in\n    tag_888:\n        /* \"#utility.yul\":30965:31036   */\n      swap2\n      pop\n        /* \"#utility.yul\":30921:31046   */\n      pop\n        /* \"#utility.yul\":30708:31053   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31059:31501   */\n    tag_499:\n        /* \"#utility.yul\":31208:31212   */\n      0x00\n        /* \"#utility.yul\":31246:31248   */\n      0x60\n        /* \"#utility.yul\":31235:31244   */\n      dup3\n        /* \"#utility.yul\":31231:31249   */\n      add\n        /* \"#utility.yul\":31223:31249   */\n      swap1\n      pop\n        /* \"#utility.yul\":31259:31330   */\n      tag_890\n        /* \"#utility.yul\":31327:31328   */\n      0x00\n        /* \"#utility.yul\":31316:31325   */\n      dup4\n        /* \"#utility.yul\":31312:31329   */\n      add\n        /* \"#utility.yul\":31303:31309   */\n      dup7\n        /* \"#utility.yul\":31259:31330   */\n      tag_562\n      jump\t// in\n    tag_890:\n        /* \"#utility.yul\":31340:31412   */\n      tag_891\n        /* \"#utility.yul\":31408:31410   */\n      0x20\n        /* \"#utility.yul\":31397:31406   */\n      dup4\n        /* \"#utility.yul\":31393:31411   */\n      add\n        /* \"#utility.yul\":31384:31390   */\n      dup6\n        /* \"#utility.yul\":31340:31412   */\n      tag_549\n      jump\t// in\n    tag_891:\n        /* \"#utility.yul\":31422:31494   */\n      tag_892\n        /* \"#utility.yul\":31490:31492   */\n      0x40\n        /* \"#utility.yul\":31479:31488   */\n      dup4\n        /* \"#utility.yul\":31475:31493   */\n      add\n        /* \"#utility.yul\":31466:31472   */\n      dup5\n        /* \"#utility.yul\":31422:31494   */\n      tag_549\n      jump\t// in\n    tag_892:\n        /* \"#utility.yul\":31059:31501   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31507:31605   */\n    tag_603:\n        /* \"#utility.yul\":31558:31564   */\n      0x00\n        /* \"#utility.yul\":31592:31597   */\n      dup2\n        /* \"#utility.yul\":31586:31598   */\n      mload\n        /* \"#utility.yul\":31576:31598   */\n      swap1\n      pop\n        /* \"#utility.yul\":31507:31605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31611:31758   */\n    tag_604:\n        /* \"#utility.yul\":31712:31723   */\n      0x00\n        /* \"#utility.yul\":31749:31752   */\n      dup2\n        /* \"#utility.yul\":31734:31752   */\n      swap1\n      pop\n        /* \"#utility.yul\":31611:31758   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31764:32150   */\n    tag_605:\n        /* \"#utility.yul\":31868:31871   */\n      0x00\n        /* \"#utility.yul\":31896:31934   */\n      tag_896\n        /* \"#utility.yul\":31928:31933   */\n      dup3\n        /* \"#utility.yul\":31896:31934   */\n      tag_603\n      jump\t// in\n    tag_896:\n        /* \"#utility.yul\":31950:32038   */\n      tag_897\n        /* \"#utility.yul\":32031:32037   */\n      dup2\n        /* \"#utility.yul\":32026:32029   */\n      dup6\n        /* \"#utility.yul\":31950:32038   */\n      tag_604\n      jump\t// in\n    tag_897:\n        /* \"#utility.yul\":31943:32038   */\n      swap4\n      pop\n        /* \"#utility.yul\":32047:32112   */\n      tag_898\n        /* \"#utility.yul\":32105:32111   */\n      dup2\n        /* \"#utility.yul\":32100:32103   */\n      dup6\n        /* \"#utility.yul\":32093:32097   */\n      0x20\n        /* \"#utility.yul\":32086:32091   */\n      dup7\n        /* \"#utility.yul\":32082:32098   */\n      add\n        /* \"#utility.yul\":32047:32112   */\n      tag_537\n      jump\t// in\n    tag_898:\n        /* \"#utility.yul\":32137:32143   */\n      dup1\n        /* \"#utility.yul\":32132:32135   */\n      dup5\n        /* \"#utility.yul\":32128:32144   */\n      add\n        /* \"#utility.yul\":32121:32144   */\n      swap2\n      pop\n        /* \"#utility.yul\":31872:32150   */\n      pop\n        /* \"#utility.yul\":31764:32150   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32156:32427   */\n    tag_510:\n        /* \"#utility.yul\":32286:32289   */\n      0x00\n        /* \"#utility.yul\":32308:32401   */\n      tag_900\n        /* \"#utility.yul\":32397:32400   */\n      dup3\n        /* \"#utility.yul\":32388:32394   */\n      dup5\n        /* \"#utility.yul\":32308:32401   */\n      tag_605\n      jump\t// in\n    tag_900:\n        /* \"#utility.yul\":32301:32401   */\n      swap2\n      pop\n        /* \"#utility.yul\":32418:32421   */\n      dup2\n        /* \"#utility.yul\":32411:32421   */\n      swap1\n      pop\n        /* \"#utility.yul\":32156:32427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122080b674cc755c7de8ae8962d81bc7e5de88ec0d20390e5865b0db8a8289f8c0cd64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2061": {
									"entryPoint": null,
									"id": 2061,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_534": {
									"entryPoint": null,
									"id": 534,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_632": {
									"entryPoint": null,
									"id": 632,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 614,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_935": {
									"entryPoint": 860,
									"id": 935,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1790": {
									"entryPoint": 607,
									"id": 1790,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_update_2435": {
									"entryPoint": 1093,
									"id": 2435,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_902": {
									"entryPoint": 1269,
									"id": 902,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 993,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalSupply_668": {
									"entryPoint": 1260,
									"id": 668,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1880,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2720,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2735,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2991,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2946,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3044,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1943,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2376,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1841,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1810,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2109,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2226,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2458,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2760,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1998,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1953,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2268,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1806,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 2124,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79": {
									"entryPoint": 2872,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2136,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2277,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1858,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2314,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9118:14",
										"nodeType": "YulBlock",
										"src": "0:9118:14",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:14",
													"nodeType": "YulBlock",
													"src": "47:35:14",
													"statements": [
														{
															"nativeSrc": "57:19:14",
															"nodeType": "YulAssignment",
															"src": "57:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:14",
																		"nodeType": "YulLiteral",
																		"src": "73:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:14"
																},
																"nativeSrc": "67:9:14",
																"nodeType": "YulFunctionCall",
																"src": "67:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:14",
														"nodeType": "YulTypedName",
														"src": "40:6:14",
														"type": ""
													}
												],
												"src": "7:75:14"
											},
											{
												"body": {
													"nativeSrc": "177:28:14",
													"nodeType": "YulBlock",
													"src": "177:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:14",
																		"nodeType": "YulLiteral",
																		"src": "194:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:14",
																		"nodeType": "YulLiteral",
																		"src": "197:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:14"
																},
																"nativeSrc": "187:12:14",
																"nodeType": "YulFunctionCall",
																"src": "187:12:14"
															},
															"nativeSrc": "187:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:14"
											},
											{
												"body": {
													"nativeSrc": "300:28:14",
													"nodeType": "YulBlock",
													"src": "300:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:14",
																		"nodeType": "YulLiteral",
																		"src": "317:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:14",
																		"nodeType": "YulLiteral",
																		"src": "320:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:14"
																},
																"nativeSrc": "310:12:14",
																"nodeType": "YulFunctionCall",
																"src": "310:12:14"
															},
															"nativeSrc": "310:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:14"
											},
											{
												"body": {
													"nativeSrc": "379:81:14",
													"nodeType": "YulBlock",
													"src": "379:81:14",
													"statements": [
														{
															"nativeSrc": "389:65:14",
															"nodeType": "YulAssignment",
															"src": "389:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:14",
																		"nodeType": "YulLiteral",
																		"src": "411:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:14"
																},
																"nativeSrc": "400:54:14",
																"nodeType": "YulFunctionCall",
																"src": "400:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:14",
														"nodeType": "YulTypedName",
														"src": "361:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:14",
														"nodeType": "YulTypedName",
														"src": "371:7:14",
														"type": ""
													}
												],
												"src": "334:126:14"
											},
											{
												"body": {
													"nativeSrc": "511:51:14",
													"nodeType": "YulBlock",
													"src": "511:51:14",
													"statements": [
														{
															"nativeSrc": "521:35:14",
															"nodeType": "YulAssignment",
															"src": "521:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:14"
																},
																"nativeSrc": "532:24:14",
																"nodeType": "YulFunctionCall",
																"src": "532:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:14",
														"nodeType": "YulTypedName",
														"src": "493:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:14",
														"nodeType": "YulTypedName",
														"src": "503:7:14",
														"type": ""
													}
												],
												"src": "466:96:14"
											},
											{
												"body": {
													"nativeSrc": "611:79:14",
													"nodeType": "YulBlock",
													"src": "611:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:14",
																"nodeType": "YulBlock",
																"src": "668:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:14",
																					"nodeType": "YulLiteral",
																					"src": "677:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:14",
																					"nodeType": "YulLiteral",
																					"src": "680:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:14"
																			},
																			"nativeSrc": "670:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:14"
																		},
																		"nativeSrc": "670:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:14"
																				},
																				"nativeSrc": "641:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:14"
																		},
																		"nativeSrc": "631:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:14"
																},
																"nativeSrc": "624:43:14",
																"nodeType": "YulFunctionCall",
																"src": "624:43:14"
															},
															"nativeSrc": "621:63:14",
															"nodeType": "YulIf",
															"src": "621:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:14",
														"nodeType": "YulTypedName",
														"src": "604:5:14",
														"type": ""
													}
												],
												"src": "568:122:14"
											},
											{
												"body": {
													"nativeSrc": "759:80:14",
													"nodeType": "YulBlock",
													"src": "759:80:14",
													"statements": [
														{
															"nativeSrc": "769:22:14",
															"nodeType": "YulAssignment",
															"src": "769:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:14"
																},
																"nativeSrc": "778:13:14",
																"nodeType": "YulFunctionCall",
																"src": "778:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:14"
																},
																"nativeSrc": "800:33:14",
																"nodeType": "YulFunctionCall",
																"src": "800:33:14"
															},
															"nativeSrc": "800:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:14"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:14",
														"nodeType": "YulTypedName",
														"src": "737:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:14",
														"nodeType": "YulTypedName",
														"src": "745:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:14",
														"nodeType": "YulTypedName",
														"src": "753:5:14",
														"type": ""
													}
												],
												"src": "696:143:14"
											},
											{
												"body": {
													"nativeSrc": "922:274:14",
													"nodeType": "YulBlock",
													"src": "922:274:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:14",
																"nodeType": "YulBlock",
																"src": "968:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:14"
																			},
																			"nativeSrc": "970:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:14"
																		},
																		"nativeSrc": "970:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:14"
																		},
																		"nativeSrc": "939:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:14",
																		"nodeType": "YulLiteral",
																		"src": "964:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:14"
																},
																"nativeSrc": "935:32:14",
																"nodeType": "YulFunctionCall",
																"src": "935:32:14"
															},
															"nativeSrc": "932:119:14",
															"nodeType": "YulIf",
															"src": "932:119:14"
														},
														{
															"nativeSrc": "1061:128:14",
															"nodeType": "YulBlock",
															"src": "1061:128:14",
															"statements": [
																{
																	"nativeSrc": "1076:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:14",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:14",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:14"
																				},
																				"nativeSrc": "1147:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:14",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:14"
																		},
																		"nativeSrc": "1115:64:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:14",
														"nodeType": "YulTypedName",
														"src": "892:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:14",
														"nodeType": "YulTypedName",
														"src": "903:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:14",
														"nodeType": "YulTypedName",
														"src": "915:6:14",
														"type": ""
													}
												],
												"src": "845:351:14"
											},
											{
												"body": {
													"nativeSrc": "1261:40:14",
													"nodeType": "YulBlock",
													"src": "1261:40:14",
													"statements": [
														{
															"nativeSrc": "1272:22:14",
															"nodeType": "YulAssignment",
															"src": "1272:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1288:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1288:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1282:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1282:5:14"
																},
																"nativeSrc": "1282:12:14",
																"nodeType": "YulFunctionCall",
																"src": "1282:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1272:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1202:99:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1244:5:14",
														"nodeType": "YulTypedName",
														"src": "1244:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1254:6:14",
														"nodeType": "YulTypedName",
														"src": "1254:6:14",
														"type": ""
													}
												],
												"src": "1202:99:14"
											},
											{
												"body": {
													"nativeSrc": "1335:152:14",
													"nodeType": "YulBlock",
													"src": "1335:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1352:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1352:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1355:77:14",
																		"nodeType": "YulLiteral",
																		"src": "1355:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1345:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:14"
																},
																"nativeSrc": "1345:88:14",
																"nodeType": "YulFunctionCall",
																"src": "1345:88:14"
															},
															"nativeSrc": "1345:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "1345:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1449:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1449:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1452:4:14",
																		"nodeType": "YulLiteral",
																		"src": "1452:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1442:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:14"
																},
																"nativeSrc": "1442:15:14",
																"nodeType": "YulFunctionCall",
																"src": "1442:15:14"
															},
															"nativeSrc": "1442:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "1442:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1473:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1473:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1476:4:14",
																		"nodeType": "YulLiteral",
																		"src": "1476:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1466:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:14"
																},
																"nativeSrc": "1466:15:14",
																"nodeType": "YulFunctionCall",
																"src": "1466:15:14"
															},
															"nativeSrc": "1466:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "1466:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1307:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "1307:180:14"
											},
											{
												"body": {
													"nativeSrc": "1521:152:14",
													"nodeType": "YulBlock",
													"src": "1521:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:77:14",
																		"nodeType": "YulLiteral",
																		"src": "1541:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1531:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:14"
																},
																"nativeSrc": "1531:88:14",
																"nodeType": "YulFunctionCall",
																"src": "1531:88:14"
															},
															"nativeSrc": "1531:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "1531:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1635:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1638:4:14",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:14",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1628:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:14"
																},
																"nativeSrc": "1628:15:14",
																"nodeType": "YulFunctionCall",
																"src": "1628:15:14"
															},
															"nativeSrc": "1628:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "1628:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:4:14",
																		"nodeType": "YulLiteral",
																		"src": "1662:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:14"
																},
																"nativeSrc": "1652:15:14",
																"nodeType": "YulFunctionCall",
																"src": "1652:15:14"
															},
															"nativeSrc": "1652:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "1652:15:14"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1493:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "1493:180:14"
											},
											{
												"body": {
													"nativeSrc": "1730:269:14",
													"nodeType": "YulBlock",
													"src": "1730:269:14",
													"statements": [
														{
															"nativeSrc": "1740:22:14",
															"nodeType": "YulAssignment",
															"src": "1740:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1754:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "1754:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1760:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:14",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1750:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:14"
																},
																"nativeSrc": "1750:12:14",
																"nodeType": "YulFunctionCall",
																"src": "1750:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1740:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:14"
																}
															]
														},
														{
															"nativeSrc": "1771:38:14",
															"nodeType": "YulVariableDeclaration",
															"src": "1771:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1801:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "1801:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1807:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1807:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1797:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:14"
																},
																"nativeSrc": "1797:12:14",
																"nodeType": "YulFunctionCall",
																"src": "1797:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1775:18:14",
																	"nodeType": "YulTypedName",
																	"src": "1775:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1848:51:14",
																"nodeType": "YulBlock",
																"src": "1848:51:14",
																"statements": [
																	{
																		"nativeSrc": "1862:27:14",
																		"nodeType": "YulAssignment",
																		"src": "1862:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1876:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "1876:6:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1884:4:14",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1872:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "1872:3:14"
																			},
																			"nativeSrc": "1872:17:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1872:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1862:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1828:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "1828:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1821:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:14"
																},
																"nativeSrc": "1821:26:14",
																"nodeType": "YulFunctionCall",
																"src": "1821:26:14"
															},
															"nativeSrc": "1818:81:14",
															"nodeType": "YulIf",
															"src": "1818:81:14"
														},
														{
															"body": {
																"nativeSrc": "1951:42:14",
																"nodeType": "YulBlock",
																"src": "1951:42:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1965:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "1965:16:14"
																			},
																			"nativeSrc": "1965:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1965:18:14"
																		},
																		"nativeSrc": "1965:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1915:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "1915:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1938:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1946:2:14",
																				"nodeType": "YulLiteral",
																				"src": "1946:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1935:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:14"
																		},
																		"nativeSrc": "1935:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1935:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1912:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "1912:2:14"
																},
																"nativeSrc": "1912:38:14",
																"nodeType": "YulFunctionCall",
																"src": "1912:38:14"
															},
															"nativeSrc": "1909:84:14",
															"nodeType": "YulIf",
															"src": "1909:84:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1679:320:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1714:4:14",
														"nodeType": "YulTypedName",
														"src": "1714:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1723:6:14",
														"nodeType": "YulTypedName",
														"src": "1723:6:14",
														"type": ""
													}
												],
												"src": "1679:320:14"
											},
											{
												"body": {
													"nativeSrc": "2059:87:14",
													"nodeType": "YulBlock",
													"src": "2059:87:14",
													"statements": [
														{
															"nativeSrc": "2069:11:14",
															"nodeType": "YulAssignment",
															"src": "2069:11:14",
															"value": {
																"name": "ptr",
																"nativeSrc": "2077:3:14",
																"nodeType": "YulIdentifier",
																"src": "2077:3:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2069:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2097:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2100:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2100:3:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2090:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:14"
																},
																"nativeSrc": "2090:14:14",
																"nodeType": "YulFunctionCall",
																"src": "2090:14:14"
															},
															"nativeSrc": "2090:14:14",
															"nodeType": "YulExpressionStatement",
															"src": "2090:14:14"
														},
														{
															"nativeSrc": "2113:26:14",
															"nodeType": "YulAssignment",
															"src": "2113:26:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2131:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2134:4:14",
																		"nodeType": "YulLiteral",
																		"src": "2134:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2121:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "2121:9:14"
																},
																"nativeSrc": "2121:18:14",
																"nodeType": "YulFunctionCall",
																"src": "2121:18:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2113:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "2113:4:14"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2005:141:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2046:3:14",
														"nodeType": "YulTypedName",
														"src": "2046:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2054:4:14",
														"nodeType": "YulTypedName",
														"src": "2054:4:14",
														"type": ""
													}
												],
												"src": "2005:141:14"
											},
											{
												"body": {
													"nativeSrc": "2196:49:14",
													"nodeType": "YulBlock",
													"src": "2196:49:14",
													"statements": [
														{
															"nativeSrc": "2206:33:14",
															"nodeType": "YulAssignment",
															"src": "2206:33:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2224:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2231:2:14",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2220:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:14"
																		},
																		"nativeSrc": "2220:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2236:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2216:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:14"
																},
																"nativeSrc": "2216:23:14",
																"nodeType": "YulFunctionCall",
																"src": "2216:23:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2206:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:14"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2152:93:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2179:5:14",
														"nodeType": "YulTypedName",
														"src": "2179:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2189:6:14",
														"nodeType": "YulTypedName",
														"src": "2189:6:14",
														"type": ""
													}
												],
												"src": "2152:93:14"
											},
											{
												"body": {
													"nativeSrc": "2304:54:14",
													"nodeType": "YulBlock",
													"src": "2304:54:14",
													"statements": [
														{
															"nativeSrc": "2314:37:14",
															"nodeType": "YulAssignment",
															"src": "2314:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2339:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "2339:4:14"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2345:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2345:5:14"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2335:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:14"
																},
																"nativeSrc": "2335:16:14",
																"nodeType": "YulFunctionCall",
																"src": "2335:16:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2314:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "2314:8:14"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2251:107:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2279:4:14",
														"nodeType": "YulTypedName",
														"src": "2279:4:14",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2285:5:14",
														"nodeType": "YulTypedName",
														"src": "2285:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2295:8:14",
														"nodeType": "YulTypedName",
														"src": "2295:8:14",
														"type": ""
													}
												],
												"src": "2251:107:14"
											},
											{
												"body": {
													"nativeSrc": "2440:317:14",
													"nodeType": "YulBlock",
													"src": "2440:317:14",
													"statements": [
														{
															"nativeSrc": "2450:35:14",
															"nodeType": "YulVariableDeclaration",
															"src": "2450:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2471:10:14",
																		"nodeType": "YulIdentifier",
																		"src": "2471:10:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2483:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:14",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2467:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:14"
																},
																"nativeSrc": "2467:18:14",
																"nodeType": "YulFunctionCall",
																"src": "2467:18:14"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2454:9:14",
																	"nodeType": "YulTypedName",
																	"src": "2454:9:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2494:109:14",
															"nodeType": "YulVariableDeclaration",
															"src": "2494:109:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2525:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2536:66:14",
																		"nodeType": "YulLiteral",
																		"src": "2536:66:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2506:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "2506:18:14"
																},
																"nativeSrc": "2506:97:14",
																"nodeType": "YulFunctionCall",
																"src": "2506:97:14"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2498:4:14",
																	"nodeType": "YulTypedName",
																	"src": "2498:4:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2612:51:14",
															"nodeType": "YulAssignment",
															"src": "2612:51:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2643:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2643:9:14"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2654:8:14",
																		"nodeType": "YulIdentifier",
																		"src": "2654:8:14"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2624:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "2624:18:14"
																},
																"nativeSrc": "2624:39:14",
																"nodeType": "YulFunctionCall",
																"src": "2624:39:14"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2612:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "2612:8:14"
																}
															]
														},
														{
															"nativeSrc": "2672:30:14",
															"nodeType": "YulAssignment",
															"src": "2672:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2685:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2685:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2696:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "2696:4:14"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2692:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:14"
																		},
																		"nativeSrc": "2692:9:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2692:9:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2681:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:14"
																},
																"nativeSrc": "2681:21:14",
																"nodeType": "YulFunctionCall",
																"src": "2681:21:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2672:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2672:5:14"
																}
															]
														},
														{
															"nativeSrc": "2711:40:14",
															"nodeType": "YulAssignment",
															"src": "2711:40:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2724:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2724:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2735:8:14",
																				"nodeType": "YulIdentifier",
																				"src": "2735:8:14"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2745:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "2745:4:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2731:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:14"
																		},
																		"nativeSrc": "2731:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:19:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2721:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "2721:2:14"
																},
																"nativeSrc": "2721:30:14",
																"nodeType": "YulFunctionCall",
																"src": "2721:30:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2711:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:14"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2364:393:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2401:5:14",
														"nodeType": "YulTypedName",
														"src": "2401:5:14",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2408:10:14",
														"nodeType": "YulTypedName",
														"src": "2408:10:14",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2420:8:14",
														"nodeType": "YulTypedName",
														"src": "2420:8:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2433:6:14",
														"nodeType": "YulTypedName",
														"src": "2433:6:14",
														"type": ""
													}
												],
												"src": "2364:393:14"
											},
											{
												"body": {
													"nativeSrc": "2808:32:14",
													"nodeType": "YulBlock",
													"src": "2808:32:14",
													"statements": [
														{
															"nativeSrc": "2818:16:14",
															"nodeType": "YulAssignment",
															"src": "2818:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "2829:5:14",
																"nodeType": "YulIdentifier",
																"src": "2829:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2818:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "2818:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2763:77:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2790:5:14",
														"nodeType": "YulTypedName",
														"src": "2790:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2800:7:14",
														"nodeType": "YulTypedName",
														"src": "2800:7:14",
														"type": ""
													}
												],
												"src": "2763:77:14"
											},
											{
												"body": {
													"nativeSrc": "2878:28:14",
													"nodeType": "YulBlock",
													"src": "2878:28:14",
													"statements": [
														{
															"nativeSrc": "2888:12:14",
															"nodeType": "YulAssignment",
															"src": "2888:12:14",
															"value": {
																"name": "value",
																"nativeSrc": "2895:5:14",
																"nodeType": "YulIdentifier",
																"src": "2895:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2888:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:14"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2846:60:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2864:5:14",
														"nodeType": "YulTypedName",
														"src": "2864:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2874:3:14",
														"nodeType": "YulTypedName",
														"src": "2874:3:14",
														"type": ""
													}
												],
												"src": "2846:60:14"
											},
											{
												"body": {
													"nativeSrc": "2972:82:14",
													"nodeType": "YulBlock",
													"src": "2972:82:14",
													"statements": [
														{
															"nativeSrc": "2982:66:14",
															"nodeType": "YulAssignment",
															"src": "2982:66:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3040:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "3040:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3022:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "3022:17:14"
																				},
																				"nativeSrc": "3022:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3022:24:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3013:8:14",
																			"nodeType": "YulIdentifier",
																			"src": "3013:8:14"
																		},
																		"nativeSrc": "3013:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3013:34:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2995:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "2995:17:14"
																},
																"nativeSrc": "2995:53:14",
																"nodeType": "YulFunctionCall",
																"src": "2995:53:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2982:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "2982:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2912:142:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2952:5:14",
														"nodeType": "YulTypedName",
														"src": "2952:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2962:9:14",
														"nodeType": "YulTypedName",
														"src": "2962:9:14",
														"type": ""
													}
												],
												"src": "2912:142:14"
											},
											{
												"body": {
													"nativeSrc": "3107:28:14",
													"nodeType": "YulBlock",
													"src": "3107:28:14",
													"statements": [
														{
															"nativeSrc": "3117:12:14",
															"nodeType": "YulAssignment",
															"src": "3117:12:14",
															"value": {
																"name": "value",
																"nativeSrc": "3124:5:14",
																"nodeType": "YulIdentifier",
																"src": "3124:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3117:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:14"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3060:75:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3093:5:14",
														"nodeType": "YulTypedName",
														"src": "3093:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3103:3:14",
														"nodeType": "YulTypedName",
														"src": "3103:3:14",
														"type": ""
													}
												],
												"src": "3060:75:14"
											},
											{
												"body": {
													"nativeSrc": "3217:193:14",
													"nodeType": "YulBlock",
													"src": "3217:193:14",
													"statements": [
														{
															"nativeSrc": "3227:63:14",
															"nodeType": "YulVariableDeclaration",
															"src": "3227:63:14",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3282:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "3282:7:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3251:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "3251:30:14"
																},
																"nativeSrc": "3251:39:14",
																"nodeType": "YulFunctionCall",
																"src": "3251:39:14"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3231:16:14",
																	"nodeType": "YulTypedName",
																	"src": "3231:16:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3306:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "3306:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3346:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "3346:4:14"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3340:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "3340:5:14"
																				},
																				"nativeSrc": "3340:11:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3340:11:14"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3353:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3353:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3385:16:14",
																						"nodeType": "YulIdentifier",
																						"src": "3385:16:14"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3361:23:14",
																					"nodeType": "YulIdentifier",
																					"src": "3361:23:14"
																				},
																				"nativeSrc": "3361:41:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3361:41:14"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3312:27:14",
																			"nodeType": "YulIdentifier",
																			"src": "3312:27:14"
																		},
																		"nativeSrc": "3312:91:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3312:91:14"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3299:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:14"
																},
																"nativeSrc": "3299:105:14",
																"nodeType": "YulFunctionCall",
																"src": "3299:105:14"
															},
															"nativeSrc": "3299:105:14",
															"nodeType": "YulExpressionStatement",
															"src": "3299:105:14"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3141:269:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3194:4:14",
														"nodeType": "YulTypedName",
														"src": "3194:4:14",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3200:6:14",
														"nodeType": "YulTypedName",
														"src": "3200:6:14",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3208:7:14",
														"nodeType": "YulTypedName",
														"src": "3208:7:14",
														"type": ""
													}
												],
												"src": "3141:269:14"
											},
											{
												"body": {
													"nativeSrc": "3465:24:14",
													"nodeType": "YulBlock",
													"src": "3465:24:14",
													"statements": [
														{
															"nativeSrc": "3475:8:14",
															"nodeType": "YulAssignment",
															"src": "3475:8:14",
															"value": {
																"kind": "number",
																"nativeSrc": "3482:1:14",
																"nodeType": "YulLiteral",
																"src": "3482:1:14",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3475:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:14"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3416:73:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3461:3:14",
														"nodeType": "YulTypedName",
														"src": "3461:3:14",
														"type": ""
													}
												],
												"src": "3416:73:14"
											},
											{
												"body": {
													"nativeSrc": "3548:136:14",
													"nodeType": "YulBlock",
													"src": "3548:136:14",
													"statements": [
														{
															"nativeSrc": "3558:46:14",
															"nodeType": "YulVariableDeclaration",
															"src": "3558:46:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3572:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "3572:30:14"
																},
																"nativeSrc": "3572:32:14",
																"nodeType": "YulFunctionCall",
																"src": "3572:32:14"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3562:6:14",
																	"nodeType": "YulTypedName",
																	"src": "3562:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3657:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "3657:4:14"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3663:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3663:6:14"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3671:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:14"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3613:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "3613:43:14"
																},
																"nativeSrc": "3613:65:14",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:14"
															},
															"nativeSrc": "3613:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:14"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3495:189:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3534:4:14",
														"nodeType": "YulTypedName",
														"src": "3534:4:14",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3540:6:14",
														"nodeType": "YulTypedName",
														"src": "3540:6:14",
														"type": ""
													}
												],
												"src": "3495:189:14"
											},
											{
												"body": {
													"nativeSrc": "3740:136:14",
													"nodeType": "YulBlock",
													"src": "3740:136:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "3807:63:14",
																"nodeType": "YulBlock",
																"src": "3807:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3851:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "3851:5:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3858:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3858:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3821:29:14",
																				"nodeType": "YulIdentifier",
																				"src": "3821:29:14"
																			},
																			"nativeSrc": "3821:39:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3821:39:14"
																		},
																		"nativeSrc": "3821:39:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3760:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "3760:5:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3767:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3757:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "3757:2:14"
																},
																"nativeSrc": "3757:14:14",
																"nodeType": "YulFunctionCall",
																"src": "3757:14:14"
															},
															"nativeSrc": "3750:120:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3772:26:14",
																"nodeType": "YulBlock",
																"src": "3772:26:14",
																"statements": [
																	{
																		"nativeSrc": "3774:22:14",
																		"nodeType": "YulAssignment",
																		"src": "3774:22:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3787:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "3787:5:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3794:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3783:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "3783:3:14"
																			},
																			"nativeSrc": "3783:13:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:13:14"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3774:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "3774:5:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3754:2:14",
																"nodeType": "YulBlock",
																"src": "3754:2:14",
																"statements": []
															},
															"src": "3750:120:14"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3690:186:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3728:5:14",
														"nodeType": "YulTypedName",
														"src": "3728:5:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3735:3:14",
														"nodeType": "YulTypedName",
														"src": "3735:3:14",
														"type": ""
													}
												],
												"src": "3690:186:14"
											},
											{
												"body": {
													"nativeSrc": "3961:464:14",
													"nodeType": "YulBlock",
													"src": "3961:464:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "3987:431:14",
																"nodeType": "YulBlock",
																"src": "3987:431:14",
																"statements": [
																	{
																		"nativeSrc": "4001:54:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4001:54:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4049:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "4049:5:14"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4017:31:14",
																				"nodeType": "YulIdentifier",
																				"src": "4017:31:14"
																			},
																			"nativeSrc": "4017:38:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4017:38:14"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4005:8:14",
																				"nodeType": "YulTypedName",
																				"src": "4005:8:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4068:63:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4068:63:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4091:8:14",
																					"nodeType": "YulIdentifier",
																					"src": "4091:8:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4119:10:14",
																							"nodeType": "YulIdentifier",
																							"src": "4119:10:14"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4101:17:14",
																						"nodeType": "YulIdentifier",
																						"src": "4101:17:14"
																					},
																					"nativeSrc": "4101:29:14",
																					"nodeType": "YulFunctionCall",
																					"src": "4101:29:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4087:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "4087:3:14"
																			},
																			"nativeSrc": "4087:44:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4087:44:14"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4072:11:14",
																				"nodeType": "YulTypedName",
																				"src": "4072:11:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4288:27:14",
																			"nodeType": "YulBlock",
																			"src": "4288:27:14",
																			"statements": [
																				{
																					"nativeSrc": "4290:23:14",
																					"nodeType": "YulAssignment",
																					"src": "4290:23:14",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4305:8:14",
																						"nodeType": "YulIdentifier",
																						"src": "4305:8:14"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4290:11:14",
																							"nodeType": "YulIdentifier",
																							"src": "4290:11:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4272:10:14",
																					"nodeType": "YulIdentifier",
																					"src": "4272:10:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4284:2:14",
																					"nodeType": "YulLiteral",
																					"src": "4284:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4269:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "4269:2:14"
																			},
																			"nativeSrc": "4269:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4269:18:14"
																		},
																		"nativeSrc": "4266:49:14",
																		"nodeType": "YulIf",
																		"src": "4266:49:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4357:11:14",
																					"nodeType": "YulIdentifier",
																					"src": "4357:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4374:8:14",
																							"nodeType": "YulIdentifier",
																							"src": "4374:8:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4402:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "4402:3:14"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4384:17:14",
																								"nodeType": "YulIdentifier",
																								"src": "4384:17:14"
																							},
																							"nativeSrc": "4384:22:14",
																							"nodeType": "YulFunctionCall",
																							"src": "4384:22:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4370:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "4370:3:14"
																					},
																					"nativeSrc": "4370:37:14",
																					"nodeType": "YulFunctionCall",
																					"src": "4370:37:14"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4328:28:14",
																				"nodeType": "YulIdentifier",
																				"src": "4328:28:14"
																			},
																			"nativeSrc": "4328:80:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4328:80:14"
																		},
																		"nativeSrc": "4328:80:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4328:80:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3978:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "3978:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3983:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3975:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "3975:2:14"
																},
																"nativeSrc": "3975:11:14",
																"nodeType": "YulFunctionCall",
																"src": "3975:11:14"
															},
															"nativeSrc": "3972:446:14",
															"nodeType": "YulIf",
															"src": "3972:446:14"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3882:543:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3937:5:14",
														"nodeType": "YulTypedName",
														"src": "3937:5:14",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3944:3:14",
														"nodeType": "YulTypedName",
														"src": "3944:3:14",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3949:10:14",
														"nodeType": "YulTypedName",
														"src": "3949:10:14",
														"type": ""
													}
												],
												"src": "3882:543:14"
											},
											{
												"body": {
													"nativeSrc": "4494:54:14",
													"nodeType": "YulBlock",
													"src": "4494:54:14",
													"statements": [
														{
															"nativeSrc": "4504:37:14",
															"nodeType": "YulAssignment",
															"src": "4504:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4529:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "4529:4:14"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4535:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "4535:5:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4525:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:14"
																},
																"nativeSrc": "4525:16:14",
																"nodeType": "YulFunctionCall",
																"src": "4525:16:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4504:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "4504:8:14"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4431:117:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4469:4:14",
														"nodeType": "YulTypedName",
														"src": "4469:4:14",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4475:5:14",
														"nodeType": "YulTypedName",
														"src": "4475:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4485:8:14",
														"nodeType": "YulTypedName",
														"src": "4485:8:14",
														"type": ""
													}
												],
												"src": "4431:117:14"
											},
											{
												"body": {
													"nativeSrc": "4605:118:14",
													"nodeType": "YulBlock",
													"src": "4605:118:14",
													"statements": [
														{
															"nativeSrc": "4615:68:14",
															"nodeType": "YulVariableDeclaration",
															"src": "4615:68:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4664:1:14",
																						"nodeType": "YulLiteral",
																						"src": "4664:1:14",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4667:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "4667:5:14"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4660:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4660:3:14"
																				},
																				"nativeSrc": "4660:13:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4660:13:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4679:1:14",
																						"nodeType": "YulLiteral",
																						"src": "4679:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4675:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4675:3:14"
																				},
																				"nativeSrc": "4675:6:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4675:6:14"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4631:28:14",
																			"nodeType": "YulIdentifier",
																			"src": "4631:28:14"
																		},
																		"nativeSrc": "4631:51:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4631:51:14"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4627:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4627:3:14"
																},
																"nativeSrc": "4627:56:14",
																"nodeType": "YulFunctionCall",
																"src": "4627:56:14"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4619:4:14",
																	"nodeType": "YulTypedName",
																	"src": "4619:4:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4692:25:14",
															"nodeType": "YulAssignment",
															"src": "4692:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4706:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "4706:4:14"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4712:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "4712:4:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4702:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4702:3:14"
																},
																"nativeSrc": "4702:15:14",
																"nodeType": "YulFunctionCall",
																"src": "4702:15:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4692:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:14"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4554:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4582:4:14",
														"nodeType": "YulTypedName",
														"src": "4582:4:14",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4588:5:14",
														"nodeType": "YulTypedName",
														"src": "4588:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4598:6:14",
														"nodeType": "YulTypedName",
														"src": "4598:6:14",
														"type": ""
													}
												],
												"src": "4554:169:14"
											},
											{
												"body": {
													"nativeSrc": "4809:214:14",
													"nodeType": "YulBlock",
													"src": "4809:214:14",
													"statements": [
														{
															"nativeSrc": "4942:37:14",
															"nodeType": "YulAssignment",
															"src": "4942:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4969:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "4969:4:14"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4975:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:14"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4950:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "4950:18:14"
																},
																"nativeSrc": "4950:29:14",
																"nodeType": "YulFunctionCall",
																"src": "4950:29:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4942:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "4942:4:14"
																}
															]
														},
														{
															"nativeSrc": "4988:29:14",
															"nodeType": "YulAssignment",
															"src": "4988:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4999:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "4999:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5009:1:14",
																				"nodeType": "YulLiteral",
																				"src": "5009:1:14",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5012:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "5012:3:14"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5005:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5005:3:14"
																		},
																		"nativeSrc": "5005:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:11:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4996:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "4996:2:14"
																},
																"nativeSrc": "4996:21:14",
																"nodeType": "YulFunctionCall",
																"src": "4996:21:14"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4988:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "4988:4:14"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4728:295:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4790:4:14",
														"nodeType": "YulTypedName",
														"src": "4790:4:14",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4796:3:14",
														"nodeType": "YulTypedName",
														"src": "4796:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4804:4:14",
														"nodeType": "YulTypedName",
														"src": "4804:4:14",
														"type": ""
													}
												],
												"src": "4728:295:14"
											},
											{
												"body": {
													"nativeSrc": "5120:1303:14",
													"nodeType": "YulBlock",
													"src": "5120:1303:14",
													"statements": [
														{
															"nativeSrc": "5131:51:14",
															"nodeType": "YulVariableDeclaration",
															"src": "5131:51:14",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5178:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5145:32:14",
																	"nodeType": "YulIdentifier",
																	"src": "5145:32:14"
																},
																"nativeSrc": "5145:37:14",
																"nodeType": "YulFunctionCall",
																"src": "5145:37:14"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5135:6:14",
																	"nodeType": "YulTypedName",
																	"src": "5135:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5267:22:14",
																"nodeType": "YulBlock",
																"src": "5267:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5269:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "5269:16:14"
																			},
																			"nativeSrc": "5269:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5269:18:14"
																		},
																		"nativeSrc": "5269:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5269:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5239:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5239:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5247:18:14",
																		"nodeType": "YulLiteral",
																		"src": "5247:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5236:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "5236:2:14"
																},
																"nativeSrc": "5236:30:14",
																"nodeType": "YulFunctionCall",
																"src": "5236:30:14"
															},
															"nativeSrc": "5233:56:14",
															"nodeType": "YulIf",
															"src": "5233:56:14"
														},
														{
															"nativeSrc": "5299:52:14",
															"nodeType": "YulVariableDeclaration",
															"src": "5299:52:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5345:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "5345:4:14"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5339:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "5339:5:14"
																		},
																		"nativeSrc": "5339:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5339:11:14"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5313:25:14",
																	"nodeType": "YulIdentifier",
																	"src": "5313:25:14"
																},
																"nativeSrc": "5313:38:14",
																"nodeType": "YulFunctionCall",
																"src": "5313:38:14"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5303:6:14",
																	"nodeType": "YulTypedName",
																	"src": "5303:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5444:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:14"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5450:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5450:6:14"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5458:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5458:6:14"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5398:45:14",
																	"nodeType": "YulIdentifier",
																	"src": "5398:45:14"
																},
																"nativeSrc": "5398:67:14",
																"nodeType": "YulFunctionCall",
																"src": "5398:67:14"
															},
															"nativeSrc": "5398:67:14",
															"nodeType": "YulExpressionStatement",
															"src": "5398:67:14"
														},
														{
															"nativeSrc": "5475:18:14",
															"nodeType": "YulVariableDeclaration",
															"src": "5475:18:14",
															"value": {
																"kind": "number",
																"nativeSrc": "5492:1:14",
																"nodeType": "YulLiteral",
																"src": "5492:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5479:9:14",
																	"nodeType": "YulTypedName",
																	"src": "5479:9:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5503:17:14",
															"nodeType": "YulAssignment",
															"src": "5503:17:14",
															"value": {
																"kind": "number",
																"nativeSrc": "5516:4:14",
																"nodeType": "YulLiteral",
																"src": "5516:4:14",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5503:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:14"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5567:611:14",
																		"nodeType": "YulBlock",
																		"src": "5567:611:14",
																		"statements": [
																			{
																				"nativeSrc": "5581:37:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5581:37:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5600:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "5600:6:14"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5612:4:14",
																									"nodeType": "YulLiteral",
																									"src": "5612:4:14",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5608:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "5608:3:14"
																							},
																							"nativeSrc": "5608:9:14",
																							"nodeType": "YulFunctionCall",
																							"src": "5608:9:14"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5596:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "5596:3:14"
																					},
																					"nativeSrc": "5596:22:14",
																					"nodeType": "YulFunctionCall",
																					"src": "5596:22:14"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5585:7:14",
																						"nodeType": "YulTypedName",
																						"src": "5585:7:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5632:51:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5632:51:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5678:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "5678:4:14"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5646:31:14",
																						"nodeType": "YulIdentifier",
																						"src": "5646:31:14"
																					},
																					"nativeSrc": "5646:37:14",
																					"nodeType": "YulFunctionCall",
																					"src": "5646:37:14"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5636:6:14",
																						"nodeType": "YulTypedName",
																						"src": "5636:6:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5696:10:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5696:10:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5705:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5705:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5700:1:14",
																						"nodeType": "YulTypedName",
																						"src": "5700:1:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5764:163:14",
																					"nodeType": "YulBlock",
																					"src": "5764:163:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5789:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "5789:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5807:3:14",
																														"nodeType": "YulIdentifier",
																														"src": "5807:3:14"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5812:9:14",
																														"nodeType": "YulIdentifier",
																														"src": "5812:9:14"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5803:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "5803:3:14"
																												},
																												"nativeSrc": "5803:19:14",
																												"nodeType": "YulFunctionCall",
																												"src": "5803:19:14"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5797:5:14",
																											"nodeType": "YulIdentifier",
																											"src": "5797:5:14"
																										},
																										"nativeSrc": "5797:26:14",
																										"nodeType": "YulFunctionCall",
																										"src": "5797:26:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5782:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "5782:6:14"
																								},
																								"nativeSrc": "5782:42:14",
																								"nodeType": "YulFunctionCall",
																								"src": "5782:42:14"
																							},
																							"nativeSrc": "5782:42:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "5782:42:14"
																						},
																						{
																							"nativeSrc": "5841:24:14",
																							"nodeType": "YulAssignment",
																							"src": "5841:24:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5855:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "5855:6:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5863:1:14",
																										"nodeType": "YulLiteral",
																										"src": "5863:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5851:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "5851:3:14"
																								},
																								"nativeSrc": "5851:14:14",
																								"nodeType": "YulFunctionCall",
																								"src": "5851:14:14"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5841:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "5841:6:14"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5882:31:14",
																							"nodeType": "YulAssignment",
																							"src": "5882:31:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5899:9:14",
																										"nodeType": "YulIdentifier",
																										"src": "5899:9:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5910:2:14",
																										"nodeType": "YulLiteral",
																										"src": "5910:2:14",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5895:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "5895:3:14"
																								},
																								"nativeSrc": "5895:18:14",
																								"nodeType": "YulFunctionCall",
																								"src": "5895:18:14"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5882:9:14",
																									"nodeType": "YulIdentifier",
																									"src": "5882:9:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5730:1:14",
																							"nodeType": "YulIdentifier",
																							"src": "5730:1:14"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5733:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "5733:7:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5727:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "5727:2:14"
																					},
																					"nativeSrc": "5727:14:14",
																					"nodeType": "YulFunctionCall",
																					"src": "5727:14:14"
																				},
																				"nativeSrc": "5719:208:14",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5742:21:14",
																					"nodeType": "YulBlock",
																					"src": "5742:21:14",
																					"statements": [
																						{
																							"nativeSrc": "5744:17:14",
																							"nodeType": "YulAssignment",
																							"src": "5744:17:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5753:1:14",
																										"nodeType": "YulIdentifier",
																										"src": "5753:1:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5756:4:14",
																										"nodeType": "YulLiteral",
																										"src": "5756:4:14",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5749:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "5749:3:14"
																								},
																								"nativeSrc": "5749:12:14",
																								"nodeType": "YulFunctionCall",
																								"src": "5749:12:14"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5744:1:14",
																									"nodeType": "YulIdentifier",
																									"src": "5744:1:14"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5723:3:14",
																					"nodeType": "YulBlock",
																					"src": "5723:3:14",
																					"statements": []
																				},
																				"src": "5719:208:14"
																			},
																			{
																				"body": {
																					"nativeSrc": "5963:156:14",
																					"nodeType": "YulBlock",
																					"src": "5963:156:14",
																					"statements": [
																						{
																							"nativeSrc": "5981:43:14",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5981:43:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6008:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "6008:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6013:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "6013:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6004:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "6004:3:14"
																										},
																										"nativeSrc": "6004:19:14",
																										"nodeType": "YulFunctionCall",
																										"src": "6004:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5998:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "5998:5:14"
																								},
																								"nativeSrc": "5998:26:14",
																								"nodeType": "YulFunctionCall",
																								"src": "5998:26:14"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5985:9:14",
																									"nodeType": "YulTypedName",
																									"src": "5985:9:14",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6048:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "6048:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6075:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "6075:9:14"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6090:6:14",
																														"nodeType": "YulIdentifier",
																														"src": "6090:6:14"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6098:4:14",
																														"nodeType": "YulLiteral",
																														"src": "6098:4:14",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6086:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "6086:3:14"
																												},
																												"nativeSrc": "6086:17:14",
																												"nodeType": "YulFunctionCall",
																												"src": "6086:17:14"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6056:18:14",
																											"nodeType": "YulIdentifier",
																											"src": "6056:18:14"
																										},
																										"nativeSrc": "6056:48:14",
																										"nodeType": "YulFunctionCall",
																										"src": "6056:48:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6041:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "6041:6:14"
																								},
																								"nativeSrc": "6041:64:14",
																								"nodeType": "YulFunctionCall",
																								"src": "6041:64:14"
																							},
																							"nativeSrc": "6041:64:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "6041:64:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5946:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "5946:7:14"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5955:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "5955:6:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5943:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "5943:2:14"
																					},
																					"nativeSrc": "5943:19:14",
																					"nodeType": "YulFunctionCall",
																					"src": "5943:19:14"
																				},
																				"nativeSrc": "5940:179:14",
																				"nodeType": "YulIf",
																				"src": "5940:179:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6139:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "6139:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6153:6:14",
																											"nodeType": "YulIdentifier",
																											"src": "6153:6:14"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6161:1:14",
																											"nodeType": "YulLiteral",
																											"src": "6161:1:14",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6149:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "6149:3:14"
																									},
																									"nativeSrc": "6149:14:14",
																									"nodeType": "YulFunctionCall",
																									"src": "6149:14:14"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6165:1:14",
																									"nodeType": "YulLiteral",
																									"src": "6165:1:14",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6145:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "6145:3:14"
																							},
																							"nativeSrc": "6145:22:14",
																							"nodeType": "YulFunctionCall",
																							"src": "6145:22:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6132:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "6132:6:14"
																					},
																					"nativeSrc": "6132:36:14",
																					"nodeType": "YulFunctionCall",
																					"src": "6132:36:14"
																				},
																				"nativeSrc": "6132:36:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "6132:36:14"
																			}
																		]
																	},
																	"nativeSrc": "5560:618:14",
																	"nodeType": "YulCase",
																	"src": "5560:618:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5565:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5565:1:14",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6195:222:14",
																		"nodeType": "YulBlock",
																		"src": "6195:222:14",
																		"statements": [
																			{
																				"nativeSrc": "6209:14:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6209:14:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6222:1:14",
																					"nodeType": "YulLiteral",
																					"src": "6222:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6213:5:14",
																						"nodeType": "YulTypedName",
																						"src": "6213:5:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6246:67:14",
																					"nodeType": "YulBlock",
																					"src": "6246:67:14",
																					"statements": [
																						{
																							"nativeSrc": "6264:35:14",
																							"nodeType": "YulAssignment",
																							"src": "6264:35:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6283:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "6283:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6288:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "6288:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6279:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "6279:3:14"
																										},
																										"nativeSrc": "6279:19:14",
																										"nodeType": "YulFunctionCall",
																										"src": "6279:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6273:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "6273:5:14"
																								},
																								"nativeSrc": "6273:26:14",
																								"nodeType": "YulFunctionCall",
																								"src": "6273:26:14"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6264:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "6264:5:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6239:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "6239:6:14"
																				},
																				"nativeSrc": "6236:77:14",
																				"nodeType": "YulIf",
																				"src": "6236:77:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6333:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "6333:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6392:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "6392:5:14"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6399:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "6399:6:14"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6339:52:14",
																								"nodeType": "YulIdentifier",
																								"src": "6339:52:14"
																							},
																							"nativeSrc": "6339:67:14",
																							"nodeType": "YulFunctionCall",
																							"src": "6339:67:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6326:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "6326:6:14"
																					},
																					"nativeSrc": "6326:81:14",
																					"nodeType": "YulFunctionCall",
																					"src": "6326:81:14"
																				},
																				"nativeSrc": "6326:81:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "6326:81:14"
																			}
																		]
																	},
																	"nativeSrc": "6187:230:14",
																	"nodeType": "YulCase",
																	"src": "6187:230:14",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5540:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5548:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5537:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "5537:2:14"
																},
																"nativeSrc": "5537:14:14",
																"nodeType": "YulFunctionCall",
																"src": "5537:14:14"
															},
															"nativeSrc": "5530:887:14",
															"nodeType": "YulSwitch",
															"src": "5530:887:14"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5028:1395:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5109:4:14",
														"nodeType": "YulTypedName",
														"src": "5109:4:14",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5115:3:14",
														"nodeType": "YulTypedName",
														"src": "5115:3:14",
														"type": ""
													}
												],
												"src": "5028:1395:14"
											},
											{
												"body": {
													"nativeSrc": "6494:53:14",
													"nodeType": "YulBlock",
													"src": "6494:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6511:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6511:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6534:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "6534:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6516:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "6516:17:14"
																		},
																		"nativeSrc": "6516:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6516:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6504:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6504:6:14"
																},
																"nativeSrc": "6504:37:14",
																"nodeType": "YulFunctionCall",
																"src": "6504:37:14"
															},
															"nativeSrc": "6504:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "6504:37:14"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6429:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6482:5:14",
														"nodeType": "YulTypedName",
														"src": "6482:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6489:3:14",
														"nodeType": "YulTypedName",
														"src": "6489:3:14",
														"type": ""
													}
												],
												"src": "6429:118:14"
											},
											{
												"body": {
													"nativeSrc": "6651:124:14",
													"nodeType": "YulBlock",
													"src": "6651:124:14",
													"statements": [
														{
															"nativeSrc": "6661:26:14",
															"nodeType": "YulAssignment",
															"src": "6661:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6673:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6684:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6684:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6669:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6669:3:14"
																},
																"nativeSrc": "6669:18:14",
																"nodeType": "YulFunctionCall",
																"src": "6669:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6661:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "6661:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6741:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6754:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6765:1:14",
																				"nodeType": "YulLiteral",
																				"src": "6765:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6750:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6750:3:14"
																		},
																		"nativeSrc": "6750:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6750:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6697:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "6697:43:14"
																},
																"nativeSrc": "6697:71:14",
																"nodeType": "YulFunctionCall",
																"src": "6697:71:14"
															},
															"nativeSrc": "6697:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "6697:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6553:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6623:9:14",
														"nodeType": "YulTypedName",
														"src": "6623:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6635:6:14",
														"nodeType": "YulTypedName",
														"src": "6635:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6646:4:14",
														"nodeType": "YulTypedName",
														"src": "6646:4:14",
														"type": ""
													}
												],
												"src": "6553:222:14"
											},
											{
												"body": {
													"nativeSrc": "6809:152:14",
													"nodeType": "YulBlock",
													"src": "6809:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6826:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6826:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6829:77:14",
																		"nodeType": "YulLiteral",
																		"src": "6829:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6819:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6819:6:14"
																},
																"nativeSrc": "6819:88:14",
																"nodeType": "YulFunctionCall",
																"src": "6819:88:14"
															},
															"nativeSrc": "6819:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "6819:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6923:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6923:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6926:4:14",
																		"nodeType": "YulLiteral",
																		"src": "6926:4:14",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6916:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6916:6:14"
																},
																"nativeSrc": "6916:15:14",
																"nodeType": "YulFunctionCall",
																"src": "6916:15:14"
															},
															"nativeSrc": "6916:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "6916:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6947:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6947:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6950:4:14",
																		"nodeType": "YulLiteral",
																		"src": "6950:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6940:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6940:6:14"
																},
																"nativeSrc": "6940:15:14",
																"nodeType": "YulFunctionCall",
																"src": "6940:15:14"
															},
															"nativeSrc": "6940:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "6940:15:14"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6781:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "6781:180:14"
											},
											{
												"body": {
													"nativeSrc": "7011:147:14",
													"nodeType": "YulBlock",
													"src": "7011:147:14",
													"statements": [
														{
															"nativeSrc": "7021:25:14",
															"nodeType": "YulAssignment",
															"src": "7021:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7044:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "7044:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7026:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "7026:17:14"
																},
																"nativeSrc": "7026:20:14",
																"nodeType": "YulFunctionCall",
																"src": "7026:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7021:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "7021:1:14"
																}
															]
														},
														{
															"nativeSrc": "7055:25:14",
															"nodeType": "YulAssignment",
															"src": "7055:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7078:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "7078:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7060:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "7060:17:14"
																},
																"nativeSrc": "7060:20:14",
																"nodeType": "YulFunctionCall",
																"src": "7060:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7055:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "7055:1:14"
																}
															]
														},
														{
															"nativeSrc": "7089:16:14",
															"nodeType": "YulAssignment",
															"src": "7089:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7100:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "7100:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7103:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "7103:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7096:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7096:3:14"
																},
																"nativeSrc": "7096:9:14",
																"nodeType": "YulFunctionCall",
																"src": "7096:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7089:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7089:3:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7129:22:14",
																"nodeType": "YulBlock",
																"src": "7129:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7131:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "7131:16:14"
																			},
																			"nativeSrc": "7131:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7131:18:14"
																		},
																		"nativeSrc": "7131:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "7131:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7121:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "7121:1:14"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7124:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7124:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7118:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "7118:2:14"
																},
																"nativeSrc": "7118:10:14",
																"nodeType": "YulFunctionCall",
																"src": "7118:10:14"
															},
															"nativeSrc": "7115:36:14",
															"nodeType": "YulIf",
															"src": "7115:36:14"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6967:191:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6998:1:14",
														"nodeType": "YulTypedName",
														"src": "6998:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7001:1:14",
														"nodeType": "YulTypedName",
														"src": "7001:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7007:3:14",
														"nodeType": "YulTypedName",
														"src": "7007:3:14",
														"type": ""
													}
												],
												"src": "6967:191:14"
											},
											{
												"body": {
													"nativeSrc": "7260:73:14",
													"nodeType": "YulBlock",
													"src": "7260:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7277:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7277:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7282:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7282:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7270:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7270:6:14"
																},
																"nativeSrc": "7270:19:14",
																"nodeType": "YulFunctionCall",
																"src": "7270:19:14"
															},
															"nativeSrc": "7270:19:14",
															"nodeType": "YulExpressionStatement",
															"src": "7270:19:14"
														},
														{
															"nativeSrc": "7298:29:14",
															"nodeType": "YulAssignment",
															"src": "7298:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7317:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7317:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7322:4:14",
																		"nodeType": "YulLiteral",
																		"src": "7322:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7313:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7313:3:14"
																},
																"nativeSrc": "7313:14:14",
																"nodeType": "YulFunctionCall",
																"src": "7313:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7298:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "7298:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7164:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7232:3:14",
														"nodeType": "YulTypedName",
														"src": "7232:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7237:6:14",
														"nodeType": "YulTypedName",
														"src": "7237:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7248:11:14",
														"nodeType": "YulTypedName",
														"src": "7248:11:14",
														"type": ""
													}
												],
												"src": "7164:169:14"
											},
											{
												"body": {
													"nativeSrc": "7445:73:14",
													"nodeType": "YulBlock",
													"src": "7445:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7467:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7467:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7475:1:14",
																				"nodeType": "YulLiteral",
																				"src": "7475:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7463:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7463:3:14"
																		},
																		"nativeSrc": "7463:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7463:14:14"
																	},
																	{
																		"hexValue": "436f6e74726163743a20537570706c7920436170206578636565646564",
																		"kind": "string",
																		"nativeSrc": "7479:31:14",
																		"nodeType": "YulLiteral",
																		"src": "7479:31:14",
																		"type": "",
																		"value": "Contract: Supply Cap exceeded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7456:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7456:6:14"
																},
																"nativeSrc": "7456:55:14",
																"nodeType": "YulFunctionCall",
																"src": "7456:55:14"
															},
															"nativeSrc": "7456:55:14",
															"nodeType": "YulExpressionStatement",
															"src": "7456:55:14"
														}
													]
												},
												"name": "store_literal_in_memory_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79",
												"nativeSrc": "7339:179:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7437:6:14",
														"nodeType": "YulTypedName",
														"src": "7437:6:14",
														"type": ""
													}
												],
												"src": "7339:179:14"
											},
											{
												"body": {
													"nativeSrc": "7670:220:14",
													"nodeType": "YulBlock",
													"src": "7670:220:14",
													"statements": [
														{
															"nativeSrc": "7680:74:14",
															"nodeType": "YulAssignment",
															"src": "7680:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7746:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7746:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7751:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7751:2:14",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7687:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "7687:58:14"
																},
																"nativeSrc": "7687:67:14",
																"nodeType": "YulFunctionCall",
																"src": "7687:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7680:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7680:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7852:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7852:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79",
																	"nativeSrc": "7763:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "7763:88:14"
																},
																"nativeSrc": "7763:93:14",
																"nodeType": "YulFunctionCall",
																"src": "7763:93:14"
															},
															"nativeSrc": "7763:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "7763:93:14"
														},
														{
															"nativeSrc": "7865:19:14",
															"nodeType": "YulAssignment",
															"src": "7865:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7876:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7876:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7881:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7881:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7872:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7872:3:14"
																},
																"nativeSrc": "7872:12:14",
																"nodeType": "YulFunctionCall",
																"src": "7872:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7865:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7865:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7524:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7658:3:14",
														"nodeType": "YulTypedName",
														"src": "7658:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7666:3:14",
														"nodeType": "YulTypedName",
														"src": "7666:3:14",
														"type": ""
													}
												],
												"src": "7524:366:14"
											},
											{
												"body": {
													"nativeSrc": "8067:248:14",
													"nodeType": "YulBlock",
													"src": "8067:248:14",
													"statements": [
														{
															"nativeSrc": "8077:26:14",
															"nodeType": "YulAssignment",
															"src": "8077:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8089:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "8089:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8100:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8100:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8085:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8085:3:14"
																},
																"nativeSrc": "8085:18:14",
																"nodeType": "YulFunctionCall",
																"src": "8085:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8077:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "8077:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8124:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8124:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8135:1:14",
																				"nodeType": "YulLiteral",
																				"src": "8135:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8120:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8120:3:14"
																		},
																		"nativeSrc": "8120:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8120:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8143:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "8143:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8149:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8149:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8139:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8139:3:14"
																		},
																		"nativeSrc": "8139:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8139:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8113:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8113:6:14"
																},
																"nativeSrc": "8113:47:14",
																"nodeType": "YulFunctionCall",
																"src": "8113:47:14"
															},
															"nativeSrc": "8113:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "8113:47:14"
														},
														{
															"nativeSrc": "8169:139:14",
															"nodeType": "YulAssignment",
															"src": "8169:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8303:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "8303:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8177:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "8177:124:14"
																},
																"nativeSrc": "8177:131:14",
																"nodeType": "YulFunctionCall",
																"src": "8177:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8169:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "8169:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7896:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8047:9:14",
														"nodeType": "YulTypedName",
														"src": "8047:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8062:4:14",
														"nodeType": "YulTypedName",
														"src": "8062:4:14",
														"type": ""
													}
												],
												"src": "7896:419:14"
											},
											{
												"body": {
													"nativeSrc": "8386:53:14",
													"nodeType": "YulBlock",
													"src": "8386:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8403:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "8403:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8426:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "8426:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "8408:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "8408:17:14"
																		},
																		"nativeSrc": "8408:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8408:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8396:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8396:6:14"
																},
																"nativeSrc": "8396:37:14",
																"nodeType": "YulFunctionCall",
																"src": "8396:37:14"
															},
															"nativeSrc": "8396:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "8396:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "8321:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8374:5:14",
														"nodeType": "YulTypedName",
														"src": "8374:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8381:3:14",
														"nodeType": "YulTypedName",
														"src": "8381:3:14",
														"type": ""
													}
												],
												"src": "8321:118:14"
											},
											{
												"body": {
													"nativeSrc": "8599:288:14",
													"nodeType": "YulBlock",
													"src": "8599:288:14",
													"statements": [
														{
															"nativeSrc": "8609:26:14",
															"nodeType": "YulAssignment",
															"src": "8609:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8621:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "8621:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8632:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8632:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8617:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8617:3:14"
																},
																"nativeSrc": "8617:18:14",
																"nodeType": "YulFunctionCall",
																"src": "8617:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8609:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "8609:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8689:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8689:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8702:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8702:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8713:1:14",
																				"nodeType": "YulLiteral",
																				"src": "8713:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8698:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8698:3:14"
																		},
																		"nativeSrc": "8698:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8698:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8645:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "8645:43:14"
																},
																"nativeSrc": "8645:71:14",
																"nodeType": "YulFunctionCall",
																"src": "8645:71:14"
															},
															"nativeSrc": "8645:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "8645:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8770:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8770:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8783:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8783:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8794:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8794:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8779:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8779:3:14"
																		},
																		"nativeSrc": "8779:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8779:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8726:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "8726:43:14"
																},
																"nativeSrc": "8726:72:14",
																"nodeType": "YulFunctionCall",
																"src": "8726:72:14"
															},
															"nativeSrc": "8726:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "8726:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8852:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8852:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8865:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8865:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8876:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8876:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8861:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8861:3:14"
																		},
																		"nativeSrc": "8861:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8861:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8808:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "8808:43:14"
																},
																"nativeSrc": "8808:72:14",
																"nodeType": "YulFunctionCall",
																"src": "8808:72:14"
															},
															"nativeSrc": "8808:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "8808:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8445:442:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8555:9:14",
														"nodeType": "YulTypedName",
														"src": "8555:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8567:6:14",
														"nodeType": "YulTypedName",
														"src": "8567:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8575:6:14",
														"nodeType": "YulTypedName",
														"src": "8575:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8583:6:14",
														"nodeType": "YulTypedName",
														"src": "8583:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8594:4:14",
														"nodeType": "YulTypedName",
														"src": "8594:4:14",
														"type": ""
													}
												],
												"src": "8445:442:14"
											},
											{
												"body": {
													"nativeSrc": "8991:124:14",
													"nodeType": "YulBlock",
													"src": "8991:124:14",
													"statements": [
														{
															"nativeSrc": "9001:26:14",
															"nodeType": "YulAssignment",
															"src": "9001:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9013:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "9013:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9024:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9024:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9009:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9009:3:14"
																},
																"nativeSrc": "9009:18:14",
																"nodeType": "YulFunctionCall",
																"src": "9009:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9001:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "9001:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9081:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9081:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9094:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9094:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9105:1:14",
																				"nodeType": "YulLiteral",
																				"src": "9105:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9090:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9090:3:14"
																		},
																		"nativeSrc": "9090:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9090:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9037:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "9037:43:14"
																},
																"nativeSrc": "9037:71:14",
																"nodeType": "YulFunctionCall",
																"src": "9037:71:14"
															},
															"nativeSrc": "9037:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "9037:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "8893:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8963:9:14",
														"nodeType": "YulTypedName",
														"src": "8963:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8975:6:14",
														"nodeType": "YulTypedName",
														"src": "8975:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8986:4:14",
														"nodeType": "YulTypedName",
														"src": "8986:4:14",
														"type": ""
													}
												],
												"src": "8893:222:14"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract: Supply Cap exceeded\")\n\n    }\n\n    function abi_encode_t_stringliteral_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526611c37937e0800060095534801561001a575f80fd5b50604051614353380380614353833981810160405281019061003c919061076c565b6040518060400160405280600581526020017f546f6b656e0000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f544b4e000000000000000000000000000000000000000000000000000000000081525081600390816100b791906109d1565b5080600490816100c791906109d1565b50505060016006819055506a084595161401484a0000006007819055505f600a60016101000a81548160ff0219169083151502179055505f600a60026101000a81548160ff0219169083151502179055508060085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101775f801b61016c61025f60201b60201c565b61026660201b60201c565b506101b57fae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d36101aa61025f60201b60201c565b61026660201b60201c565b506101f37f8c66330d9d4f6aba064f25ef2a307366ea6d917616f44c075aa60fa15e5cb1cb6101e861025f60201b60201c565b61026660201b60201c565b506102317f9edfad36e7d4d9da54b4f78f22bf97cb5b58bb7998294a4288da41c15c647c4561022661025f60201b60201c565b61026660201b60201c565b5061025961024361025f60201b60201c565b69d3c21bcecceda100000061035c60201b60201c565b50610bfd565b5f33905090565b5f61027783836103e160201b60201c565b61035257600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506102ef61025f60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610356565b5f90505b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036103cc575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016103c39190610aaf565b60405180910390fd5b6103dd5f838361044560201b60201c565b5050565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036104d6576007548161048a6104ec60201b60201c565b6104949190610af5565b11156104d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104cc90610b82565b60405180910390fd5b5b6104e78383836104f560201b60201c565b505050565b5f600254905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610545578060025f8282546105399190610af5565b92505081905550610613565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156105ce578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016105c593929190610baf565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361065a578060025f82825403925050819055506106a4565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516107019190610be4565b60405180910390a3505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61073b82610712565b9050919050565b61074b81610731565b8114610755575f80fd5b50565b5f8151905061076681610742565b92915050565b5f602082840312156107815761078061070e565b5b5f61078e84828501610758565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061081257607f821691505b602082108103610825576108246107ce565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026108877fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261084c565b610891868361084c565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6108d56108d06108cb846108a9565b6108b2565b6108a9565b9050919050565b5f819050919050565b6108ee836108bb565b6109026108fa826108dc565b848454610858565b825550505050565b5f90565b61091661090a565b6109218184846108e5565b505050565b5b81811015610944576109395f8261090e565b600181019050610927565b5050565b601f8211156109895761095a8161082b565b6109638461083d565b81016020851015610972578190505b61098661097e8561083d565b830182610926565b50505b505050565b5f82821c905092915050565b5f6109a95f198460080261098e565b1980831691505092915050565b5f6109c1838361099a565b9150826002028217905092915050565b6109da82610797565b67ffffffffffffffff8111156109f3576109f26107a1565b5b6109fd82546107fb565b610a08828285610948565b5f60209050601f831160018114610a39575f8415610a27578287015190505b610a3185826109b6565b865550610a98565b601f198416610a478661082b565b5f5b82811015610a6e57848901518255600182019150602085019450602081019050610a49565b86831015610a8b5784890151610a87601f89168261099a565b8355505b6001600288020188555050505b505050505050565b610aa981610731565b82525050565b5f602082019050610ac25f830184610aa0565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610aff826108a9565b9150610b0a836108a9565b9250828201905080821115610b2257610b21610ac8565b5b92915050565b5f82825260208201905092915050565b7f436f6e74726163743a20537570706c79204361702065786365656465640000005f82015250565b5f610b6c601d83610b28565b9150610b7782610b38565b602082019050919050565b5f6020820190508181035f830152610b9981610b60565b9050919050565b610ba9816108a9565b82525050565b5f606082019050610bc25f830186610aa0565b610bcf6020830185610ba0565b610bdc6040830184610ba0565b949350505050565b5f602082019050610bf75f830184610ba0565b92915050565b61374980610c0a5f395ff3fe608060405234801561000f575f80fd5b5060043610610251575f3560e01c806379cc679011610144578063a9059cbb116100c1578063d547741f11610085578063d547741f146106e9578063dd62ed3e14610705578063deb6db3614610735578063ea5cb53214610751578063f2250d3d1461076f578063fbfa77cf1461078b57610251565b8063a9059cbb14610631578063b6a3f59a14610661578063c30796ab1461067d578063cf820461146106ad578063d1c9f69b146106cb57610251565b806391d148541161010857806391d148541461058b578063956feccf146105bb57806395d89b41146105d9578063a0712d68146105f7578063a217fddf1461061357610251565b806379cc6790146104f75780637e92a7fd146105135780638d580b9f146105315780638ebed5b11461054f5780638f770ad01461056d57610251565b80633f914aef116101d25780635155728911610196578063515572891461044f57806353a4c31e1461046d5780635c975abb1461048b5780636ba77a38146104a957806370a08231146104c757610251565b80633f914aef146103c357806341f431fd146103df57806342966c68146103fb578063449a52f81461041757806348132f481461043357610251565b806323b872dd1161021957806323b872dd1461030d578063248a9ca31461033d5780632f2ff15d1461036d578063313ce5671461038957806336568abe146103a757610251565b806301ffc9a71461025557806306fdde0314610285578063095ea7b3146102a357806316c38b3c146102d357806318160ddd146102ef575b5f80fd5b61026f600480360381019061026a9190612857565b6107a9565b60405161027c919061289c565b60405180910390f35b61028d610822565b60405161029a9190612925565b60405180910390f35b6102bd60048036038101906102b891906129d2565b6108b2565b6040516102ca919061289c565b60405180910390f35b6102ed60048036038101906102e89190612a3a565b6108d4565b005b6102f76109ec565b6040516103049190612a74565b60405180910390f35b61032760048036038101906103229190612a8d565b6109f5565b604051610334919061289c565b60405180910390f35b61035760048036038101906103529190612b10565b610ab6565b6040516103649190612b4a565b60405180910390f35b61038760048036038101906103829190612b63565b610ad3565b005b610391610af5565b60405161039e9190612bbc565b60405180910390f35b6103c160048036038101906103bc9190612b63565b610afd565b005b6103dd60048036038101906103d89190612bd5565b610b78565b005b6103f960048036038101906103f49190612c4e565b610ca7565b005b61041560048036038101906104109190612c9e565b610d8d565b005b610431600480360381019061042c91906129d2565b610ea0565b005b61044d60048036038101906104489190612d04565b61104d565b005b610457611149565b6040516104649190612b4a565b60405180910390f35b61047561116d565b6040516104829190612b4a565b60405180910390f35b610493611191565b6040516104a0919061289c565b60405180910390f35b6104b16111a3565b6040516104be9190612b4a565b60405180910390f35b6104e160048036038101906104dc9190612d42565b6111c7565b6040516104ee9190612a74565b60405180910390f35b610511600480360381019061050c91906129d2565b61120c565b005b61051b61131b565b6040516105289190612b4a565b60405180910390f35b61053961133f565b6040516105469190612b4a565b60405180910390f35b610557611363565b6040516105649190612b4a565b60405180910390f35b610575611387565b6040516105829190612a74565b60405180910390f35b6105a560048036038101906105a09190612b63565b611390565b6040516105b2919061289c565b60405180910390f35b6105c36113f4565b6040516105d0919061289c565b60405180910390f35b6105e1611407565b6040516105ee9190612925565b60405180910390f35b610611600480360381019061060c9190612c9e565b611497565b005b61061b611648565b6040516106289190612b4a565b60405180910390f35b61064b600480360381019061064691906129d2565b61164e565b604051610658919061289c565b60405180910390f35b61067b60048036038101906106769190612c9e565b61170e565b005b61069760048036038101906106929190612d42565b611861565b6040516106a4919061289c565b60405180910390f35b6106b561187e565b6040516106c29190612a74565b60405180910390f35b6106d3611884565b6040516106e0919061289c565b60405180910390f35b61070360048036038101906106fe9190612b63565b611897565b005b61071f600480360381019061071a9190612d6d565b6118b9565b60405161072c9190612a74565b60405180910390f35b61074f600480360381019061074a9190612a3a565b61193b565b005b610759611a54565b6040516107669190612b4a565b60405180910390f35b61078960048036038101906107849190612a3a565b611a78565b005b610793611b91565b6040516107a09190612dba565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061081b575061081a82611bb6565b5b9050919050565b60606003805461083190612e00565b80601f016020809104026020016040519081016040528092919081815260200182805461085d90612e00565b80156108a85780601f1061087f576101008083540402835291602001916108a8565b820191905f5260205f20905b81548152906001019060200180831161088b57829003601f168201915b5050505050905090565b5f806108bc611c1f565b90506108c9818585611c26565b600191505092915050565b6109057fae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d3610900611c1f565b611390565b610944576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093b90612e7a565b60405180910390fd5b80600a5f6101000a81548160ff02191690831515021790555080156109a8577fd8c9c5623123df8e137854c59a08f9084b75609fe24584228d44ffdce5ab920a4361098d611c1f565b60405161099b929190612e98565b60405180910390a16109e9565b7f1e7a7234ad01ed7353bf129217f5c162773639a6cb22773e84bcd5a2b0ef362e436109d2611c1f565b6040516109e0929190612e98565b60405180910390a15b50565b5f600254905090565b5f6109fe611c38565b5f610a07611c1f565b9050600b5f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610a6857610a63858585611c87565b610aa2565b610a73858585611c87565b610aa18560085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600954611c87565b5b6001915050610aaf611d77565b9392505050565b5f60055f8381526020019081526020015f20600101549050919050565b610adc82610ab6565b610ae581611d81565b610aef8383611d95565b50505050565b5f6012905090565b610b05611c1f565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610b69576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b738282611e7f565b505050565b610ba27fae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d333611390565b610be1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd890612f09565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4690612f71565b60405180910390fd5b80600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b610caf611c38565b610cd97f508f8f8be8f5dbcb88f4f4500430b8b3684c471ed936f31fea912c78ad46a6b933611390565b610d18576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0f90612fd9565b60405180910390fd5b610d4382828573ffffffffffffffffffffffffffffffffffffffff16611f699092919063ffffffff16565b7f494215f965756bbc8b7f57addd2a0ebdbce467a4999f8320c67adc1771885d7b83438484604051610d789493929190613052565b60405180910390a1610d88611d77565b505050565b600a5f9054906101000a900460ff1615610ddc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd3906130df565b60405180910390fd5b610e0d7f9edfad36e7d4d9da54b4f78f22bf97cb5b58bb7998294a4288da41c15c647c45610e08611c1f565b611390565b610e4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4390613147565b60405180910390fd5b7f63706707d038997d2210eb026bb1339397deab463921538a81bb98e69ee54ca881610e76611c1f565b604051610e84929190612e98565b60405180910390a1610e9d610e97611c1f565b82611fe8565b50565b600a5f9054906101000a900460ff1615610eef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee6906130df565b60405180910390fd5b600a60029054906101000a900460ff1615610f3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f36906131af565b60405180910390fd5b610f707f7d800f56a05adcb6245df540492a560d0e668aac15ee6c7dd40668064913da33610f6b611c1f565b611390565b610faf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fa690613217565b60405180910390fd5b60075481610fbb6109ec565b610fc59190613262565b1115611006576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ffd906132df565b60405180910390fd5b7fe98063832b4ff0356868961b75f7f49b096b14ea066c9725301ad197f2f6314782826040516110379291906132fd565b60405180910390a16110498282612067565b5050565b611055611c38565b61107f7f508f8f8be8f5dbcb88f4f4500430b8b3684c471ed936f31fea912c78ad46a6b933611390565b6110be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b590612fd9565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015611101573d5f803e3d5ffd5b507f3b1c0368c81e47d03164182dc6f9fcf4f5e4b3bd9462d74960d729f73138ce3682438360405161113593929190613344565b60405180910390a1611145611d77565b5050565b7fae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d381565b7f9edfad36e7d4d9da54b4f78f22bf97cb5b58bb7998294a4288da41c15c647c4581565b600a5f9054906101000a900460ff1681565b7fc8a3befa5973ff6e159afc769978d92f26bae29c51a73d11c9112a05b68d25e681565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b600a5f9054906101000a900460ff161561125b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611252906130df565b60405180910390fd5b61128c7fc8a3befa5973ff6e159afc769978d92f26bae29c51a73d11c9112a05b68d25e6611287611c1f565b611390565b6112cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c2906133c3565b60405180910390fd5b7fe419ce2aab145a1feaf5893bb6a9478f9282415bbd81c76d5cfff2d4f13431dd82826112f6611c1f565b604051611305939291906133e1565b60405180910390a16113178282611fe8565b5050565b7f7d800f56a05adcb6245df540492a560d0e668aac15ee6c7dd40668064913da3381565b7f508f8f8be8f5dbcb88f4f4500430b8b3684c471ed936f31fea912c78ad46a6b981565b7f8c66330d9d4f6aba064f25ef2a307366ea6d917616f44c075aa60fa15e5cb1cb81565b5f600754905090565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b600a60019054906101000a900460ff1681565b60606004805461141690612e00565b80601f016020809104026020016040519081016040528092919081815260200182805461144290612e00565b801561148d5780601f106114645761010080835404028352916020019161148d565b820191905f5260205f20905b81548152906001019060200180831161147057829003601f168201915b5050505050905090565b600a5f9054906101000a900460ff16156114e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114dd906130df565b60405180910390fd5b600a60019054906101000a900460ff1615611536576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152d90613460565b60405180910390fd5b6115677f8c66330d9d4f6aba064f25ef2a307366ea6d917616f44c075aa60fa15e5cb1cb611562611c1f565b611390565b6115a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159d906134c8565b60405180910390fd5b600754816115b26109ec565b6115bc9190613262565b11156115fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115f4906132df565b60405180910390fd5b7f772f66a00a405709c30e7f18feadcc8f123b20c09c7260165d3eec36c9f213728160405161162c9190612a74565b60405180910390a161164561163f611c1f565b82612067565b50565b5f801b81565b5f611657611c38565b5f611660611c1f565b9050600b5f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16156116c1576116bc818585611c87565b6116fb565b6116cc818585611c87565b6116fa8160085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600954611c87565b5b6001915050611708611d77565b92915050565b600a5f9054906101000a900460ff161561175d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611754906130df565b60405180910390fd5b61178e7fea4defabeb90fa1e79f929d6c8d482fee8a115926a592b79634d39a67cce3b62611789611c1f565b611390565b6117cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117c490613530565b60405180910390fd5b6117d56109ec565b811015611817576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161180e90613598565b60405180910390fd5b806007819055507fa11cbdeb4d62442fae7c8ec6286585b17c47acb7b17bbcab1beadce84befa30081611848611c1f565b604051611856929190612e98565b60405180910390a150565b600b602052805f5260405f205f915054906101000a900460ff1681565b60095481565b600a60029054906101000a900460ff1681565b6118a082610ab6565b6118a981611d81565b6118b38383611e7f565b50505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b61196c7fae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d3611967611c1f565b611390565b6119ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119a290612e7a565b60405180910390fd5b80600a60016101000a81548160ff0219169083151502179055508015611a10577f5668502ca8e7b393c09d1dac964ca45a27870a78d7ba212b7a189450897ca05f436119f5611c1f565b604051611a03929190612e98565b60405180910390a1611a51565b7f98e05482fdb38df5eb461fb932fa6e1af90a3569939ce5a8d92d699b102d640243611a3a611c1f565b604051611a48929190612e98565b60405180910390a15b50565b7fea4defabeb90fa1e79f929d6c8d482fee8a115926a592b79634d39a67cce3b6281565b611aa97fae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d3611aa4611c1f565b611390565b611ae8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611adf90612f09565b60405180910390fd5b80600a60026101000a81548160ff0219169083151502179055508015611b4d577f218e25f0a7435729f5a66aae50a9ed0084535a0080300c1c2e8366d8df7136ed43611b32611c1f565b604051611b40929190612e98565b60405180910390a1611b8e565b7f41606e1dcee38320f9edbfcd642aeaa81bb2140c705de9d4a7814024a1e9a31443611b77611c1f565b604051611b85929190612e98565b60405180910390a15b50565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b611c3383838360016120e6565b505050565b600260065403611c7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c7490613600565b60405180910390fd5b6002600681905550565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611cf7575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611cee9190612dba565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611d67575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611d5e9190612dba565b60405180910390fd5b611d728383836122b5565b505050565b6001600681905550565b611d9281611d8d611c1f565b612350565b50565b5f611da08383611390565b611e7557600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611e12611c1f565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050611e79565b5f90505b92915050565b5f611e8a8383611390565b15611f5f575f60055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611efc611c1f565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611f63565b5f90505b92915050565b611fe3838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611f9c9291906132fd565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506123a1565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612058575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161204f9190612dba565b60405180910390fd5b612063825f836122b5565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036120d7575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016120ce9190612dba565b60405180910390fd5b6120e25f83836122b5565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603612156575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161214d9190612dba565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036121c6575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016121bd9190612dba565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156122af578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516122a69190612a74565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361234057600754816122f46109ec565b6122fe9190613262565b111561233f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612336906132df565b60405180910390fd5b5b61234b838383612436565b505050565b61235a8282611390565b61239d5780826040517fe2517d3f00000000000000000000000000000000000000000000000000000000815260040161239492919061361e565b60405180910390fd5b5050565b5f6123cb828473ffffffffffffffffffffffffffffffffffffffff1661264f90919063ffffffff16565b90505f8151141580156123ef5750808060200190518101906123ed9190613659565b155b1561243157826040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016124289190612dba565b60405180910390fd5b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612486578060025f82825461247a9190613262565b92505081905550612554565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561250f578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161250693929190613684565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361259b578060025f82825403925050819055506125e5565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516126429190612a74565b60405180910390a3505050565b606061265c83835f612664565b905092915050565b6060814710156126ab57306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016126a29190612dba565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff1684866040516126d391906136fd565b5f6040518083038185875af1925050503d805f811461270d576040519150601f19603f3d011682016040523d82523d5f602084013e612712565b606091505b509150915061272286838361272d565b925050509392505050565b6060826127425761273d826127ba565b6127b2565b5f825114801561276857505f8473ffffffffffffffffffffffffffffffffffffffff163b145b156127aa57836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016127a19190612dba565b60405180910390fd5b8190506127b3565b5b9392505050565b5f815111156127cc5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61283681612802565b8114612840575f80fd5b50565b5f813590506128518161282d565b92915050565b5f6020828403121561286c5761286b6127fe565b5b5f61287984828501612843565b91505092915050565b5f8115159050919050565b61289681612882565b82525050565b5f6020820190506128af5f83018461288d565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6128f7826128b5565b61290181856128bf565b93506129118185602086016128cf565b61291a816128dd565b840191505092915050565b5f6020820190508181035f83015261293d81846128ed565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61296e82612945565b9050919050565b61297e81612964565b8114612988575f80fd5b50565b5f8135905061299981612975565b92915050565b5f819050919050565b6129b18161299f565b81146129bb575f80fd5b50565b5f813590506129cc816129a8565b92915050565b5f80604083850312156129e8576129e76127fe565b5b5f6129f58582860161298b565b9250506020612a06858286016129be565b9150509250929050565b612a1981612882565b8114612a23575f80fd5b50565b5f81359050612a3481612a10565b92915050565b5f60208284031215612a4f57612a4e6127fe565b5b5f612a5c84828501612a26565b91505092915050565b612a6e8161299f565b82525050565b5f602082019050612a875f830184612a65565b92915050565b5f805f60608486031215612aa457612aa36127fe565b5b5f612ab18682870161298b565b9350506020612ac28682870161298b565b9250506040612ad3868287016129be565b9150509250925092565b5f819050919050565b612aef81612add565b8114612af9575f80fd5b50565b5f81359050612b0a81612ae6565b92915050565b5f60208284031215612b2557612b246127fe565b5b5f612b3284828501612afc565b91505092915050565b612b4481612add565b82525050565b5f602082019050612b5d5f830184612b3b565b92915050565b5f8060408385031215612b7957612b786127fe565b5b5f612b8685828601612afc565b9250506020612b978582860161298b565b9150509250929050565b5f60ff82169050919050565b612bb681612ba1565b82525050565b5f602082019050612bcf5f830184612bad565b92915050565b5f8060408385031215612beb57612bea6127fe565b5b5f612bf88582860161298b565b9250506020612c0985828601612a26565b9150509250929050565b5f612c1d82612964565b9050919050565b612c2d81612c13565b8114612c37575f80fd5b50565b5f81359050612c4881612c24565b92915050565b5f805f60608486031215612c6557612c646127fe565b5b5f612c7286828701612c3a565b9350506020612c838682870161298b565b9250506040612c94868287016129be565b9150509250925092565b5f60208284031215612cb357612cb26127fe565b5b5f612cc0848285016129be565b91505092915050565b5f612cd382612945565b9050919050565b612ce381612cc9565b8114612ced575f80fd5b50565b5f81359050612cfe81612cda565b92915050565b5f8060408385031215612d1a57612d196127fe565b5b5f612d2785828601612cf0565b9250506020612d38858286016129be565b9150509250929050565b5f60208284031215612d5757612d566127fe565b5b5f612d648482850161298b565b91505092915050565b5f8060408385031215612d8357612d826127fe565b5b5f612d908582860161298b565b9250506020612da18582860161298b565b9150509250929050565b612db481612964565b82525050565b5f602082019050612dcd5f830184612dab565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680612e1757607f821691505b602082108103612e2a57612e29612dd3565b5b50919050565b7f436f6e74726163743a204e6565642041646d696e0000000000000000000000005f82015250565b5f612e646014836128bf565b9150612e6f82612e30565b602082019050919050565b5f6020820190508181035f830152612e9181612e58565b9050919050565b5f604082019050612eab5f830185612a65565b612eb86020830184612dab565b9392505050565b7f4e6565642041646d696e000000000000000000000000000000000000000000005f82015250565b5f612ef3600a836128bf565b9150612efe82612ebf565b602082019050919050565b5f6020820190508181035f830152612f2081612ee7565b9050919050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f612f5b600f836128bf565b9150612f6682612f27565b602082019050919050565b5f6020820190508181035f830152612f8881612f4f565b9050919050565b7f4e656564205245534355450000000000000000000000000000000000000000005f82015250565b5f612fc3600b836128bf565b9150612fce82612f8f565b602082019050919050565b5f6020820190508181035f830152612ff081612fb7565b9050919050565b5f819050919050565b5f61301a61301561301084612945565b612ff7565b612945565b9050919050565b5f61302b82613000565b9050919050565b5f61303c82613021565b9050919050565b61304c81613032565b82525050565b5f6080820190506130655f830187613043565b6130726020830186612a65565b61307f6040830185612dab565b61308c6060830184612a65565b95945050505050565b7f436f6e74726163743a20436f6e747261637420697320506175736564000000005f82015250565b5f6130c9601c836128bf565b91506130d482613095565b602082019050919050565b5f6020820190508181035f8301526130f6816130bd565b9050919050565b7f436f6e74726163743a204e656564204275726e000000000000000000000000005f82015250565b5f6131316013836128bf565b915061313c826130fd565b602082019050919050565b5f6020820190508181035f83015261315e81613125565b9050919050565b7f4d696e74696e6720746f2064697361626c6564000000000000000000000000005f82015250565b5f6131996013836128bf565b91506131a482613165565b602082019050919050565b5f6020820190508181035f8301526131c68161318d565b9050919050565b7f436f6e74726163743a204e656564204d696e746f0000000000000000000000005f82015250565b5f6132016014836128bf565b915061320c826131cd565b602082019050919050565b5f6020820190508181035f83015261322e816131f5565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61326c8261299f565b91506132778361299f565b925082820190508082111561328f5761328e613235565b5b92915050565b7f436f6e74726163743a20537570706c79204361702065786365656465640000005f82015250565b5f6132c9601d836128bf565b91506132d482613295565b602082019050919050565b5f6020820190508181035f8301526132f6816132bd565b9050919050565b5f6040820190506133105f830185612dab565b61331d6020830184612a65565b9392505050565b5f61332e82613021565b9050919050565b61333e81613324565b82525050565b5f6060820190506133575f830186613335565b6133646020830185612a65565b6133716040830184612a65565b949350505050565b7f436f6e74726163743a204e656564204275726e66726f6d0000000000000000005f82015250565b5f6133ad6017836128bf565b91506133b882613379565b602082019050919050565b5f6020820190508181035f8301526133da816133a1565b9050919050565b5f6060820190506133f45f830186612dab565b6134016020830185612a65565b61340e6040830184612dab565b949350505050565b7f4d696e74696e672064697361626c6564000000000000000000000000000000005f82015250565b5f61344a6010836128bf565b915061345582613416565b602082019050919050565b5f6020820190508181035f8301526134778161343e565b9050919050565b7f436f6e74726163743a204e656564204d696e74000000000000000000000000005f82015250565b5f6134b26013836128bf565b91506134bd8261347e565b602082019050919050565b5f6020820190508181035f8301526134df816134a6565b9050919050565b7f4e65656420537570706c790000000000000000000000000000000000000000005f82015250565b5f61351a600b836128bf565b9150613525826134e6565b602082019050919050565b5f6020820190508181035f8301526135478161350e565b9050919050565b7f436f6e74726163743a20537570706c792043617020746f6f206c6f77000000005f82015250565b5f613582601c836128bf565b915061358d8261354e565b602082019050919050565b5f6020820190508181035f8301526135af81613576565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f6135ea601f836128bf565b91506135f5826135b6565b602082019050919050565b5f6020820190508181035f830152613617816135de565b9050919050565b5f6040820190506136315f830185612dab565b61363e6020830184612b3b565b9392505050565b5f8151905061365381612a10565b92915050565b5f6020828403121561366e5761366d6127fe565b5b5f61367b84828501613645565b91505092915050565b5f6060820190506136975f830186612dab565b6136a46020830185612a65565b6136b16040830184612a65565b949350505050565b5f81519050919050565b5f81905092915050565b5f6136d7826136b9565b6136e181856136c3565b93506136f18185602086016128cf565b80840191505092915050565b5f61370882846136cd565b91508190509291505056fea264697066735822122080b674cc755c7de8ae8962d81bc7e5de88ec0d20390e5865b0db8a8289f8c0cd64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH7 0x11C37937E08000 PUSH1 0x9 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x4353 CODESIZE SUB DUP1 PUSH2 0x4353 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x3C SWAP2 SWAP1 PUSH2 0x76C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x546F6B656E000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x544B4E0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xB7 SWAP2 SWAP1 PUSH2 0x9D1 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x9D1 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH11 0x84595161401484A000000 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0xA PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0xA PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x177 PUSH0 DUP1 SHL PUSH2 0x16C PUSH2 0x25F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x266 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x1B5 PUSH32 0xAE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3 PUSH2 0x1AA PUSH2 0x25F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x266 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x1F3 PUSH32 0x8C66330D9D4F6ABA064F25EF2A307366EA6D917616F44C075AA60FA15E5CB1CB PUSH2 0x1E8 PUSH2 0x25F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x266 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x231 PUSH32 0x9EDFAD36E7D4D9DA54B4F78F22BF97CB5B58BB7998294A4288DA41C15C647C45 PUSH2 0x226 PUSH2 0x25F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x266 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x259 PUSH2 0x243 PUSH2 0x25F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 PUSH2 0x35C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xBFD JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x277 DUP4 DUP4 PUSH2 0x3E1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x352 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2EF PUSH2 0x25F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x356 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3CC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C3 SWAP2 SWAP1 PUSH2 0xAAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3DD PUSH0 DUP4 DUP4 PUSH2 0x445 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4D6 JUMPI PUSH1 0x7 SLOAD DUP2 PUSH2 0x48A PUSH2 0x4EC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x494 SWAP2 SWAP1 PUSH2 0xAF5 JUMP JUMPDEST GT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CC SWAP1 PUSH2 0xB82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH2 0x4E7 DUP4 DUP4 DUP4 PUSH2 0x4F5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x545 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x539 SWAP2 SWAP1 PUSH2 0xAF5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x613 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x5CE JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x65A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x6A4 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x701 SWAP2 SWAP1 PUSH2 0xBE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x73B DUP3 PUSH2 0x712 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x74B DUP2 PUSH2 0x731 JUMP JUMPDEST DUP2 EQ PUSH2 0x755 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x766 DUP2 PUSH2 0x742 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x781 JUMPI PUSH2 0x780 PUSH2 0x70E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x78E DUP5 DUP3 DUP6 ADD PUSH2 0x758 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x812 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x825 JUMPI PUSH2 0x824 PUSH2 0x7CE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x887 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x84C JUMP JUMPDEST PUSH2 0x891 DUP7 DUP4 PUSH2 0x84C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8D5 PUSH2 0x8D0 PUSH2 0x8CB DUP5 PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0x8B2 JUMP JUMPDEST PUSH2 0x8A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8EE DUP4 PUSH2 0x8BB JUMP JUMPDEST PUSH2 0x902 PUSH2 0x8FA DUP3 PUSH2 0x8DC JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x858 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x916 PUSH2 0x90A JUMP JUMPDEST PUSH2 0x921 DUP2 DUP5 DUP5 PUSH2 0x8E5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x944 JUMPI PUSH2 0x939 PUSH0 DUP3 PUSH2 0x90E JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x927 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x989 JUMPI PUSH2 0x95A DUP2 PUSH2 0x82B JUMP JUMPDEST PUSH2 0x963 DUP5 PUSH2 0x83D JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x972 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x986 PUSH2 0x97E DUP6 PUSH2 0x83D JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x926 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9A9 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x98E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9C1 DUP4 DUP4 PUSH2 0x99A JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9DA DUP3 PUSH2 0x797 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9F3 JUMPI PUSH2 0x9F2 PUSH2 0x7A1 JUMP JUMPDEST JUMPDEST PUSH2 0x9FD DUP3 SLOAD PUSH2 0x7FB JUMP JUMPDEST PUSH2 0xA08 DUP3 DUP3 DUP6 PUSH2 0x948 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xA39 JUMPI PUSH0 DUP5 ISZERO PUSH2 0xA27 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xA31 DUP6 DUP3 PUSH2 0x9B6 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xA98 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xA47 DUP7 PUSH2 0x82B JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xA6E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA49 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xA8B JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xA87 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x99A JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xAA9 DUP2 PUSH2 0x731 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAC2 PUSH0 DUP4 ADD DUP5 PUSH2 0xAA0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xAFF DUP3 PUSH2 0x8A9 JUMP JUMPDEST SWAP2 POP PUSH2 0xB0A DUP4 PUSH2 0x8A9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xB22 JUMPI PUSH2 0xB21 PUSH2 0xAC8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6E74726163743A20537570706C7920436170206578636565646564000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB6C PUSH1 0x1D DUP4 PUSH2 0xB28 JUMP JUMPDEST SWAP2 POP PUSH2 0xB77 DUP3 PUSH2 0xB38 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB99 DUP2 PUSH2 0xB60 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA9 DUP2 PUSH2 0x8A9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xBC2 PUSH0 DUP4 ADD DUP7 PUSH2 0xAA0 JUMP JUMPDEST PUSH2 0xBCF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBA0 JUMP JUMPDEST PUSH2 0xBDC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xBA0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBF7 PUSH0 DUP4 ADD DUP5 PUSH2 0xBA0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3749 DUP1 PUSH2 0xC0A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x251 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79CC6790 GT PUSH2 0x144 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x85 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x6E9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x705 JUMPI DUP1 PUSH4 0xDEB6DB36 EQ PUSH2 0x735 JUMPI DUP1 PUSH4 0xEA5CB532 EQ PUSH2 0x751 JUMPI DUP1 PUSH4 0xF2250D3D EQ PUSH2 0x76F JUMPI DUP1 PUSH4 0xFBFA77CF EQ PUSH2 0x78B JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x631 JUMPI DUP1 PUSH4 0xB6A3F59A EQ PUSH2 0x661 JUMPI DUP1 PUSH4 0xC30796AB EQ PUSH2 0x67D JUMPI DUP1 PUSH4 0xCF820461 EQ PUSH2 0x6AD JUMPI DUP1 PUSH4 0xD1C9F69B EQ PUSH2 0x6CB JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x58B JUMPI DUP1 PUSH4 0x956FECCF EQ PUSH2 0x5BB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5D9 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x5F7 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x613 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x4F7 JUMPI DUP1 PUSH4 0x7E92A7FD EQ PUSH2 0x513 JUMPI DUP1 PUSH4 0x8D580B9F EQ PUSH2 0x531 JUMPI DUP1 PUSH4 0x8EBED5B1 EQ PUSH2 0x54F JUMPI DUP1 PUSH4 0x8F770AD0 EQ PUSH2 0x56D JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x3F914AEF GT PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x51557289 GT PUSH2 0x196 JUMPI DUP1 PUSH4 0x51557289 EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0x53A4C31E EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0x6BA77A38 EQ PUSH2 0x4A9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4C7 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x3F914AEF EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0x41F431FD EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0x449A52F8 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x48132F48 EQ PUSH2 0x433 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x219 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x3A7 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2EF JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x2857 JUMP JUMPDEST PUSH2 0x7A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x289C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28D PUSH2 0x822 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x2925 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x289C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x2A3A JUMP JUMPDEST PUSH2 0x8D4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F7 PUSH2 0x9EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x327 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x2A8D JUMP JUMPDEST PUSH2 0x9F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x334 SWAP2 SWAP1 PUSH2 0x289C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x357 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x2B10 JUMP JUMPDEST PUSH2 0xAB6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x387 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x382 SWAP2 SWAP1 PUSH2 0x2B63 JUMP JUMPDEST PUSH2 0xAD3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x391 PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x2BBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x2B63 JUMP JUMPDEST PUSH2 0xAFD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x2BD5 JUMP JUMPDEST PUSH2 0xB78 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x2C4E JUMP JUMPDEST PUSH2 0xCA7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x415 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x410 SWAP2 SWAP1 PUSH2 0x2C9E JUMP JUMPDEST PUSH2 0xD8D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x431 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42C SWAP2 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST PUSH2 0xEA0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x448 SWAP2 SWAP1 PUSH2 0x2D04 JUMP JUMPDEST PUSH2 0x104D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x457 PUSH2 0x1149 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x464 SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x475 PUSH2 0x116D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x482 SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x493 PUSH2 0x1191 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A0 SWAP2 SWAP1 PUSH2 0x289C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B1 PUSH2 0x11A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BE SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DC SWAP2 SWAP1 PUSH2 0x2D42 JUMP JUMPDEST PUSH2 0x11C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4EE SWAP2 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x511 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50C SWAP2 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST PUSH2 0x120C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x51B PUSH2 0x131B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x528 SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x539 PUSH2 0x133F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x557 PUSH2 0x1363 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x564 SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x575 PUSH2 0x1387 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x582 SWAP2 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A0 SWAP2 SWAP1 PUSH2 0x2B63 JUMP JUMPDEST PUSH2 0x1390 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B2 SWAP2 SWAP1 PUSH2 0x289C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C3 PUSH2 0x13F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D0 SWAP2 SWAP1 PUSH2 0x289C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E1 PUSH2 0x1407 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5EE SWAP2 SWAP1 PUSH2 0x2925 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x611 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x60C SWAP2 SWAP1 PUSH2 0x2C9E JUMP JUMPDEST PUSH2 0x1497 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x61B PUSH2 0x1648 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x628 SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x646 SWAP2 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST PUSH2 0x164E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x658 SWAP2 SWAP1 PUSH2 0x289C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x67B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x676 SWAP2 SWAP1 PUSH2 0x2C9E JUMP JUMPDEST PUSH2 0x170E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x697 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x692 SWAP2 SWAP1 PUSH2 0x2D42 JUMP JUMPDEST PUSH2 0x1861 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A4 SWAP2 SWAP1 PUSH2 0x289C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6B5 PUSH2 0x187E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C2 SWAP2 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6D3 PUSH2 0x1884 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E0 SWAP2 SWAP1 PUSH2 0x289C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x703 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6FE SWAP2 SWAP1 PUSH2 0x2B63 JUMP JUMPDEST PUSH2 0x1897 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x71F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71A SWAP2 SWAP1 PUSH2 0x2D6D JUMP JUMPDEST PUSH2 0x18B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x72C SWAP2 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x74F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x74A SWAP2 SWAP1 PUSH2 0x2A3A JUMP JUMPDEST PUSH2 0x193B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x759 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x766 SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x789 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x784 SWAP2 SWAP1 PUSH2 0x2A3A JUMP JUMPDEST PUSH2 0x1A78 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x793 PUSH2 0x1B91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7A0 SWAP2 SWAP1 PUSH2 0x2DBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x81B JUMPI POP PUSH2 0x81A DUP3 PUSH2 0x1BB6 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x831 SWAP1 PUSH2 0x2E00 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x85D SWAP1 PUSH2 0x2E00 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8A8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x87F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8A8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x88B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x8BC PUSH2 0x1C1F JUMP JUMPDEST SWAP1 POP PUSH2 0x8C9 DUP2 DUP6 DUP6 PUSH2 0x1C26 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x905 PUSH32 0xAE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3 PUSH2 0x900 PUSH2 0x1C1F JUMP JUMPDEST PUSH2 0x1390 JUMP JUMPDEST PUSH2 0x944 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93B SWAP1 PUSH2 0x2E7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x9A8 JUMPI PUSH32 0xD8C9C5623123DF8E137854C59A08F9084B75609FE24584228D44FFDCE5AB920A NUMBER PUSH2 0x98D PUSH2 0x1C1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x99B SWAP3 SWAP2 SWAP1 PUSH2 0x2E98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x9E9 JUMP JUMPDEST PUSH32 0x1E7A7234AD01ED7353BF129217F5C162773639A6CB22773E84BCD5A2B0EF362E NUMBER PUSH2 0x9D2 PUSH2 0x1C1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9E0 SWAP3 SWAP2 SWAP1 PUSH2 0x2E98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x9FE PUSH2 0x1C38 JUMP JUMPDEST PUSH0 PUSH2 0xA07 PUSH2 0x1C1F JUMP JUMPDEST SWAP1 POP PUSH1 0xB PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA68 JUMPI PUSH2 0xA63 DUP6 DUP6 DUP6 PUSH2 0x1C87 JUMP JUMPDEST PUSH2 0xAA2 JUMP JUMPDEST PUSH2 0xA73 DUP6 DUP6 DUP6 PUSH2 0x1C87 JUMP JUMPDEST PUSH2 0xAA1 DUP6 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x9 SLOAD PUSH2 0x1C87 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xAAF PUSH2 0x1D77 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xADC DUP3 PUSH2 0xAB6 JUMP JUMPDEST PUSH2 0xAE5 DUP2 PUSH2 0x1D81 JUMP JUMPDEST PUSH2 0xAEF DUP4 DUP4 PUSH2 0x1D95 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB05 PUSH2 0x1C1F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB69 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB73 DUP3 DUP3 PUSH2 0x1E7F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xBA2 PUSH32 0xAE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3 CALLER PUSH2 0x1390 JUMP JUMPDEST PUSH2 0xBE1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD8 SWAP1 PUSH2 0x2F09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC4F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC46 SWAP1 PUSH2 0x2F71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xCAF PUSH2 0x1C38 JUMP JUMPDEST PUSH2 0xCD9 PUSH32 0x508F8F8BE8F5DBCB88F4F4500430B8B3684C471ED936F31FEA912C78AD46A6B9 CALLER PUSH2 0x1390 JUMP JUMPDEST PUSH2 0xD18 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0F SWAP1 PUSH2 0x2FD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD43 DUP3 DUP3 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F69 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x494215F965756BBC8B7F57ADDD2A0EBDBCE467A4999F8320C67ADC1771885D7B DUP4 NUMBER DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xD78 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3052 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xD88 PUSH2 0x1D77 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xDDC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD3 SWAP1 PUSH2 0x30DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE0D PUSH32 0x9EDFAD36E7D4D9DA54B4F78F22BF97CB5B58BB7998294A4288DA41C15C647C45 PUSH2 0xE08 PUSH2 0x1C1F JUMP JUMPDEST PUSH2 0x1390 JUMP JUMPDEST PUSH2 0xE4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE43 SWAP1 PUSH2 0x3147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x63706707D038997D2210EB026BB1339397DEAB463921538A81BB98E69EE54CA8 DUP2 PUSH2 0xE76 PUSH2 0x1C1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE84 SWAP3 SWAP2 SWAP1 PUSH2 0x2E98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xE9D PUSH2 0xE97 PUSH2 0x1C1F JUMP JUMPDEST DUP3 PUSH2 0x1FE8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xEEF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE6 SWAP1 PUSH2 0x30DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xF3F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF36 SWAP1 PUSH2 0x31AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF70 PUSH32 0x7D800F56A05ADCB6245DF540492A560D0E668AAC15EE6C7DD40668064913DA33 PUSH2 0xF6B PUSH2 0x1C1F JUMP JUMPDEST PUSH2 0x1390 JUMP JUMPDEST PUSH2 0xFAF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA6 SWAP1 PUSH2 0x3217 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD DUP2 PUSH2 0xFBB PUSH2 0x9EC JUMP JUMPDEST PUSH2 0xFC5 SWAP2 SWAP1 PUSH2 0x3262 JUMP JUMPDEST GT ISZERO PUSH2 0x1006 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFD SWAP1 PUSH2 0x32DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xE98063832B4FF0356868961B75F7F49B096B14EA066C9725301AD197F2F63147 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1037 SWAP3 SWAP2 SWAP1 PUSH2 0x32FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1049 DUP3 DUP3 PUSH2 0x2067 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1055 PUSH2 0x1C38 JUMP JUMPDEST PUSH2 0x107F PUSH32 0x508F8F8BE8F5DBCB88F4F4500430B8B3684C471ED936F31FEA912C78AD46A6B9 CALLER PUSH2 0x1390 JUMP JUMPDEST PUSH2 0x10BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B5 SWAP1 PUSH2 0x2FD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1101 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH32 0x3B1C0368C81E47D03164182DC6F9FCF4F5E4B3BD9462D74960D729F73138CE36 DUP3 NUMBER DUP4 PUSH1 0x40 MLOAD PUSH2 0x1135 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3344 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1145 PUSH2 0x1D77 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0xAE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3 DUP2 JUMP JUMPDEST PUSH32 0x9EDFAD36E7D4D9DA54B4F78F22BF97CB5B58BB7998294A4288DA41C15C647C45 DUP2 JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH32 0xC8A3BEFA5973FF6E159AFC769978D92F26BAE29C51A73D11C9112A05B68D25E6 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x125B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1252 SWAP1 PUSH2 0x30DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x128C PUSH32 0xC8A3BEFA5973FF6E159AFC769978D92F26BAE29C51A73D11C9112A05B68D25E6 PUSH2 0x1287 PUSH2 0x1C1F JUMP JUMPDEST PUSH2 0x1390 JUMP JUMPDEST PUSH2 0x12CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C2 SWAP1 PUSH2 0x33C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xE419CE2AAB145A1FEAF5893BB6A9478F9282415BBD81C76D5CFFF2D4F13431DD DUP3 DUP3 PUSH2 0x12F6 PUSH2 0x1C1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1305 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x33E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1317 DUP3 DUP3 PUSH2 0x1FE8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x7D800F56A05ADCB6245DF540492A560D0E668AAC15EE6C7DD40668064913DA33 DUP2 JUMP JUMPDEST PUSH32 0x508F8F8BE8F5DBCB88F4F4500430B8B3684C471ED936F31FEA912C78AD46A6B9 DUP2 JUMP JUMPDEST PUSH32 0x8C66330D9D4F6ABA064F25EF2A307366EA6D917616F44C075AA60FA15E5CB1CB DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1416 SWAP1 PUSH2 0x2E00 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1442 SWAP1 PUSH2 0x2E00 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x148D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1464 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x148D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1470 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x14E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14DD SWAP1 PUSH2 0x30DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1536 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x152D SWAP1 PUSH2 0x3460 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1567 PUSH32 0x8C66330D9D4F6ABA064F25EF2A307366EA6D917616F44C075AA60FA15E5CB1CB PUSH2 0x1562 PUSH2 0x1C1F JUMP JUMPDEST PUSH2 0x1390 JUMP JUMPDEST PUSH2 0x15A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x159D SWAP1 PUSH2 0x34C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD DUP2 PUSH2 0x15B2 PUSH2 0x9EC JUMP JUMPDEST PUSH2 0x15BC SWAP2 SWAP1 PUSH2 0x3262 JUMP JUMPDEST GT ISZERO PUSH2 0x15FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15F4 SWAP1 PUSH2 0x32DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x772F66A00A405709C30E7F18FEADCC8F123B20C09C7260165D3EEC36C9F21372 DUP2 PUSH1 0x40 MLOAD PUSH2 0x162C SWAP2 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1645 PUSH2 0x163F PUSH2 0x1C1F JUMP JUMPDEST DUP3 PUSH2 0x2067 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x1657 PUSH2 0x1C38 JUMP JUMPDEST PUSH0 PUSH2 0x1660 PUSH2 0x1C1F JUMP JUMPDEST SWAP1 POP PUSH1 0xB PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x16C1 JUMPI PUSH2 0x16BC DUP2 DUP6 DUP6 PUSH2 0x1C87 JUMP JUMPDEST PUSH2 0x16FB JUMP JUMPDEST PUSH2 0x16CC DUP2 DUP6 DUP6 PUSH2 0x1C87 JUMP JUMPDEST PUSH2 0x16FA DUP2 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x9 SLOAD PUSH2 0x1C87 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1708 PUSH2 0x1D77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x175D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1754 SWAP1 PUSH2 0x30DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x178E PUSH32 0xEA4DEFABEB90FA1E79F929D6C8D482FEE8A115926A592B79634D39A67CCE3B62 PUSH2 0x1789 PUSH2 0x1C1F JUMP JUMPDEST PUSH2 0x1390 JUMP JUMPDEST PUSH2 0x17CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17C4 SWAP1 PUSH2 0x3530 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17D5 PUSH2 0x9EC JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1817 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x180E SWAP1 PUSH2 0x3598 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH32 0xA11CBDEB4D62442FAE7C8EC6286585B17C47ACB7B17BBCAB1BEADCE84BEFA300 DUP2 PUSH2 0x1848 PUSH2 0x1C1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1856 SWAP3 SWAP2 SWAP1 PUSH2 0x2E98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x18A0 DUP3 PUSH2 0xAB6 JUMP JUMPDEST PUSH2 0x18A9 DUP2 PUSH2 0x1D81 JUMP JUMPDEST PUSH2 0x18B3 DUP4 DUP4 PUSH2 0x1E7F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x196C PUSH32 0xAE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3 PUSH2 0x1967 PUSH2 0x1C1F JUMP JUMPDEST PUSH2 0x1390 JUMP JUMPDEST PUSH2 0x19AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19A2 SWAP1 PUSH2 0x2E7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1A10 JUMPI PUSH32 0x5668502CA8E7B393C09D1DAC964CA45A27870A78D7BA212B7A189450897CA05F NUMBER PUSH2 0x19F5 PUSH2 0x1C1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A03 SWAP3 SWAP2 SWAP1 PUSH2 0x2E98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1A51 JUMP JUMPDEST PUSH32 0x98E05482FDB38DF5EB461FB932FA6E1AF90A3569939CE5A8D92D699B102D6402 NUMBER PUSH2 0x1A3A PUSH2 0x1C1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A48 SWAP3 SWAP2 SWAP1 PUSH2 0x2E98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH32 0xEA4DEFABEB90FA1E79F929D6C8D482FEE8A115926A592B79634D39A67CCE3B62 DUP2 JUMP JUMPDEST PUSH2 0x1AA9 PUSH32 0xAE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3 PUSH2 0x1AA4 PUSH2 0x1C1F JUMP JUMPDEST PUSH2 0x1390 JUMP JUMPDEST PUSH2 0x1AE8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ADF SWAP1 PUSH2 0x2F09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1B4D JUMPI PUSH32 0x218E25F0A7435729F5A66AAE50A9ED0084535A0080300C1C2E8366D8DF7136ED NUMBER PUSH2 0x1B32 PUSH2 0x1C1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B40 SWAP3 SWAP2 SWAP1 PUSH2 0x2E98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1B8E JUMP JUMPDEST PUSH32 0x41606E1DCEE38320F9EDBFCD642AEAA81BB2140C705DE9D4A7814024A1E9A314 NUMBER PUSH2 0x1B77 PUSH2 0x1C1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B85 SWAP3 SWAP2 SWAP1 PUSH2 0x2E98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1C33 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x20E6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x1C7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C74 SWAP1 PUSH2 0x3600 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CF7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CEE SWAP2 SWAP1 PUSH2 0x2DBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D67 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D5E SWAP2 SWAP1 PUSH2 0x2DBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D72 DUP4 DUP4 DUP4 PUSH2 0x22B5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1D92 DUP2 PUSH2 0x1D8D PUSH2 0x1C1F JUMP JUMPDEST PUSH2 0x2350 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1DA0 DUP4 DUP4 PUSH2 0x1390 JUMP JUMPDEST PUSH2 0x1E75 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1E12 PUSH2 0x1C1F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1E79 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E8A DUP4 DUP4 PUSH2 0x1390 JUMP JUMPDEST ISZERO PUSH2 0x1F5F JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1EFC PUSH2 0x1C1F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1F63 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FE3 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1F9C SWAP3 SWAP2 SWAP1 PUSH2 0x32FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x23A1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2058 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x204F SWAP2 SWAP1 PUSH2 0x2DBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2063 DUP3 PUSH0 DUP4 PUSH2 0x22B5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x20D7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20CE SWAP2 SWAP1 PUSH2 0x2DBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x20E2 PUSH0 DUP4 DUP4 PUSH2 0x22B5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2156 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x214D SWAP2 SWAP1 PUSH2 0x2DBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x21C6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21BD SWAP2 SWAP1 PUSH2 0x2DBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x22AF JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x22A6 SWAP2 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2340 JUMPI PUSH1 0x7 SLOAD DUP2 PUSH2 0x22F4 PUSH2 0x9EC JUMP JUMPDEST PUSH2 0x22FE SWAP2 SWAP1 PUSH2 0x3262 JUMP JUMPDEST GT ISZERO PUSH2 0x233F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2336 SWAP1 PUSH2 0x32DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH2 0x234B DUP4 DUP4 DUP4 PUSH2 0x2436 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x235A DUP3 DUP3 PUSH2 0x1390 JUMP JUMPDEST PUSH2 0x239D JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2394 SWAP3 SWAP2 SWAP1 PUSH2 0x361E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x23CB DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x264F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x23EF JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x23ED SWAP2 SWAP1 PUSH2 0x3659 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x2431 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2428 SWAP2 SWAP1 PUSH2 0x2DBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2486 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x247A SWAP2 SWAP1 PUSH2 0x3262 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2554 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x250F JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2506 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x259B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x25E5 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x2642 SWAP2 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x265C DUP4 DUP4 PUSH0 PUSH2 0x2664 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x26AB JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26A2 SWAP2 SWAP1 PUSH2 0x2DBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x26D3 SWAP2 SWAP1 PUSH2 0x36FD JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x270D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2712 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2722 DUP7 DUP4 DUP4 PUSH2 0x272D JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x2742 JUMPI PUSH2 0x273D DUP3 PUSH2 0x27BA JUMP JUMPDEST PUSH2 0x27B2 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x2768 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x27AA JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27A1 SWAP2 SWAP1 PUSH2 0x2DBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x27B3 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x27CC JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2836 DUP2 PUSH2 0x2802 JUMP JUMPDEST DUP2 EQ PUSH2 0x2840 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2851 DUP2 PUSH2 0x282D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x286C JUMPI PUSH2 0x286B PUSH2 0x27FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2879 DUP5 DUP3 DUP6 ADD PUSH2 0x2843 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2896 DUP2 PUSH2 0x2882 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x28AF PUSH0 DUP4 ADD DUP5 PUSH2 0x288D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x28F7 DUP3 PUSH2 0x28B5 JUMP JUMPDEST PUSH2 0x2901 DUP2 DUP6 PUSH2 0x28BF JUMP JUMPDEST SWAP4 POP PUSH2 0x2911 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x28CF JUMP JUMPDEST PUSH2 0x291A DUP2 PUSH2 0x28DD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x293D DUP2 DUP5 PUSH2 0x28ED JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x296E DUP3 PUSH2 0x2945 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x297E DUP2 PUSH2 0x2964 JUMP JUMPDEST DUP2 EQ PUSH2 0x2988 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2999 DUP2 PUSH2 0x2975 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29B1 DUP2 PUSH2 0x299F JUMP JUMPDEST DUP2 EQ PUSH2 0x29BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x29CC DUP2 PUSH2 0x29A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29E8 JUMPI PUSH2 0x29E7 PUSH2 0x27FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x29F5 DUP6 DUP3 DUP7 ADD PUSH2 0x298B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2A06 DUP6 DUP3 DUP7 ADD PUSH2 0x29BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A19 DUP2 PUSH2 0x2882 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A23 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A34 DUP2 PUSH2 0x2A10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A4F JUMPI PUSH2 0x2A4E PUSH2 0x27FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2A5C DUP5 DUP3 DUP6 ADD PUSH2 0x2A26 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A6E DUP2 PUSH2 0x299F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A87 PUSH0 DUP4 ADD DUP5 PUSH2 0x2A65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2AA4 JUMPI PUSH2 0x2AA3 PUSH2 0x27FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2AB1 DUP7 DUP3 DUP8 ADD PUSH2 0x298B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2AC2 DUP7 DUP3 DUP8 ADD PUSH2 0x298B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2AD3 DUP7 DUP3 DUP8 ADD PUSH2 0x29BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AEF DUP2 PUSH2 0x2ADD JUMP JUMPDEST DUP2 EQ PUSH2 0x2AF9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B0A DUP2 PUSH2 0x2AE6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B25 JUMPI PUSH2 0x2B24 PUSH2 0x27FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B32 DUP5 DUP3 DUP6 ADD PUSH2 0x2AFC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B44 DUP2 PUSH2 0x2ADD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B5D PUSH0 DUP4 ADD DUP5 PUSH2 0x2B3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B79 JUMPI PUSH2 0x2B78 PUSH2 0x27FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B86 DUP6 DUP3 DUP7 ADD PUSH2 0x2AFC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2B97 DUP6 DUP3 DUP7 ADD PUSH2 0x298B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BB6 DUP2 PUSH2 0x2BA1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2BCF PUSH0 DUP4 ADD DUP5 PUSH2 0x2BAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2BEB JUMPI PUSH2 0x2BEA PUSH2 0x27FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2BF8 DUP6 DUP3 DUP7 ADD PUSH2 0x298B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2C09 DUP6 DUP3 DUP7 ADD PUSH2 0x2A26 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2C1D DUP3 PUSH2 0x2964 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C2D DUP2 PUSH2 0x2C13 JUMP JUMPDEST DUP2 EQ PUSH2 0x2C37 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2C48 DUP2 PUSH2 0x2C24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2C65 JUMPI PUSH2 0x2C64 PUSH2 0x27FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2C72 DUP7 DUP3 DUP8 ADD PUSH2 0x2C3A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2C83 DUP7 DUP3 DUP8 ADD PUSH2 0x298B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2C94 DUP7 DUP3 DUP8 ADD PUSH2 0x29BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CB3 JUMPI PUSH2 0x2CB2 PUSH2 0x27FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2CC0 DUP5 DUP3 DUP6 ADD PUSH2 0x29BE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2CD3 DUP3 PUSH2 0x2945 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CE3 DUP2 PUSH2 0x2CC9 JUMP JUMPDEST DUP2 EQ PUSH2 0x2CED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2CFE DUP2 PUSH2 0x2CDA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D1A JUMPI PUSH2 0x2D19 PUSH2 0x27FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2D27 DUP6 DUP3 DUP7 ADD PUSH2 0x2CF0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2D38 DUP6 DUP3 DUP7 ADD PUSH2 0x29BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D57 JUMPI PUSH2 0x2D56 PUSH2 0x27FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2D64 DUP5 DUP3 DUP6 ADD PUSH2 0x298B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D83 JUMPI PUSH2 0x2D82 PUSH2 0x27FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2D90 DUP6 DUP3 DUP7 ADD PUSH2 0x298B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2DA1 DUP6 DUP3 DUP7 ADD PUSH2 0x298B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DB4 DUP2 PUSH2 0x2964 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2DCD PUSH0 DUP4 ADD DUP5 PUSH2 0x2DAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2E17 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2E2A JUMPI PUSH2 0x2E29 PUSH2 0x2DD3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6E74726163743A204E6565642041646D696E000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E64 PUSH1 0x14 DUP4 PUSH2 0x28BF JUMP JUMPDEST SWAP2 POP PUSH2 0x2E6F DUP3 PUSH2 0x2E30 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2E91 DUP2 PUSH2 0x2E58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2EAB PUSH0 DUP4 ADD DUP6 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0x2EB8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2DAB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6565642041646D696E00000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2EF3 PUSH1 0xA DUP4 PUSH2 0x28BF JUMP JUMPDEST SWAP2 POP PUSH2 0x2EFE DUP3 PUSH2 0x2EBF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F20 DUP2 PUSH2 0x2EE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2F5B PUSH1 0xF DUP4 PUSH2 0x28BF JUMP JUMPDEST SWAP2 POP PUSH2 0x2F66 DUP3 PUSH2 0x2F27 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F88 DUP2 PUSH2 0x2F4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E65656420524553435545000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2FC3 PUSH1 0xB DUP4 PUSH2 0x28BF JUMP JUMPDEST SWAP2 POP PUSH2 0x2FCE DUP3 PUSH2 0x2F8F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2FF0 DUP2 PUSH2 0x2FB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x301A PUSH2 0x3015 PUSH2 0x3010 DUP5 PUSH2 0x2945 JUMP JUMPDEST PUSH2 0x2FF7 JUMP JUMPDEST PUSH2 0x2945 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x302B DUP3 PUSH2 0x3000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x303C DUP3 PUSH2 0x3021 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x304C DUP2 PUSH2 0x3032 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3065 PUSH0 DUP4 ADD DUP8 PUSH2 0x3043 JUMP JUMPDEST PUSH2 0x3072 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0x307F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2DAB JUMP JUMPDEST PUSH2 0x308C PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2A65 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x436F6E74726163743A20436F6E74726163742069732050617573656400000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x30C9 PUSH1 0x1C DUP4 PUSH2 0x28BF JUMP JUMPDEST SWAP2 POP PUSH2 0x30D4 DUP3 PUSH2 0x3095 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x30F6 DUP2 PUSH2 0x30BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6E74726163743A204E656564204275726E00000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3131 PUSH1 0x13 DUP4 PUSH2 0x28BF JUMP JUMPDEST SWAP2 POP PUSH2 0x313C DUP3 PUSH2 0x30FD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x315E DUP2 PUSH2 0x3125 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D696E74696E6720746F2064697361626C656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3199 PUSH1 0x13 DUP4 PUSH2 0x28BF JUMP JUMPDEST SWAP2 POP PUSH2 0x31A4 DUP3 PUSH2 0x3165 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x31C6 DUP2 PUSH2 0x318D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6E74726163743A204E656564204D696E746F000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3201 PUSH1 0x14 DUP4 PUSH2 0x28BF JUMP JUMPDEST SWAP2 POP PUSH2 0x320C DUP3 PUSH2 0x31CD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x322E DUP2 PUSH2 0x31F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x326C DUP3 PUSH2 0x299F JUMP JUMPDEST SWAP2 POP PUSH2 0x3277 DUP4 PUSH2 0x299F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x328F JUMPI PUSH2 0x328E PUSH2 0x3235 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6E74726163743A20537570706C7920436170206578636565646564000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x32C9 PUSH1 0x1D DUP4 PUSH2 0x28BF JUMP JUMPDEST SWAP2 POP PUSH2 0x32D4 DUP3 PUSH2 0x3295 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x32F6 DUP2 PUSH2 0x32BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3310 PUSH0 DUP4 ADD DUP6 PUSH2 0x2DAB JUMP JUMPDEST PUSH2 0x331D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2A65 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x332E DUP3 PUSH2 0x3021 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x333E DUP2 PUSH2 0x3324 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3357 PUSH0 DUP4 ADD DUP7 PUSH2 0x3335 JUMP JUMPDEST PUSH2 0x3364 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0x3371 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2A65 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x436F6E74726163743A204E656564204275726E66726F6D000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x33AD PUSH1 0x17 DUP4 PUSH2 0x28BF JUMP JUMPDEST SWAP2 POP PUSH2 0x33B8 DUP3 PUSH2 0x3379 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x33DA DUP2 PUSH2 0x33A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x33F4 PUSH0 DUP4 ADD DUP7 PUSH2 0x2DAB JUMP JUMPDEST PUSH2 0x3401 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0x340E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2DAB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4D696E74696E672064697361626C656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x344A PUSH1 0x10 DUP4 PUSH2 0x28BF JUMP JUMPDEST SWAP2 POP PUSH2 0x3455 DUP3 PUSH2 0x3416 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3477 DUP2 PUSH2 0x343E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6E74726163743A204E656564204D696E7400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x34B2 PUSH1 0x13 DUP4 PUSH2 0x28BF JUMP JUMPDEST SWAP2 POP PUSH2 0x34BD DUP3 PUSH2 0x347E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x34DF DUP2 PUSH2 0x34A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E65656420537570706C79000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x351A PUSH1 0xB DUP4 PUSH2 0x28BF JUMP JUMPDEST SWAP2 POP PUSH2 0x3525 DUP3 PUSH2 0x34E6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3547 DUP2 PUSH2 0x350E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6E74726163743A20537570706C792043617020746F6F206C6F7700000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3582 PUSH1 0x1C DUP4 PUSH2 0x28BF JUMP JUMPDEST SWAP2 POP PUSH2 0x358D DUP3 PUSH2 0x354E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x35AF DUP2 PUSH2 0x3576 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x35EA PUSH1 0x1F DUP4 PUSH2 0x28BF JUMP JUMPDEST SWAP2 POP PUSH2 0x35F5 DUP3 PUSH2 0x35B6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3617 DUP2 PUSH2 0x35DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3631 PUSH0 DUP4 ADD DUP6 PUSH2 0x2DAB JUMP JUMPDEST PUSH2 0x363E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2B3B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x3653 DUP2 PUSH2 0x2A10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x366E JUMPI PUSH2 0x366D PUSH2 0x27FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x367B DUP5 DUP3 DUP6 ADD PUSH2 0x3645 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3697 PUSH0 DUP4 ADD DUP7 PUSH2 0x2DAB JUMP JUMPDEST PUSH2 0x36A4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0x36B1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2A65 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x36D7 DUP3 PUSH2 0x36B9 JUMP JUMPDEST PUSH2 0x36E1 DUP2 DUP6 PUSH2 0x36C3 JUMP JUMPDEST SWAP4 POP PUSH2 0x36F1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x28CF JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3708 DUP3 DUP5 PUSH2 0x36CD JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 0xB6 PUSH21 0xCC755C7DE8AE8962D81BC7E5DE88EC0D20390E5865 0xB0 0xDB DUP11 DUP3 DUP10 0xF8 0xC0 0xCD PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "740:11682:13:-:0;;;1467:11;1447:31;;2947:639;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1896:113:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1716:1:3;1821:7;:22;;;;3014:14:13::1;3007:4;:21;;;;3096:5;3081:12;;:20;;;;;;;;;;;;;;;;;;3156:5;3139:14;;:22;;;;;;;;;;;;;;;;;;3229:6;3221:5;;:14;;;;;;;;;;;;;;;;;;3245:44;2232:4:0;3256:18:13::0;::::1;3276:12;:10;;;:12;;:::i;:::-;3245:10;;;:44;;:::i;:::-;;3380:32;1230:19;3399:12;:10;;;:12;;:::i;:::-;3380:10;;;:32;;:::i;:::-;;3422:31;933:18;3440:12;:10;;;:12;;:::i;:::-;3422:10;;;:31;;:::i;:::-;;3463;1049:18;3481:12;:10;;;:12;;:::i;:::-;3463:10;;;:31;;:::i;:::-;;3504:34;3510:12;:10;;;:12;;:::i;:::-;3524:13;3504:5;;;:34;;:::i;:::-;2947:639:::0;740:11682;;656:96:10;709:7;735:10;728:17;;656:96;:::o;6179:316:0:-;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;7721:208:4:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;8978:264:13:-;9093:1;9077:18;;:4;:18;;;9073:122;;9146:4;;9136:6;9120:13;:11;;;:13;;:::i;:::-;:22;;;;:::i;:::-;:30;;9112:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;9073:122;9204:31;9218:4;9224:2;9228:6;9204:13;;;:31;;:::i;:::-;8978:264;;;:::o;3144:97:4:-;3196:7;3222:12;;3215:19;;3144:97;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;88:117:14:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;6781:180::-;6829:77;6826:1;6819:88;6926:4;6923:1;6916:15;6950:4;6947:1;6940:15;6967:191;7007:3;7026:20;7044:1;7026:20;:::i;:::-;7021:25;;7060:20;7078:1;7060:20;:::i;:::-;7055:25;;7103:1;7100;7096:9;7089:16;;7124:3;7121:1;7118:10;7115:36;;;7131:18;;:::i;:::-;7115:36;6967:191;;;;:::o;7164:169::-;7248:11;7282:6;7277:3;7270:19;7322:4;7317:3;7313:14;7298:29;;7164:169;;;;:::o;7339:179::-;7479:31;7475:1;7467:6;7463:14;7456:55;7339:179;:::o;7524:366::-;7666:3;7687:67;7751:2;7746:3;7687:67;:::i;:::-;7680:74;;7763:93;7852:3;7763:93;:::i;:::-;7881:2;7876:3;7872:12;7865:19;;7524:366;;;:::o;7896:419::-;8062:4;8100:2;8089:9;8085:18;8077:26;;8149:9;8143:4;8139:20;8135:1;8124:9;8120:17;8113:47;8177:131;8303:4;8177:131;:::i;:::-;8169:139;;7896:419;;;:::o;8321:118::-;8408:24;8426:5;8408:24;:::i;:::-;8403:3;8396:37;8321:118;;:::o;8445:442::-;8594:4;8632:2;8621:9;8617:18;8609:26;;8645:71;8713:1;8702:9;8698:17;8689:6;8645:71;:::i;:::-;8726:72;8794:2;8783:9;8779:18;8770:6;8726:72;:::i;:::-;8808;8876:2;8865:9;8861:18;8852:6;8808:72;:::i;:::-;8445:442;;;;;;:::o;8893:222::-;8986:4;9024:2;9013:9;9009:18;9001:26;;9037:71;9105:1;9094:9;9090:17;9081:6;9037:71;:::i;:::-;8893:222;;;;:::o;740:11682:13:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": 5704,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_ADMIN_1897": {
									"entryPoint": 4425,
									"id": 1897,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_BURNFROM_1887": {
									"entryPoint": 4515,
									"id": 1887,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_BURN_1882": {
									"entryPoint": 4461,
									"id": 1882,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_MINTTO_1877": {
									"entryPoint": 4891,
									"id": 1877,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_MINT_1872": {
									"entryPoint": 4963,
									"id": 1872,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_RESCUE_1902": {
									"entryPoint": 4927,
									"id": 1902,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_SUPPLY_1892": {
									"entryPoint": 6740,
									"id": 1892,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1046": {
									"entryPoint": 8422,
									"id": 1046,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_986": {
									"entryPoint": 7206,
									"id": 986,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_968": {
									"entryPoint": 8168,
									"id": 968,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_callOptionalReturn_1475": {
									"entryPoint": 9121,
									"id": 1475,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 9040,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 7553,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 7573,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_935": {
									"entryPoint": 8295,
									"id": 935,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1790": {
									"entryPoint": 7199,
									"id": 1790,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_568": {
									"entryPoint": 7543,
									"id": 568,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_560": {
									"entryPoint": 7224,
									"id": 560,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_1777": {
									"entryPoint": 10170,
									"id": 1777,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_revokeRole_294": {
									"entryPoint": 7807,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_transfer_825": {
									"entryPoint": 7303,
									"id": 825,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_2435": {
									"entryPoint": 8885,
									"id": 2435,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_902": {
									"entryPoint": 9270,
									"id": 902,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_722": {
									"entryPoint": 6329,
									"id": 722,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_746": {
									"entryPoint": 2226,
									"id": 746,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_681": {
									"entryPoint": 4551,
									"id": 681,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_2352": {
									"entryPoint": 4620,
									"id": 2352,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_2320": {
									"entryPoint": 3469,
									"id": 2320,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_659": {
									"entryPoint": 2805,
									"id": 659,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@disableMintTo_2175": {
									"entryPoint": 6776,
									"id": 2175,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@disableMint_2137": {
									"entryPoint": 6459,
									"id": 2137,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@ethRescue_2633": {
									"entryPoint": 4173,
									"id": 2633,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@functionCallWithValue_1645": {
									"entryPoint": 9828,
									"id": 1645,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_1599": {
									"entryPoint": 9807,
									"id": 1599,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getRoleAdmin_128": {
									"entryPoint": 2742,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_147": {
									"entryPoint": 2771,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 5008,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mintDisabled_1913": {
									"entryPoint": 5108,
									"id": 1913,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mintToDisabled_1915": {
									"entryPoint": 6276,
									"id": 1915,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mintTo_2250": {
									"entryPoint": 3744,
									"id": 2250,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@mint_2290": {
									"entryPoint": 5271,
									"id": 2290,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@moveERC20_2600": {
									"entryPoint": 3239,
									"id": 2600,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@name_641": {
									"entryPoint": 2082,
									"id": 641,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paused_1911": {
									"entryPoint": 4497,
									"id": 1911,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceRole_189": {
									"entryPoint": 2813,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 6295,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransfer_1285": {
									"entryPoint": 8041,
									"id": 1285,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setPaused_2099": {
									"entryPoint": 2260,
									"id": 2099,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setSupplyCap_2388": {
									"entryPoint": 5902,
									"id": 2388,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setWhitelistAddress_2561": {
									"entryPoint": 2936,
									"id": 2561,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supplyCap_2397": {
									"entryPoint": 4999,
									"id": 2397,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@supportsInterface_1831": {
									"entryPoint": 7094,
									"id": 1831,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_62": {
									"entryPoint": 1961,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_650": {
									"entryPoint": 5127,
									"id": 650,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_668": {
									"entryPoint": 2540,
									"id": 668,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_2482": {
									"entryPoint": 2549,
									"id": 2482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_2527": {
									"entryPoint": 5710,
									"id": 2527,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@txFee_1909": {
									"entryPoint": 6270,
									"id": 1909,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@vault_1906": {
									"entryPoint": 7057,
									"id": 1906,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1737": {
									"entryPoint": 10029,
									"id": 1737,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@whitelistedAddress_2004": {
									"entryPoint": 6241,
									"id": 2004,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 10635,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 11504,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 10790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 13893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 11004,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 10307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$1173": {
									"entryPoint": 11322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 10686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 11586,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payablet_uint256": {
									"entryPoint": 11524,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 11629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 10893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 11221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 10706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 10810,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 13913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 11024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 11107,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 10327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$1173t_addresst_uint256": {
									"entryPoint": 11342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 11422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_fromStack": {
									"entryPoint": 13109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 11691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 10381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 11067,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 14029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$1173_to_t_address_fromStack": {
									"entryPoint": 12355,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0f2142f4e404960c39c0eef9aa83c0b4e0c80eb3bb63665846eabb25d9855d04_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_11191c3e11b0e660fa4fa7e62f4d364ea97ce393c4c6616dd08d6862e6796e25_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_120df7b0ebb4e0f457cdf31a88cea9b4d2e1fd0ec041e7228fb01895c54a5b9f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_14cda221cd50cc4488a50638b29b8104950f854aa06a190e98dcd3542f450149_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_77e086eba60b2e28f8cf4f0f10149625654a071ad569481f91828ddb6b36141b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_961af01899b104abd9a52cd42f7f5de7ebb564a1e56e1cf3c3fda073f51fffa0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9dc314731a2c8965068716b51a74d383c5485fe34630c16f5621cb0575192124_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b001b48f6c58139e2cae9da1391afe3c88f4951fb872771eda2713f4f3a0a6c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ba2e9cd8d3fa598fea6366ddadf891a9cbec04b837294279cc52e9e496f33766_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12685,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bb63c1d83da1ab52c7d8fe2a042a1198f2d359766d8d53fcde4a52b8346f6c66_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11864,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bd61e59b58c0d60bfbdd7c0883e85825d806ae73957bff921021d8f621b56a1e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12789,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c6d8abb0082a2eadfce7975cbc43efb0f6de7a832c688abfb0c618284167ffc2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 10853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 11181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 14077,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 11706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 13124,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 13854,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 13053,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 13281,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 13956,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 10396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 11082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$1173_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 12370,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10533,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0f2142f4e404960c39c0eef9aa83c0b4e0c80eb3bb63665846eabb25d9855d04__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12615,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_11191c3e11b0e660fa4fa7e62f4d364ea97ce393c4c6616dd08d6862e6796e25__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_120df7b0ebb4e0f457cdf31a88cea9b4d2e1fd0ec041e7228fb01895c54a5b9f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12145,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_14cda221cd50cc4488a50638b29b8104950f854aa06a190e98dcd3542f450149__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_77e086eba60b2e28f8cf4f0f10149625654a071ad569481f91828ddb6b36141b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13720,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_961af01899b104abd9a52cd42f7f5de7ebb564a1e56e1cf3c3fda073f51fffa0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9dc314731a2c8965068716b51a74d383c5485fe34630c16f5621cb0575192124__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13408,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b001b48f6c58139e2cae9da1391afe3c88f4951fb872771eda2713f4f3a0a6c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12041,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ba2e9cd8d3fa598fea6366ddadf891a9cbec04b837294279cc52e9e496f33766__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bb63c1d83da1ab52c7d8fe2a042a1198f2d359766d8d53fcde4a52b8346f6c66__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bd61e59b58c0d60bfbdd7c0883e85825d806ae73957bff921021d8f621b56a1e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12823,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c6d8abb0082a2eadfce7975cbc43efb0f6de7a832c688abfb0c618284167ffc2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12249,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 10868,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 11928,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 11196,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 14009,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 10421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 14019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 10431,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 12898,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 10596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 11465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 10370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 10973,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 10242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$1173": {
									"entryPoint": 11283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 10565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 10655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 11169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_address_payable_to_t_address": {
									"entryPoint": 13092,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$1173_to_t_address": {
									"entryPoint": 12338,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 12321,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 12288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 10447,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 11776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 12279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 12853,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 11731,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 10238,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 10461,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79": {
									"entryPoint": 12949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0f2142f4e404960c39c0eef9aa83c0b4e0c80eb3bb63665846eabb25d9855d04": {
									"entryPoint": 12541,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_11191c3e11b0e660fa4fa7e62f4d364ea97ce393c4c6616dd08d6862e6796e25": {
									"entryPoint": 13542,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_120df7b0ebb4e0f457cdf31a88cea9b4d2e1fd0ec041e7228fb01895c54a5b9f": {
									"entryPoint": 13438,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226": {
									"entryPoint": 12071,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_14cda221cd50cc4488a50638b29b8104950f854aa06a190e98dcd3542f450149": {
									"entryPoint": 12437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_77e086eba60b2e28f8cf4f0f10149625654a071ad569481f91828ddb6b36141b": {
									"entryPoint": 13646,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_961af01899b104abd9a52cd42f7f5de7ebb564a1e56e1cf3c3fda073f51fffa0": {
									"entryPoint": 13177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9dc314731a2c8965068716b51a74d383c5485fe34630c16f5621cb0575192124": {
									"entryPoint": 13334,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b001b48f6c58139e2cae9da1391afe3c88f4951fb872771eda2713f4f3a0a6c2": {
									"entryPoint": 11967,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ba2e9cd8d3fa598fea6366ddadf891a9cbec04b837294279cc52e9e496f33766": {
									"entryPoint": 12645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bb63c1d83da1ab52c7d8fe2a042a1198f2d359766d8d53fcde4a52b8346f6c66": {
									"entryPoint": 11824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bd61e59b58c0d60bfbdd7c0883e85825d806ae73957bff921021d8f621b56a1e": {
									"entryPoint": 12749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c6d8abb0082a2eadfce7975cbc43efb0f6de7a832c688abfb0c618284167ffc2": {
									"entryPoint": 12175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 13750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 10613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 11482,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 10768,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 10982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 10285,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$1173": {
									"entryPoint": 11300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 10664,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:32430:14",
										"nodeType": "YulBlock",
										"src": "0:32430:14",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:14",
													"nodeType": "YulBlock",
													"src": "47:35:14",
													"statements": [
														{
															"nativeSrc": "57:19:14",
															"nodeType": "YulAssignment",
															"src": "57:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:14",
																		"nodeType": "YulLiteral",
																		"src": "73:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:14"
																},
																"nativeSrc": "67:9:14",
																"nodeType": "YulFunctionCall",
																"src": "67:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:14",
														"nodeType": "YulTypedName",
														"src": "40:6:14",
														"type": ""
													}
												],
												"src": "7:75:14"
											},
											{
												"body": {
													"nativeSrc": "177:28:14",
													"nodeType": "YulBlock",
													"src": "177:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:14",
																		"nodeType": "YulLiteral",
																		"src": "194:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:14",
																		"nodeType": "YulLiteral",
																		"src": "197:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:14"
																},
																"nativeSrc": "187:12:14",
																"nodeType": "YulFunctionCall",
																"src": "187:12:14"
															},
															"nativeSrc": "187:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:14"
											},
											{
												"body": {
													"nativeSrc": "300:28:14",
													"nodeType": "YulBlock",
													"src": "300:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:14",
																		"nodeType": "YulLiteral",
																		"src": "317:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:14",
																		"nodeType": "YulLiteral",
																		"src": "320:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:14"
																},
																"nativeSrc": "310:12:14",
																"nodeType": "YulFunctionCall",
																"src": "310:12:14"
															},
															"nativeSrc": "310:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:14"
											},
											{
												"body": {
													"nativeSrc": "378:105:14",
													"nodeType": "YulBlock",
													"src": "378:105:14",
													"statements": [
														{
															"nativeSrc": "388:89:14",
															"nodeType": "YulAssignment",
															"src": "388:89:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:14",
																		"nodeType": "YulLiteral",
																		"src": "410:66:14",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:14"
																},
																"nativeSrc": "399:78:14",
																"nodeType": "YulFunctionCall",
																"src": "399:78:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:14",
														"nodeType": "YulTypedName",
														"src": "360:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:14",
														"nodeType": "YulTypedName",
														"src": "370:7:14",
														"type": ""
													}
												],
												"src": "334:149:14"
											},
											{
												"body": {
													"nativeSrc": "531:78:14",
													"nodeType": "YulBlock",
													"src": "531:78:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:14",
																"nodeType": "YulBlock",
																"src": "587:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:14",
																					"nodeType": "YulLiteral",
																					"src": "596:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:14",
																					"nodeType": "YulLiteral",
																					"src": "599:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:14"
																			},
																			"nativeSrc": "589:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:14"
																		},
																		"nativeSrc": "589:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:14",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:14"
																				},
																				"nativeSrc": "561:23:14",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:14"
																		},
																		"nativeSrc": "551:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:14"
																},
																"nativeSrc": "544:42:14",
																"nodeType": "YulFunctionCall",
																"src": "544:42:14"
															},
															"nativeSrc": "541:62:14",
															"nodeType": "YulIf",
															"src": "541:62:14"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:14",
														"nodeType": "YulTypedName",
														"src": "524:5:14",
														"type": ""
													}
												],
												"src": "489:120:14"
											},
											{
												"body": {
													"nativeSrc": "666:86:14",
													"nodeType": "YulBlock",
													"src": "666:86:14",
													"statements": [
														{
															"nativeSrc": "676:29:14",
															"nodeType": "YulAssignment",
															"src": "676:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:14"
																},
																"nativeSrc": "685:20:14",
																"nodeType": "YulFunctionCall",
																"src": "685:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:14",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:14"
																},
																"nativeSrc": "714:32:14",
																"nodeType": "YulFunctionCall",
																"src": "714:32:14"
															},
															"nativeSrc": "714:32:14",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:14"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:14",
														"nodeType": "YulTypedName",
														"src": "644:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:14",
														"nodeType": "YulTypedName",
														"src": "652:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:14",
														"nodeType": "YulTypedName",
														"src": "660:5:14",
														"type": ""
													}
												],
												"src": "615:137:14"
											},
											{
												"body": {
													"nativeSrc": "823:262:14",
													"nodeType": "YulBlock",
													"src": "823:262:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:14",
																"nodeType": "YulBlock",
																"src": "869:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:14"
																			},
																			"nativeSrc": "871:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:14"
																		},
																		"nativeSrc": "871:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:14"
																		},
																		"nativeSrc": "840:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:14",
																		"nodeType": "YulLiteral",
																		"src": "865:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:14"
																},
																"nativeSrc": "836:32:14",
																"nodeType": "YulFunctionCall",
																"src": "836:32:14"
															},
															"nativeSrc": "833:119:14",
															"nodeType": "YulIf",
															"src": "833:119:14"
														},
														{
															"nativeSrc": "962:116:14",
															"nodeType": "YulBlock",
															"src": "962:116:14",
															"statements": [
																{
																	"nativeSrc": "977:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:14",
																		"nodeType": "YulLiteral",
																		"src": "991:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:14",
																			"nodeType": "YulTypedName",
																			"src": "981:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:14",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:14"
																				},
																				"nativeSrc": "1036:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:14",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:14"
																		},
																		"nativeSrc": "1016:52:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:14",
														"nodeType": "YulTypedName",
														"src": "793:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:14",
														"nodeType": "YulTypedName",
														"src": "804:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:14",
														"nodeType": "YulTypedName",
														"src": "816:6:14",
														"type": ""
													}
												],
												"src": "758:327:14"
											},
											{
												"body": {
													"nativeSrc": "1133:48:14",
													"nodeType": "YulBlock",
													"src": "1133:48:14",
													"statements": [
														{
															"nativeSrc": "1143:32:14",
															"nodeType": "YulAssignment",
															"src": "1143:32:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:14"
																		},
																		"nativeSrc": "1161:13:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:14"
																},
																"nativeSrc": "1154:21:14",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:14",
														"nodeType": "YulTypedName",
														"src": "1115:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:14",
														"nodeType": "YulTypedName",
														"src": "1125:7:14",
														"type": ""
													}
												],
												"src": "1091:90:14"
											},
											{
												"body": {
													"nativeSrc": "1246:50:14",
													"nodeType": "YulBlock",
													"src": "1246:50:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:14",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:14"
																		},
																		"nativeSrc": "1268:21:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:14"
																},
																"nativeSrc": "1256:34:14",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:14"
															},
															"nativeSrc": "1256:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:14"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:14",
														"nodeType": "YulTypedName",
														"src": "1234:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:14",
														"nodeType": "YulTypedName",
														"src": "1241:3:14",
														"type": ""
													}
												],
												"src": "1187:109:14"
											},
											{
												"body": {
													"nativeSrc": "1394:118:14",
													"nodeType": "YulBlock",
													"src": "1394:118:14",
													"statements": [
														{
															"nativeSrc": "1404:26:14",
															"nodeType": "YulAssignment",
															"src": "1404:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:14"
																},
																"nativeSrc": "1412:18:14",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:14",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:14"
																		},
																		"nativeSrc": "1487:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:14",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:14"
																},
																"nativeSrc": "1440:65:14",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:14"
															},
															"nativeSrc": "1440:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:14",
														"nodeType": "YulTypedName",
														"src": "1366:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:14",
														"nodeType": "YulTypedName",
														"src": "1378:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:14",
														"nodeType": "YulTypedName",
														"src": "1389:4:14",
														"type": ""
													}
												],
												"src": "1302:210:14"
											},
											{
												"body": {
													"nativeSrc": "1577:40:14",
													"nodeType": "YulBlock",
													"src": "1577:40:14",
													"statements": [
														{
															"nativeSrc": "1588:22:14",
															"nodeType": "YulAssignment",
															"src": "1588:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:14"
																},
																"nativeSrc": "1598:12:14",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:14",
														"nodeType": "YulTypedName",
														"src": "1560:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:14",
														"nodeType": "YulTypedName",
														"src": "1570:6:14",
														"type": ""
													}
												],
												"src": "1518:99:14"
											},
											{
												"body": {
													"nativeSrc": "1719:73:14",
													"nodeType": "YulBlock",
													"src": "1719:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:14"
																},
																"nativeSrc": "1729:19:14",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:14"
															},
															"nativeSrc": "1729:19:14",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:14"
														},
														{
															"nativeSrc": "1757:29:14",
															"nodeType": "YulAssignment",
															"src": "1757:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:14",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:14"
																},
																"nativeSrc": "1772:14:14",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:14",
														"nodeType": "YulTypedName",
														"src": "1691:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:14",
														"nodeType": "YulTypedName",
														"src": "1696:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:14",
														"nodeType": "YulTypedName",
														"src": "1707:11:14",
														"type": ""
													}
												],
												"src": "1623:169:14"
											},
											{
												"body": {
													"nativeSrc": "1860:77:14",
													"nodeType": "YulBlock",
													"src": "1860:77:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1877:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:14"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1882:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1887:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:14"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1871:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1871:5:14"
																},
																"nativeSrc": "1871:23:14",
																"nodeType": "YulFunctionCall",
																"src": "1871:23:14"
															},
															"nativeSrc": "1871:23:14",
															"nodeType": "YulExpressionStatement",
															"src": "1871:23:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1914:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "1914:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1919:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1919:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:14"
																		},
																		"nativeSrc": "1910:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:16:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:14"
																},
																"nativeSrc": "1903:27:14",
																"nodeType": "YulFunctionCall",
																"src": "1903:27:14"
															},
															"nativeSrc": "1903:27:14",
															"nodeType": "YulExpressionStatement",
															"src": "1903:27:14"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:14",
														"nodeType": "YulTypedName",
														"src": "1842:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:14",
														"nodeType": "YulTypedName",
														"src": "1847:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:14",
														"nodeType": "YulTypedName",
														"src": "1852:6:14",
														"type": ""
													}
												],
												"src": "1798:139:14"
											},
											{
												"body": {
													"nativeSrc": "1991:54:14",
													"nodeType": "YulBlock",
													"src": "1991:54:14",
													"statements": [
														{
															"nativeSrc": "2001:38:14",
															"nodeType": "YulAssignment",
															"src": "2001:38:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2026:2:14",
																				"nodeType": "YulLiteral",
																				"src": "2026:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2015:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:14"
																		},
																		"nativeSrc": "2015:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:14:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2035:2:14",
																				"nodeType": "YulLiteral",
																				"src": "2035:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2031:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:14"
																		},
																		"nativeSrc": "2031:7:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2031:7:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2011:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:14"
																},
																"nativeSrc": "2011:28:14",
																"nodeType": "YulFunctionCall",
																"src": "2011:28:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2001:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:14"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1943:102:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1974:5:14",
														"nodeType": "YulTypedName",
														"src": "1974:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1984:6:14",
														"nodeType": "YulTypedName",
														"src": "1984:6:14",
														"type": ""
													}
												],
												"src": "1943:102:14"
											},
											{
												"body": {
													"nativeSrc": "2143:285:14",
													"nodeType": "YulBlock",
													"src": "2143:285:14",
													"statements": [
														{
															"nativeSrc": "2153:53:14",
															"nodeType": "YulVariableDeclaration",
															"src": "2153:53:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2200:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2200:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2167:32:14",
																	"nodeType": "YulIdentifier",
																	"src": "2167:32:14"
																},
																"nativeSrc": "2167:39:14",
																"nodeType": "YulFunctionCall",
																"src": "2167:39:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2157:6:14",
																	"nodeType": "YulTypedName",
																	"src": "2157:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2215:78:14",
															"nodeType": "YulAssignment",
															"src": "2215:78:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2281:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2286:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2286:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2222:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "2222:58:14"
																},
																"nativeSrc": "2222:71:14",
																"nodeType": "YulFunctionCall",
																"src": "2222:71:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2215:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2215:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2341:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:4:14",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2337:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:14"
																		},
																		"nativeSrc": "2337:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2355:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2360:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2302:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "2302:34:14"
																},
																"nativeSrc": "2302:65:14",
																"nodeType": "YulFunctionCall",
																"src": "2302:65:14"
															},
															"nativeSrc": "2302:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "2302:65:14"
														},
														{
															"nativeSrc": "2376:46:14",
															"nodeType": "YulAssignment",
															"src": "2376:46:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2387:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2414:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2392:21:14",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:14"
																		},
																		"nativeSrc": "2392:29:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2383:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:14"
																},
																"nativeSrc": "2383:39:14",
																"nodeType": "YulFunctionCall",
																"src": "2383:39:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2376:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2051:377:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2124:5:14",
														"nodeType": "YulTypedName",
														"src": "2124:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2131:3:14",
														"nodeType": "YulTypedName",
														"src": "2131:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2139:3:14",
														"nodeType": "YulTypedName",
														"src": "2139:3:14",
														"type": ""
													}
												],
												"src": "2051:377:14"
											},
											{
												"body": {
													"nativeSrc": "2552:195:14",
													"nodeType": "YulBlock",
													"src": "2552:195:14",
													"statements": [
														{
															"nativeSrc": "2562:26:14",
															"nodeType": "YulAssignment",
															"src": "2562:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2585:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2570:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2570:3:14"
																},
																"nativeSrc": "2570:18:14",
																"nodeType": "YulFunctionCall",
																"src": "2570:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2562:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "2562:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:14",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2605:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:14"
																		},
																		"nativeSrc": "2605:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2628:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "2628:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2634:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2624:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:14"
																		},
																		"nativeSrc": "2624:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2624:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2598:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:14"
																},
																"nativeSrc": "2598:47:14",
																"nodeType": "YulFunctionCall",
																"src": "2598:47:14"
															},
															"nativeSrc": "2598:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "2598:47:14"
														},
														{
															"nativeSrc": "2654:86:14",
															"nodeType": "YulAssignment",
															"src": "2654:86:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2726:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:14"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2735:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "2735:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2662:63:14",
																	"nodeType": "YulIdentifier",
																	"src": "2662:63:14"
																},
																"nativeSrc": "2662:78:14",
																"nodeType": "YulFunctionCall",
																"src": "2662:78:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2654:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2434:313:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2524:9:14",
														"nodeType": "YulTypedName",
														"src": "2524:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2536:6:14",
														"nodeType": "YulTypedName",
														"src": "2536:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2547:4:14",
														"nodeType": "YulTypedName",
														"src": "2547:4:14",
														"type": ""
													}
												],
												"src": "2434:313:14"
											},
											{
												"body": {
													"nativeSrc": "2798:81:14",
													"nodeType": "YulBlock",
													"src": "2798:81:14",
													"statements": [
														{
															"nativeSrc": "2808:65:14",
															"nodeType": "YulAssignment",
															"src": "2808:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2823:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2823:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2830:42:14",
																		"nodeType": "YulLiteral",
																		"src": "2830:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2819:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2819:3:14"
																},
																"nativeSrc": "2819:54:14",
																"nodeType": "YulFunctionCall",
																"src": "2819:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2808:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "2808:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2753:126:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2780:5:14",
														"nodeType": "YulTypedName",
														"src": "2780:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2790:7:14",
														"nodeType": "YulTypedName",
														"src": "2790:7:14",
														"type": ""
													}
												],
												"src": "2753:126:14"
											},
											{
												"body": {
													"nativeSrc": "2930:51:14",
													"nodeType": "YulBlock",
													"src": "2930:51:14",
													"statements": [
														{
															"nativeSrc": "2940:35:14",
															"nodeType": "YulAssignment",
															"src": "2940:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2969:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2969:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2951:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "2951:17:14"
																},
																"nativeSrc": "2951:24:14",
																"nodeType": "YulFunctionCall",
																"src": "2951:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2940:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "2940:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2885:96:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2912:5:14",
														"nodeType": "YulTypedName",
														"src": "2912:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2922:7:14",
														"nodeType": "YulTypedName",
														"src": "2922:7:14",
														"type": ""
													}
												],
												"src": "2885:96:14"
											},
											{
												"body": {
													"nativeSrc": "3030:79:14",
													"nodeType": "YulBlock",
													"src": "3030:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "3087:16:14",
																"nodeType": "YulBlock",
																"src": "3087:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3096:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3096:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3099:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3099:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3089:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3089:6:14"
																			},
																			"nativeSrc": "3089:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3089:12:14"
																		},
																		"nativeSrc": "3089:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3089:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3053:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "3053:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3078:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "3078:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3060:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "3060:17:14"
																				},
																				"nativeSrc": "3060:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3060:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3050:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "3050:2:14"
																		},
																		"nativeSrc": "3050:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3050:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3043:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3043:6:14"
																},
																"nativeSrc": "3043:43:14",
																"nodeType": "YulFunctionCall",
																"src": "3043:43:14"
															},
															"nativeSrc": "3040:63:14",
															"nodeType": "YulIf",
															"src": "3040:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2987:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3023:5:14",
														"nodeType": "YulTypedName",
														"src": "3023:5:14",
														"type": ""
													}
												],
												"src": "2987:122:14"
											},
											{
												"body": {
													"nativeSrc": "3167:87:14",
													"nodeType": "YulBlock",
													"src": "3167:87:14",
													"statements": [
														{
															"nativeSrc": "3177:29:14",
															"nodeType": "YulAssignment",
															"src": "3177:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3199:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3199:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3186:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "3186:12:14"
																},
																"nativeSrc": "3186:20:14",
																"nodeType": "YulFunctionCall",
																"src": "3186:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3177:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "3177:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3242:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "3242:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3215:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "3215:26:14"
																},
																"nativeSrc": "3215:33:14",
																"nodeType": "YulFunctionCall",
																"src": "3215:33:14"
															},
															"nativeSrc": "3215:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "3215:33:14"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3115:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3145:6:14",
														"nodeType": "YulTypedName",
														"src": "3145:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3153:3:14",
														"nodeType": "YulTypedName",
														"src": "3153:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3161:5:14",
														"nodeType": "YulTypedName",
														"src": "3161:5:14",
														"type": ""
													}
												],
												"src": "3115:139:14"
											},
											{
												"body": {
													"nativeSrc": "3305:32:14",
													"nodeType": "YulBlock",
													"src": "3305:32:14",
													"statements": [
														{
															"nativeSrc": "3315:16:14",
															"nodeType": "YulAssignment",
															"src": "3315:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "3326:5:14",
																"nodeType": "YulIdentifier",
																"src": "3326:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3315:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "3315:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3260:77:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3287:5:14",
														"nodeType": "YulTypedName",
														"src": "3287:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3297:7:14",
														"nodeType": "YulTypedName",
														"src": "3297:7:14",
														"type": ""
													}
												],
												"src": "3260:77:14"
											},
											{
												"body": {
													"nativeSrc": "3386:79:14",
													"nodeType": "YulBlock",
													"src": "3386:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "3443:16:14",
																"nodeType": "YulBlock",
																"src": "3443:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3452:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3452:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3455:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3455:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3445:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3445:6:14"
																			},
																			"nativeSrc": "3445:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3445:12:14"
																		},
																		"nativeSrc": "3445:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3445:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3409:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "3409:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3434:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "3434:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3416:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "3416:17:14"
																				},
																				"nativeSrc": "3416:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3416:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3406:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "3406:2:14"
																		},
																		"nativeSrc": "3406:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3406:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3399:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3399:6:14"
																},
																"nativeSrc": "3399:43:14",
																"nodeType": "YulFunctionCall",
																"src": "3399:43:14"
															},
															"nativeSrc": "3396:63:14",
															"nodeType": "YulIf",
															"src": "3396:63:14"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3343:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3379:5:14",
														"nodeType": "YulTypedName",
														"src": "3379:5:14",
														"type": ""
													}
												],
												"src": "3343:122:14"
											},
											{
												"body": {
													"nativeSrc": "3523:87:14",
													"nodeType": "YulBlock",
													"src": "3523:87:14",
													"statements": [
														{
															"nativeSrc": "3533:29:14",
															"nodeType": "YulAssignment",
															"src": "3533:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3555:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3555:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3542:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "3542:12:14"
																},
																"nativeSrc": "3542:20:14",
																"nodeType": "YulFunctionCall",
																"src": "3542:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3533:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "3533:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3598:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "3598:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3571:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "3571:26:14"
																},
																"nativeSrc": "3571:33:14",
																"nodeType": "YulFunctionCall",
																"src": "3571:33:14"
															},
															"nativeSrc": "3571:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "3571:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3471:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3501:6:14",
														"nodeType": "YulTypedName",
														"src": "3501:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3509:3:14",
														"nodeType": "YulTypedName",
														"src": "3509:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3517:5:14",
														"nodeType": "YulTypedName",
														"src": "3517:5:14",
														"type": ""
													}
												],
												"src": "3471:139:14"
											},
											{
												"body": {
													"nativeSrc": "3699:391:14",
													"nodeType": "YulBlock",
													"src": "3699:391:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "3745:83:14",
																"nodeType": "YulBlock",
																"src": "3745:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3747:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "3747:77:14"
																			},
																			"nativeSrc": "3747:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3747:79:14"
																		},
																		"nativeSrc": "3747:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3747:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3720:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3720:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3729:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3729:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3716:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3716:3:14"
																		},
																		"nativeSrc": "3716:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3716:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3741:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3741:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3712:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3712:3:14"
																},
																"nativeSrc": "3712:32:14",
																"nodeType": "YulFunctionCall",
																"src": "3712:32:14"
															},
															"nativeSrc": "3709:119:14",
															"nodeType": "YulIf",
															"src": "3709:119:14"
														},
														{
															"nativeSrc": "3838:117:14",
															"nodeType": "YulBlock",
															"src": "3838:117:14",
															"statements": [
																{
																	"nativeSrc": "3853:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3853:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3867:1:14",
																		"nodeType": "YulLiteral",
																		"src": "3867:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3857:6:14",
																			"nodeType": "YulTypedName",
																			"src": "3857:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3882:63:14",
																	"nodeType": "YulAssignment",
																	"src": "3882:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3917:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "3917:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3928:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "3928:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3913:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3913:3:14"
																				},
																				"nativeSrc": "3913:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3913:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3937:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3937:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3892:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "3892:20:14"
																		},
																		"nativeSrc": "3892:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3892:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3882:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "3882:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3965:118:14",
															"nodeType": "YulBlock",
															"src": "3965:118:14",
															"statements": [
																{
																	"nativeSrc": "3980:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3980:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3994:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3994:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3984:6:14",
																			"nodeType": "YulTypedName",
																			"src": "3984:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4010:63:14",
																	"nodeType": "YulAssignment",
																	"src": "4010:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4045:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4045:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4056:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4056:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4041:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4041:3:14"
																				},
																				"nativeSrc": "4041:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4041:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4065:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4065:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4020:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "4020:20:14"
																		},
																		"nativeSrc": "4020:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4020:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4010:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4010:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3616:474:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3661:9:14",
														"nodeType": "YulTypedName",
														"src": "3661:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3672:7:14",
														"nodeType": "YulTypedName",
														"src": "3672:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3684:6:14",
														"nodeType": "YulTypedName",
														"src": "3684:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3692:6:14",
														"nodeType": "YulTypedName",
														"src": "3692:6:14",
														"type": ""
													}
												],
												"src": "3616:474:14"
											},
											{
												"body": {
													"nativeSrc": "4136:76:14",
													"nodeType": "YulBlock",
													"src": "4136:76:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "4190:16:14",
																"nodeType": "YulBlock",
																"src": "4190:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4199:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4199:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4202:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4202:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4192:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4192:6:14"
																			},
																			"nativeSrc": "4192:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4192:12:14"
																		},
																		"nativeSrc": "4192:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4192:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4159:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "4159:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4181:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "4181:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "4166:14:14",
																					"nodeType": "YulIdentifier",
																					"src": "4166:14:14"
																				},
																				"nativeSrc": "4166:21:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4166:21:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4156:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "4156:2:14"
																		},
																		"nativeSrc": "4156:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4156:32:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4149:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4149:6:14"
																},
																"nativeSrc": "4149:40:14",
																"nodeType": "YulFunctionCall",
																"src": "4149:40:14"
															},
															"nativeSrc": "4146:60:14",
															"nodeType": "YulIf",
															"src": "4146:60:14"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "4096:116:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4129:5:14",
														"nodeType": "YulTypedName",
														"src": "4129:5:14",
														"type": ""
													}
												],
												"src": "4096:116:14"
											},
											{
												"body": {
													"nativeSrc": "4267:84:14",
													"nodeType": "YulBlock",
													"src": "4267:84:14",
													"statements": [
														{
															"nativeSrc": "4277:29:14",
															"nodeType": "YulAssignment",
															"src": "4277:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4299:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4299:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4286:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "4286:12:14"
																},
																"nativeSrc": "4286:20:14",
																"nodeType": "YulFunctionCall",
																"src": "4286:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4277:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "4277:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4339:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "4339:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "4315:23:14",
																	"nodeType": "YulIdentifier",
																	"src": "4315:23:14"
																},
																"nativeSrc": "4315:30:14",
																"nodeType": "YulFunctionCall",
																"src": "4315:30:14"
															},
															"nativeSrc": "4315:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "4315:30:14"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "4218:133:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4245:6:14",
														"nodeType": "YulTypedName",
														"src": "4245:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4253:3:14",
														"nodeType": "YulTypedName",
														"src": "4253:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4261:5:14",
														"nodeType": "YulTypedName",
														"src": "4261:5:14",
														"type": ""
													}
												],
												"src": "4218:133:14"
											},
											{
												"body": {
													"nativeSrc": "4420:260:14",
													"nodeType": "YulBlock",
													"src": "4420:260:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "4466:83:14",
																"nodeType": "YulBlock",
																"src": "4466:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4468:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "4468:77:14"
																			},
																			"nativeSrc": "4468:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4468:79:14"
																		},
																		"nativeSrc": "4468:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4468:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4441:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4441:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4450:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4450:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4437:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4437:3:14"
																		},
																		"nativeSrc": "4437:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4437:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4462:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4462:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4433:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4433:3:14"
																},
																"nativeSrc": "4433:32:14",
																"nodeType": "YulFunctionCall",
																"src": "4433:32:14"
															},
															"nativeSrc": "4430:119:14",
															"nodeType": "YulIf",
															"src": "4430:119:14"
														},
														{
															"nativeSrc": "4559:114:14",
															"nodeType": "YulBlock",
															"src": "4559:114:14",
															"statements": [
																{
																	"nativeSrc": "4574:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4574:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4588:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4588:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4578:6:14",
																			"nodeType": "YulTypedName",
																			"src": "4578:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4603:60:14",
																	"nodeType": "YulAssignment",
																	"src": "4603:60:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4635:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4635:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4646:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4646:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4631:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4631:3:14"
																				},
																				"nativeSrc": "4631:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4631:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4655:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4655:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "4613:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "4613:17:14"
																		},
																		"nativeSrc": "4613:50:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4613:50:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4603:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4603:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nativeSrc": "4357:323:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4390:9:14",
														"nodeType": "YulTypedName",
														"src": "4390:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4401:7:14",
														"nodeType": "YulTypedName",
														"src": "4401:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4413:6:14",
														"nodeType": "YulTypedName",
														"src": "4413:6:14",
														"type": ""
													}
												],
												"src": "4357:323:14"
											},
											{
												"body": {
													"nativeSrc": "4751:53:14",
													"nodeType": "YulBlock",
													"src": "4751:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4768:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "4768:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4791:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "4791:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4773:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "4773:17:14"
																		},
																		"nativeSrc": "4773:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4773:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4761:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4761:6:14"
																},
																"nativeSrc": "4761:37:14",
																"nodeType": "YulFunctionCall",
																"src": "4761:37:14"
															},
															"nativeSrc": "4761:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "4761:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4686:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4739:5:14",
														"nodeType": "YulTypedName",
														"src": "4739:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4746:3:14",
														"nodeType": "YulTypedName",
														"src": "4746:3:14",
														"type": ""
													}
												],
												"src": "4686:118:14"
											},
											{
												"body": {
													"nativeSrc": "4908:124:14",
													"nodeType": "YulBlock",
													"src": "4908:124:14",
													"statements": [
														{
															"nativeSrc": "4918:26:14",
															"nodeType": "YulAssignment",
															"src": "4918:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4930:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "4930:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4941:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4941:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4926:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4926:3:14"
																},
																"nativeSrc": "4926:18:14",
																"nodeType": "YulFunctionCall",
																"src": "4926:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4918:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "4918:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4998:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4998:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5011:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5011:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5022:1:14",
																				"nodeType": "YulLiteral",
																				"src": "5022:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5007:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5007:3:14"
																		},
																		"nativeSrc": "5007:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5007:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4954:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "4954:43:14"
																},
																"nativeSrc": "4954:71:14",
																"nodeType": "YulFunctionCall",
																"src": "4954:71:14"
															},
															"nativeSrc": "4954:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "4954:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4810:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4880:9:14",
														"nodeType": "YulTypedName",
														"src": "4880:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4892:6:14",
														"nodeType": "YulTypedName",
														"src": "4892:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4903:4:14",
														"nodeType": "YulTypedName",
														"src": "4903:4:14",
														"type": ""
													}
												],
												"src": "4810:222:14"
											},
											{
												"body": {
													"nativeSrc": "5138:519:14",
													"nodeType": "YulBlock",
													"src": "5138:519:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "5184:83:14",
																"nodeType": "YulBlock",
																"src": "5184:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5186:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "5186:77:14"
																			},
																			"nativeSrc": "5186:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5186:79:14"
																		},
																		"nativeSrc": "5186:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5186:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5159:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5159:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5168:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5168:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5155:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5155:3:14"
																		},
																		"nativeSrc": "5155:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5155:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5180:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5180:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5151:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5151:3:14"
																},
																"nativeSrc": "5151:32:14",
																"nodeType": "YulFunctionCall",
																"src": "5151:32:14"
															},
															"nativeSrc": "5148:119:14",
															"nodeType": "YulIf",
															"src": "5148:119:14"
														},
														{
															"nativeSrc": "5277:117:14",
															"nodeType": "YulBlock",
															"src": "5277:117:14",
															"statements": [
																{
																	"nativeSrc": "5292:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5292:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5306:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5306:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5296:6:14",
																			"nodeType": "YulTypedName",
																			"src": "5296:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5321:63:14",
																	"nodeType": "YulAssignment",
																	"src": "5321:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5356:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "5356:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5367:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "5367:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5352:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "5352:3:14"
																				},
																				"nativeSrc": "5352:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5352:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5376:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5376:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5331:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "5331:20:14"
																		},
																		"nativeSrc": "5331:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5331:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5321:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "5321:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5404:118:14",
															"nodeType": "YulBlock",
															"src": "5404:118:14",
															"statements": [
																{
																	"nativeSrc": "5419:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5419:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5433:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5433:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5423:6:14",
																			"nodeType": "YulTypedName",
																			"src": "5423:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5449:63:14",
																	"nodeType": "YulAssignment",
																	"src": "5449:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5484:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "5484:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5495:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "5495:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5480:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "5480:3:14"
																				},
																				"nativeSrc": "5480:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5480:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5504:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5504:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5459:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "5459:20:14"
																		},
																		"nativeSrc": "5459:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5459:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5449:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "5449:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5532:118:14",
															"nodeType": "YulBlock",
															"src": "5532:118:14",
															"statements": [
																{
																	"nativeSrc": "5547:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5547:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5561:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5561:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5551:6:14",
																			"nodeType": "YulTypedName",
																			"src": "5551:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5577:63:14",
																	"nodeType": "YulAssignment",
																	"src": "5577:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5612:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "5612:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5623:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "5623:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5608:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "5608:3:14"
																				},
																				"nativeSrc": "5608:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5608:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5632:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5632:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5587:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "5587:20:14"
																		},
																		"nativeSrc": "5587:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5587:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5577:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "5577:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "5038:619:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5092:9:14",
														"nodeType": "YulTypedName",
														"src": "5092:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5103:7:14",
														"nodeType": "YulTypedName",
														"src": "5103:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5115:6:14",
														"nodeType": "YulTypedName",
														"src": "5115:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5123:6:14",
														"nodeType": "YulTypedName",
														"src": "5123:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5131:6:14",
														"nodeType": "YulTypedName",
														"src": "5131:6:14",
														"type": ""
													}
												],
												"src": "5038:619:14"
											},
											{
												"body": {
													"nativeSrc": "5708:32:14",
													"nodeType": "YulBlock",
													"src": "5708:32:14",
													"statements": [
														{
															"nativeSrc": "5718:16:14",
															"nodeType": "YulAssignment",
															"src": "5718:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "5729:5:14",
																"nodeType": "YulIdentifier",
																"src": "5729:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5718:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "5718:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "5663:77:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5690:5:14",
														"nodeType": "YulTypedName",
														"src": "5690:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5700:7:14",
														"nodeType": "YulTypedName",
														"src": "5700:7:14",
														"type": ""
													}
												],
												"src": "5663:77:14"
											},
											{
												"body": {
													"nativeSrc": "5789:79:14",
													"nodeType": "YulBlock",
													"src": "5789:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "5846:16:14",
																"nodeType": "YulBlock",
																"src": "5846:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5855:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5855:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5858:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5858:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5848:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5848:6:14"
																			},
																			"nativeSrc": "5848:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5848:12:14"
																		},
																		"nativeSrc": "5848:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5848:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5812:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5812:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5837:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "5837:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "5819:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "5819:17:14"
																				},
																				"nativeSrc": "5819:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5819:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5809:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "5809:2:14"
																		},
																		"nativeSrc": "5809:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5809:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5802:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5802:6:14"
																},
																"nativeSrc": "5802:43:14",
																"nodeType": "YulFunctionCall",
																"src": "5802:43:14"
															},
															"nativeSrc": "5799:63:14",
															"nodeType": "YulIf",
															"src": "5799:63:14"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "5746:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5782:5:14",
														"nodeType": "YulTypedName",
														"src": "5782:5:14",
														"type": ""
													}
												],
												"src": "5746:122:14"
											},
											{
												"body": {
													"nativeSrc": "5926:87:14",
													"nodeType": "YulBlock",
													"src": "5926:87:14",
													"statements": [
														{
															"nativeSrc": "5936:29:14",
															"nodeType": "YulAssignment",
															"src": "5936:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5958:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5958:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5945:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "5945:12:14"
																},
																"nativeSrc": "5945:20:14",
																"nodeType": "YulFunctionCall",
																"src": "5945:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5936:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "5936:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6001:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "6001:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "5974:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "5974:26:14"
																},
																"nativeSrc": "5974:33:14",
																"nodeType": "YulFunctionCall",
																"src": "5974:33:14"
															},
															"nativeSrc": "5974:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "5974:33:14"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "5874:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5904:6:14",
														"nodeType": "YulTypedName",
														"src": "5904:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5912:3:14",
														"nodeType": "YulTypedName",
														"src": "5912:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5920:5:14",
														"nodeType": "YulTypedName",
														"src": "5920:5:14",
														"type": ""
													}
												],
												"src": "5874:139:14"
											},
											{
												"body": {
													"nativeSrc": "6085:263:14",
													"nodeType": "YulBlock",
													"src": "6085:263:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "6131:83:14",
																"nodeType": "YulBlock",
																"src": "6131:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6133:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "6133:77:14"
																			},
																			"nativeSrc": "6133:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6133:79:14"
																		},
																		"nativeSrc": "6133:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6133:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6106:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "6106:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6115:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6115:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6102:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6102:3:14"
																		},
																		"nativeSrc": "6102:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6102:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6127:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6127:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6098:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6098:3:14"
																},
																"nativeSrc": "6098:32:14",
																"nodeType": "YulFunctionCall",
																"src": "6098:32:14"
															},
															"nativeSrc": "6095:119:14",
															"nodeType": "YulIf",
															"src": "6095:119:14"
														},
														{
															"nativeSrc": "6224:117:14",
															"nodeType": "YulBlock",
															"src": "6224:117:14",
															"statements": [
																{
																	"nativeSrc": "6239:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6239:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6253:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6253:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6243:6:14",
																			"nodeType": "YulTypedName",
																			"src": "6243:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6268:63:14",
																	"nodeType": "YulAssignment",
																	"src": "6268:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6303:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "6303:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6314:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "6314:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6299:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "6299:3:14"
																				},
																				"nativeSrc": "6299:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "6299:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6323:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "6323:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "6278:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "6278:20:14"
																		},
																		"nativeSrc": "6278:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6278:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6268:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "6268:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "6019:329:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6055:9:14",
														"nodeType": "YulTypedName",
														"src": "6055:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6066:7:14",
														"nodeType": "YulTypedName",
														"src": "6066:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6078:6:14",
														"nodeType": "YulTypedName",
														"src": "6078:6:14",
														"type": ""
													}
												],
												"src": "6019:329:14"
											},
											{
												"body": {
													"nativeSrc": "6419:53:14",
													"nodeType": "YulBlock",
													"src": "6419:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6436:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6436:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6459:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "6459:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "6441:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "6441:17:14"
																		},
																		"nativeSrc": "6441:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6441:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6429:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6429:6:14"
																},
																"nativeSrc": "6429:37:14",
																"nodeType": "YulFunctionCall",
																"src": "6429:37:14"
															},
															"nativeSrc": "6429:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "6429:37:14"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "6354:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6407:5:14",
														"nodeType": "YulTypedName",
														"src": "6407:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6414:3:14",
														"nodeType": "YulTypedName",
														"src": "6414:3:14",
														"type": ""
													}
												],
												"src": "6354:118:14"
											},
											{
												"body": {
													"nativeSrc": "6576:124:14",
													"nodeType": "YulBlock",
													"src": "6576:124:14",
													"statements": [
														{
															"nativeSrc": "6586:26:14",
															"nodeType": "YulAssignment",
															"src": "6586:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6598:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "6598:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6609:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6609:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6594:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6594:3:14"
																},
																"nativeSrc": "6594:18:14",
																"nodeType": "YulFunctionCall",
																"src": "6594:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6586:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "6586:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6666:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6666:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6679:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6679:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6690:1:14",
																				"nodeType": "YulLiteral",
																				"src": "6690:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6675:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6675:3:14"
																		},
																		"nativeSrc": "6675:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6675:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6622:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "6622:43:14"
																},
																"nativeSrc": "6622:71:14",
																"nodeType": "YulFunctionCall",
																"src": "6622:71:14"
															},
															"nativeSrc": "6622:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "6622:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "6478:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6548:9:14",
														"nodeType": "YulTypedName",
														"src": "6548:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6560:6:14",
														"nodeType": "YulTypedName",
														"src": "6560:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6571:4:14",
														"nodeType": "YulTypedName",
														"src": "6571:4:14",
														"type": ""
													}
												],
												"src": "6478:222:14"
											},
											{
												"body": {
													"nativeSrc": "6789:391:14",
													"nodeType": "YulBlock",
													"src": "6789:391:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "6835:83:14",
																"nodeType": "YulBlock",
																"src": "6835:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6837:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "6837:77:14"
																			},
																			"nativeSrc": "6837:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6837:79:14"
																		},
																		"nativeSrc": "6837:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6837:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6810:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "6810:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6819:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6819:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6806:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6806:3:14"
																		},
																		"nativeSrc": "6806:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6806:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6831:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6831:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6802:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6802:3:14"
																},
																"nativeSrc": "6802:32:14",
																"nodeType": "YulFunctionCall",
																"src": "6802:32:14"
															},
															"nativeSrc": "6799:119:14",
															"nodeType": "YulIf",
															"src": "6799:119:14"
														},
														{
															"nativeSrc": "6928:117:14",
															"nodeType": "YulBlock",
															"src": "6928:117:14",
															"statements": [
																{
																	"nativeSrc": "6943:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6943:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6957:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6957:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6947:6:14",
																			"nodeType": "YulTypedName",
																			"src": "6947:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6972:63:14",
																	"nodeType": "YulAssignment",
																	"src": "6972:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7007:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "7007:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7018:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "7018:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7003:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "7003:3:14"
																				},
																				"nativeSrc": "7003:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7003:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7027:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "7027:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "6982:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "6982:20:14"
																		},
																		"nativeSrc": "6982:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6982:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6972:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "6972:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7055:118:14",
															"nodeType": "YulBlock",
															"src": "7055:118:14",
															"statements": [
																{
																	"nativeSrc": "7070:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7070:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7084:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7084:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7074:6:14",
																			"nodeType": "YulTypedName",
																			"src": "7074:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7100:63:14",
																	"nodeType": "YulAssignment",
																	"src": "7100:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7135:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "7135:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7146:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "7146:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7131:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "7131:3:14"
																				},
																				"nativeSrc": "7131:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7131:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7155:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "7155:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7110:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "7110:20:14"
																		},
																		"nativeSrc": "7110:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7110:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7100:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "7100:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "6706:474:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6751:9:14",
														"nodeType": "YulTypedName",
														"src": "6751:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6762:7:14",
														"nodeType": "YulTypedName",
														"src": "6762:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6774:6:14",
														"nodeType": "YulTypedName",
														"src": "6774:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6782:6:14",
														"nodeType": "YulTypedName",
														"src": "6782:6:14",
														"type": ""
													}
												],
												"src": "6706:474:14"
											},
											{
												"body": {
													"nativeSrc": "7229:43:14",
													"nodeType": "YulBlock",
													"src": "7229:43:14",
													"statements": [
														{
															"nativeSrc": "7239:27:14",
															"nodeType": "YulAssignment",
															"src": "7239:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7254:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "7254:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7261:4:14",
																		"nodeType": "YulLiteral",
																		"src": "7261:4:14",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7250:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7250:3:14"
																},
																"nativeSrc": "7250:16:14",
																"nodeType": "YulFunctionCall",
																"src": "7250:16:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7239:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "7239:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "7186:86:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7211:5:14",
														"nodeType": "YulTypedName",
														"src": "7211:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7221:7:14",
														"nodeType": "YulTypedName",
														"src": "7221:7:14",
														"type": ""
													}
												],
												"src": "7186:86:14"
											},
											{
												"body": {
													"nativeSrc": "7339:51:14",
													"nodeType": "YulBlock",
													"src": "7339:51:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7356:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7356:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7377:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "7377:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "7361:15:14",
																			"nodeType": "YulIdentifier",
																			"src": "7361:15:14"
																		},
																		"nativeSrc": "7361:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7361:22:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7349:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7349:6:14"
																},
																"nativeSrc": "7349:35:14",
																"nodeType": "YulFunctionCall",
																"src": "7349:35:14"
															},
															"nativeSrc": "7349:35:14",
															"nodeType": "YulExpressionStatement",
															"src": "7349:35:14"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "7278:112:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7327:5:14",
														"nodeType": "YulTypedName",
														"src": "7327:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7334:3:14",
														"nodeType": "YulTypedName",
														"src": "7334:3:14",
														"type": ""
													}
												],
												"src": "7278:112:14"
											},
											{
												"body": {
													"nativeSrc": "7490:120:14",
													"nodeType": "YulBlock",
													"src": "7490:120:14",
													"statements": [
														{
															"nativeSrc": "7500:26:14",
															"nodeType": "YulAssignment",
															"src": "7500:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7512:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "7512:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7523:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7523:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7508:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7508:3:14"
																},
																"nativeSrc": "7508:18:14",
																"nodeType": "YulFunctionCall",
																"src": "7508:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7500:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "7500:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7576:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7576:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7589:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7589:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7600:1:14",
																				"nodeType": "YulLiteral",
																				"src": "7600:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7585:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7585:3:14"
																		},
																		"nativeSrc": "7585:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7585:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "7536:39:14",
																	"nodeType": "YulIdentifier",
																	"src": "7536:39:14"
																},
																"nativeSrc": "7536:67:14",
																"nodeType": "YulFunctionCall",
																"src": "7536:67:14"
															},
															"nativeSrc": "7536:67:14",
															"nodeType": "YulExpressionStatement",
															"src": "7536:67:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "7396:214:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7462:9:14",
														"nodeType": "YulTypedName",
														"src": "7462:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7474:6:14",
														"nodeType": "YulTypedName",
														"src": "7474:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7485:4:14",
														"nodeType": "YulTypedName",
														"src": "7485:4:14",
														"type": ""
													}
												],
												"src": "7396:214:14"
											},
											{
												"body": {
													"nativeSrc": "7696:388:14",
													"nodeType": "YulBlock",
													"src": "7696:388:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "7742:83:14",
																"nodeType": "YulBlock",
																"src": "7742:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7744:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "7744:77:14"
																			},
																			"nativeSrc": "7744:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7744:79:14"
																		},
																		"nativeSrc": "7744:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "7744:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7717:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "7717:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7726:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7726:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7713:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7713:3:14"
																		},
																		"nativeSrc": "7713:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7713:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7738:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7738:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7709:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7709:3:14"
																},
																"nativeSrc": "7709:32:14",
																"nodeType": "YulFunctionCall",
																"src": "7709:32:14"
															},
															"nativeSrc": "7706:119:14",
															"nodeType": "YulIf",
															"src": "7706:119:14"
														},
														{
															"nativeSrc": "7835:117:14",
															"nodeType": "YulBlock",
															"src": "7835:117:14",
															"statements": [
																{
																	"nativeSrc": "7850:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7850:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7864:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7864:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7854:6:14",
																			"nodeType": "YulTypedName",
																			"src": "7854:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7879:63:14",
																	"nodeType": "YulAssignment",
																	"src": "7879:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7914:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "7914:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7925:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "7925:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7910:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "7910:3:14"
																				},
																				"nativeSrc": "7910:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7910:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7934:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "7934:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7889:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "7889:20:14"
																		},
																		"nativeSrc": "7889:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7889:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7879:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "7879:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7962:115:14",
															"nodeType": "YulBlock",
															"src": "7962:115:14",
															"statements": [
																{
																	"nativeSrc": "7977:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7977:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7991:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7991:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7981:6:14",
																			"nodeType": "YulTypedName",
																			"src": "7981:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8007:60:14",
																	"nodeType": "YulAssignment",
																	"src": "8007:60:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8039:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "8039:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8050:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "8050:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8035:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "8035:3:14"
																				},
																				"nativeSrc": "8035:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "8035:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8059:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "8059:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "8017:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "8017:17:14"
																		},
																		"nativeSrc": "8017:50:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8017:50:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8007:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "8007:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "7616:468:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7658:9:14",
														"nodeType": "YulTypedName",
														"src": "7658:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7669:7:14",
														"nodeType": "YulTypedName",
														"src": "7669:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7681:6:14",
														"nodeType": "YulTypedName",
														"src": "7681:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7689:6:14",
														"nodeType": "YulTypedName",
														"src": "7689:6:14",
														"type": ""
													}
												],
												"src": "7616:468:14"
											},
											{
												"body": {
													"nativeSrc": "8150:51:14",
													"nodeType": "YulBlock",
													"src": "8150:51:14",
													"statements": [
														{
															"nativeSrc": "8160:35:14",
															"nodeType": "YulAssignment",
															"src": "8160:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8189:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "8189:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "8171:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "8171:17:14"
																},
																"nativeSrc": "8171:24:14",
																"nodeType": "YulFunctionCall",
																"src": "8171:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8160:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "8160:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$1173",
												"nativeSrc": "8090:111:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8132:5:14",
														"nodeType": "YulTypedName",
														"src": "8132:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8142:7:14",
														"nodeType": "YulTypedName",
														"src": "8142:7:14",
														"type": ""
													}
												],
												"src": "8090:111:14"
											},
											{
												"body": {
													"nativeSrc": "8265:94:14",
													"nodeType": "YulBlock",
													"src": "8265:94:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "8337:16:14",
																"nodeType": "YulBlock",
																"src": "8337:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8346:1:14",
																					"nodeType": "YulLiteral",
																					"src": "8346:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8349:1:14",
																					"nodeType": "YulLiteral",
																					"src": "8349:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8339:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8339:6:14"
																			},
																			"nativeSrc": "8339:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8339:12:14"
																		},
																		"nativeSrc": "8339:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "8339:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8288:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "8288:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8328:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "8328:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$1173",
																					"nativeSrc": "8295:32:14",
																					"nodeType": "YulIdentifier",
																					"src": "8295:32:14"
																				},
																				"nativeSrc": "8295:39:14",
																				"nodeType": "YulFunctionCall",
																				"src": "8295:39:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8285:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "8285:2:14"
																		},
																		"nativeSrc": "8285:50:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8285:50:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8278:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8278:6:14"
																},
																"nativeSrc": "8278:58:14",
																"nodeType": "YulFunctionCall",
																"src": "8278:58:14"
															},
															"nativeSrc": "8275:78:14",
															"nodeType": "YulIf",
															"src": "8275:78:14"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$1173",
												"nativeSrc": "8207:152:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8258:5:14",
														"nodeType": "YulTypedName",
														"src": "8258:5:14",
														"type": ""
													}
												],
												"src": "8207:152:14"
											},
											{
												"body": {
													"nativeSrc": "8432:102:14",
													"nodeType": "YulBlock",
													"src": "8432:102:14",
													"statements": [
														{
															"nativeSrc": "8442:29:14",
															"nodeType": "YulAssignment",
															"src": "8442:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8464:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8464:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8451:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "8451:12:14"
																},
																"nativeSrc": "8451:20:14",
																"nodeType": "YulFunctionCall",
																"src": "8451:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8442:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "8442:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8522:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "8522:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$1173",
																	"nativeSrc": "8480:41:14",
																	"nodeType": "YulIdentifier",
																	"src": "8480:41:14"
																},
																"nativeSrc": "8480:48:14",
																"nodeType": "YulFunctionCall",
																"src": "8480:48:14"
															},
															"nativeSrc": "8480:48:14",
															"nodeType": "YulExpressionStatement",
															"src": "8480:48:14"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$1173",
												"nativeSrc": "8365:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8410:6:14",
														"nodeType": "YulTypedName",
														"src": "8410:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8418:3:14",
														"nodeType": "YulTypedName",
														"src": "8418:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8426:5:14",
														"nodeType": "YulTypedName",
														"src": "8426:5:14",
														"type": ""
													}
												],
												"src": "8365:169:14"
											},
											{
												"body": {
													"nativeSrc": "8655:534:14",
													"nodeType": "YulBlock",
													"src": "8655:534:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "8701:83:14",
																"nodeType": "YulBlock",
																"src": "8701:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8703:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "8703:77:14"
																			},
																			"nativeSrc": "8703:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8703:79:14"
																		},
																		"nativeSrc": "8703:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "8703:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8676:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "8676:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8685:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8685:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8672:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8672:3:14"
																		},
																		"nativeSrc": "8672:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8672:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8697:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8697:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8668:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8668:3:14"
																},
																"nativeSrc": "8668:32:14",
																"nodeType": "YulFunctionCall",
																"src": "8668:32:14"
															},
															"nativeSrc": "8665:119:14",
															"nodeType": "YulIf",
															"src": "8665:119:14"
														},
														{
															"nativeSrc": "8794:132:14",
															"nodeType": "YulBlock",
															"src": "8794:132:14",
															"statements": [
																{
																	"nativeSrc": "8809:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8809:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8823:1:14",
																		"nodeType": "YulLiteral",
																		"src": "8823:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8813:6:14",
																			"nodeType": "YulTypedName",
																			"src": "8813:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8838:78:14",
																	"nodeType": "YulAssignment",
																	"src": "8838:78:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8888:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "8888:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8899:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "8899:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8884:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "8884:3:14"
																				},
																				"nativeSrc": "8884:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "8884:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8908:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "8908:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$1173",
																			"nativeSrc": "8848:35:14",
																			"nodeType": "YulIdentifier",
																			"src": "8848:35:14"
																		},
																		"nativeSrc": "8848:68:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8848:68:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8838:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "8838:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8936:118:14",
															"nodeType": "YulBlock",
															"src": "8936:118:14",
															"statements": [
																{
																	"nativeSrc": "8951:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8951:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8965:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8965:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8955:6:14",
																			"nodeType": "YulTypedName",
																			"src": "8955:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8981:63:14",
																	"nodeType": "YulAssignment",
																	"src": "8981:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9016:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "9016:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9027:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "9027:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9012:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "9012:3:14"
																				},
																				"nativeSrc": "9012:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "9012:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9036:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "9036:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8991:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "8991:20:14"
																		},
																		"nativeSrc": "8991:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8991:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8981:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "8981:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9064:118:14",
															"nodeType": "YulBlock",
															"src": "9064:118:14",
															"statements": [
																{
																	"nativeSrc": "9079:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9079:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9093:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9093:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9083:6:14",
																			"nodeType": "YulTypedName",
																			"src": "9083:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9109:63:14",
																	"nodeType": "YulAssignment",
																	"src": "9109:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9144:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "9144:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9155:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "9155:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9140:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "9140:3:14"
																				},
																				"nativeSrc": "9140:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "9140:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9164:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "9164:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9119:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "9119:20:14"
																		},
																		"nativeSrc": "9119:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9119:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9109:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "9109:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$1173t_addresst_uint256",
												"nativeSrc": "8540:649:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8609:9:14",
														"nodeType": "YulTypedName",
														"src": "8609:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8620:7:14",
														"nodeType": "YulTypedName",
														"src": "8620:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8632:6:14",
														"nodeType": "YulTypedName",
														"src": "8632:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8640:6:14",
														"nodeType": "YulTypedName",
														"src": "8640:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8648:6:14",
														"nodeType": "YulTypedName",
														"src": "8648:6:14",
														"type": ""
													}
												],
												"src": "8540:649:14"
											},
											{
												"body": {
													"nativeSrc": "9261:263:14",
													"nodeType": "YulBlock",
													"src": "9261:263:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "9307:83:14",
																"nodeType": "YulBlock",
																"src": "9307:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9309:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "9309:77:14"
																			},
																			"nativeSrc": "9309:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "9309:79:14"
																		},
																		"nativeSrc": "9309:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "9309:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9282:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "9282:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9291:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9291:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9278:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9278:3:14"
																		},
																		"nativeSrc": "9278:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9278:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9303:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9303:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9274:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9274:3:14"
																},
																"nativeSrc": "9274:32:14",
																"nodeType": "YulFunctionCall",
																"src": "9274:32:14"
															},
															"nativeSrc": "9271:119:14",
															"nodeType": "YulIf",
															"src": "9271:119:14"
														},
														{
															"nativeSrc": "9400:117:14",
															"nodeType": "YulBlock",
															"src": "9400:117:14",
															"statements": [
																{
																	"nativeSrc": "9415:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9415:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9429:1:14",
																		"nodeType": "YulLiteral",
																		"src": "9429:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9419:6:14",
																			"nodeType": "YulTypedName",
																			"src": "9419:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9444:63:14",
																	"nodeType": "YulAssignment",
																	"src": "9444:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9479:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "9479:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9490:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "9490:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9475:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "9475:3:14"
																				},
																				"nativeSrc": "9475:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "9475:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9499:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "9499:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9454:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "9454:20:14"
																		},
																		"nativeSrc": "9454:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9454:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9444:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "9444:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "9195:329:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9231:9:14",
														"nodeType": "YulTypedName",
														"src": "9231:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9242:7:14",
														"nodeType": "YulTypedName",
														"src": "9242:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9254:6:14",
														"nodeType": "YulTypedName",
														"src": "9254:6:14",
														"type": ""
													}
												],
												"src": "9195:329:14"
											},
											{
												"body": {
													"nativeSrc": "9583:51:14",
													"nodeType": "YulBlock",
													"src": "9583:51:14",
													"statements": [
														{
															"nativeSrc": "9593:35:14",
															"nodeType": "YulAssignment",
															"src": "9593:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9622:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "9622:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "9604:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "9604:17:14"
																},
																"nativeSrc": "9604:24:14",
																"nodeType": "YulFunctionCall",
																"src": "9604:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9593:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "9593:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "9530:104:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9565:5:14",
														"nodeType": "YulTypedName",
														"src": "9565:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9575:7:14",
														"nodeType": "YulTypedName",
														"src": "9575:7:14",
														"type": ""
													}
												],
												"src": "9530:104:14"
											},
											{
												"body": {
													"nativeSrc": "9691:87:14",
													"nodeType": "YulBlock",
													"src": "9691:87:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "9756:16:14",
																"nodeType": "YulBlock",
																"src": "9756:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9765:1:14",
																					"nodeType": "YulLiteral",
																					"src": "9765:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9768:1:14",
																					"nodeType": "YulLiteral",
																					"src": "9768:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9758:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "9758:6:14"
																			},
																			"nativeSrc": "9758:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "9758:12:14"
																		},
																		"nativeSrc": "9758:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "9758:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9714:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "9714:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9747:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "9747:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nativeSrc": "9721:25:14",
																					"nodeType": "YulIdentifier",
																					"src": "9721:25:14"
																				},
																				"nativeSrc": "9721:32:14",
																				"nodeType": "YulFunctionCall",
																				"src": "9721:32:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9711:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "9711:2:14"
																		},
																		"nativeSrc": "9711:43:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9711:43:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9704:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9704:6:14"
																},
																"nativeSrc": "9704:51:14",
																"nodeType": "YulFunctionCall",
																"src": "9704:51:14"
															},
															"nativeSrc": "9701:71:14",
															"nodeType": "YulIf",
															"src": "9701:71:14"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nativeSrc": "9640:138:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9684:5:14",
														"nodeType": "YulTypedName",
														"src": "9684:5:14",
														"type": ""
													}
												],
												"src": "9640:138:14"
											},
											{
												"body": {
													"nativeSrc": "9844:95:14",
													"nodeType": "YulBlock",
													"src": "9844:95:14",
													"statements": [
														{
															"nativeSrc": "9854:29:14",
															"nodeType": "YulAssignment",
															"src": "9854:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9876:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9876:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9863:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "9863:12:14"
																},
																"nativeSrc": "9863:20:14",
																"nodeType": "YulFunctionCall",
																"src": "9863:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9854:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "9854:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9927:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "9927:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nativeSrc": "9892:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "9892:34:14"
																},
																"nativeSrc": "9892:41:14",
																"nodeType": "YulFunctionCall",
																"src": "9892:41:14"
															},
															"nativeSrc": "9892:41:14",
															"nodeType": "YulExpressionStatement",
															"src": "9892:41:14"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nativeSrc": "9784:155:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9822:6:14",
														"nodeType": "YulTypedName",
														"src": "9822:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9830:3:14",
														"nodeType": "YulTypedName",
														"src": "9830:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9838:5:14",
														"nodeType": "YulTypedName",
														"src": "9838:5:14",
														"type": ""
													}
												],
												"src": "9784:155:14"
											},
											{
												"body": {
													"nativeSrc": "10036:399:14",
													"nodeType": "YulBlock",
													"src": "10036:399:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "10082:83:14",
																"nodeType": "YulBlock",
																"src": "10082:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10084:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "10084:77:14"
																			},
																			"nativeSrc": "10084:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "10084:79:14"
																		},
																		"nativeSrc": "10084:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "10084:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10057:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10057:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10066:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10066:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10053:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10053:3:14"
																		},
																		"nativeSrc": "10053:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10053:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10078:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10078:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10049:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10049:3:14"
																},
																"nativeSrc": "10049:32:14",
																"nodeType": "YulFunctionCall",
																"src": "10049:32:14"
															},
															"nativeSrc": "10046:119:14",
															"nodeType": "YulIf",
															"src": "10046:119:14"
														},
														{
															"nativeSrc": "10175:125:14",
															"nodeType": "YulBlock",
															"src": "10175:125:14",
															"statements": [
																{
																	"nativeSrc": "10190:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10190:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10204:1:14",
																		"nodeType": "YulLiteral",
																		"src": "10204:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10194:6:14",
																			"nodeType": "YulTypedName",
																			"src": "10194:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10219:71:14",
																	"nodeType": "YulAssignment",
																	"src": "10219:71:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10262:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10262:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10273:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "10273:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10258:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10258:3:14"
																				},
																				"nativeSrc": "10258:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10258:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10282:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10282:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nativeSrc": "10229:28:14",
																			"nodeType": "YulIdentifier",
																			"src": "10229:28:14"
																		},
																		"nativeSrc": "10229:61:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10229:61:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10219:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "10219:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10310:118:14",
															"nodeType": "YulBlock",
															"src": "10310:118:14",
															"statements": [
																{
																	"nativeSrc": "10325:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10325:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10339:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10339:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10329:6:14",
																			"nodeType": "YulTypedName",
																			"src": "10329:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10355:63:14",
																	"nodeType": "YulAssignment",
																	"src": "10355:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10390:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10390:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10401:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "10401:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10386:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10386:3:14"
																				},
																				"nativeSrc": "10386:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10386:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10410:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10410:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10365:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "10365:20:14"
																		},
																		"nativeSrc": "10365:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10365:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10355:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "10355:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_uint256",
												"nativeSrc": "9945:490:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9998:9:14",
														"nodeType": "YulTypedName",
														"src": "9998:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10009:7:14",
														"nodeType": "YulTypedName",
														"src": "10009:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10021:6:14",
														"nodeType": "YulTypedName",
														"src": "10021:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10029:6:14",
														"nodeType": "YulTypedName",
														"src": "10029:6:14",
														"type": ""
													}
												],
												"src": "9945:490:14"
											},
											{
												"body": {
													"nativeSrc": "10507:263:14",
													"nodeType": "YulBlock",
													"src": "10507:263:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "10553:83:14",
																"nodeType": "YulBlock",
																"src": "10553:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10555:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "10555:77:14"
																			},
																			"nativeSrc": "10555:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "10555:79:14"
																		},
																		"nativeSrc": "10555:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "10555:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10528:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10528:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10537:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10537:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10524:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10524:3:14"
																		},
																		"nativeSrc": "10524:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10524:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10549:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10549:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10520:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10520:3:14"
																},
																"nativeSrc": "10520:32:14",
																"nodeType": "YulFunctionCall",
																"src": "10520:32:14"
															},
															"nativeSrc": "10517:119:14",
															"nodeType": "YulIf",
															"src": "10517:119:14"
														},
														{
															"nativeSrc": "10646:117:14",
															"nodeType": "YulBlock",
															"src": "10646:117:14",
															"statements": [
																{
																	"nativeSrc": "10661:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10661:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10675:1:14",
																		"nodeType": "YulLiteral",
																		"src": "10675:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10665:6:14",
																			"nodeType": "YulTypedName",
																			"src": "10665:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10690:63:14",
																	"nodeType": "YulAssignment",
																	"src": "10690:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10725:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10725:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10736:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "10736:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10721:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10721:3:14"
																				},
																				"nativeSrc": "10721:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10721:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10745:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10745:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10700:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "10700:20:14"
																		},
																		"nativeSrc": "10700:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10700:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10690:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "10690:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "10441:329:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10477:9:14",
														"nodeType": "YulTypedName",
														"src": "10477:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10488:7:14",
														"nodeType": "YulTypedName",
														"src": "10488:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10500:6:14",
														"nodeType": "YulTypedName",
														"src": "10500:6:14",
														"type": ""
													}
												],
												"src": "10441:329:14"
											},
											{
												"body": {
													"nativeSrc": "10859:391:14",
													"nodeType": "YulBlock",
													"src": "10859:391:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "10905:83:14",
																"nodeType": "YulBlock",
																"src": "10905:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10907:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "10907:77:14"
																			},
																			"nativeSrc": "10907:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "10907:79:14"
																		},
																		"nativeSrc": "10907:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "10907:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10880:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10880:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10889:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10889:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10876:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10876:3:14"
																		},
																		"nativeSrc": "10876:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10876:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10901:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10901:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10872:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10872:3:14"
																},
																"nativeSrc": "10872:32:14",
																"nodeType": "YulFunctionCall",
																"src": "10872:32:14"
															},
															"nativeSrc": "10869:119:14",
															"nodeType": "YulIf",
															"src": "10869:119:14"
														},
														{
															"nativeSrc": "10998:117:14",
															"nodeType": "YulBlock",
															"src": "10998:117:14",
															"statements": [
																{
																	"nativeSrc": "11013:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11013:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11027:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11027:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11017:6:14",
																			"nodeType": "YulTypedName",
																			"src": "11017:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11042:63:14",
																	"nodeType": "YulAssignment",
																	"src": "11042:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11077:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "11077:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11088:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "11088:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11073:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11073:3:14"
																				},
																				"nativeSrc": "11073:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11073:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11097:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "11097:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11052:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "11052:20:14"
																		},
																		"nativeSrc": "11052:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11052:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11042:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "11042:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11125:118:14",
															"nodeType": "YulBlock",
															"src": "11125:118:14",
															"statements": [
																{
																	"nativeSrc": "11140:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11140:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11154:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11154:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11144:6:14",
																			"nodeType": "YulTypedName",
																			"src": "11144:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11170:63:14",
																	"nodeType": "YulAssignment",
																	"src": "11170:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11205:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "11205:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11216:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "11216:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11201:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11201:3:14"
																				},
																				"nativeSrc": "11201:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11201:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11225:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "11225:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11180:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "11180:20:14"
																		},
																		"nativeSrc": "11180:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11180:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11170:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "11170:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "10776:474:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10821:9:14",
														"nodeType": "YulTypedName",
														"src": "10821:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10832:7:14",
														"nodeType": "YulTypedName",
														"src": "10832:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10844:6:14",
														"nodeType": "YulTypedName",
														"src": "10844:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10852:6:14",
														"nodeType": "YulTypedName",
														"src": "10852:6:14",
														"type": ""
													}
												],
												"src": "10776:474:14"
											},
											{
												"body": {
													"nativeSrc": "11321:53:14",
													"nodeType": "YulBlock",
													"src": "11321:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11338:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "11338:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11361:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "11361:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "11343:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "11343:17:14"
																		},
																		"nativeSrc": "11343:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11343:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11331:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11331:6:14"
																},
																"nativeSrc": "11331:37:14",
																"nodeType": "YulFunctionCall",
																"src": "11331:37:14"
															},
															"nativeSrc": "11331:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "11331:37:14"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "11256:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11309:5:14",
														"nodeType": "YulTypedName",
														"src": "11309:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11316:3:14",
														"nodeType": "YulTypedName",
														"src": "11316:3:14",
														"type": ""
													}
												],
												"src": "11256:118:14"
											},
											{
												"body": {
													"nativeSrc": "11478:124:14",
													"nodeType": "YulBlock",
													"src": "11478:124:14",
													"statements": [
														{
															"nativeSrc": "11488:26:14",
															"nodeType": "YulAssignment",
															"src": "11488:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11500:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "11500:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11511:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11511:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11496:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11496:3:14"
																},
																"nativeSrc": "11496:18:14",
																"nodeType": "YulFunctionCall",
																"src": "11496:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11488:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "11488:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11568:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "11568:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11581:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11581:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11592:1:14",
																				"nodeType": "YulLiteral",
																				"src": "11592:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11577:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11577:3:14"
																		},
																		"nativeSrc": "11577:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11577:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11524:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "11524:43:14"
																},
																"nativeSrc": "11524:71:14",
																"nodeType": "YulFunctionCall",
																"src": "11524:71:14"
															},
															"nativeSrc": "11524:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "11524:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "11380:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11450:9:14",
														"nodeType": "YulTypedName",
														"src": "11450:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11462:6:14",
														"nodeType": "YulTypedName",
														"src": "11462:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11473:4:14",
														"nodeType": "YulTypedName",
														"src": "11473:4:14",
														"type": ""
													}
												],
												"src": "11380:222:14"
											},
											{
												"body": {
													"nativeSrc": "11636:152:14",
													"nodeType": "YulBlock",
													"src": "11636:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11653:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11653:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11656:77:14",
																		"nodeType": "YulLiteral",
																		"src": "11656:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11646:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11646:6:14"
																},
																"nativeSrc": "11646:88:14",
																"nodeType": "YulFunctionCall",
																"src": "11646:88:14"
															},
															"nativeSrc": "11646:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "11646:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11750:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11750:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11753:4:14",
																		"nodeType": "YulLiteral",
																		"src": "11753:4:14",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11743:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11743:6:14"
																},
																"nativeSrc": "11743:15:14",
																"nodeType": "YulFunctionCall",
																"src": "11743:15:14"
															},
															"nativeSrc": "11743:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "11743:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11774:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11774:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11777:4:14",
																		"nodeType": "YulLiteral",
																		"src": "11777:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11767:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11767:6:14"
																},
																"nativeSrc": "11767:15:14",
																"nodeType": "YulFunctionCall",
																"src": "11767:15:14"
															},
															"nativeSrc": "11767:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "11767:15:14"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "11608:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "11608:180:14"
											},
											{
												"body": {
													"nativeSrc": "11845:269:14",
													"nodeType": "YulBlock",
													"src": "11845:269:14",
													"statements": [
														{
															"nativeSrc": "11855:22:14",
															"nodeType": "YulAssignment",
															"src": "11855:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11869:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "11869:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11875:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11875:1:14",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11865:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11865:3:14"
																},
																"nativeSrc": "11865:12:14",
																"nodeType": "YulFunctionCall",
																"src": "11865:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11855:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11855:6:14"
																}
															]
														},
														{
															"nativeSrc": "11886:38:14",
															"nodeType": "YulVariableDeclaration",
															"src": "11886:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11916:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "11916:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11922:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11922:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11912:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11912:3:14"
																},
																"nativeSrc": "11912:12:14",
																"nodeType": "YulFunctionCall",
																"src": "11912:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "11890:18:14",
																	"nodeType": "YulTypedName",
																	"src": "11890:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11963:51:14",
																"nodeType": "YulBlock",
																"src": "11963:51:14",
																"statements": [
																	{
																		"nativeSrc": "11977:27:14",
																		"nodeType": "YulAssignment",
																		"src": "11977:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "11991:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "11991:6:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11999:4:14",
																					"nodeType": "YulLiteral",
																					"src": "11999:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "11987:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "11987:3:14"
																			},
																			"nativeSrc": "11987:17:14",
																			"nodeType": "YulFunctionCall",
																			"src": "11987:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "11977:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "11977:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11943:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "11943:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11936:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11936:6:14"
																},
																"nativeSrc": "11936:26:14",
																"nodeType": "YulFunctionCall",
																"src": "11936:26:14"
															},
															"nativeSrc": "11933:81:14",
															"nodeType": "YulIf",
															"src": "11933:81:14"
														},
														{
															"body": {
																"nativeSrc": "12066:42:14",
																"nodeType": "YulBlock",
																"src": "12066:42:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "12080:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "12080:16:14"
																			},
																			"nativeSrc": "12080:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12080:18:14"
																		},
																		"nativeSrc": "12080:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "12080:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12030:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "12030:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12053:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "12053:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12061:2:14",
																				"nodeType": "YulLiteral",
																				"src": "12061:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "12050:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "12050:2:14"
																		},
																		"nativeSrc": "12050:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12050:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "12027:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "12027:2:14"
																},
																"nativeSrc": "12027:38:14",
																"nodeType": "YulFunctionCall",
																"src": "12027:38:14"
															},
															"nativeSrc": "12024:84:14",
															"nodeType": "YulIf",
															"src": "12024:84:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "11794:320:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "11829:4:14",
														"nodeType": "YulTypedName",
														"src": "11829:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "11838:6:14",
														"nodeType": "YulTypedName",
														"src": "11838:6:14",
														"type": ""
													}
												],
												"src": "11794:320:14"
											},
											{
												"body": {
													"nativeSrc": "12226:64:14",
													"nodeType": "YulBlock",
													"src": "12226:64:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12248:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "12248:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12256:1:14",
																				"nodeType": "YulLiteral",
																				"src": "12256:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12244:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12244:3:14"
																		},
																		"nativeSrc": "12244:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12244:14:14"
																	},
																	{
																		"hexValue": "436f6e74726163743a204e6565642041646d696e",
																		"kind": "string",
																		"nativeSrc": "12260:22:14",
																		"nodeType": "YulLiteral",
																		"src": "12260:22:14",
																		"type": "",
																		"value": "Contract: Need Admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12237:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12237:6:14"
																},
																"nativeSrc": "12237:46:14",
																"nodeType": "YulFunctionCall",
																"src": "12237:46:14"
															},
															"nativeSrc": "12237:46:14",
															"nodeType": "YulExpressionStatement",
															"src": "12237:46:14"
														}
													]
												},
												"name": "store_literal_in_memory_bb63c1d83da1ab52c7d8fe2a042a1198f2d359766d8d53fcde4a52b8346f6c66",
												"nativeSrc": "12120:170:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12218:6:14",
														"nodeType": "YulTypedName",
														"src": "12218:6:14",
														"type": ""
													}
												],
												"src": "12120:170:14"
											},
											{
												"body": {
													"nativeSrc": "12442:220:14",
													"nodeType": "YulBlock",
													"src": "12442:220:14",
													"statements": [
														{
															"nativeSrc": "12452:74:14",
															"nodeType": "YulAssignment",
															"src": "12452:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12518:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "12518:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12523:2:14",
																		"nodeType": "YulLiteral",
																		"src": "12523:2:14",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12459:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "12459:58:14"
																},
																"nativeSrc": "12459:67:14",
																"nodeType": "YulFunctionCall",
																"src": "12459:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12452:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12452:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12624:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "12624:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bb63c1d83da1ab52c7d8fe2a042a1198f2d359766d8d53fcde4a52b8346f6c66",
																	"nativeSrc": "12535:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "12535:88:14"
																},
																"nativeSrc": "12535:93:14",
																"nodeType": "YulFunctionCall",
																"src": "12535:93:14"
															},
															"nativeSrc": "12535:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "12535:93:14"
														},
														{
															"nativeSrc": "12637:19:14",
															"nodeType": "YulAssignment",
															"src": "12637:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12648:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "12648:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12653:2:14",
																		"nodeType": "YulLiteral",
																		"src": "12653:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12644:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12644:3:14"
																},
																"nativeSrc": "12644:12:14",
																"nodeType": "YulFunctionCall",
																"src": "12644:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12637:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12637:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bb63c1d83da1ab52c7d8fe2a042a1198f2d359766d8d53fcde4a52b8346f6c66_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12296:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12430:3:14",
														"nodeType": "YulTypedName",
														"src": "12430:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12438:3:14",
														"nodeType": "YulTypedName",
														"src": "12438:3:14",
														"type": ""
													}
												],
												"src": "12296:366:14"
											},
											{
												"body": {
													"nativeSrc": "12839:248:14",
													"nodeType": "YulBlock",
													"src": "12839:248:14",
													"statements": [
														{
															"nativeSrc": "12849:26:14",
															"nodeType": "YulAssignment",
															"src": "12849:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12861:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "12861:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12872:2:14",
																		"nodeType": "YulLiteral",
																		"src": "12872:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12857:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12857:3:14"
																},
																"nativeSrc": "12857:18:14",
																"nodeType": "YulFunctionCall",
																"src": "12857:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12849:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "12849:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12896:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "12896:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12907:1:14",
																				"nodeType": "YulLiteral",
																				"src": "12907:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12892:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12892:3:14"
																		},
																		"nativeSrc": "12892:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12892:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12915:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "12915:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12921:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "12921:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12911:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12911:3:14"
																		},
																		"nativeSrc": "12911:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12911:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12885:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12885:6:14"
																},
																"nativeSrc": "12885:47:14",
																"nodeType": "YulFunctionCall",
																"src": "12885:47:14"
															},
															"nativeSrc": "12885:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "12885:47:14"
														},
														{
															"nativeSrc": "12941:139:14",
															"nodeType": "YulAssignment",
															"src": "12941:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13075:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "13075:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bb63c1d83da1ab52c7d8fe2a042a1198f2d359766d8d53fcde4a52b8346f6c66_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12949:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "12949:124:14"
																},
																"nativeSrc": "12949:131:14",
																"nodeType": "YulFunctionCall",
																"src": "12949:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12941:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "12941:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bb63c1d83da1ab52c7d8fe2a042a1198f2d359766d8d53fcde4a52b8346f6c66__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12668:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12819:9:14",
														"nodeType": "YulTypedName",
														"src": "12819:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12834:4:14",
														"nodeType": "YulTypedName",
														"src": "12834:4:14",
														"type": ""
													}
												],
												"src": "12668:419:14"
											},
											{
												"body": {
													"nativeSrc": "13219:206:14",
													"nodeType": "YulBlock",
													"src": "13219:206:14",
													"statements": [
														{
															"nativeSrc": "13229:26:14",
															"nodeType": "YulAssignment",
															"src": "13229:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13241:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "13241:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13252:2:14",
																		"nodeType": "YulLiteral",
																		"src": "13252:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13237:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13237:3:14"
																},
																"nativeSrc": "13237:18:14",
																"nodeType": "YulFunctionCall",
																"src": "13237:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13229:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "13229:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13309:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "13309:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13322:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "13322:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13333:1:14",
																				"nodeType": "YulLiteral",
																				"src": "13333:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13318:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13318:3:14"
																		},
																		"nativeSrc": "13318:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13318:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13265:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "13265:43:14"
																},
																"nativeSrc": "13265:71:14",
																"nodeType": "YulFunctionCall",
																"src": "13265:71:14"
															},
															"nativeSrc": "13265:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "13265:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13390:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "13390:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13403:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "13403:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13414:2:14",
																				"nodeType": "YulLiteral",
																				"src": "13414:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13399:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13399:3:14"
																		},
																		"nativeSrc": "13399:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13399:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13346:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "13346:43:14"
																},
																"nativeSrc": "13346:72:14",
																"nodeType": "YulFunctionCall",
																"src": "13346:72:14"
															},
															"nativeSrc": "13346:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "13346:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "13093:332:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13183:9:14",
														"nodeType": "YulTypedName",
														"src": "13183:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13195:6:14",
														"nodeType": "YulTypedName",
														"src": "13195:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13203:6:14",
														"nodeType": "YulTypedName",
														"src": "13203:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13214:4:14",
														"nodeType": "YulTypedName",
														"src": "13214:4:14",
														"type": ""
													}
												],
												"src": "13093:332:14"
											},
											{
												"body": {
													"nativeSrc": "13537:54:14",
													"nodeType": "YulBlock",
													"src": "13537:54:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13559:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "13559:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13567:1:14",
																				"nodeType": "YulLiteral",
																				"src": "13567:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13555:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13555:3:14"
																		},
																		"nativeSrc": "13555:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13555:14:14"
																	},
																	{
																		"hexValue": "4e6565642041646d696e",
																		"kind": "string",
																		"nativeSrc": "13571:12:14",
																		"nodeType": "YulLiteral",
																		"src": "13571:12:14",
																		"type": "",
																		"value": "Need Admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13548:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "13548:6:14"
																},
																"nativeSrc": "13548:36:14",
																"nodeType": "YulFunctionCall",
																"src": "13548:36:14"
															},
															"nativeSrc": "13548:36:14",
															"nodeType": "YulExpressionStatement",
															"src": "13548:36:14"
														}
													]
												},
												"name": "store_literal_in_memory_b001b48f6c58139e2cae9da1391afe3c88f4951fb872771eda2713f4f3a0a6c2",
												"nativeSrc": "13431:160:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13529:6:14",
														"nodeType": "YulTypedName",
														"src": "13529:6:14",
														"type": ""
													}
												],
												"src": "13431:160:14"
											},
											{
												"body": {
													"nativeSrc": "13743:220:14",
													"nodeType": "YulBlock",
													"src": "13743:220:14",
													"statements": [
														{
															"nativeSrc": "13753:74:14",
															"nodeType": "YulAssignment",
															"src": "13753:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13819:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "13819:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13824:2:14",
																		"nodeType": "YulLiteral",
																		"src": "13824:2:14",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13760:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "13760:58:14"
																},
																"nativeSrc": "13760:67:14",
																"nodeType": "YulFunctionCall",
																"src": "13760:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13753:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13753:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13925:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "13925:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b001b48f6c58139e2cae9da1391afe3c88f4951fb872771eda2713f4f3a0a6c2",
																	"nativeSrc": "13836:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "13836:88:14"
																},
																"nativeSrc": "13836:93:14",
																"nodeType": "YulFunctionCall",
																"src": "13836:93:14"
															},
															"nativeSrc": "13836:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "13836:93:14"
														},
														{
															"nativeSrc": "13938:19:14",
															"nodeType": "YulAssignment",
															"src": "13938:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13949:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "13949:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13954:2:14",
																		"nodeType": "YulLiteral",
																		"src": "13954:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13945:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13945:3:14"
																},
																"nativeSrc": "13945:12:14",
																"nodeType": "YulFunctionCall",
																"src": "13945:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13938:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13938:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b001b48f6c58139e2cae9da1391afe3c88f4951fb872771eda2713f4f3a0a6c2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13597:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13731:3:14",
														"nodeType": "YulTypedName",
														"src": "13731:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13739:3:14",
														"nodeType": "YulTypedName",
														"src": "13739:3:14",
														"type": ""
													}
												],
												"src": "13597:366:14"
											},
											{
												"body": {
													"nativeSrc": "14140:248:14",
													"nodeType": "YulBlock",
													"src": "14140:248:14",
													"statements": [
														{
															"nativeSrc": "14150:26:14",
															"nodeType": "YulAssignment",
															"src": "14150:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14162:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "14162:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14173:2:14",
																		"nodeType": "YulLiteral",
																		"src": "14173:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14158:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14158:3:14"
																},
																"nativeSrc": "14158:18:14",
																"nodeType": "YulFunctionCall",
																"src": "14158:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14150:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "14150:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14197:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14197:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14208:1:14",
																				"nodeType": "YulLiteral",
																				"src": "14208:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14193:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14193:3:14"
																		},
																		"nativeSrc": "14193:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14193:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14216:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "14216:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14222:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14222:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14212:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14212:3:14"
																		},
																		"nativeSrc": "14212:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14212:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14186:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14186:6:14"
																},
																"nativeSrc": "14186:47:14",
																"nodeType": "YulFunctionCall",
																"src": "14186:47:14"
															},
															"nativeSrc": "14186:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "14186:47:14"
														},
														{
															"nativeSrc": "14242:139:14",
															"nodeType": "YulAssignment",
															"src": "14242:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14376:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "14376:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b001b48f6c58139e2cae9da1391afe3c88f4951fb872771eda2713f4f3a0a6c2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14250:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "14250:124:14"
																},
																"nativeSrc": "14250:131:14",
																"nodeType": "YulFunctionCall",
																"src": "14250:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14242:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "14242:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b001b48f6c58139e2cae9da1391afe3c88f4951fb872771eda2713f4f3a0a6c2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13969:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14120:9:14",
														"nodeType": "YulTypedName",
														"src": "14120:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14135:4:14",
														"nodeType": "YulTypedName",
														"src": "14135:4:14",
														"type": ""
													}
												],
												"src": "13969:419:14"
											},
											{
												"body": {
													"nativeSrc": "14500:59:14",
													"nodeType": "YulBlock",
													"src": "14500:59:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14522:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "14522:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14530:1:14",
																				"nodeType": "YulLiteral",
																				"src": "14530:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14518:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14518:3:14"
																		},
																		"nativeSrc": "14518:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14518:14:14"
																	},
																	{
																		"hexValue": "496e76616c69642061646472657373",
																		"kind": "string",
																		"nativeSrc": "14534:17:14",
																		"nodeType": "YulLiteral",
																		"src": "14534:17:14",
																		"type": "",
																		"value": "Invalid address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14511:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14511:6:14"
																},
																"nativeSrc": "14511:41:14",
																"nodeType": "YulFunctionCall",
																"src": "14511:41:14"
															},
															"nativeSrc": "14511:41:14",
															"nodeType": "YulExpressionStatement",
															"src": "14511:41:14"
														}
													]
												},
												"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
												"nativeSrc": "14394:165:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14492:6:14",
														"nodeType": "YulTypedName",
														"src": "14492:6:14",
														"type": ""
													}
												],
												"src": "14394:165:14"
											},
											{
												"body": {
													"nativeSrc": "14711:220:14",
													"nodeType": "YulBlock",
													"src": "14711:220:14",
													"statements": [
														{
															"nativeSrc": "14721:74:14",
															"nodeType": "YulAssignment",
															"src": "14721:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14787:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14787:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14792:2:14",
																		"nodeType": "YulLiteral",
																		"src": "14792:2:14",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14728:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "14728:58:14"
																},
																"nativeSrc": "14728:67:14",
																"nodeType": "YulFunctionCall",
																"src": "14728:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14721:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14721:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14893:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14893:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																	"nativeSrc": "14804:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "14804:88:14"
																},
																"nativeSrc": "14804:93:14",
																"nodeType": "YulFunctionCall",
																"src": "14804:93:14"
															},
															"nativeSrc": "14804:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "14804:93:14"
														},
														{
															"nativeSrc": "14906:19:14",
															"nodeType": "YulAssignment",
															"src": "14906:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14917:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14917:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14922:2:14",
																		"nodeType": "YulLiteral",
																		"src": "14922:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14913:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14913:3:14"
																},
																"nativeSrc": "14913:12:14",
																"nodeType": "YulFunctionCall",
																"src": "14913:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14906:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14906:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14565:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14699:3:14",
														"nodeType": "YulTypedName",
														"src": "14699:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14707:3:14",
														"nodeType": "YulTypedName",
														"src": "14707:3:14",
														"type": ""
													}
												],
												"src": "14565:366:14"
											},
											{
												"body": {
													"nativeSrc": "15108:248:14",
													"nodeType": "YulBlock",
													"src": "15108:248:14",
													"statements": [
														{
															"nativeSrc": "15118:26:14",
															"nodeType": "YulAssignment",
															"src": "15118:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15130:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "15130:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15141:2:14",
																		"nodeType": "YulLiteral",
																		"src": "15141:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15126:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15126:3:14"
																},
																"nativeSrc": "15126:18:14",
																"nodeType": "YulFunctionCall",
																"src": "15126:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15118:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "15118:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15165:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "15165:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15176:1:14",
																				"nodeType": "YulLiteral",
																				"src": "15176:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15161:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15161:3:14"
																		},
																		"nativeSrc": "15161:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15161:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15184:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "15184:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15190:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "15190:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15180:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15180:3:14"
																		},
																		"nativeSrc": "15180:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15180:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15154:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "15154:6:14"
																},
																"nativeSrc": "15154:47:14",
																"nodeType": "YulFunctionCall",
																"src": "15154:47:14"
															},
															"nativeSrc": "15154:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "15154:47:14"
														},
														{
															"nativeSrc": "15210:139:14",
															"nodeType": "YulAssignment",
															"src": "15210:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15344:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "15344:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15218:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "15218:124:14"
																},
																"nativeSrc": "15218:131:14",
																"nodeType": "YulFunctionCall",
																"src": "15218:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15210:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "15210:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14937:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15088:9:14",
														"nodeType": "YulTypedName",
														"src": "15088:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15103:4:14",
														"nodeType": "YulTypedName",
														"src": "15103:4:14",
														"type": ""
													}
												],
												"src": "14937:419:14"
											},
											{
												"body": {
													"nativeSrc": "15468:55:14",
													"nodeType": "YulBlock",
													"src": "15468:55:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15490:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "15490:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15498:1:14",
																				"nodeType": "YulLiteral",
																				"src": "15498:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15486:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15486:3:14"
																		},
																		"nativeSrc": "15486:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15486:14:14"
																	},
																	{
																		"hexValue": "4e65656420524553435545",
																		"kind": "string",
																		"nativeSrc": "15502:13:14",
																		"nodeType": "YulLiteral",
																		"src": "15502:13:14",
																		"type": "",
																		"value": "Need RESCUE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15479:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "15479:6:14"
																},
																"nativeSrc": "15479:37:14",
																"nodeType": "YulFunctionCall",
																"src": "15479:37:14"
															},
															"nativeSrc": "15479:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "15479:37:14"
														}
													]
												},
												"name": "store_literal_in_memory_c6d8abb0082a2eadfce7975cbc43efb0f6de7a832c688abfb0c618284167ffc2",
												"nativeSrc": "15362:161:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15460:6:14",
														"nodeType": "YulTypedName",
														"src": "15460:6:14",
														"type": ""
													}
												],
												"src": "15362:161:14"
											},
											{
												"body": {
													"nativeSrc": "15675:220:14",
													"nodeType": "YulBlock",
													"src": "15675:220:14",
													"statements": [
														{
															"nativeSrc": "15685:74:14",
															"nodeType": "YulAssignment",
															"src": "15685:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15751:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15751:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15756:2:14",
																		"nodeType": "YulLiteral",
																		"src": "15756:2:14",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15692:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "15692:58:14"
																},
																"nativeSrc": "15692:67:14",
																"nodeType": "YulFunctionCall",
																"src": "15692:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15685:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15685:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15857:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15857:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c6d8abb0082a2eadfce7975cbc43efb0f6de7a832c688abfb0c618284167ffc2",
																	"nativeSrc": "15768:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "15768:88:14"
																},
																"nativeSrc": "15768:93:14",
																"nodeType": "YulFunctionCall",
																"src": "15768:93:14"
															},
															"nativeSrc": "15768:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "15768:93:14"
														},
														{
															"nativeSrc": "15870:19:14",
															"nodeType": "YulAssignment",
															"src": "15870:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15881:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15881:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15886:2:14",
																		"nodeType": "YulLiteral",
																		"src": "15886:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15877:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15877:3:14"
																},
																"nativeSrc": "15877:12:14",
																"nodeType": "YulFunctionCall",
																"src": "15877:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15870:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15870:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c6d8abb0082a2eadfce7975cbc43efb0f6de7a832c688abfb0c618284167ffc2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15529:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15663:3:14",
														"nodeType": "YulTypedName",
														"src": "15663:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15671:3:14",
														"nodeType": "YulTypedName",
														"src": "15671:3:14",
														"type": ""
													}
												],
												"src": "15529:366:14"
											},
											{
												"body": {
													"nativeSrc": "16072:248:14",
													"nodeType": "YulBlock",
													"src": "16072:248:14",
													"statements": [
														{
															"nativeSrc": "16082:26:14",
															"nodeType": "YulAssignment",
															"src": "16082:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16094:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "16094:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16105:2:14",
																		"nodeType": "YulLiteral",
																		"src": "16105:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16090:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16090:3:14"
																},
																"nativeSrc": "16090:18:14",
																"nodeType": "YulFunctionCall",
																"src": "16090:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16082:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "16082:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16129:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "16129:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16140:1:14",
																				"nodeType": "YulLiteral",
																				"src": "16140:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16125:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16125:3:14"
																		},
																		"nativeSrc": "16125:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16125:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16148:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "16148:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16154:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "16154:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16144:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16144:3:14"
																		},
																		"nativeSrc": "16144:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16144:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16118:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "16118:6:14"
																},
																"nativeSrc": "16118:47:14",
																"nodeType": "YulFunctionCall",
																"src": "16118:47:14"
															},
															"nativeSrc": "16118:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "16118:47:14"
														},
														{
															"nativeSrc": "16174:139:14",
															"nodeType": "YulAssignment",
															"src": "16174:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16308:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "16308:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c6d8abb0082a2eadfce7975cbc43efb0f6de7a832c688abfb0c618284167ffc2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16182:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "16182:124:14"
																},
																"nativeSrc": "16182:131:14",
																"nodeType": "YulFunctionCall",
																"src": "16182:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16174:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "16174:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c6d8abb0082a2eadfce7975cbc43efb0f6de7a832c688abfb0c618284167ffc2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15901:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16052:9:14",
														"nodeType": "YulTypedName",
														"src": "16052:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16067:4:14",
														"nodeType": "YulTypedName",
														"src": "16067:4:14",
														"type": ""
													}
												],
												"src": "15901:419:14"
											},
											{
												"body": {
													"nativeSrc": "16358:28:14",
													"nodeType": "YulBlock",
													"src": "16358:28:14",
													"statements": [
														{
															"nativeSrc": "16368:12:14",
															"nodeType": "YulAssignment",
															"src": "16368:12:14",
															"value": {
																"name": "value",
																"nativeSrc": "16375:5:14",
																"nodeType": "YulIdentifier",
																"src": "16375:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "16368:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16368:3:14"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "16326:60:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16344:5:14",
														"nodeType": "YulTypedName",
														"src": "16344:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "16354:3:14",
														"nodeType": "YulTypedName",
														"src": "16354:3:14",
														"type": ""
													}
												],
												"src": "16326:60:14"
											},
											{
												"body": {
													"nativeSrc": "16452:82:14",
													"nodeType": "YulBlock",
													"src": "16452:82:14",
													"statements": [
														{
															"nativeSrc": "16462:66:14",
															"nodeType": "YulAssignment",
															"src": "16462:66:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "16520:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "16520:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "16502:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "16502:17:14"
																				},
																				"nativeSrc": "16502:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "16502:24:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "16493:8:14",
																			"nodeType": "YulIdentifier",
																			"src": "16493:8:14"
																		},
																		"nativeSrc": "16493:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16493:34:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "16475:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "16475:17:14"
																},
																"nativeSrc": "16475:53:14",
																"nodeType": "YulFunctionCall",
																"src": "16475:53:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "16462:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "16462:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "16392:142:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16432:5:14",
														"nodeType": "YulTypedName",
														"src": "16432:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "16442:9:14",
														"nodeType": "YulTypedName",
														"src": "16442:9:14",
														"type": ""
													}
												],
												"src": "16392:142:14"
											},
											{
												"body": {
													"nativeSrc": "16600:66:14",
													"nodeType": "YulBlock",
													"src": "16600:66:14",
													"statements": [
														{
															"nativeSrc": "16610:50:14",
															"nodeType": "YulAssignment",
															"src": "16610:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16654:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "16654:5:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "16623:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "16623:30:14"
																},
																"nativeSrc": "16623:37:14",
																"nodeType": "YulFunctionCall",
																"src": "16623:37:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "16610:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "16610:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "16540:126:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16580:5:14",
														"nodeType": "YulTypedName",
														"src": "16580:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "16590:9:14",
														"nodeType": "YulTypedName",
														"src": "16590:9:14",
														"type": ""
													}
												],
												"src": "16540:126:14"
											},
											{
												"body": {
													"nativeSrc": "16747:66:14",
													"nodeType": "YulBlock",
													"src": "16747:66:14",
													"statements": [
														{
															"nativeSrc": "16757:50:14",
															"nodeType": "YulAssignment",
															"src": "16757:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16801:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "16801:5:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "16770:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "16770:30:14"
																},
																"nativeSrc": "16770:37:14",
																"nodeType": "YulFunctionCall",
																"src": "16770:37:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "16757:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "16757:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$1173_to_t_address",
												"nativeSrc": "16672:141:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16727:5:14",
														"nodeType": "YulTypedName",
														"src": "16727:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "16737:9:14",
														"nodeType": "YulTypedName",
														"src": "16737:9:14",
														"type": ""
													}
												],
												"src": "16672:141:14"
											},
											{
												"body": {
													"nativeSrc": "16899:81:14",
													"nodeType": "YulBlock",
													"src": "16899:81:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16916:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "16916:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16967:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "16967:5:14"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$1173_to_t_address",
																			"nativeSrc": "16921:45:14",
																			"nodeType": "YulIdentifier",
																			"src": "16921:45:14"
																		},
																		"nativeSrc": "16921:52:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16921:52:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16909:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "16909:6:14"
																},
																"nativeSrc": "16909:65:14",
																"nodeType": "YulFunctionCall",
																"src": "16909:65:14"
															},
															"nativeSrc": "16909:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "16909:65:14"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$1173_to_t_address_fromStack",
												"nativeSrc": "16819:161:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16887:5:14",
														"nodeType": "YulTypedName",
														"src": "16887:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "16894:3:14",
														"nodeType": "YulTypedName",
														"src": "16894:3:14",
														"type": ""
													}
												],
												"src": "16819:161:14"
											},
											{
												"body": {
													"nativeSrc": "17183:386:14",
													"nodeType": "YulBlock",
													"src": "17183:386:14",
													"statements": [
														{
															"nativeSrc": "17193:27:14",
															"nodeType": "YulAssignment",
															"src": "17193:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17205:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "17205:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17216:3:14",
																		"nodeType": "YulLiteral",
																		"src": "17216:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17201:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17201:3:14"
																},
																"nativeSrc": "17201:19:14",
																"nodeType": "YulFunctionCall",
																"src": "17201:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17193:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "17193:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17289:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "17289:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17302:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "17302:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17313:1:14",
																				"nodeType": "YulLiteral",
																				"src": "17313:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17298:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "17298:3:14"
																		},
																		"nativeSrc": "17298:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17298:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$1173_to_t_address_fromStack",
																	"nativeSrc": "17230:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "17230:58:14"
																},
																"nativeSrc": "17230:86:14",
																"nodeType": "YulFunctionCall",
																"src": "17230:86:14"
															},
															"nativeSrc": "17230:86:14",
															"nodeType": "YulExpressionStatement",
															"src": "17230:86:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17370:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "17370:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17383:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "17383:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17394:2:14",
																				"nodeType": "YulLiteral",
																				"src": "17394:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17379:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "17379:3:14"
																		},
																		"nativeSrc": "17379:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17379:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17326:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "17326:43:14"
																},
																"nativeSrc": "17326:72:14",
																"nodeType": "YulFunctionCall",
																"src": "17326:72:14"
															},
															"nativeSrc": "17326:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "17326:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "17452:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "17452:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17465:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "17465:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17476:2:14",
																				"nodeType": "YulLiteral",
																				"src": "17476:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17461:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "17461:3:14"
																		},
																		"nativeSrc": "17461:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17461:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17408:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "17408:43:14"
																},
																"nativeSrc": "17408:72:14",
																"nodeType": "YulFunctionCall",
																"src": "17408:72:14"
															},
															"nativeSrc": "17408:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "17408:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "17534:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "17534:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17547:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "17547:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17558:2:14",
																				"nodeType": "YulLiteral",
																				"src": "17558:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17543:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "17543:3:14"
																		},
																		"nativeSrc": "17543:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17543:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17490:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "17490:43:14"
																},
																"nativeSrc": "17490:72:14",
																"nodeType": "YulFunctionCall",
																"src": "17490:72:14"
															},
															"nativeSrc": "17490:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "17490:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$1173_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "16986:583:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17131:9:14",
														"nodeType": "YulTypedName",
														"src": "17131:9:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "17143:6:14",
														"nodeType": "YulTypedName",
														"src": "17143:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17151:6:14",
														"nodeType": "YulTypedName",
														"src": "17151:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17159:6:14",
														"nodeType": "YulTypedName",
														"src": "17159:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17167:6:14",
														"nodeType": "YulTypedName",
														"src": "17167:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17178:4:14",
														"nodeType": "YulTypedName",
														"src": "17178:4:14",
														"type": ""
													}
												],
												"src": "16986:583:14"
											},
											{
												"body": {
													"nativeSrc": "17681:72:14",
													"nodeType": "YulBlock",
													"src": "17681:72:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17703:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "17703:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17711:1:14",
																				"nodeType": "YulLiteral",
																				"src": "17711:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17699:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "17699:3:14"
																		},
																		"nativeSrc": "17699:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17699:14:14"
																	},
																	{
																		"hexValue": "436f6e74726163743a20436f6e747261637420697320506175736564",
																		"kind": "string",
																		"nativeSrc": "17715:30:14",
																		"nodeType": "YulLiteral",
																		"src": "17715:30:14",
																		"type": "",
																		"value": "Contract: Contract is Paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17692:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17692:6:14"
																},
																"nativeSrc": "17692:54:14",
																"nodeType": "YulFunctionCall",
																"src": "17692:54:14"
															},
															"nativeSrc": "17692:54:14",
															"nodeType": "YulExpressionStatement",
															"src": "17692:54:14"
														}
													]
												},
												"name": "store_literal_in_memory_14cda221cd50cc4488a50638b29b8104950f854aa06a190e98dcd3542f450149",
												"nativeSrc": "17575:178:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17673:6:14",
														"nodeType": "YulTypedName",
														"src": "17673:6:14",
														"type": ""
													}
												],
												"src": "17575:178:14"
											},
											{
												"body": {
													"nativeSrc": "17905:220:14",
													"nodeType": "YulBlock",
													"src": "17905:220:14",
													"statements": [
														{
															"nativeSrc": "17915:74:14",
															"nodeType": "YulAssignment",
															"src": "17915:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17981:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17981:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17986:2:14",
																		"nodeType": "YulLiteral",
																		"src": "17986:2:14",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17922:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "17922:58:14"
																},
																"nativeSrc": "17922:67:14",
																"nodeType": "YulFunctionCall",
																"src": "17922:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17915:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17915:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18087:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "18087:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_14cda221cd50cc4488a50638b29b8104950f854aa06a190e98dcd3542f450149",
																	"nativeSrc": "17998:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "17998:88:14"
																},
																"nativeSrc": "17998:93:14",
																"nodeType": "YulFunctionCall",
																"src": "17998:93:14"
															},
															"nativeSrc": "17998:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "17998:93:14"
														},
														{
															"nativeSrc": "18100:19:14",
															"nodeType": "YulAssignment",
															"src": "18100:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18111:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "18111:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18116:2:14",
																		"nodeType": "YulLiteral",
																		"src": "18116:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18107:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18107:3:14"
																},
																"nativeSrc": "18107:12:14",
																"nodeType": "YulFunctionCall",
																"src": "18107:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18100:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18100:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_14cda221cd50cc4488a50638b29b8104950f854aa06a190e98dcd3542f450149_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17759:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17893:3:14",
														"nodeType": "YulTypedName",
														"src": "17893:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17901:3:14",
														"nodeType": "YulTypedName",
														"src": "17901:3:14",
														"type": ""
													}
												],
												"src": "17759:366:14"
											},
											{
												"body": {
													"nativeSrc": "18302:248:14",
													"nodeType": "YulBlock",
													"src": "18302:248:14",
													"statements": [
														{
															"nativeSrc": "18312:26:14",
															"nodeType": "YulAssignment",
															"src": "18312:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18324:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "18324:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18335:2:14",
																		"nodeType": "YulLiteral",
																		"src": "18335:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18320:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18320:3:14"
																},
																"nativeSrc": "18320:18:14",
																"nodeType": "YulFunctionCall",
																"src": "18320:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18312:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "18312:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18359:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "18359:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18370:1:14",
																				"nodeType": "YulLiteral",
																				"src": "18370:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18355:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18355:3:14"
																		},
																		"nativeSrc": "18355:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18355:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18378:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "18378:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18384:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "18384:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18374:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18374:3:14"
																		},
																		"nativeSrc": "18374:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18374:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18348:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18348:6:14"
																},
																"nativeSrc": "18348:47:14",
																"nodeType": "YulFunctionCall",
																"src": "18348:47:14"
															},
															"nativeSrc": "18348:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "18348:47:14"
														},
														{
															"nativeSrc": "18404:139:14",
															"nodeType": "YulAssignment",
															"src": "18404:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18538:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "18538:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_14cda221cd50cc4488a50638b29b8104950f854aa06a190e98dcd3542f450149_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18412:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "18412:124:14"
																},
																"nativeSrc": "18412:131:14",
																"nodeType": "YulFunctionCall",
																"src": "18412:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18404:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "18404:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_14cda221cd50cc4488a50638b29b8104950f854aa06a190e98dcd3542f450149__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18131:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18282:9:14",
														"nodeType": "YulTypedName",
														"src": "18282:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18297:4:14",
														"nodeType": "YulTypedName",
														"src": "18297:4:14",
														"type": ""
													}
												],
												"src": "18131:419:14"
											},
											{
												"body": {
													"nativeSrc": "18662:63:14",
													"nodeType": "YulBlock",
													"src": "18662:63:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18684:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "18684:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18692:1:14",
																				"nodeType": "YulLiteral",
																				"src": "18692:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18680:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18680:3:14"
																		},
																		"nativeSrc": "18680:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18680:14:14"
																	},
																	{
																		"hexValue": "436f6e74726163743a204e656564204275726e",
																		"kind": "string",
																		"nativeSrc": "18696:21:14",
																		"nodeType": "YulLiteral",
																		"src": "18696:21:14",
																		"type": "",
																		"value": "Contract: Need Burn"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18673:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18673:6:14"
																},
																"nativeSrc": "18673:45:14",
																"nodeType": "YulFunctionCall",
																"src": "18673:45:14"
															},
															"nativeSrc": "18673:45:14",
															"nodeType": "YulExpressionStatement",
															"src": "18673:45:14"
														}
													]
												},
												"name": "store_literal_in_memory_0f2142f4e404960c39c0eef9aa83c0b4e0c80eb3bb63665846eabb25d9855d04",
												"nativeSrc": "18556:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18654:6:14",
														"nodeType": "YulTypedName",
														"src": "18654:6:14",
														"type": ""
													}
												],
												"src": "18556:169:14"
											},
											{
												"body": {
													"nativeSrc": "18877:220:14",
													"nodeType": "YulBlock",
													"src": "18877:220:14",
													"statements": [
														{
															"nativeSrc": "18887:74:14",
															"nodeType": "YulAssignment",
															"src": "18887:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18953:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "18953:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18958:2:14",
																		"nodeType": "YulLiteral",
																		"src": "18958:2:14",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18894:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "18894:58:14"
																},
																"nativeSrc": "18894:67:14",
																"nodeType": "YulFunctionCall",
																"src": "18894:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18887:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18887:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19059:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "19059:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0f2142f4e404960c39c0eef9aa83c0b4e0c80eb3bb63665846eabb25d9855d04",
																	"nativeSrc": "18970:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "18970:88:14"
																},
																"nativeSrc": "18970:93:14",
																"nodeType": "YulFunctionCall",
																"src": "18970:93:14"
															},
															"nativeSrc": "18970:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "18970:93:14"
														},
														{
															"nativeSrc": "19072:19:14",
															"nodeType": "YulAssignment",
															"src": "19072:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19083:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "19083:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19088:2:14",
																		"nodeType": "YulLiteral",
																		"src": "19088:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19079:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19079:3:14"
																},
																"nativeSrc": "19079:12:14",
																"nodeType": "YulFunctionCall",
																"src": "19079:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19072:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19072:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0f2142f4e404960c39c0eef9aa83c0b4e0c80eb3bb63665846eabb25d9855d04_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18731:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18865:3:14",
														"nodeType": "YulTypedName",
														"src": "18865:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18873:3:14",
														"nodeType": "YulTypedName",
														"src": "18873:3:14",
														"type": ""
													}
												],
												"src": "18731:366:14"
											},
											{
												"body": {
													"nativeSrc": "19274:248:14",
													"nodeType": "YulBlock",
													"src": "19274:248:14",
													"statements": [
														{
															"nativeSrc": "19284:26:14",
															"nodeType": "YulAssignment",
															"src": "19284:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19296:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "19296:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19307:2:14",
																		"nodeType": "YulLiteral",
																		"src": "19307:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19292:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19292:3:14"
																},
																"nativeSrc": "19292:18:14",
																"nodeType": "YulFunctionCall",
																"src": "19292:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19284:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "19284:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19331:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "19331:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19342:1:14",
																				"nodeType": "YulLiteral",
																				"src": "19342:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19327:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19327:3:14"
																		},
																		"nativeSrc": "19327:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19327:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19350:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "19350:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19356:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "19356:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19346:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19346:3:14"
																		},
																		"nativeSrc": "19346:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19346:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19320:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "19320:6:14"
																},
																"nativeSrc": "19320:47:14",
																"nodeType": "YulFunctionCall",
																"src": "19320:47:14"
															},
															"nativeSrc": "19320:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "19320:47:14"
														},
														{
															"nativeSrc": "19376:139:14",
															"nodeType": "YulAssignment",
															"src": "19376:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19510:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "19510:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0f2142f4e404960c39c0eef9aa83c0b4e0c80eb3bb63665846eabb25d9855d04_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19384:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "19384:124:14"
																},
																"nativeSrc": "19384:131:14",
																"nodeType": "YulFunctionCall",
																"src": "19384:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19376:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "19376:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0f2142f4e404960c39c0eef9aa83c0b4e0c80eb3bb63665846eabb25d9855d04__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19103:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19254:9:14",
														"nodeType": "YulTypedName",
														"src": "19254:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19269:4:14",
														"nodeType": "YulTypedName",
														"src": "19269:4:14",
														"type": ""
													}
												],
												"src": "19103:419:14"
											},
											{
												"body": {
													"nativeSrc": "19634:63:14",
													"nodeType": "YulBlock",
													"src": "19634:63:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19656:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "19656:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19664:1:14",
																				"nodeType": "YulLiteral",
																				"src": "19664:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19652:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19652:3:14"
																		},
																		"nativeSrc": "19652:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19652:14:14"
																	},
																	{
																		"hexValue": "4d696e74696e6720746f2064697361626c6564",
																		"kind": "string",
																		"nativeSrc": "19668:21:14",
																		"nodeType": "YulLiteral",
																		"src": "19668:21:14",
																		"type": "",
																		"value": "Minting to disabled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19645:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "19645:6:14"
																},
																"nativeSrc": "19645:45:14",
																"nodeType": "YulFunctionCall",
																"src": "19645:45:14"
															},
															"nativeSrc": "19645:45:14",
															"nodeType": "YulExpressionStatement",
															"src": "19645:45:14"
														}
													]
												},
												"name": "store_literal_in_memory_ba2e9cd8d3fa598fea6366ddadf891a9cbec04b837294279cc52e9e496f33766",
												"nativeSrc": "19528:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19626:6:14",
														"nodeType": "YulTypedName",
														"src": "19626:6:14",
														"type": ""
													}
												],
												"src": "19528:169:14"
											},
											{
												"body": {
													"nativeSrc": "19849:220:14",
													"nodeType": "YulBlock",
													"src": "19849:220:14",
													"statements": [
														{
															"nativeSrc": "19859:74:14",
															"nodeType": "YulAssignment",
															"src": "19859:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19925:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "19925:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19930:2:14",
																		"nodeType": "YulLiteral",
																		"src": "19930:2:14",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19866:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "19866:58:14"
																},
																"nativeSrc": "19866:67:14",
																"nodeType": "YulFunctionCall",
																"src": "19866:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19859:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19859:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20031:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "20031:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ba2e9cd8d3fa598fea6366ddadf891a9cbec04b837294279cc52e9e496f33766",
																	"nativeSrc": "19942:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "19942:88:14"
																},
																"nativeSrc": "19942:93:14",
																"nodeType": "YulFunctionCall",
																"src": "19942:93:14"
															},
															"nativeSrc": "19942:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "19942:93:14"
														},
														{
															"nativeSrc": "20044:19:14",
															"nodeType": "YulAssignment",
															"src": "20044:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20055:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "20055:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20060:2:14",
																		"nodeType": "YulLiteral",
																		"src": "20060:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20051:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "20051:3:14"
																},
																"nativeSrc": "20051:12:14",
																"nodeType": "YulFunctionCall",
																"src": "20051:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20044:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "20044:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ba2e9cd8d3fa598fea6366ddadf891a9cbec04b837294279cc52e9e496f33766_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19703:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19837:3:14",
														"nodeType": "YulTypedName",
														"src": "19837:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19845:3:14",
														"nodeType": "YulTypedName",
														"src": "19845:3:14",
														"type": ""
													}
												],
												"src": "19703:366:14"
											},
											{
												"body": {
													"nativeSrc": "20246:248:14",
													"nodeType": "YulBlock",
													"src": "20246:248:14",
													"statements": [
														{
															"nativeSrc": "20256:26:14",
															"nodeType": "YulAssignment",
															"src": "20256:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20268:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "20268:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20279:2:14",
																		"nodeType": "YulLiteral",
																		"src": "20279:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20264:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "20264:3:14"
																},
																"nativeSrc": "20264:18:14",
																"nodeType": "YulFunctionCall",
																"src": "20264:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20256:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "20256:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20303:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "20303:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20314:1:14",
																				"nodeType": "YulLiteral",
																				"src": "20314:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20299:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "20299:3:14"
																		},
																		"nativeSrc": "20299:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "20299:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20322:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "20322:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20328:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "20328:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20318:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "20318:3:14"
																		},
																		"nativeSrc": "20318:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "20318:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20292:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "20292:6:14"
																},
																"nativeSrc": "20292:47:14",
																"nodeType": "YulFunctionCall",
																"src": "20292:47:14"
															},
															"nativeSrc": "20292:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "20292:47:14"
														},
														{
															"nativeSrc": "20348:139:14",
															"nodeType": "YulAssignment",
															"src": "20348:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20482:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "20482:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ba2e9cd8d3fa598fea6366ddadf891a9cbec04b837294279cc52e9e496f33766_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20356:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "20356:124:14"
																},
																"nativeSrc": "20356:131:14",
																"nodeType": "YulFunctionCall",
																"src": "20356:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20348:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "20348:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ba2e9cd8d3fa598fea6366ddadf891a9cbec04b837294279cc52e9e496f33766__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20075:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20226:9:14",
														"nodeType": "YulTypedName",
														"src": "20226:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20241:4:14",
														"nodeType": "YulTypedName",
														"src": "20241:4:14",
														"type": ""
													}
												],
												"src": "20075:419:14"
											},
											{
												"body": {
													"nativeSrc": "20606:64:14",
													"nodeType": "YulBlock",
													"src": "20606:64:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20628:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "20628:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20636:1:14",
																				"nodeType": "YulLiteral",
																				"src": "20636:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20624:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "20624:3:14"
																		},
																		"nativeSrc": "20624:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "20624:14:14"
																	},
																	{
																		"hexValue": "436f6e74726163743a204e656564204d696e746f",
																		"kind": "string",
																		"nativeSrc": "20640:22:14",
																		"nodeType": "YulLiteral",
																		"src": "20640:22:14",
																		"type": "",
																		"value": "Contract: Need Minto"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20617:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "20617:6:14"
																},
																"nativeSrc": "20617:46:14",
																"nodeType": "YulFunctionCall",
																"src": "20617:46:14"
															},
															"nativeSrc": "20617:46:14",
															"nodeType": "YulExpressionStatement",
															"src": "20617:46:14"
														}
													]
												},
												"name": "store_literal_in_memory_bd61e59b58c0d60bfbdd7c0883e85825d806ae73957bff921021d8f621b56a1e",
												"nativeSrc": "20500:170:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20598:6:14",
														"nodeType": "YulTypedName",
														"src": "20598:6:14",
														"type": ""
													}
												],
												"src": "20500:170:14"
											},
											{
												"body": {
													"nativeSrc": "20822:220:14",
													"nodeType": "YulBlock",
													"src": "20822:220:14",
													"statements": [
														{
															"nativeSrc": "20832:74:14",
															"nodeType": "YulAssignment",
															"src": "20832:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20898:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "20898:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20903:2:14",
																		"nodeType": "YulLiteral",
																		"src": "20903:2:14",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20839:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "20839:58:14"
																},
																"nativeSrc": "20839:67:14",
																"nodeType": "YulFunctionCall",
																"src": "20839:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20832:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "20832:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21004:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "21004:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bd61e59b58c0d60bfbdd7c0883e85825d806ae73957bff921021d8f621b56a1e",
																	"nativeSrc": "20915:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "20915:88:14"
																},
																"nativeSrc": "20915:93:14",
																"nodeType": "YulFunctionCall",
																"src": "20915:93:14"
															},
															"nativeSrc": "20915:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "20915:93:14"
														},
														{
															"nativeSrc": "21017:19:14",
															"nodeType": "YulAssignment",
															"src": "21017:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21028:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "21028:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21033:2:14",
																		"nodeType": "YulLiteral",
																		"src": "21033:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21024:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "21024:3:14"
																},
																"nativeSrc": "21024:12:14",
																"nodeType": "YulFunctionCall",
																"src": "21024:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21017:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "21017:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bd61e59b58c0d60bfbdd7c0883e85825d806ae73957bff921021d8f621b56a1e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20676:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20810:3:14",
														"nodeType": "YulTypedName",
														"src": "20810:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20818:3:14",
														"nodeType": "YulTypedName",
														"src": "20818:3:14",
														"type": ""
													}
												],
												"src": "20676:366:14"
											},
											{
												"body": {
													"nativeSrc": "21219:248:14",
													"nodeType": "YulBlock",
													"src": "21219:248:14",
													"statements": [
														{
															"nativeSrc": "21229:26:14",
															"nodeType": "YulAssignment",
															"src": "21229:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21241:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "21241:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21252:2:14",
																		"nodeType": "YulLiteral",
																		"src": "21252:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21237:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "21237:3:14"
																},
																"nativeSrc": "21237:18:14",
																"nodeType": "YulFunctionCall",
																"src": "21237:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21229:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "21229:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21276:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "21276:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21287:1:14",
																				"nodeType": "YulLiteral",
																				"src": "21287:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21272:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "21272:3:14"
																		},
																		"nativeSrc": "21272:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "21272:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21295:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "21295:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21301:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "21301:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21291:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "21291:3:14"
																		},
																		"nativeSrc": "21291:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "21291:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21265:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "21265:6:14"
																},
																"nativeSrc": "21265:47:14",
																"nodeType": "YulFunctionCall",
																"src": "21265:47:14"
															},
															"nativeSrc": "21265:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "21265:47:14"
														},
														{
															"nativeSrc": "21321:139:14",
															"nodeType": "YulAssignment",
															"src": "21321:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21455:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "21455:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bd61e59b58c0d60bfbdd7c0883e85825d806ae73957bff921021d8f621b56a1e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21329:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "21329:124:14"
																},
																"nativeSrc": "21329:131:14",
																"nodeType": "YulFunctionCall",
																"src": "21329:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21321:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "21321:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bd61e59b58c0d60bfbdd7c0883e85825d806ae73957bff921021d8f621b56a1e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21048:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21199:9:14",
														"nodeType": "YulTypedName",
														"src": "21199:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21214:4:14",
														"nodeType": "YulTypedName",
														"src": "21214:4:14",
														"type": ""
													}
												],
												"src": "21048:419:14"
											},
											{
												"body": {
													"nativeSrc": "21501:152:14",
													"nodeType": "YulBlock",
													"src": "21501:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21518:1:14",
																		"nodeType": "YulLiteral",
																		"src": "21518:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21521:77:14",
																		"nodeType": "YulLiteral",
																		"src": "21521:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21511:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "21511:6:14"
																},
																"nativeSrc": "21511:88:14",
																"nodeType": "YulFunctionCall",
																"src": "21511:88:14"
															},
															"nativeSrc": "21511:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "21511:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21615:1:14",
																		"nodeType": "YulLiteral",
																		"src": "21615:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21618:4:14",
																		"nodeType": "YulLiteral",
																		"src": "21618:4:14",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21608:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "21608:6:14"
																},
																"nativeSrc": "21608:15:14",
																"nodeType": "YulFunctionCall",
																"src": "21608:15:14"
															},
															"nativeSrc": "21608:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "21608:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21639:1:14",
																		"nodeType": "YulLiteral",
																		"src": "21639:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21642:4:14",
																		"nodeType": "YulLiteral",
																		"src": "21642:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "21632:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "21632:6:14"
																},
																"nativeSrc": "21632:15:14",
																"nodeType": "YulFunctionCall",
																"src": "21632:15:14"
															},
															"nativeSrc": "21632:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "21632:15:14"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "21473:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "21473:180:14"
											},
											{
												"body": {
													"nativeSrc": "21703:147:14",
													"nodeType": "YulBlock",
													"src": "21703:147:14",
													"statements": [
														{
															"nativeSrc": "21713:25:14",
															"nodeType": "YulAssignment",
															"src": "21713:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21736:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "21736:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21718:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "21718:17:14"
																},
																"nativeSrc": "21718:20:14",
																"nodeType": "YulFunctionCall",
																"src": "21718:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "21713:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "21713:1:14"
																}
															]
														},
														{
															"nativeSrc": "21747:25:14",
															"nodeType": "YulAssignment",
															"src": "21747:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "21770:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "21770:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21752:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "21752:17:14"
																},
																"nativeSrc": "21752:20:14",
																"nodeType": "YulFunctionCall",
																"src": "21752:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "21747:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "21747:1:14"
																}
															]
														},
														{
															"nativeSrc": "21781:16:14",
															"nodeType": "YulAssignment",
															"src": "21781:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21792:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "21792:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "21795:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "21795:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21788:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "21788:3:14"
																},
																"nativeSrc": "21788:9:14",
																"nodeType": "YulFunctionCall",
																"src": "21788:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "21781:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "21781:3:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21821:22:14",
																"nodeType": "YulBlock",
																"src": "21821:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "21823:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "21823:16:14"
																			},
																			"nativeSrc": "21823:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "21823:18:14"
																		},
																		"nativeSrc": "21823:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "21823:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21813:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "21813:1:14"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "21816:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "21816:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "21810:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "21810:2:14"
																},
																"nativeSrc": "21810:10:14",
																"nodeType": "YulFunctionCall",
																"src": "21810:10:14"
															},
															"nativeSrc": "21807:36:14",
															"nodeType": "YulIf",
															"src": "21807:36:14"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "21659:191:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "21690:1:14",
														"nodeType": "YulTypedName",
														"src": "21690:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "21693:1:14",
														"nodeType": "YulTypedName",
														"src": "21693:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "21699:3:14",
														"nodeType": "YulTypedName",
														"src": "21699:3:14",
														"type": ""
													}
												],
												"src": "21659:191:14"
											},
											{
												"body": {
													"nativeSrc": "21962:73:14",
													"nodeType": "YulBlock",
													"src": "21962:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21984:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "21984:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21992:1:14",
																				"nodeType": "YulLiteral",
																				"src": "21992:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21980:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "21980:3:14"
																		},
																		"nativeSrc": "21980:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "21980:14:14"
																	},
																	{
																		"hexValue": "436f6e74726163743a20537570706c7920436170206578636565646564",
																		"kind": "string",
																		"nativeSrc": "21996:31:14",
																		"nodeType": "YulLiteral",
																		"src": "21996:31:14",
																		"type": "",
																		"value": "Contract: Supply Cap exceeded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21973:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "21973:6:14"
																},
																"nativeSrc": "21973:55:14",
																"nodeType": "YulFunctionCall",
																"src": "21973:55:14"
															},
															"nativeSrc": "21973:55:14",
															"nodeType": "YulExpressionStatement",
															"src": "21973:55:14"
														}
													]
												},
												"name": "store_literal_in_memory_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79",
												"nativeSrc": "21856:179:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21954:6:14",
														"nodeType": "YulTypedName",
														"src": "21954:6:14",
														"type": ""
													}
												],
												"src": "21856:179:14"
											},
											{
												"body": {
													"nativeSrc": "22187:220:14",
													"nodeType": "YulBlock",
													"src": "22187:220:14",
													"statements": [
														{
															"nativeSrc": "22197:74:14",
															"nodeType": "YulAssignment",
															"src": "22197:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22263:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "22263:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22268:2:14",
																		"nodeType": "YulLiteral",
																		"src": "22268:2:14",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22204:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "22204:58:14"
																},
																"nativeSrc": "22204:67:14",
																"nodeType": "YulFunctionCall",
																"src": "22204:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22197:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "22197:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22369:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "22369:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79",
																	"nativeSrc": "22280:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "22280:88:14"
																},
																"nativeSrc": "22280:93:14",
																"nodeType": "YulFunctionCall",
																"src": "22280:93:14"
															},
															"nativeSrc": "22280:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "22280:93:14"
														},
														{
															"nativeSrc": "22382:19:14",
															"nodeType": "YulAssignment",
															"src": "22382:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22393:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "22393:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22398:2:14",
																		"nodeType": "YulLiteral",
																		"src": "22398:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22389:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "22389:3:14"
																},
																"nativeSrc": "22389:12:14",
																"nodeType": "YulFunctionCall",
																"src": "22389:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22382:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "22382:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22041:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22175:3:14",
														"nodeType": "YulTypedName",
														"src": "22175:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22183:3:14",
														"nodeType": "YulTypedName",
														"src": "22183:3:14",
														"type": ""
													}
												],
												"src": "22041:366:14"
											},
											{
												"body": {
													"nativeSrc": "22584:248:14",
													"nodeType": "YulBlock",
													"src": "22584:248:14",
													"statements": [
														{
															"nativeSrc": "22594:26:14",
															"nodeType": "YulAssignment",
															"src": "22594:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22606:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "22606:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22617:2:14",
																		"nodeType": "YulLiteral",
																		"src": "22617:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22602:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "22602:3:14"
																},
																"nativeSrc": "22602:18:14",
																"nodeType": "YulFunctionCall",
																"src": "22602:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22594:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "22594:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22641:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "22641:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22652:1:14",
																				"nodeType": "YulLiteral",
																				"src": "22652:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22637:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "22637:3:14"
																		},
																		"nativeSrc": "22637:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "22637:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22660:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "22660:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22666:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "22666:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22656:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "22656:3:14"
																		},
																		"nativeSrc": "22656:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "22656:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22630:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "22630:6:14"
																},
																"nativeSrc": "22630:47:14",
																"nodeType": "YulFunctionCall",
																"src": "22630:47:14"
															},
															"nativeSrc": "22630:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "22630:47:14"
														},
														{
															"nativeSrc": "22686:139:14",
															"nodeType": "YulAssignment",
															"src": "22686:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22820:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "22820:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22694:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "22694:124:14"
																},
																"nativeSrc": "22694:131:14",
																"nodeType": "YulFunctionCall",
																"src": "22694:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22686:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "22686:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22413:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22564:9:14",
														"nodeType": "YulTypedName",
														"src": "22564:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22579:4:14",
														"nodeType": "YulTypedName",
														"src": "22579:4:14",
														"type": ""
													}
												],
												"src": "22413:419:14"
											},
											{
												"body": {
													"nativeSrc": "22964:206:14",
													"nodeType": "YulBlock",
													"src": "22964:206:14",
													"statements": [
														{
															"nativeSrc": "22974:26:14",
															"nodeType": "YulAssignment",
															"src": "22974:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22986:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "22986:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22997:2:14",
																		"nodeType": "YulLiteral",
																		"src": "22997:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22982:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "22982:3:14"
																},
																"nativeSrc": "22982:18:14",
																"nodeType": "YulFunctionCall",
																"src": "22982:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22974:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "22974:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23054:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "23054:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23067:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "23067:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23078:1:14",
																				"nodeType": "YulLiteral",
																				"src": "23078:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23063:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "23063:3:14"
																		},
																		"nativeSrc": "23063:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "23063:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "23010:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "23010:43:14"
																},
																"nativeSrc": "23010:71:14",
																"nodeType": "YulFunctionCall",
																"src": "23010:71:14"
															},
															"nativeSrc": "23010:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "23010:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "23135:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "23135:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23148:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "23148:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23159:2:14",
																				"nodeType": "YulLiteral",
																				"src": "23159:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23144:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "23144:3:14"
																		},
																		"nativeSrc": "23144:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "23144:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23091:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "23091:43:14"
																},
																"nativeSrc": "23091:72:14",
																"nodeType": "YulFunctionCall",
																"src": "23091:72:14"
															},
															"nativeSrc": "23091:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "23091:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "22838:332:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22928:9:14",
														"nodeType": "YulTypedName",
														"src": "22928:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22940:6:14",
														"nodeType": "YulTypedName",
														"src": "22940:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22948:6:14",
														"nodeType": "YulTypedName",
														"src": "22948:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22959:4:14",
														"nodeType": "YulTypedName",
														"src": "22959:4:14",
														"type": ""
													}
												],
												"src": "22838:332:14"
											},
											{
												"body": {
													"nativeSrc": "23244:66:14",
													"nodeType": "YulBlock",
													"src": "23244:66:14",
													"statements": [
														{
															"nativeSrc": "23254:50:14",
															"nodeType": "YulAssignment",
															"src": "23254:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23298:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "23298:5:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "23267:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "23267:30:14"
																},
																"nativeSrc": "23267:37:14",
																"nodeType": "YulFunctionCall",
																"src": "23267:37:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "23254:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "23254:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_address_payable_to_t_address",
												"nativeSrc": "23176:134:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23224:5:14",
														"nodeType": "YulTypedName",
														"src": "23224:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "23234:9:14",
														"nodeType": "YulTypedName",
														"src": "23234:9:14",
														"type": ""
													}
												],
												"src": "23176:134:14"
											},
											{
												"body": {
													"nativeSrc": "23389:74:14",
													"nodeType": "YulBlock",
													"src": "23389:74:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23406:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "23406:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "23450:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "23450:5:14"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_address_payable_to_t_address",
																			"nativeSrc": "23411:38:14",
																			"nodeType": "YulIdentifier",
																			"src": "23411:38:14"
																		},
																		"nativeSrc": "23411:45:14",
																		"nodeType": "YulFunctionCall",
																		"src": "23411:45:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23399:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "23399:6:14"
																},
																"nativeSrc": "23399:58:14",
																"nodeType": "YulFunctionCall",
																"src": "23399:58:14"
															},
															"nativeSrc": "23399:58:14",
															"nodeType": "YulExpressionStatement",
															"src": "23399:58:14"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_fromStack",
												"nativeSrc": "23316:147:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23377:5:14",
														"nodeType": "YulTypedName",
														"src": "23377:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "23384:3:14",
														"nodeType": "YulTypedName",
														"src": "23384:3:14",
														"type": ""
													}
												],
												"src": "23316:147:14"
											},
											{
												"body": {
													"nativeSrc": "23631:296:14",
													"nodeType": "YulBlock",
													"src": "23631:296:14",
													"statements": [
														{
															"nativeSrc": "23641:26:14",
															"nodeType": "YulAssignment",
															"src": "23641:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23653:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "23653:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23664:2:14",
																		"nodeType": "YulLiteral",
																		"src": "23664:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23649:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "23649:3:14"
																},
																"nativeSrc": "23649:18:14",
																"nodeType": "YulFunctionCall",
																"src": "23649:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23641:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "23641:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23729:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "23729:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23742:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "23742:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23753:1:14",
																				"nodeType": "YulLiteral",
																				"src": "23753:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23738:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "23738:3:14"
																		},
																		"nativeSrc": "23738:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "23738:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_fromStack",
																	"nativeSrc": "23677:51:14",
																	"nodeType": "YulIdentifier",
																	"src": "23677:51:14"
																},
																"nativeSrc": "23677:79:14",
																"nodeType": "YulFunctionCall",
																"src": "23677:79:14"
															},
															"nativeSrc": "23677:79:14",
															"nodeType": "YulExpressionStatement",
															"src": "23677:79:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "23810:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "23810:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23823:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "23823:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23834:2:14",
																				"nodeType": "YulLiteral",
																				"src": "23834:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23819:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "23819:3:14"
																		},
																		"nativeSrc": "23819:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "23819:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23766:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "23766:43:14"
																},
																"nativeSrc": "23766:72:14",
																"nodeType": "YulFunctionCall",
																"src": "23766:72:14"
															},
															"nativeSrc": "23766:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "23766:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "23892:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "23892:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23905:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "23905:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23916:2:14",
																				"nodeType": "YulLiteral",
																				"src": "23916:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23901:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "23901:3:14"
																		},
																		"nativeSrc": "23901:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "23901:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23848:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "23848:43:14"
																},
																"nativeSrc": "23848:72:14",
																"nodeType": "YulFunctionCall",
																"src": "23848:72:14"
															},
															"nativeSrc": "23848:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "23848:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "23469:458:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23587:9:14",
														"nodeType": "YulTypedName",
														"src": "23587:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "23599:6:14",
														"nodeType": "YulTypedName",
														"src": "23599:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "23607:6:14",
														"nodeType": "YulTypedName",
														"src": "23607:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23615:6:14",
														"nodeType": "YulTypedName",
														"src": "23615:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23626:4:14",
														"nodeType": "YulTypedName",
														"src": "23626:4:14",
														"type": ""
													}
												],
												"src": "23469:458:14"
											},
											{
												"body": {
													"nativeSrc": "24039:67:14",
													"nodeType": "YulBlock",
													"src": "24039:67:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "24061:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "24061:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24069:1:14",
																				"nodeType": "YulLiteral",
																				"src": "24069:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24057:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "24057:3:14"
																		},
																		"nativeSrc": "24057:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "24057:14:14"
																	},
																	{
																		"hexValue": "436f6e74726163743a204e656564204275726e66726f6d",
																		"kind": "string",
																		"nativeSrc": "24073:25:14",
																		"nodeType": "YulLiteral",
																		"src": "24073:25:14",
																		"type": "",
																		"value": "Contract: Need Burnfrom"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24050:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "24050:6:14"
																},
																"nativeSrc": "24050:49:14",
																"nodeType": "YulFunctionCall",
																"src": "24050:49:14"
															},
															"nativeSrc": "24050:49:14",
															"nodeType": "YulExpressionStatement",
															"src": "24050:49:14"
														}
													]
												},
												"name": "store_literal_in_memory_961af01899b104abd9a52cd42f7f5de7ebb564a1e56e1cf3c3fda073f51fffa0",
												"nativeSrc": "23933:173:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "24031:6:14",
														"nodeType": "YulTypedName",
														"src": "24031:6:14",
														"type": ""
													}
												],
												"src": "23933:173:14"
											},
											{
												"body": {
													"nativeSrc": "24258:220:14",
													"nodeType": "YulBlock",
													"src": "24258:220:14",
													"statements": [
														{
															"nativeSrc": "24268:74:14",
															"nodeType": "YulAssignment",
															"src": "24268:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24334:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "24334:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24339:2:14",
																		"nodeType": "YulLiteral",
																		"src": "24339:2:14",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24275:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "24275:58:14"
																},
																"nativeSrc": "24275:67:14",
																"nodeType": "YulFunctionCall",
																"src": "24275:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24268:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "24268:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24440:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "24440:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_961af01899b104abd9a52cd42f7f5de7ebb564a1e56e1cf3c3fda073f51fffa0",
																	"nativeSrc": "24351:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "24351:88:14"
																},
																"nativeSrc": "24351:93:14",
																"nodeType": "YulFunctionCall",
																"src": "24351:93:14"
															},
															"nativeSrc": "24351:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "24351:93:14"
														},
														{
															"nativeSrc": "24453:19:14",
															"nodeType": "YulAssignment",
															"src": "24453:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24464:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "24464:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24469:2:14",
																		"nodeType": "YulLiteral",
																		"src": "24469:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24460:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "24460:3:14"
																},
																"nativeSrc": "24460:12:14",
																"nodeType": "YulFunctionCall",
																"src": "24460:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24453:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "24453:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_961af01899b104abd9a52cd42f7f5de7ebb564a1e56e1cf3c3fda073f51fffa0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "24112:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24246:3:14",
														"nodeType": "YulTypedName",
														"src": "24246:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24254:3:14",
														"nodeType": "YulTypedName",
														"src": "24254:3:14",
														"type": ""
													}
												],
												"src": "24112:366:14"
											},
											{
												"body": {
													"nativeSrc": "24655:248:14",
													"nodeType": "YulBlock",
													"src": "24655:248:14",
													"statements": [
														{
															"nativeSrc": "24665:26:14",
															"nodeType": "YulAssignment",
															"src": "24665:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24677:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "24677:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24688:2:14",
																		"nodeType": "YulLiteral",
																		"src": "24688:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24673:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "24673:3:14"
																},
																"nativeSrc": "24673:18:14",
																"nodeType": "YulFunctionCall",
																"src": "24673:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24665:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "24665:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24712:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "24712:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24723:1:14",
																				"nodeType": "YulLiteral",
																				"src": "24723:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24708:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "24708:3:14"
																		},
																		"nativeSrc": "24708:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "24708:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24731:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "24731:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24737:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "24737:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24727:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "24727:3:14"
																		},
																		"nativeSrc": "24727:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "24727:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24701:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "24701:6:14"
																},
																"nativeSrc": "24701:47:14",
																"nodeType": "YulFunctionCall",
																"src": "24701:47:14"
															},
															"nativeSrc": "24701:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "24701:47:14"
														},
														{
															"nativeSrc": "24757:139:14",
															"nodeType": "YulAssignment",
															"src": "24757:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "24891:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "24891:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_961af01899b104abd9a52cd42f7f5de7ebb564a1e56e1cf3c3fda073f51fffa0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24765:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "24765:124:14"
																},
																"nativeSrc": "24765:131:14",
																"nodeType": "YulFunctionCall",
																"src": "24765:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24757:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "24757:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_961af01899b104abd9a52cd42f7f5de7ebb564a1e56e1cf3c3fda073f51fffa0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "24484:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24635:9:14",
														"nodeType": "YulTypedName",
														"src": "24635:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24650:4:14",
														"nodeType": "YulTypedName",
														"src": "24650:4:14",
														"type": ""
													}
												],
												"src": "24484:419:14"
											},
											{
												"body": {
													"nativeSrc": "25063:288:14",
													"nodeType": "YulBlock",
													"src": "25063:288:14",
													"statements": [
														{
															"nativeSrc": "25073:26:14",
															"nodeType": "YulAssignment",
															"src": "25073:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25085:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "25085:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25096:2:14",
																		"nodeType": "YulLiteral",
																		"src": "25096:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25081:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "25081:3:14"
																},
																"nativeSrc": "25081:18:14",
																"nodeType": "YulFunctionCall",
																"src": "25081:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25073:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "25073:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "25153:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "25153:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25166:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "25166:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25177:1:14",
																				"nodeType": "YulLiteral",
																				"src": "25177:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25162:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "25162:3:14"
																		},
																		"nativeSrc": "25162:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "25162:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "25109:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "25109:43:14"
																},
																"nativeSrc": "25109:71:14",
																"nodeType": "YulFunctionCall",
																"src": "25109:71:14"
															},
															"nativeSrc": "25109:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "25109:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "25234:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "25234:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25247:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "25247:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25258:2:14",
																				"nodeType": "YulLiteral",
																				"src": "25258:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25243:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "25243:3:14"
																		},
																		"nativeSrc": "25243:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "25243:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "25190:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "25190:43:14"
																},
																"nativeSrc": "25190:72:14",
																"nodeType": "YulFunctionCall",
																"src": "25190:72:14"
															},
															"nativeSrc": "25190:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "25190:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "25316:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "25316:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25329:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "25329:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25340:2:14",
																				"nodeType": "YulLiteral",
																				"src": "25340:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25325:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "25325:3:14"
																		},
																		"nativeSrc": "25325:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "25325:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "25272:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "25272:43:14"
																},
																"nativeSrc": "25272:72:14",
																"nodeType": "YulFunctionCall",
																"src": "25272:72:14"
															},
															"nativeSrc": "25272:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "25272:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "24909:442:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25019:9:14",
														"nodeType": "YulTypedName",
														"src": "25019:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "25031:6:14",
														"nodeType": "YulTypedName",
														"src": "25031:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "25039:6:14",
														"nodeType": "YulTypedName",
														"src": "25039:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "25047:6:14",
														"nodeType": "YulTypedName",
														"src": "25047:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25058:4:14",
														"nodeType": "YulTypedName",
														"src": "25058:4:14",
														"type": ""
													}
												],
												"src": "24909:442:14"
											},
											{
												"body": {
													"nativeSrc": "25463:60:14",
													"nodeType": "YulBlock",
													"src": "25463:60:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "25485:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "25485:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25493:1:14",
																				"nodeType": "YulLiteral",
																				"src": "25493:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25481:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "25481:3:14"
																		},
																		"nativeSrc": "25481:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "25481:14:14"
																	},
																	{
																		"hexValue": "4d696e74696e672064697361626c6564",
																		"kind": "string",
																		"nativeSrc": "25497:18:14",
																		"nodeType": "YulLiteral",
																		"src": "25497:18:14",
																		"type": "",
																		"value": "Minting disabled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25474:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "25474:6:14"
																},
																"nativeSrc": "25474:42:14",
																"nodeType": "YulFunctionCall",
																"src": "25474:42:14"
															},
															"nativeSrc": "25474:42:14",
															"nodeType": "YulExpressionStatement",
															"src": "25474:42:14"
														}
													]
												},
												"name": "store_literal_in_memory_9dc314731a2c8965068716b51a74d383c5485fe34630c16f5621cb0575192124",
												"nativeSrc": "25357:166:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "25455:6:14",
														"nodeType": "YulTypedName",
														"src": "25455:6:14",
														"type": ""
													}
												],
												"src": "25357:166:14"
											},
											{
												"body": {
													"nativeSrc": "25675:220:14",
													"nodeType": "YulBlock",
													"src": "25675:220:14",
													"statements": [
														{
															"nativeSrc": "25685:74:14",
															"nodeType": "YulAssignment",
															"src": "25685:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25751:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "25751:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25756:2:14",
																		"nodeType": "YulLiteral",
																		"src": "25756:2:14",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25692:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "25692:58:14"
																},
																"nativeSrc": "25692:67:14",
																"nodeType": "YulFunctionCall",
																"src": "25692:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "25685:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "25685:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25857:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "25857:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9dc314731a2c8965068716b51a74d383c5485fe34630c16f5621cb0575192124",
																	"nativeSrc": "25768:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "25768:88:14"
																},
																"nativeSrc": "25768:93:14",
																"nodeType": "YulFunctionCall",
																"src": "25768:93:14"
															},
															"nativeSrc": "25768:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "25768:93:14"
														},
														{
															"nativeSrc": "25870:19:14",
															"nodeType": "YulAssignment",
															"src": "25870:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25881:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "25881:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25886:2:14",
																		"nodeType": "YulLiteral",
																		"src": "25886:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25877:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "25877:3:14"
																},
																"nativeSrc": "25877:12:14",
																"nodeType": "YulFunctionCall",
																"src": "25877:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "25870:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "25870:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9dc314731a2c8965068716b51a74d383c5485fe34630c16f5621cb0575192124_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "25529:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "25663:3:14",
														"nodeType": "YulTypedName",
														"src": "25663:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "25671:3:14",
														"nodeType": "YulTypedName",
														"src": "25671:3:14",
														"type": ""
													}
												],
												"src": "25529:366:14"
											},
											{
												"body": {
													"nativeSrc": "26072:248:14",
													"nodeType": "YulBlock",
													"src": "26072:248:14",
													"statements": [
														{
															"nativeSrc": "26082:26:14",
															"nodeType": "YulAssignment",
															"src": "26082:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26094:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "26094:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26105:2:14",
																		"nodeType": "YulLiteral",
																		"src": "26105:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26090:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "26090:3:14"
																},
																"nativeSrc": "26090:18:14",
																"nodeType": "YulFunctionCall",
																"src": "26090:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26082:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "26082:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26129:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "26129:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26140:1:14",
																				"nodeType": "YulLiteral",
																				"src": "26140:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26125:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "26125:3:14"
																		},
																		"nativeSrc": "26125:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "26125:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "26148:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "26148:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "26154:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "26154:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "26144:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "26144:3:14"
																		},
																		"nativeSrc": "26144:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "26144:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26118:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "26118:6:14"
																},
																"nativeSrc": "26118:47:14",
																"nodeType": "YulFunctionCall",
																"src": "26118:47:14"
															},
															"nativeSrc": "26118:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "26118:47:14"
														},
														{
															"nativeSrc": "26174:139:14",
															"nodeType": "YulAssignment",
															"src": "26174:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "26308:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "26308:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9dc314731a2c8965068716b51a74d383c5485fe34630c16f5621cb0575192124_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "26182:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "26182:124:14"
																},
																"nativeSrc": "26182:131:14",
																"nodeType": "YulFunctionCall",
																"src": "26182:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26174:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "26174:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9dc314731a2c8965068716b51a74d383c5485fe34630c16f5621cb0575192124__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "25901:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26052:9:14",
														"nodeType": "YulTypedName",
														"src": "26052:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "26067:4:14",
														"nodeType": "YulTypedName",
														"src": "26067:4:14",
														"type": ""
													}
												],
												"src": "25901:419:14"
											},
											{
												"body": {
													"nativeSrc": "26432:63:14",
													"nodeType": "YulBlock",
													"src": "26432:63:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "26454:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "26454:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26462:1:14",
																				"nodeType": "YulLiteral",
																				"src": "26462:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26450:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "26450:3:14"
																		},
																		"nativeSrc": "26450:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "26450:14:14"
																	},
																	{
																		"hexValue": "436f6e74726163743a204e656564204d696e74",
																		"kind": "string",
																		"nativeSrc": "26466:21:14",
																		"nodeType": "YulLiteral",
																		"src": "26466:21:14",
																		"type": "",
																		"value": "Contract: Need Mint"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26443:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "26443:6:14"
																},
																"nativeSrc": "26443:45:14",
																"nodeType": "YulFunctionCall",
																"src": "26443:45:14"
															},
															"nativeSrc": "26443:45:14",
															"nodeType": "YulExpressionStatement",
															"src": "26443:45:14"
														}
													]
												},
												"name": "store_literal_in_memory_120df7b0ebb4e0f457cdf31a88cea9b4d2e1fd0ec041e7228fb01895c54a5b9f",
												"nativeSrc": "26326:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "26424:6:14",
														"nodeType": "YulTypedName",
														"src": "26424:6:14",
														"type": ""
													}
												],
												"src": "26326:169:14"
											},
											{
												"body": {
													"nativeSrc": "26647:220:14",
													"nodeType": "YulBlock",
													"src": "26647:220:14",
													"statements": [
														{
															"nativeSrc": "26657:74:14",
															"nodeType": "YulAssignment",
															"src": "26657:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26723:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "26723:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26728:2:14",
																		"nodeType": "YulLiteral",
																		"src": "26728:2:14",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "26664:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "26664:58:14"
																},
																"nativeSrc": "26664:67:14",
																"nodeType": "YulFunctionCall",
																"src": "26664:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "26657:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "26657:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26829:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "26829:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_120df7b0ebb4e0f457cdf31a88cea9b4d2e1fd0ec041e7228fb01895c54a5b9f",
																	"nativeSrc": "26740:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "26740:88:14"
																},
																"nativeSrc": "26740:93:14",
																"nodeType": "YulFunctionCall",
																"src": "26740:93:14"
															},
															"nativeSrc": "26740:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "26740:93:14"
														},
														{
															"nativeSrc": "26842:19:14",
															"nodeType": "YulAssignment",
															"src": "26842:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26853:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "26853:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26858:2:14",
																		"nodeType": "YulLiteral",
																		"src": "26858:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26849:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "26849:3:14"
																},
																"nativeSrc": "26849:12:14",
																"nodeType": "YulFunctionCall",
																"src": "26849:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "26842:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "26842:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_120df7b0ebb4e0f457cdf31a88cea9b4d2e1fd0ec041e7228fb01895c54a5b9f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "26501:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "26635:3:14",
														"nodeType": "YulTypedName",
														"src": "26635:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "26643:3:14",
														"nodeType": "YulTypedName",
														"src": "26643:3:14",
														"type": ""
													}
												],
												"src": "26501:366:14"
											},
											{
												"body": {
													"nativeSrc": "27044:248:14",
													"nodeType": "YulBlock",
													"src": "27044:248:14",
													"statements": [
														{
															"nativeSrc": "27054:26:14",
															"nodeType": "YulAssignment",
															"src": "27054:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "27066:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "27066:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27077:2:14",
																		"nodeType": "YulLiteral",
																		"src": "27077:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27062:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "27062:3:14"
																},
																"nativeSrc": "27062:18:14",
																"nodeType": "YulFunctionCall",
																"src": "27062:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27054:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "27054:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27101:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "27101:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27112:1:14",
																				"nodeType": "YulLiteral",
																				"src": "27112:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27097:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "27097:3:14"
																		},
																		"nativeSrc": "27097:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "27097:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "27120:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "27120:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "27126:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "27126:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "27116:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "27116:3:14"
																		},
																		"nativeSrc": "27116:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "27116:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27090:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "27090:6:14"
																},
																"nativeSrc": "27090:47:14",
																"nodeType": "YulFunctionCall",
																"src": "27090:47:14"
															},
															"nativeSrc": "27090:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "27090:47:14"
														},
														{
															"nativeSrc": "27146:139:14",
															"nodeType": "YulAssignment",
															"src": "27146:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "27280:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "27280:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_120df7b0ebb4e0f457cdf31a88cea9b4d2e1fd0ec041e7228fb01895c54a5b9f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "27154:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "27154:124:14"
																},
																"nativeSrc": "27154:131:14",
																"nodeType": "YulFunctionCall",
																"src": "27154:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27146:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "27146:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_120df7b0ebb4e0f457cdf31a88cea9b4d2e1fd0ec041e7228fb01895c54a5b9f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "26873:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27024:9:14",
														"nodeType": "YulTypedName",
														"src": "27024:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "27039:4:14",
														"nodeType": "YulTypedName",
														"src": "27039:4:14",
														"type": ""
													}
												],
												"src": "26873:419:14"
											},
											{
												"body": {
													"nativeSrc": "27404:55:14",
													"nodeType": "YulBlock",
													"src": "27404:55:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "27426:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "27426:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27434:1:14",
																				"nodeType": "YulLiteral",
																				"src": "27434:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27422:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "27422:3:14"
																		},
																		"nativeSrc": "27422:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "27422:14:14"
																	},
																	{
																		"hexValue": "4e65656420537570706c79",
																		"kind": "string",
																		"nativeSrc": "27438:13:14",
																		"nodeType": "YulLiteral",
																		"src": "27438:13:14",
																		"type": "",
																		"value": "Need Supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27415:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "27415:6:14"
																},
																"nativeSrc": "27415:37:14",
																"nodeType": "YulFunctionCall",
																"src": "27415:37:14"
															},
															"nativeSrc": "27415:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "27415:37:14"
														}
													]
												},
												"name": "store_literal_in_memory_11191c3e11b0e660fa4fa7e62f4d364ea97ce393c4c6616dd08d6862e6796e25",
												"nativeSrc": "27298:161:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "27396:6:14",
														"nodeType": "YulTypedName",
														"src": "27396:6:14",
														"type": ""
													}
												],
												"src": "27298:161:14"
											},
											{
												"body": {
													"nativeSrc": "27611:220:14",
													"nodeType": "YulBlock",
													"src": "27611:220:14",
													"statements": [
														{
															"nativeSrc": "27621:74:14",
															"nodeType": "YulAssignment",
															"src": "27621:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27687:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "27687:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27692:2:14",
																		"nodeType": "YulLiteral",
																		"src": "27692:2:14",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "27628:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "27628:58:14"
																},
																"nativeSrc": "27628:67:14",
																"nodeType": "YulFunctionCall",
																"src": "27628:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "27621:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "27621:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27793:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "27793:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_11191c3e11b0e660fa4fa7e62f4d364ea97ce393c4c6616dd08d6862e6796e25",
																	"nativeSrc": "27704:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "27704:88:14"
																},
																"nativeSrc": "27704:93:14",
																"nodeType": "YulFunctionCall",
																"src": "27704:93:14"
															},
															"nativeSrc": "27704:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "27704:93:14"
														},
														{
															"nativeSrc": "27806:19:14",
															"nodeType": "YulAssignment",
															"src": "27806:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27817:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "27817:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27822:2:14",
																		"nodeType": "YulLiteral",
																		"src": "27822:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27813:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "27813:3:14"
																},
																"nativeSrc": "27813:12:14",
																"nodeType": "YulFunctionCall",
																"src": "27813:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "27806:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "27806:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_11191c3e11b0e660fa4fa7e62f4d364ea97ce393c4c6616dd08d6862e6796e25_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "27465:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "27599:3:14",
														"nodeType": "YulTypedName",
														"src": "27599:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "27607:3:14",
														"nodeType": "YulTypedName",
														"src": "27607:3:14",
														"type": ""
													}
												],
												"src": "27465:366:14"
											},
											{
												"body": {
													"nativeSrc": "28008:248:14",
													"nodeType": "YulBlock",
													"src": "28008:248:14",
													"statements": [
														{
															"nativeSrc": "28018:26:14",
															"nodeType": "YulAssignment",
															"src": "28018:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "28030:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "28030:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28041:2:14",
																		"nodeType": "YulLiteral",
																		"src": "28041:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28026:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "28026:3:14"
																},
																"nativeSrc": "28026:18:14",
																"nodeType": "YulFunctionCall",
																"src": "28026:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28018:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "28018:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28065:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "28065:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28076:1:14",
																				"nodeType": "YulLiteral",
																				"src": "28076:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28061:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "28061:3:14"
																		},
																		"nativeSrc": "28061:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "28061:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "28084:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "28084:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "28090:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "28090:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "28080:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "28080:3:14"
																		},
																		"nativeSrc": "28080:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "28080:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28054:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "28054:6:14"
																},
																"nativeSrc": "28054:47:14",
																"nodeType": "YulFunctionCall",
																"src": "28054:47:14"
															},
															"nativeSrc": "28054:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "28054:47:14"
														},
														{
															"nativeSrc": "28110:139:14",
															"nodeType": "YulAssignment",
															"src": "28110:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "28244:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "28244:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_11191c3e11b0e660fa4fa7e62f4d364ea97ce393c4c6616dd08d6862e6796e25_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "28118:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "28118:124:14"
																},
																"nativeSrc": "28118:131:14",
																"nodeType": "YulFunctionCall",
																"src": "28118:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28110:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "28110:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_11191c3e11b0e660fa4fa7e62f4d364ea97ce393c4c6616dd08d6862e6796e25__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "27837:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27988:9:14",
														"nodeType": "YulTypedName",
														"src": "27988:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "28003:4:14",
														"nodeType": "YulTypedName",
														"src": "28003:4:14",
														"type": ""
													}
												],
												"src": "27837:419:14"
											},
											{
												"body": {
													"nativeSrc": "28368:72:14",
													"nodeType": "YulBlock",
													"src": "28368:72:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "28390:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "28390:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28398:1:14",
																				"nodeType": "YulLiteral",
																				"src": "28398:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28386:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "28386:3:14"
																		},
																		"nativeSrc": "28386:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "28386:14:14"
																	},
																	{
																		"hexValue": "436f6e74726163743a20537570706c792043617020746f6f206c6f77",
																		"kind": "string",
																		"nativeSrc": "28402:30:14",
																		"nodeType": "YulLiteral",
																		"src": "28402:30:14",
																		"type": "",
																		"value": "Contract: Supply Cap too low"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28379:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "28379:6:14"
																},
																"nativeSrc": "28379:54:14",
																"nodeType": "YulFunctionCall",
																"src": "28379:54:14"
															},
															"nativeSrc": "28379:54:14",
															"nodeType": "YulExpressionStatement",
															"src": "28379:54:14"
														}
													]
												},
												"name": "store_literal_in_memory_77e086eba60b2e28f8cf4f0f10149625654a071ad569481f91828ddb6b36141b",
												"nativeSrc": "28262:178:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "28360:6:14",
														"nodeType": "YulTypedName",
														"src": "28360:6:14",
														"type": ""
													}
												],
												"src": "28262:178:14"
											},
											{
												"body": {
													"nativeSrc": "28592:220:14",
													"nodeType": "YulBlock",
													"src": "28592:220:14",
													"statements": [
														{
															"nativeSrc": "28602:74:14",
															"nodeType": "YulAssignment",
															"src": "28602:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28668:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "28668:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28673:2:14",
																		"nodeType": "YulLiteral",
																		"src": "28673:2:14",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "28609:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "28609:58:14"
																},
																"nativeSrc": "28609:67:14",
																"nodeType": "YulFunctionCall",
																"src": "28609:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "28602:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "28602:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28774:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "28774:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_77e086eba60b2e28f8cf4f0f10149625654a071ad569481f91828ddb6b36141b",
																	"nativeSrc": "28685:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "28685:88:14"
																},
																"nativeSrc": "28685:93:14",
																"nodeType": "YulFunctionCall",
																"src": "28685:93:14"
															},
															"nativeSrc": "28685:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "28685:93:14"
														},
														{
															"nativeSrc": "28787:19:14",
															"nodeType": "YulAssignment",
															"src": "28787:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28798:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "28798:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28803:2:14",
																		"nodeType": "YulLiteral",
																		"src": "28803:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28794:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "28794:3:14"
																},
																"nativeSrc": "28794:12:14",
																"nodeType": "YulFunctionCall",
																"src": "28794:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "28787:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "28787:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_77e086eba60b2e28f8cf4f0f10149625654a071ad569481f91828ddb6b36141b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "28446:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "28580:3:14",
														"nodeType": "YulTypedName",
														"src": "28580:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "28588:3:14",
														"nodeType": "YulTypedName",
														"src": "28588:3:14",
														"type": ""
													}
												],
												"src": "28446:366:14"
											},
											{
												"body": {
													"nativeSrc": "28989:248:14",
													"nodeType": "YulBlock",
													"src": "28989:248:14",
													"statements": [
														{
															"nativeSrc": "28999:26:14",
															"nodeType": "YulAssignment",
															"src": "28999:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "29011:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "29011:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29022:2:14",
																		"nodeType": "YulLiteral",
																		"src": "29022:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29007:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "29007:3:14"
																},
																"nativeSrc": "29007:18:14",
																"nodeType": "YulFunctionCall",
																"src": "29007:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28999:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "28999:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29046:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "29046:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29057:1:14",
																				"nodeType": "YulLiteral",
																				"src": "29057:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29042:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "29042:3:14"
																		},
																		"nativeSrc": "29042:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "29042:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "29065:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "29065:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "29071:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "29071:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "29061:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "29061:3:14"
																		},
																		"nativeSrc": "29061:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "29061:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29035:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "29035:6:14"
																},
																"nativeSrc": "29035:47:14",
																"nodeType": "YulFunctionCall",
																"src": "29035:47:14"
															},
															"nativeSrc": "29035:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "29035:47:14"
														},
														{
															"nativeSrc": "29091:139:14",
															"nodeType": "YulAssignment",
															"src": "29091:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "29225:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "29225:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_77e086eba60b2e28f8cf4f0f10149625654a071ad569481f91828ddb6b36141b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "29099:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "29099:124:14"
																},
																"nativeSrc": "29099:131:14",
																"nodeType": "YulFunctionCall",
																"src": "29099:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29091:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "29091:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_77e086eba60b2e28f8cf4f0f10149625654a071ad569481f91828ddb6b36141b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "28818:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "28969:9:14",
														"nodeType": "YulTypedName",
														"src": "28969:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "28984:4:14",
														"nodeType": "YulTypedName",
														"src": "28984:4:14",
														"type": ""
													}
												],
												"src": "28818:419:14"
											},
											{
												"body": {
													"nativeSrc": "29349:75:14",
													"nodeType": "YulBlock",
													"src": "29349:75:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "29371:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "29371:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29379:1:14",
																				"nodeType": "YulLiteral",
																				"src": "29379:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29367:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "29367:3:14"
																		},
																		"nativeSrc": "29367:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "29367:14:14"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "29383:33:14",
																		"nodeType": "YulLiteral",
																		"src": "29383:33:14",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29360:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "29360:6:14"
																},
																"nativeSrc": "29360:57:14",
																"nodeType": "YulFunctionCall",
																"src": "29360:57:14"
															},
															"nativeSrc": "29360:57:14",
															"nodeType": "YulExpressionStatement",
															"src": "29360:57:14"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "29243:181:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "29341:6:14",
														"nodeType": "YulTypedName",
														"src": "29341:6:14",
														"type": ""
													}
												],
												"src": "29243:181:14"
											},
											{
												"body": {
													"nativeSrc": "29576:220:14",
													"nodeType": "YulBlock",
													"src": "29576:220:14",
													"statements": [
														{
															"nativeSrc": "29586:74:14",
															"nodeType": "YulAssignment",
															"src": "29586:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29652:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "29652:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29657:2:14",
																		"nodeType": "YulLiteral",
																		"src": "29657:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "29593:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "29593:58:14"
																},
																"nativeSrc": "29593:67:14",
																"nodeType": "YulFunctionCall",
																"src": "29593:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "29586:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "29586:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29758:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "29758:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "29669:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "29669:88:14"
																},
																"nativeSrc": "29669:93:14",
																"nodeType": "YulFunctionCall",
																"src": "29669:93:14"
															},
															"nativeSrc": "29669:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "29669:93:14"
														},
														{
															"nativeSrc": "29771:19:14",
															"nodeType": "YulAssignment",
															"src": "29771:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29782:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "29782:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29787:2:14",
																		"nodeType": "YulLiteral",
																		"src": "29787:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29778:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "29778:3:14"
																},
																"nativeSrc": "29778:12:14",
																"nodeType": "YulFunctionCall",
																"src": "29778:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "29771:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "29771:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "29430:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "29564:3:14",
														"nodeType": "YulTypedName",
														"src": "29564:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "29572:3:14",
														"nodeType": "YulTypedName",
														"src": "29572:3:14",
														"type": ""
													}
												],
												"src": "29430:366:14"
											},
											{
												"body": {
													"nativeSrc": "29973:248:14",
													"nodeType": "YulBlock",
													"src": "29973:248:14",
													"statements": [
														{
															"nativeSrc": "29983:26:14",
															"nodeType": "YulAssignment",
															"src": "29983:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "29995:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "29995:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30006:2:14",
																		"nodeType": "YulLiteral",
																		"src": "30006:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29991:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "29991:3:14"
																},
																"nativeSrc": "29991:18:14",
																"nodeType": "YulFunctionCall",
																"src": "29991:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29983:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "29983:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30030:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "30030:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30041:1:14",
																				"nodeType": "YulLiteral",
																				"src": "30041:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30026:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "30026:3:14"
																		},
																		"nativeSrc": "30026:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "30026:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "30049:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "30049:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "30055:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "30055:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "30045:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "30045:3:14"
																		},
																		"nativeSrc": "30045:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "30045:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "30019:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "30019:6:14"
																},
																"nativeSrc": "30019:47:14",
																"nodeType": "YulFunctionCall",
																"src": "30019:47:14"
															},
															"nativeSrc": "30019:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "30019:47:14"
														},
														{
															"nativeSrc": "30075:139:14",
															"nodeType": "YulAssignment",
															"src": "30075:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "30209:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "30209:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "30083:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "30083:124:14"
																},
																"nativeSrc": "30083:131:14",
																"nodeType": "YulFunctionCall",
																"src": "30083:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "30075:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "30075:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "29802:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "29953:9:14",
														"nodeType": "YulTypedName",
														"src": "29953:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "29968:4:14",
														"nodeType": "YulTypedName",
														"src": "29968:4:14",
														"type": ""
													}
												],
												"src": "29802:419:14"
											},
											{
												"body": {
													"nativeSrc": "30353:206:14",
													"nodeType": "YulBlock",
													"src": "30353:206:14",
													"statements": [
														{
															"nativeSrc": "30363:26:14",
															"nodeType": "YulAssignment",
															"src": "30363:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "30375:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "30375:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30386:2:14",
																		"nodeType": "YulLiteral",
																		"src": "30386:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30371:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "30371:3:14"
																},
																"nativeSrc": "30371:18:14",
																"nodeType": "YulFunctionCall",
																"src": "30371:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "30363:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "30363:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "30443:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "30443:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30456:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "30456:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30467:1:14",
																				"nodeType": "YulLiteral",
																				"src": "30467:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30452:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "30452:3:14"
																		},
																		"nativeSrc": "30452:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "30452:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "30399:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "30399:43:14"
																},
																"nativeSrc": "30399:71:14",
																"nodeType": "YulFunctionCall",
																"src": "30399:71:14"
															},
															"nativeSrc": "30399:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "30399:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "30524:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "30524:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30537:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "30537:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30548:2:14",
																				"nodeType": "YulLiteral",
																				"src": "30548:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30533:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "30533:3:14"
																		},
																		"nativeSrc": "30533:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "30533:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "30480:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "30480:43:14"
																},
																"nativeSrc": "30480:72:14",
																"nodeType": "YulFunctionCall",
																"src": "30480:72:14"
															},
															"nativeSrc": "30480:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "30480:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "30227:332:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "30317:9:14",
														"nodeType": "YulTypedName",
														"src": "30317:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "30329:6:14",
														"nodeType": "YulTypedName",
														"src": "30329:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "30337:6:14",
														"nodeType": "YulTypedName",
														"src": "30337:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "30348:4:14",
														"nodeType": "YulTypedName",
														"src": "30348:4:14",
														"type": ""
													}
												],
												"src": "30227:332:14"
											},
											{
												"body": {
													"nativeSrc": "30625:77:14",
													"nodeType": "YulBlock",
													"src": "30625:77:14",
													"statements": [
														{
															"nativeSrc": "30635:22:14",
															"nodeType": "YulAssignment",
															"src": "30635:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "30650:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "30650:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "30644:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "30644:5:14"
																},
																"nativeSrc": "30644:13:14",
																"nodeType": "YulFunctionCall",
																"src": "30644:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "30635:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "30635:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "30690:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "30690:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "30666:23:14",
																	"nodeType": "YulIdentifier",
																	"src": "30666:23:14"
																},
																"nativeSrc": "30666:30:14",
																"nodeType": "YulFunctionCall",
																"src": "30666:30:14"
															},
															"nativeSrc": "30666:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "30666:30:14"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "30565:137:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "30603:6:14",
														"nodeType": "YulTypedName",
														"src": "30603:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "30611:3:14",
														"nodeType": "YulTypedName",
														"src": "30611:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "30619:5:14",
														"nodeType": "YulTypedName",
														"src": "30619:5:14",
														"type": ""
													}
												],
												"src": "30565:137:14"
											},
											{
												"body": {
													"nativeSrc": "30782:271:14",
													"nodeType": "YulBlock",
													"src": "30782:271:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "30828:83:14",
																"nodeType": "YulBlock",
																"src": "30828:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "30830:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "30830:77:14"
																			},
																			"nativeSrc": "30830:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "30830:79:14"
																		},
																		"nativeSrc": "30830:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "30830:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "30803:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "30803:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "30812:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "30812:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "30799:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "30799:3:14"
																		},
																		"nativeSrc": "30799:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "30799:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30824:2:14",
																		"nodeType": "YulLiteral",
																		"src": "30824:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "30795:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "30795:3:14"
																},
																"nativeSrc": "30795:32:14",
																"nodeType": "YulFunctionCall",
																"src": "30795:32:14"
															},
															"nativeSrc": "30792:119:14",
															"nodeType": "YulIf",
															"src": "30792:119:14"
														},
														{
															"nativeSrc": "30921:125:14",
															"nodeType": "YulBlock",
															"src": "30921:125:14",
															"statements": [
																{
																	"nativeSrc": "30936:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "30936:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "30950:1:14",
																		"nodeType": "YulLiteral",
																		"src": "30950:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "30940:6:14",
																			"nodeType": "YulTypedName",
																			"src": "30940:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "30965:71:14",
																	"nodeType": "YulAssignment",
																	"src": "30965:71:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "31008:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "31008:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "31019:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "31019:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "31004:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "31004:3:14"
																				},
																				"nativeSrc": "31004:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "31004:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "31028:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "31028:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "30975:28:14",
																			"nodeType": "YulIdentifier",
																			"src": "30975:28:14"
																		},
																		"nativeSrc": "30975:61:14",
																		"nodeType": "YulFunctionCall",
																		"src": "30975:61:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "30965:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "30965:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "30708:345:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "30752:9:14",
														"nodeType": "YulTypedName",
														"src": "30752:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "30763:7:14",
														"nodeType": "YulTypedName",
														"src": "30763:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "30775:6:14",
														"nodeType": "YulTypedName",
														"src": "30775:6:14",
														"type": ""
													}
												],
												"src": "30708:345:14"
											},
											{
												"body": {
													"nativeSrc": "31213:288:14",
													"nodeType": "YulBlock",
													"src": "31213:288:14",
													"statements": [
														{
															"nativeSrc": "31223:26:14",
															"nodeType": "YulAssignment",
															"src": "31223:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "31235:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "31235:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31246:2:14",
																		"nodeType": "YulLiteral",
																		"src": "31246:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "31231:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "31231:3:14"
																},
																"nativeSrc": "31231:18:14",
																"nodeType": "YulFunctionCall",
																"src": "31231:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "31223:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "31223:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "31303:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "31303:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31316:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "31316:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31327:1:14",
																				"nodeType": "YulLiteral",
																				"src": "31327:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31312:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "31312:3:14"
																		},
																		"nativeSrc": "31312:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "31312:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "31259:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "31259:43:14"
																},
																"nativeSrc": "31259:71:14",
																"nodeType": "YulFunctionCall",
																"src": "31259:71:14"
															},
															"nativeSrc": "31259:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "31259:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "31384:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "31384:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31397:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "31397:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31408:2:14",
																				"nodeType": "YulLiteral",
																				"src": "31408:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31393:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "31393:3:14"
																		},
																		"nativeSrc": "31393:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "31393:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "31340:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "31340:43:14"
																},
																"nativeSrc": "31340:72:14",
																"nodeType": "YulFunctionCall",
																"src": "31340:72:14"
															},
															"nativeSrc": "31340:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "31340:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "31466:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "31466:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31479:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "31479:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31490:2:14",
																				"nodeType": "YulLiteral",
																				"src": "31490:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31475:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "31475:3:14"
																		},
																		"nativeSrc": "31475:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "31475:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "31422:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "31422:43:14"
																},
																"nativeSrc": "31422:72:14",
																"nodeType": "YulFunctionCall",
																"src": "31422:72:14"
															},
															"nativeSrc": "31422:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "31422:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "31059:442:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "31169:9:14",
														"nodeType": "YulTypedName",
														"src": "31169:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "31181:6:14",
														"nodeType": "YulTypedName",
														"src": "31181:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "31189:6:14",
														"nodeType": "YulTypedName",
														"src": "31189:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "31197:6:14",
														"nodeType": "YulTypedName",
														"src": "31197:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "31208:4:14",
														"nodeType": "YulTypedName",
														"src": "31208:4:14",
														"type": ""
													}
												],
												"src": "31059:442:14"
											},
											{
												"body": {
													"nativeSrc": "31565:40:14",
													"nodeType": "YulBlock",
													"src": "31565:40:14",
													"statements": [
														{
															"nativeSrc": "31576:22:14",
															"nodeType": "YulAssignment",
															"src": "31576:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "31592:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "31592:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "31586:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "31586:5:14"
																},
																"nativeSrc": "31586:12:14",
																"nodeType": "YulFunctionCall",
																"src": "31586:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "31576:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "31576:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "31507:98:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "31548:5:14",
														"nodeType": "YulTypedName",
														"src": "31548:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "31558:6:14",
														"nodeType": "YulTypedName",
														"src": "31558:6:14",
														"type": ""
													}
												],
												"src": "31507:98:14"
											},
											{
												"body": {
													"nativeSrc": "31724:34:14",
													"nodeType": "YulBlock",
													"src": "31724:34:14",
													"statements": [
														{
															"nativeSrc": "31734:18:14",
															"nodeType": "YulAssignment",
															"src": "31734:18:14",
															"value": {
																"name": "pos",
																"nativeSrc": "31749:3:14",
																"nodeType": "YulIdentifier",
																"src": "31749:3:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "31734:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "31734:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "31611:147:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "31696:3:14",
														"nodeType": "YulTypedName",
														"src": "31696:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "31701:6:14",
														"nodeType": "YulTypedName",
														"src": "31701:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "31712:11:14",
														"nodeType": "YulTypedName",
														"src": "31712:11:14",
														"type": ""
													}
												],
												"src": "31611:147:14"
											},
											{
												"body": {
													"nativeSrc": "31872:278:14",
													"nodeType": "YulBlock",
													"src": "31872:278:14",
													"statements": [
														{
															"nativeSrc": "31882:52:14",
															"nodeType": "YulVariableDeclaration",
															"src": "31882:52:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "31928:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "31928:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "31896:31:14",
																	"nodeType": "YulIdentifier",
																	"src": "31896:31:14"
																},
																"nativeSrc": "31896:38:14",
																"nodeType": "YulFunctionCall",
																"src": "31896:38:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "31886:6:14",
																	"nodeType": "YulTypedName",
																	"src": "31886:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "31943:95:14",
															"nodeType": "YulAssignment",
															"src": "31943:95:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "32026:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "32026:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "32031:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "32031:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "31950:75:14",
																	"nodeType": "YulIdentifier",
																	"src": "31950:75:14"
																},
																"nativeSrc": "31950:88:14",
																"nodeType": "YulFunctionCall",
																"src": "31950:88:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "31943:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "31943:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "32086:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "32086:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "32093:4:14",
																				"nodeType": "YulLiteral",
																				"src": "32093:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "32082:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "32082:3:14"
																		},
																		"nativeSrc": "32082:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "32082:16:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "32100:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "32100:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "32105:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "32105:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "32047:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "32047:34:14"
																},
																"nativeSrc": "32047:65:14",
																"nodeType": "YulFunctionCall",
																"src": "32047:65:14"
															},
															"nativeSrc": "32047:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "32047:65:14"
														},
														{
															"nativeSrc": "32121:23:14",
															"nodeType": "YulAssignment",
															"src": "32121:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "32132:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "32132:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "32137:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "32137:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "32128:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "32128:3:14"
																},
																"nativeSrc": "32128:16:14",
																"nodeType": "YulFunctionCall",
																"src": "32128:16:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "32121:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "32121:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "31764:386:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "31853:5:14",
														"nodeType": "YulTypedName",
														"src": "31853:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "31860:3:14",
														"nodeType": "YulTypedName",
														"src": "31860:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "31868:3:14",
														"nodeType": "YulTypedName",
														"src": "31868:3:14",
														"type": ""
													}
												],
												"src": "31764:386:14"
											},
											{
												"body": {
													"nativeSrc": "32290:137:14",
													"nodeType": "YulBlock",
													"src": "32290:137:14",
													"statements": [
														{
															"nativeSrc": "32301:100:14",
															"nodeType": "YulAssignment",
															"src": "32301:100:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "32388:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "32388:6:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "32397:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "32397:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "32308:79:14",
																	"nodeType": "YulIdentifier",
																	"src": "32308:79:14"
																},
																"nativeSrc": "32308:93:14",
																"nodeType": "YulFunctionCall",
																"src": "32308:93:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "32301:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "32301:3:14"
																}
															]
														},
														{
															"nativeSrc": "32411:10:14",
															"nodeType": "YulAssignment",
															"src": "32411:10:14",
															"value": {
																"name": "pos",
																"nativeSrc": "32418:3:14",
																"nodeType": "YulIdentifier",
																"src": "32418:3:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "32411:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "32411:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "32156:271:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "32269:3:14",
														"nodeType": "YulTypedName",
														"src": "32269:3:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "32275:6:14",
														"nodeType": "YulTypedName",
														"src": "32275:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "32286:3:14",
														"nodeType": "YulTypedName",
														"src": "32286:3:14",
														"type": ""
													}
												],
												"src": "32156:271:14"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_contract$_IERC20_$1173(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$1173(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$1173(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$1173(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$1173(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$1173t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$1173(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_bb63c1d83da1ab52c7d8fe2a042a1198f2d359766d8d53fcde4a52b8346f6c66(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract: Need Admin\")\n\n    }\n\n    function abi_encode_t_stringliteral_bb63c1d83da1ab52c7d8fe2a042a1198f2d359766d8d53fcde4a52b8346f6c66_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_bb63c1d83da1ab52c7d8fe2a042a1198f2d359766d8d53fcde4a52b8346f6c66(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bb63c1d83da1ab52c7d8fe2a042a1198f2d359766d8d53fcde4a52b8346f6c66__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bb63c1d83da1ab52c7d8fe2a042a1198f2d359766d8d53fcde4a52b8346f6c66_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_b001b48f6c58139e2cae9da1391afe3c88f4951fb872771eda2713f4f3a0a6c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Need Admin\")\n\n    }\n\n    function abi_encode_t_stringliteral_b001b48f6c58139e2cae9da1391afe3c88f4951fb872771eda2713f4f3a0a6c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 10)\n        store_literal_in_memory_b001b48f6c58139e2cae9da1391afe3c88f4951fb872771eda2713f4f3a0a6c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b001b48f6c58139e2cae9da1391afe3c88f4951fb872771eda2713f4f3a0a6c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b001b48f6c58139e2cae9da1391afe3c88f4951fb872771eda2713f4f3a0a6c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid address\")\n\n    }\n\n    function abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c6d8abb0082a2eadfce7975cbc43efb0f6de7a832c688abfb0c618284167ffc2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Need RESCUE\")\n\n    }\n\n    function abi_encode_t_stringliteral_c6d8abb0082a2eadfce7975cbc43efb0f6de7a832c688abfb0c618284167ffc2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_c6d8abb0082a2eadfce7975cbc43efb0f6de7a832c688abfb0c618284167ffc2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6d8abb0082a2eadfce7975cbc43efb0f6de7a832c688abfb0c618284167ffc2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6d8abb0082a2eadfce7975cbc43efb0f6de7a832c688abfb0c618284167ffc2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$1173_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$1173_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$1173_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$1173_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_contract$_IERC20_$1173_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_14cda221cd50cc4488a50638b29b8104950f854aa06a190e98dcd3542f450149(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract: Contract is Paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_14cda221cd50cc4488a50638b29b8104950f854aa06a190e98dcd3542f450149_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_14cda221cd50cc4488a50638b29b8104950f854aa06a190e98dcd3542f450149(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_14cda221cd50cc4488a50638b29b8104950f854aa06a190e98dcd3542f450149__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_14cda221cd50cc4488a50638b29b8104950f854aa06a190e98dcd3542f450149_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0f2142f4e404960c39c0eef9aa83c0b4e0c80eb3bb63665846eabb25d9855d04(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract: Need Burn\")\n\n    }\n\n    function abi_encode_t_stringliteral_0f2142f4e404960c39c0eef9aa83c0b4e0c80eb3bb63665846eabb25d9855d04_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_0f2142f4e404960c39c0eef9aa83c0b4e0c80eb3bb63665846eabb25d9855d04(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0f2142f4e404960c39c0eef9aa83c0b4e0c80eb3bb63665846eabb25d9855d04__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0f2142f4e404960c39c0eef9aa83c0b4e0c80eb3bb63665846eabb25d9855d04_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ba2e9cd8d3fa598fea6366ddadf891a9cbec04b837294279cc52e9e496f33766(memPtr) {\n\n        mstore(add(memPtr, 0), \"Minting to disabled\")\n\n    }\n\n    function abi_encode_t_stringliteral_ba2e9cd8d3fa598fea6366ddadf891a9cbec04b837294279cc52e9e496f33766_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_ba2e9cd8d3fa598fea6366ddadf891a9cbec04b837294279cc52e9e496f33766(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ba2e9cd8d3fa598fea6366ddadf891a9cbec04b837294279cc52e9e496f33766__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ba2e9cd8d3fa598fea6366ddadf891a9cbec04b837294279cc52e9e496f33766_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_bd61e59b58c0d60bfbdd7c0883e85825d806ae73957bff921021d8f621b56a1e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract: Need Minto\")\n\n    }\n\n    function abi_encode_t_stringliteral_bd61e59b58c0d60bfbdd7c0883e85825d806ae73957bff921021d8f621b56a1e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_bd61e59b58c0d60bfbdd7c0883e85825d806ae73957bff921021d8f621b56a1e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bd61e59b58c0d60bfbdd7c0883e85825d806ae73957bff921021d8f621b56a1e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bd61e59b58c0d60bfbdd7c0883e85825d806ae73957bff921021d8f621b56a1e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract: Supply Cap exceeded\")\n\n    }\n\n    function abi_encode_t_stringliteral_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_payable_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_961af01899b104abd9a52cd42f7f5de7ebb564a1e56e1cf3c3fda073f51fffa0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract: Need Burnfrom\")\n\n    }\n\n    function abi_encode_t_stringliteral_961af01899b104abd9a52cd42f7f5de7ebb564a1e56e1cf3c3fda073f51fffa0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_961af01899b104abd9a52cd42f7f5de7ebb564a1e56e1cf3c3fda073f51fffa0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_961af01899b104abd9a52cd42f7f5de7ebb564a1e56e1cf3c3fda073f51fffa0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_961af01899b104abd9a52cd42f7f5de7ebb564a1e56e1cf3c3fda073f51fffa0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_9dc314731a2c8965068716b51a74d383c5485fe34630c16f5621cb0575192124(memPtr) {\n\n        mstore(add(memPtr, 0), \"Minting disabled\")\n\n    }\n\n    function abi_encode_t_stringliteral_9dc314731a2c8965068716b51a74d383c5485fe34630c16f5621cb0575192124_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_9dc314731a2c8965068716b51a74d383c5485fe34630c16f5621cb0575192124(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9dc314731a2c8965068716b51a74d383c5485fe34630c16f5621cb0575192124__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9dc314731a2c8965068716b51a74d383c5485fe34630c16f5621cb0575192124_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_120df7b0ebb4e0f457cdf31a88cea9b4d2e1fd0ec041e7228fb01895c54a5b9f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract: Need Mint\")\n\n    }\n\n    function abi_encode_t_stringliteral_120df7b0ebb4e0f457cdf31a88cea9b4d2e1fd0ec041e7228fb01895c54a5b9f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_120df7b0ebb4e0f457cdf31a88cea9b4d2e1fd0ec041e7228fb01895c54a5b9f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_120df7b0ebb4e0f457cdf31a88cea9b4d2e1fd0ec041e7228fb01895c54a5b9f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_120df7b0ebb4e0f457cdf31a88cea9b4d2e1fd0ec041e7228fb01895c54a5b9f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_11191c3e11b0e660fa4fa7e62f4d364ea97ce393c4c6616dd08d6862e6796e25(memPtr) {\n\n        mstore(add(memPtr, 0), \"Need Supply\")\n\n    }\n\n    function abi_encode_t_stringliteral_11191c3e11b0e660fa4fa7e62f4d364ea97ce393c4c6616dd08d6862e6796e25_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_11191c3e11b0e660fa4fa7e62f4d364ea97ce393c4c6616dd08d6862e6796e25(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_11191c3e11b0e660fa4fa7e62f4d364ea97ce393c4c6616dd08d6862e6796e25__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_11191c3e11b0e660fa4fa7e62f4d364ea97ce393c4c6616dd08d6862e6796e25_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_77e086eba60b2e28f8cf4f0f10149625654a071ad569481f91828ddb6b36141b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract: Supply Cap too low\")\n\n    }\n\n    function abi_encode_t_stringliteral_77e086eba60b2e28f8cf4f0f10149625654a071ad569481f91828ddb6b36141b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_77e086eba60b2e28f8cf4f0f10149625654a071ad569481f91828ddb6b36141b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_77e086eba60b2e28f8cf4f0f10149625654a071ad569481f91828ddb6b36141b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_77e086eba60b2e28f8cf4f0f10149625654a071ad569481f91828ddb6b36141b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610251575f3560e01c806379cc679011610144578063a9059cbb116100c1578063d547741f11610085578063d547741f146106e9578063dd62ed3e14610705578063deb6db3614610735578063ea5cb53214610751578063f2250d3d1461076f578063fbfa77cf1461078b57610251565b8063a9059cbb14610631578063b6a3f59a14610661578063c30796ab1461067d578063cf820461146106ad578063d1c9f69b146106cb57610251565b806391d148541161010857806391d148541461058b578063956feccf146105bb57806395d89b41146105d9578063a0712d68146105f7578063a217fddf1461061357610251565b806379cc6790146104f75780637e92a7fd146105135780638d580b9f146105315780638ebed5b11461054f5780638f770ad01461056d57610251565b80633f914aef116101d25780635155728911610196578063515572891461044f57806353a4c31e1461046d5780635c975abb1461048b5780636ba77a38146104a957806370a08231146104c757610251565b80633f914aef146103c357806341f431fd146103df57806342966c68146103fb578063449a52f81461041757806348132f481461043357610251565b806323b872dd1161021957806323b872dd1461030d578063248a9ca31461033d5780632f2ff15d1461036d578063313ce5671461038957806336568abe146103a757610251565b806301ffc9a71461025557806306fdde0314610285578063095ea7b3146102a357806316c38b3c146102d357806318160ddd146102ef575b5f80fd5b61026f600480360381019061026a9190612857565b6107a9565b60405161027c919061289c565b60405180910390f35b61028d610822565b60405161029a9190612925565b60405180910390f35b6102bd60048036038101906102b891906129d2565b6108b2565b6040516102ca919061289c565b60405180910390f35b6102ed60048036038101906102e89190612a3a565b6108d4565b005b6102f76109ec565b6040516103049190612a74565b60405180910390f35b61032760048036038101906103229190612a8d565b6109f5565b604051610334919061289c565b60405180910390f35b61035760048036038101906103529190612b10565b610ab6565b6040516103649190612b4a565b60405180910390f35b61038760048036038101906103829190612b63565b610ad3565b005b610391610af5565b60405161039e9190612bbc565b60405180910390f35b6103c160048036038101906103bc9190612b63565b610afd565b005b6103dd60048036038101906103d89190612bd5565b610b78565b005b6103f960048036038101906103f49190612c4e565b610ca7565b005b61041560048036038101906104109190612c9e565b610d8d565b005b610431600480360381019061042c91906129d2565b610ea0565b005b61044d60048036038101906104489190612d04565b61104d565b005b610457611149565b6040516104649190612b4a565b60405180910390f35b61047561116d565b6040516104829190612b4a565b60405180910390f35b610493611191565b6040516104a0919061289c565b60405180910390f35b6104b16111a3565b6040516104be9190612b4a565b60405180910390f35b6104e160048036038101906104dc9190612d42565b6111c7565b6040516104ee9190612a74565b60405180910390f35b610511600480360381019061050c91906129d2565b61120c565b005b61051b61131b565b6040516105289190612b4a565b60405180910390f35b61053961133f565b6040516105469190612b4a565b60405180910390f35b610557611363565b6040516105649190612b4a565b60405180910390f35b610575611387565b6040516105829190612a74565b60405180910390f35b6105a560048036038101906105a09190612b63565b611390565b6040516105b2919061289c565b60405180910390f35b6105c36113f4565b6040516105d0919061289c565b60405180910390f35b6105e1611407565b6040516105ee9190612925565b60405180910390f35b610611600480360381019061060c9190612c9e565b611497565b005b61061b611648565b6040516106289190612b4a565b60405180910390f35b61064b600480360381019061064691906129d2565b61164e565b604051610658919061289c565b60405180910390f35b61067b60048036038101906106769190612c9e565b61170e565b005b61069760048036038101906106929190612d42565b611861565b6040516106a4919061289c565b60405180910390f35b6106b561187e565b6040516106c29190612a74565b60405180910390f35b6106d3611884565b6040516106e0919061289c565b60405180910390f35b61070360048036038101906106fe9190612b63565b611897565b005b61071f600480360381019061071a9190612d6d565b6118b9565b60405161072c9190612a74565b60405180910390f35b61074f600480360381019061074a9190612a3a565b61193b565b005b610759611a54565b6040516107669190612b4a565b60405180910390f35b61078960048036038101906107849190612a3a565b611a78565b005b610793611b91565b6040516107a09190612dba565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061081b575061081a82611bb6565b5b9050919050565b60606003805461083190612e00565b80601f016020809104026020016040519081016040528092919081815260200182805461085d90612e00565b80156108a85780601f1061087f576101008083540402835291602001916108a8565b820191905f5260205f20905b81548152906001019060200180831161088b57829003601f168201915b5050505050905090565b5f806108bc611c1f565b90506108c9818585611c26565b600191505092915050565b6109057fae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d3610900611c1f565b611390565b610944576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093b90612e7a565b60405180910390fd5b80600a5f6101000a81548160ff02191690831515021790555080156109a8577fd8c9c5623123df8e137854c59a08f9084b75609fe24584228d44ffdce5ab920a4361098d611c1f565b60405161099b929190612e98565b60405180910390a16109e9565b7f1e7a7234ad01ed7353bf129217f5c162773639a6cb22773e84bcd5a2b0ef362e436109d2611c1f565b6040516109e0929190612e98565b60405180910390a15b50565b5f600254905090565b5f6109fe611c38565b5f610a07611c1f565b9050600b5f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610a6857610a63858585611c87565b610aa2565b610a73858585611c87565b610aa18560085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600954611c87565b5b6001915050610aaf611d77565b9392505050565b5f60055f8381526020019081526020015f20600101549050919050565b610adc82610ab6565b610ae581611d81565b610aef8383611d95565b50505050565b5f6012905090565b610b05611c1f565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610b69576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b738282611e7f565b505050565b610ba27fae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d333611390565b610be1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd890612f09565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4690612f71565b60405180910390fd5b80600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b610caf611c38565b610cd97f508f8f8be8f5dbcb88f4f4500430b8b3684c471ed936f31fea912c78ad46a6b933611390565b610d18576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0f90612fd9565b60405180910390fd5b610d4382828573ffffffffffffffffffffffffffffffffffffffff16611f699092919063ffffffff16565b7f494215f965756bbc8b7f57addd2a0ebdbce467a4999f8320c67adc1771885d7b83438484604051610d789493929190613052565b60405180910390a1610d88611d77565b505050565b600a5f9054906101000a900460ff1615610ddc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd3906130df565b60405180910390fd5b610e0d7f9edfad36e7d4d9da54b4f78f22bf97cb5b58bb7998294a4288da41c15c647c45610e08611c1f565b611390565b610e4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4390613147565b60405180910390fd5b7f63706707d038997d2210eb026bb1339397deab463921538a81bb98e69ee54ca881610e76611c1f565b604051610e84929190612e98565b60405180910390a1610e9d610e97611c1f565b82611fe8565b50565b600a5f9054906101000a900460ff1615610eef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee6906130df565b60405180910390fd5b600a60029054906101000a900460ff1615610f3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f36906131af565b60405180910390fd5b610f707f7d800f56a05adcb6245df540492a560d0e668aac15ee6c7dd40668064913da33610f6b611c1f565b611390565b610faf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fa690613217565b60405180910390fd5b60075481610fbb6109ec565b610fc59190613262565b1115611006576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ffd906132df565b60405180910390fd5b7fe98063832b4ff0356868961b75f7f49b096b14ea066c9725301ad197f2f6314782826040516110379291906132fd565b60405180910390a16110498282612067565b5050565b611055611c38565b61107f7f508f8f8be8f5dbcb88f4f4500430b8b3684c471ed936f31fea912c78ad46a6b933611390565b6110be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b590612fd9565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015611101573d5f803e3d5ffd5b507f3b1c0368c81e47d03164182dc6f9fcf4f5e4b3bd9462d74960d729f73138ce3682438360405161113593929190613344565b60405180910390a1611145611d77565b5050565b7fae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d381565b7f9edfad36e7d4d9da54b4f78f22bf97cb5b58bb7998294a4288da41c15c647c4581565b600a5f9054906101000a900460ff1681565b7fc8a3befa5973ff6e159afc769978d92f26bae29c51a73d11c9112a05b68d25e681565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b600a5f9054906101000a900460ff161561125b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611252906130df565b60405180910390fd5b61128c7fc8a3befa5973ff6e159afc769978d92f26bae29c51a73d11c9112a05b68d25e6611287611c1f565b611390565b6112cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c2906133c3565b60405180910390fd5b7fe419ce2aab145a1feaf5893bb6a9478f9282415bbd81c76d5cfff2d4f13431dd82826112f6611c1f565b604051611305939291906133e1565b60405180910390a16113178282611fe8565b5050565b7f7d800f56a05adcb6245df540492a560d0e668aac15ee6c7dd40668064913da3381565b7f508f8f8be8f5dbcb88f4f4500430b8b3684c471ed936f31fea912c78ad46a6b981565b7f8c66330d9d4f6aba064f25ef2a307366ea6d917616f44c075aa60fa15e5cb1cb81565b5f600754905090565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b600a60019054906101000a900460ff1681565b60606004805461141690612e00565b80601f016020809104026020016040519081016040528092919081815260200182805461144290612e00565b801561148d5780601f106114645761010080835404028352916020019161148d565b820191905f5260205f20905b81548152906001019060200180831161147057829003601f168201915b5050505050905090565b600a5f9054906101000a900460ff16156114e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114dd906130df565b60405180910390fd5b600a60019054906101000a900460ff1615611536576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152d90613460565b60405180910390fd5b6115677f8c66330d9d4f6aba064f25ef2a307366ea6d917616f44c075aa60fa15e5cb1cb611562611c1f565b611390565b6115a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159d906134c8565b60405180910390fd5b600754816115b26109ec565b6115bc9190613262565b11156115fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115f4906132df565b60405180910390fd5b7f772f66a00a405709c30e7f18feadcc8f123b20c09c7260165d3eec36c9f213728160405161162c9190612a74565b60405180910390a161164561163f611c1f565b82612067565b50565b5f801b81565b5f611657611c38565b5f611660611c1f565b9050600b5f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16156116c1576116bc818585611c87565b6116fb565b6116cc818585611c87565b6116fa8160085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600954611c87565b5b6001915050611708611d77565b92915050565b600a5f9054906101000a900460ff161561175d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611754906130df565b60405180910390fd5b61178e7fea4defabeb90fa1e79f929d6c8d482fee8a115926a592b79634d39a67cce3b62611789611c1f565b611390565b6117cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117c490613530565b60405180910390fd5b6117d56109ec565b811015611817576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161180e90613598565b60405180910390fd5b806007819055507fa11cbdeb4d62442fae7c8ec6286585b17c47acb7b17bbcab1beadce84befa30081611848611c1f565b604051611856929190612e98565b60405180910390a150565b600b602052805f5260405f205f915054906101000a900460ff1681565b60095481565b600a60029054906101000a900460ff1681565b6118a082610ab6565b6118a981611d81565b6118b38383611e7f565b50505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b61196c7fae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d3611967611c1f565b611390565b6119ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119a290612e7a565b60405180910390fd5b80600a60016101000a81548160ff0219169083151502179055508015611a10577f5668502ca8e7b393c09d1dac964ca45a27870a78d7ba212b7a189450897ca05f436119f5611c1f565b604051611a03929190612e98565b60405180910390a1611a51565b7f98e05482fdb38df5eb461fb932fa6e1af90a3569939ce5a8d92d699b102d640243611a3a611c1f565b604051611a48929190612e98565b60405180910390a15b50565b7fea4defabeb90fa1e79f929d6c8d482fee8a115926a592b79634d39a67cce3b6281565b611aa97fae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d3611aa4611c1f565b611390565b611ae8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611adf90612f09565b60405180910390fd5b80600a60026101000a81548160ff0219169083151502179055508015611b4d577f218e25f0a7435729f5a66aae50a9ed0084535a0080300c1c2e8366d8df7136ed43611b32611c1f565b604051611b40929190612e98565b60405180910390a1611b8e565b7f41606e1dcee38320f9edbfcd642aeaa81bb2140c705de9d4a7814024a1e9a31443611b77611c1f565b604051611b85929190612e98565b60405180910390a15b50565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b611c3383838360016120e6565b505050565b600260065403611c7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c7490613600565b60405180910390fd5b6002600681905550565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611cf7575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611cee9190612dba565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611d67575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611d5e9190612dba565b60405180910390fd5b611d728383836122b5565b505050565b6001600681905550565b611d9281611d8d611c1f565b612350565b50565b5f611da08383611390565b611e7557600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611e12611c1f565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050611e79565b5f90505b92915050565b5f611e8a8383611390565b15611f5f575f60055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611efc611c1f565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611f63565b5f90505b92915050565b611fe3838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611f9c9291906132fd565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506123a1565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612058575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161204f9190612dba565b60405180910390fd5b612063825f836122b5565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036120d7575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016120ce9190612dba565b60405180910390fd5b6120e25f83836122b5565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603612156575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161214d9190612dba565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036121c6575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016121bd9190612dba565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156122af578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516122a69190612a74565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361234057600754816122f46109ec565b6122fe9190613262565b111561233f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612336906132df565b60405180910390fd5b5b61234b838383612436565b505050565b61235a8282611390565b61239d5780826040517fe2517d3f00000000000000000000000000000000000000000000000000000000815260040161239492919061361e565b60405180910390fd5b5050565b5f6123cb828473ffffffffffffffffffffffffffffffffffffffff1661264f90919063ffffffff16565b90505f8151141580156123ef5750808060200190518101906123ed9190613659565b155b1561243157826040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016124289190612dba565b60405180910390fd5b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612486578060025f82825461247a9190613262565b92505081905550612554565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561250f578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161250693929190613684565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361259b578060025f82825403925050819055506125e5565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516126429190612a74565b60405180910390a3505050565b606061265c83835f612664565b905092915050565b6060814710156126ab57306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016126a29190612dba565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff1684866040516126d391906136fd565b5f6040518083038185875af1925050503d805f811461270d576040519150601f19603f3d011682016040523d82523d5f602084013e612712565b606091505b509150915061272286838361272d565b925050509392505050565b6060826127425761273d826127ba565b6127b2565b5f825114801561276857505f8473ffffffffffffffffffffffffffffffffffffffff163b145b156127aa57836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016127a19190612dba565b60405180910390fd5b8190506127b3565b5b9392505050565b5f815111156127cc5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61283681612802565b8114612840575f80fd5b50565b5f813590506128518161282d565b92915050565b5f6020828403121561286c5761286b6127fe565b5b5f61287984828501612843565b91505092915050565b5f8115159050919050565b61289681612882565b82525050565b5f6020820190506128af5f83018461288d565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6128f7826128b5565b61290181856128bf565b93506129118185602086016128cf565b61291a816128dd565b840191505092915050565b5f6020820190508181035f83015261293d81846128ed565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61296e82612945565b9050919050565b61297e81612964565b8114612988575f80fd5b50565b5f8135905061299981612975565b92915050565b5f819050919050565b6129b18161299f565b81146129bb575f80fd5b50565b5f813590506129cc816129a8565b92915050565b5f80604083850312156129e8576129e76127fe565b5b5f6129f58582860161298b565b9250506020612a06858286016129be565b9150509250929050565b612a1981612882565b8114612a23575f80fd5b50565b5f81359050612a3481612a10565b92915050565b5f60208284031215612a4f57612a4e6127fe565b5b5f612a5c84828501612a26565b91505092915050565b612a6e8161299f565b82525050565b5f602082019050612a875f830184612a65565b92915050565b5f805f60608486031215612aa457612aa36127fe565b5b5f612ab18682870161298b565b9350506020612ac28682870161298b565b9250506040612ad3868287016129be565b9150509250925092565b5f819050919050565b612aef81612add565b8114612af9575f80fd5b50565b5f81359050612b0a81612ae6565b92915050565b5f60208284031215612b2557612b246127fe565b5b5f612b3284828501612afc565b91505092915050565b612b4481612add565b82525050565b5f602082019050612b5d5f830184612b3b565b92915050565b5f8060408385031215612b7957612b786127fe565b5b5f612b8685828601612afc565b9250506020612b978582860161298b565b9150509250929050565b5f60ff82169050919050565b612bb681612ba1565b82525050565b5f602082019050612bcf5f830184612bad565b92915050565b5f8060408385031215612beb57612bea6127fe565b5b5f612bf88582860161298b565b9250506020612c0985828601612a26565b9150509250929050565b5f612c1d82612964565b9050919050565b612c2d81612c13565b8114612c37575f80fd5b50565b5f81359050612c4881612c24565b92915050565b5f805f60608486031215612c6557612c646127fe565b5b5f612c7286828701612c3a565b9350506020612c838682870161298b565b9250506040612c94868287016129be565b9150509250925092565b5f60208284031215612cb357612cb26127fe565b5b5f612cc0848285016129be565b91505092915050565b5f612cd382612945565b9050919050565b612ce381612cc9565b8114612ced575f80fd5b50565b5f81359050612cfe81612cda565b92915050565b5f8060408385031215612d1a57612d196127fe565b5b5f612d2785828601612cf0565b9250506020612d38858286016129be565b9150509250929050565b5f60208284031215612d5757612d566127fe565b5b5f612d648482850161298b565b91505092915050565b5f8060408385031215612d8357612d826127fe565b5b5f612d908582860161298b565b9250506020612da18582860161298b565b9150509250929050565b612db481612964565b82525050565b5f602082019050612dcd5f830184612dab565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680612e1757607f821691505b602082108103612e2a57612e29612dd3565b5b50919050565b7f436f6e74726163743a204e6565642041646d696e0000000000000000000000005f82015250565b5f612e646014836128bf565b9150612e6f82612e30565b602082019050919050565b5f6020820190508181035f830152612e9181612e58565b9050919050565b5f604082019050612eab5f830185612a65565b612eb86020830184612dab565b9392505050565b7f4e6565642041646d696e000000000000000000000000000000000000000000005f82015250565b5f612ef3600a836128bf565b9150612efe82612ebf565b602082019050919050565b5f6020820190508181035f830152612f2081612ee7565b9050919050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f612f5b600f836128bf565b9150612f6682612f27565b602082019050919050565b5f6020820190508181035f830152612f8881612f4f565b9050919050565b7f4e656564205245534355450000000000000000000000000000000000000000005f82015250565b5f612fc3600b836128bf565b9150612fce82612f8f565b602082019050919050565b5f6020820190508181035f830152612ff081612fb7565b9050919050565b5f819050919050565b5f61301a61301561301084612945565b612ff7565b612945565b9050919050565b5f61302b82613000565b9050919050565b5f61303c82613021565b9050919050565b61304c81613032565b82525050565b5f6080820190506130655f830187613043565b6130726020830186612a65565b61307f6040830185612dab565b61308c6060830184612a65565b95945050505050565b7f436f6e74726163743a20436f6e747261637420697320506175736564000000005f82015250565b5f6130c9601c836128bf565b91506130d482613095565b602082019050919050565b5f6020820190508181035f8301526130f6816130bd565b9050919050565b7f436f6e74726163743a204e656564204275726e000000000000000000000000005f82015250565b5f6131316013836128bf565b915061313c826130fd565b602082019050919050565b5f6020820190508181035f83015261315e81613125565b9050919050565b7f4d696e74696e6720746f2064697361626c6564000000000000000000000000005f82015250565b5f6131996013836128bf565b91506131a482613165565b602082019050919050565b5f6020820190508181035f8301526131c68161318d565b9050919050565b7f436f6e74726163743a204e656564204d696e746f0000000000000000000000005f82015250565b5f6132016014836128bf565b915061320c826131cd565b602082019050919050565b5f6020820190508181035f83015261322e816131f5565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61326c8261299f565b91506132778361299f565b925082820190508082111561328f5761328e613235565b5b92915050565b7f436f6e74726163743a20537570706c79204361702065786365656465640000005f82015250565b5f6132c9601d836128bf565b91506132d482613295565b602082019050919050565b5f6020820190508181035f8301526132f6816132bd565b9050919050565b5f6040820190506133105f830185612dab565b61331d6020830184612a65565b9392505050565b5f61332e82613021565b9050919050565b61333e81613324565b82525050565b5f6060820190506133575f830186613335565b6133646020830185612a65565b6133716040830184612a65565b949350505050565b7f436f6e74726163743a204e656564204275726e66726f6d0000000000000000005f82015250565b5f6133ad6017836128bf565b91506133b882613379565b602082019050919050565b5f6020820190508181035f8301526133da816133a1565b9050919050565b5f6060820190506133f45f830186612dab565b6134016020830185612a65565b61340e6040830184612dab565b949350505050565b7f4d696e74696e672064697361626c6564000000000000000000000000000000005f82015250565b5f61344a6010836128bf565b915061345582613416565b602082019050919050565b5f6020820190508181035f8301526134778161343e565b9050919050565b7f436f6e74726163743a204e656564204d696e74000000000000000000000000005f82015250565b5f6134b26013836128bf565b91506134bd8261347e565b602082019050919050565b5f6020820190508181035f8301526134df816134a6565b9050919050565b7f4e65656420537570706c790000000000000000000000000000000000000000005f82015250565b5f61351a600b836128bf565b9150613525826134e6565b602082019050919050565b5f6020820190508181035f8301526135478161350e565b9050919050565b7f436f6e74726163743a20537570706c792043617020746f6f206c6f77000000005f82015250565b5f613582601c836128bf565b915061358d8261354e565b602082019050919050565b5f6020820190508181035f8301526135af81613576565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f6135ea601f836128bf565b91506135f5826135b6565b602082019050919050565b5f6020820190508181035f830152613617816135de565b9050919050565b5f6040820190506136315f830185612dab565b61363e6020830184612b3b565b9392505050565b5f8151905061365381612a10565b92915050565b5f6020828403121561366e5761366d6127fe565b5b5f61367b84828501613645565b91505092915050565b5f6060820190506136975f830186612dab565b6136a46020830185612a65565b6136b16040830184612a65565b949350505050565b5f81519050919050565b5f81905092915050565b5f6136d7826136b9565b6136e181856136c3565b93506136f18185602086016128cf565b80840191505092915050565b5f61370882846136cd565b91508190509291505056fea264697066735822122080b674cc755c7de8ae8962d81bc7e5de88ec0d20390e5865b0db8a8289f8c0cd64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x251 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79CC6790 GT PUSH2 0x144 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x85 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x6E9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x705 JUMPI DUP1 PUSH4 0xDEB6DB36 EQ PUSH2 0x735 JUMPI DUP1 PUSH4 0xEA5CB532 EQ PUSH2 0x751 JUMPI DUP1 PUSH4 0xF2250D3D EQ PUSH2 0x76F JUMPI DUP1 PUSH4 0xFBFA77CF EQ PUSH2 0x78B JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x631 JUMPI DUP1 PUSH4 0xB6A3F59A EQ PUSH2 0x661 JUMPI DUP1 PUSH4 0xC30796AB EQ PUSH2 0x67D JUMPI DUP1 PUSH4 0xCF820461 EQ PUSH2 0x6AD JUMPI DUP1 PUSH4 0xD1C9F69B EQ PUSH2 0x6CB JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x58B JUMPI DUP1 PUSH4 0x956FECCF EQ PUSH2 0x5BB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5D9 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x5F7 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x613 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x4F7 JUMPI DUP1 PUSH4 0x7E92A7FD EQ PUSH2 0x513 JUMPI DUP1 PUSH4 0x8D580B9F EQ PUSH2 0x531 JUMPI DUP1 PUSH4 0x8EBED5B1 EQ PUSH2 0x54F JUMPI DUP1 PUSH4 0x8F770AD0 EQ PUSH2 0x56D JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x3F914AEF GT PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x51557289 GT PUSH2 0x196 JUMPI DUP1 PUSH4 0x51557289 EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0x53A4C31E EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0x6BA77A38 EQ PUSH2 0x4A9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4C7 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x3F914AEF EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0x41F431FD EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0x449A52F8 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x48132F48 EQ PUSH2 0x433 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x219 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x3A7 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2EF JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x2857 JUMP JUMPDEST PUSH2 0x7A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x289C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28D PUSH2 0x822 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x2925 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x289C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x2A3A JUMP JUMPDEST PUSH2 0x8D4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F7 PUSH2 0x9EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x327 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x2A8D JUMP JUMPDEST PUSH2 0x9F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x334 SWAP2 SWAP1 PUSH2 0x289C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x357 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x2B10 JUMP JUMPDEST PUSH2 0xAB6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x387 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x382 SWAP2 SWAP1 PUSH2 0x2B63 JUMP JUMPDEST PUSH2 0xAD3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x391 PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x2BBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x2B63 JUMP JUMPDEST PUSH2 0xAFD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x2BD5 JUMP JUMPDEST PUSH2 0xB78 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x2C4E JUMP JUMPDEST PUSH2 0xCA7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x415 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x410 SWAP2 SWAP1 PUSH2 0x2C9E JUMP JUMPDEST PUSH2 0xD8D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x431 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42C SWAP2 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST PUSH2 0xEA0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x448 SWAP2 SWAP1 PUSH2 0x2D04 JUMP JUMPDEST PUSH2 0x104D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x457 PUSH2 0x1149 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x464 SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x475 PUSH2 0x116D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x482 SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x493 PUSH2 0x1191 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A0 SWAP2 SWAP1 PUSH2 0x289C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B1 PUSH2 0x11A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BE SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DC SWAP2 SWAP1 PUSH2 0x2D42 JUMP JUMPDEST PUSH2 0x11C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4EE SWAP2 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x511 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50C SWAP2 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST PUSH2 0x120C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x51B PUSH2 0x131B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x528 SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x539 PUSH2 0x133F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x557 PUSH2 0x1363 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x564 SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x575 PUSH2 0x1387 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x582 SWAP2 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A0 SWAP2 SWAP1 PUSH2 0x2B63 JUMP JUMPDEST PUSH2 0x1390 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B2 SWAP2 SWAP1 PUSH2 0x289C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C3 PUSH2 0x13F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D0 SWAP2 SWAP1 PUSH2 0x289C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E1 PUSH2 0x1407 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5EE SWAP2 SWAP1 PUSH2 0x2925 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x611 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x60C SWAP2 SWAP1 PUSH2 0x2C9E JUMP JUMPDEST PUSH2 0x1497 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x61B PUSH2 0x1648 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x628 SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x646 SWAP2 SWAP1 PUSH2 0x29D2 JUMP JUMPDEST PUSH2 0x164E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x658 SWAP2 SWAP1 PUSH2 0x289C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x67B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x676 SWAP2 SWAP1 PUSH2 0x2C9E JUMP JUMPDEST PUSH2 0x170E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x697 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x692 SWAP2 SWAP1 PUSH2 0x2D42 JUMP JUMPDEST PUSH2 0x1861 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A4 SWAP2 SWAP1 PUSH2 0x289C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6B5 PUSH2 0x187E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C2 SWAP2 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6D3 PUSH2 0x1884 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E0 SWAP2 SWAP1 PUSH2 0x289C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x703 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6FE SWAP2 SWAP1 PUSH2 0x2B63 JUMP JUMPDEST PUSH2 0x1897 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x71F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71A SWAP2 SWAP1 PUSH2 0x2D6D JUMP JUMPDEST PUSH2 0x18B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x72C SWAP2 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x74F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x74A SWAP2 SWAP1 PUSH2 0x2A3A JUMP JUMPDEST PUSH2 0x193B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x759 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x766 SWAP2 SWAP1 PUSH2 0x2B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x789 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x784 SWAP2 SWAP1 PUSH2 0x2A3A JUMP JUMPDEST PUSH2 0x1A78 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x793 PUSH2 0x1B91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7A0 SWAP2 SWAP1 PUSH2 0x2DBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x81B JUMPI POP PUSH2 0x81A DUP3 PUSH2 0x1BB6 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x831 SWAP1 PUSH2 0x2E00 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x85D SWAP1 PUSH2 0x2E00 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8A8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x87F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8A8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x88B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x8BC PUSH2 0x1C1F JUMP JUMPDEST SWAP1 POP PUSH2 0x8C9 DUP2 DUP6 DUP6 PUSH2 0x1C26 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x905 PUSH32 0xAE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3 PUSH2 0x900 PUSH2 0x1C1F JUMP JUMPDEST PUSH2 0x1390 JUMP JUMPDEST PUSH2 0x944 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93B SWAP1 PUSH2 0x2E7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x9A8 JUMPI PUSH32 0xD8C9C5623123DF8E137854C59A08F9084B75609FE24584228D44FFDCE5AB920A NUMBER PUSH2 0x98D PUSH2 0x1C1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x99B SWAP3 SWAP2 SWAP1 PUSH2 0x2E98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x9E9 JUMP JUMPDEST PUSH32 0x1E7A7234AD01ED7353BF129217F5C162773639A6CB22773E84BCD5A2B0EF362E NUMBER PUSH2 0x9D2 PUSH2 0x1C1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9E0 SWAP3 SWAP2 SWAP1 PUSH2 0x2E98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x9FE PUSH2 0x1C38 JUMP JUMPDEST PUSH0 PUSH2 0xA07 PUSH2 0x1C1F JUMP JUMPDEST SWAP1 POP PUSH1 0xB PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA68 JUMPI PUSH2 0xA63 DUP6 DUP6 DUP6 PUSH2 0x1C87 JUMP JUMPDEST PUSH2 0xAA2 JUMP JUMPDEST PUSH2 0xA73 DUP6 DUP6 DUP6 PUSH2 0x1C87 JUMP JUMPDEST PUSH2 0xAA1 DUP6 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x9 SLOAD PUSH2 0x1C87 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xAAF PUSH2 0x1D77 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xADC DUP3 PUSH2 0xAB6 JUMP JUMPDEST PUSH2 0xAE5 DUP2 PUSH2 0x1D81 JUMP JUMPDEST PUSH2 0xAEF DUP4 DUP4 PUSH2 0x1D95 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB05 PUSH2 0x1C1F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB69 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB73 DUP3 DUP3 PUSH2 0x1E7F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xBA2 PUSH32 0xAE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3 CALLER PUSH2 0x1390 JUMP JUMPDEST PUSH2 0xBE1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD8 SWAP1 PUSH2 0x2F09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC4F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC46 SWAP1 PUSH2 0x2F71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xCAF PUSH2 0x1C38 JUMP JUMPDEST PUSH2 0xCD9 PUSH32 0x508F8F8BE8F5DBCB88F4F4500430B8B3684C471ED936F31FEA912C78AD46A6B9 CALLER PUSH2 0x1390 JUMP JUMPDEST PUSH2 0xD18 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0F SWAP1 PUSH2 0x2FD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD43 DUP3 DUP3 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F69 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x494215F965756BBC8B7F57ADDD2A0EBDBCE467A4999F8320C67ADC1771885D7B DUP4 NUMBER DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xD78 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3052 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xD88 PUSH2 0x1D77 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xDDC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD3 SWAP1 PUSH2 0x30DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE0D PUSH32 0x9EDFAD36E7D4D9DA54B4F78F22BF97CB5B58BB7998294A4288DA41C15C647C45 PUSH2 0xE08 PUSH2 0x1C1F JUMP JUMPDEST PUSH2 0x1390 JUMP JUMPDEST PUSH2 0xE4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE43 SWAP1 PUSH2 0x3147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x63706707D038997D2210EB026BB1339397DEAB463921538A81BB98E69EE54CA8 DUP2 PUSH2 0xE76 PUSH2 0x1C1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE84 SWAP3 SWAP2 SWAP1 PUSH2 0x2E98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xE9D PUSH2 0xE97 PUSH2 0x1C1F JUMP JUMPDEST DUP3 PUSH2 0x1FE8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xEEF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE6 SWAP1 PUSH2 0x30DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xF3F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF36 SWAP1 PUSH2 0x31AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF70 PUSH32 0x7D800F56A05ADCB6245DF540492A560D0E668AAC15EE6C7DD40668064913DA33 PUSH2 0xF6B PUSH2 0x1C1F JUMP JUMPDEST PUSH2 0x1390 JUMP JUMPDEST PUSH2 0xFAF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA6 SWAP1 PUSH2 0x3217 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD DUP2 PUSH2 0xFBB PUSH2 0x9EC JUMP JUMPDEST PUSH2 0xFC5 SWAP2 SWAP1 PUSH2 0x3262 JUMP JUMPDEST GT ISZERO PUSH2 0x1006 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFD SWAP1 PUSH2 0x32DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xE98063832B4FF0356868961B75F7F49B096B14EA066C9725301AD197F2F63147 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1037 SWAP3 SWAP2 SWAP1 PUSH2 0x32FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1049 DUP3 DUP3 PUSH2 0x2067 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1055 PUSH2 0x1C38 JUMP JUMPDEST PUSH2 0x107F PUSH32 0x508F8F8BE8F5DBCB88F4F4500430B8B3684C471ED936F31FEA912C78AD46A6B9 CALLER PUSH2 0x1390 JUMP JUMPDEST PUSH2 0x10BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B5 SWAP1 PUSH2 0x2FD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1101 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH32 0x3B1C0368C81E47D03164182DC6F9FCF4F5E4B3BD9462D74960D729F73138CE36 DUP3 NUMBER DUP4 PUSH1 0x40 MLOAD PUSH2 0x1135 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3344 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1145 PUSH2 0x1D77 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0xAE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3 DUP2 JUMP JUMPDEST PUSH32 0x9EDFAD36E7D4D9DA54B4F78F22BF97CB5B58BB7998294A4288DA41C15C647C45 DUP2 JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH32 0xC8A3BEFA5973FF6E159AFC769978D92F26BAE29C51A73D11C9112A05B68D25E6 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x125B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1252 SWAP1 PUSH2 0x30DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x128C PUSH32 0xC8A3BEFA5973FF6E159AFC769978D92F26BAE29C51A73D11C9112A05B68D25E6 PUSH2 0x1287 PUSH2 0x1C1F JUMP JUMPDEST PUSH2 0x1390 JUMP JUMPDEST PUSH2 0x12CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C2 SWAP1 PUSH2 0x33C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xE419CE2AAB145A1FEAF5893BB6A9478F9282415BBD81C76D5CFFF2D4F13431DD DUP3 DUP3 PUSH2 0x12F6 PUSH2 0x1C1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1305 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x33E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1317 DUP3 DUP3 PUSH2 0x1FE8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x7D800F56A05ADCB6245DF540492A560D0E668AAC15EE6C7DD40668064913DA33 DUP2 JUMP JUMPDEST PUSH32 0x508F8F8BE8F5DBCB88F4F4500430B8B3684C471ED936F31FEA912C78AD46A6B9 DUP2 JUMP JUMPDEST PUSH32 0x8C66330D9D4F6ABA064F25EF2A307366EA6D917616F44C075AA60FA15E5CB1CB DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1416 SWAP1 PUSH2 0x2E00 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1442 SWAP1 PUSH2 0x2E00 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x148D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1464 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x148D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1470 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x14E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14DD SWAP1 PUSH2 0x30DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1536 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x152D SWAP1 PUSH2 0x3460 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1567 PUSH32 0x8C66330D9D4F6ABA064F25EF2A307366EA6D917616F44C075AA60FA15E5CB1CB PUSH2 0x1562 PUSH2 0x1C1F JUMP JUMPDEST PUSH2 0x1390 JUMP JUMPDEST PUSH2 0x15A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x159D SWAP1 PUSH2 0x34C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD DUP2 PUSH2 0x15B2 PUSH2 0x9EC JUMP JUMPDEST PUSH2 0x15BC SWAP2 SWAP1 PUSH2 0x3262 JUMP JUMPDEST GT ISZERO PUSH2 0x15FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15F4 SWAP1 PUSH2 0x32DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x772F66A00A405709C30E7F18FEADCC8F123B20C09C7260165D3EEC36C9F21372 DUP2 PUSH1 0x40 MLOAD PUSH2 0x162C SWAP2 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1645 PUSH2 0x163F PUSH2 0x1C1F JUMP JUMPDEST DUP3 PUSH2 0x2067 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x1657 PUSH2 0x1C38 JUMP JUMPDEST PUSH0 PUSH2 0x1660 PUSH2 0x1C1F JUMP JUMPDEST SWAP1 POP PUSH1 0xB PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x16C1 JUMPI PUSH2 0x16BC DUP2 DUP6 DUP6 PUSH2 0x1C87 JUMP JUMPDEST PUSH2 0x16FB JUMP JUMPDEST PUSH2 0x16CC DUP2 DUP6 DUP6 PUSH2 0x1C87 JUMP JUMPDEST PUSH2 0x16FA DUP2 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x9 SLOAD PUSH2 0x1C87 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1708 PUSH2 0x1D77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x175D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1754 SWAP1 PUSH2 0x30DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x178E PUSH32 0xEA4DEFABEB90FA1E79F929D6C8D482FEE8A115926A592B79634D39A67CCE3B62 PUSH2 0x1789 PUSH2 0x1C1F JUMP JUMPDEST PUSH2 0x1390 JUMP JUMPDEST PUSH2 0x17CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17C4 SWAP1 PUSH2 0x3530 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17D5 PUSH2 0x9EC JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1817 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x180E SWAP1 PUSH2 0x3598 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH32 0xA11CBDEB4D62442FAE7C8EC6286585B17C47ACB7B17BBCAB1BEADCE84BEFA300 DUP2 PUSH2 0x1848 PUSH2 0x1C1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1856 SWAP3 SWAP2 SWAP1 PUSH2 0x2E98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x18A0 DUP3 PUSH2 0xAB6 JUMP JUMPDEST PUSH2 0x18A9 DUP2 PUSH2 0x1D81 JUMP JUMPDEST PUSH2 0x18B3 DUP4 DUP4 PUSH2 0x1E7F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x196C PUSH32 0xAE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3 PUSH2 0x1967 PUSH2 0x1C1F JUMP JUMPDEST PUSH2 0x1390 JUMP JUMPDEST PUSH2 0x19AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19A2 SWAP1 PUSH2 0x2E7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1A10 JUMPI PUSH32 0x5668502CA8E7B393C09D1DAC964CA45A27870A78D7BA212B7A189450897CA05F NUMBER PUSH2 0x19F5 PUSH2 0x1C1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A03 SWAP3 SWAP2 SWAP1 PUSH2 0x2E98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1A51 JUMP JUMPDEST PUSH32 0x98E05482FDB38DF5EB461FB932FA6E1AF90A3569939CE5A8D92D699B102D6402 NUMBER PUSH2 0x1A3A PUSH2 0x1C1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A48 SWAP3 SWAP2 SWAP1 PUSH2 0x2E98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH32 0xEA4DEFABEB90FA1E79F929D6C8D482FEE8A115926A592B79634D39A67CCE3B62 DUP2 JUMP JUMPDEST PUSH2 0x1AA9 PUSH32 0xAE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3 PUSH2 0x1AA4 PUSH2 0x1C1F JUMP JUMPDEST PUSH2 0x1390 JUMP JUMPDEST PUSH2 0x1AE8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ADF SWAP1 PUSH2 0x2F09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1B4D JUMPI PUSH32 0x218E25F0A7435729F5A66AAE50A9ED0084535A0080300C1C2E8366D8DF7136ED NUMBER PUSH2 0x1B32 PUSH2 0x1C1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B40 SWAP3 SWAP2 SWAP1 PUSH2 0x2E98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x1B8E JUMP JUMPDEST PUSH32 0x41606E1DCEE38320F9EDBFCD642AEAA81BB2140C705DE9D4A7814024A1E9A314 NUMBER PUSH2 0x1B77 PUSH2 0x1C1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B85 SWAP3 SWAP2 SWAP1 PUSH2 0x2E98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1C33 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x20E6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x1C7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C74 SWAP1 PUSH2 0x3600 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CF7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CEE SWAP2 SWAP1 PUSH2 0x2DBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D67 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D5E SWAP2 SWAP1 PUSH2 0x2DBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D72 DUP4 DUP4 DUP4 PUSH2 0x22B5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1D92 DUP2 PUSH2 0x1D8D PUSH2 0x1C1F JUMP JUMPDEST PUSH2 0x2350 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1DA0 DUP4 DUP4 PUSH2 0x1390 JUMP JUMPDEST PUSH2 0x1E75 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1E12 PUSH2 0x1C1F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1E79 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E8A DUP4 DUP4 PUSH2 0x1390 JUMP JUMPDEST ISZERO PUSH2 0x1F5F JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1EFC PUSH2 0x1C1F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1F63 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FE3 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1F9C SWAP3 SWAP2 SWAP1 PUSH2 0x32FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x23A1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2058 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x204F SWAP2 SWAP1 PUSH2 0x2DBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2063 DUP3 PUSH0 DUP4 PUSH2 0x22B5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x20D7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20CE SWAP2 SWAP1 PUSH2 0x2DBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x20E2 PUSH0 DUP4 DUP4 PUSH2 0x22B5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2156 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x214D SWAP2 SWAP1 PUSH2 0x2DBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x21C6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21BD SWAP2 SWAP1 PUSH2 0x2DBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x22AF JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x22A6 SWAP2 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2340 JUMPI PUSH1 0x7 SLOAD DUP2 PUSH2 0x22F4 PUSH2 0x9EC JUMP JUMPDEST PUSH2 0x22FE SWAP2 SWAP1 PUSH2 0x3262 JUMP JUMPDEST GT ISZERO PUSH2 0x233F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2336 SWAP1 PUSH2 0x32DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH2 0x234B DUP4 DUP4 DUP4 PUSH2 0x2436 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x235A DUP3 DUP3 PUSH2 0x1390 JUMP JUMPDEST PUSH2 0x239D JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2394 SWAP3 SWAP2 SWAP1 PUSH2 0x361E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x23CB DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x264F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x23EF JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x23ED SWAP2 SWAP1 PUSH2 0x3659 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x2431 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2428 SWAP2 SWAP1 PUSH2 0x2DBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2486 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x247A SWAP2 SWAP1 PUSH2 0x3262 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2554 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x250F JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2506 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x259B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x25E5 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x2642 SWAP2 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x265C DUP4 DUP4 PUSH0 PUSH2 0x2664 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x26AB JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26A2 SWAP2 SWAP1 PUSH2 0x2DBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x26D3 SWAP2 SWAP1 PUSH2 0x36FD JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x270D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2712 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2722 DUP7 DUP4 DUP4 PUSH2 0x272D JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x2742 JUMPI PUSH2 0x273D DUP3 PUSH2 0x27BA JUMP JUMPDEST PUSH2 0x27B2 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x2768 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x27AA JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27A1 SWAP2 SWAP1 PUSH2 0x2DBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x27B3 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x27CC JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2836 DUP2 PUSH2 0x2802 JUMP JUMPDEST DUP2 EQ PUSH2 0x2840 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2851 DUP2 PUSH2 0x282D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x286C JUMPI PUSH2 0x286B PUSH2 0x27FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2879 DUP5 DUP3 DUP6 ADD PUSH2 0x2843 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2896 DUP2 PUSH2 0x2882 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x28AF PUSH0 DUP4 ADD DUP5 PUSH2 0x288D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x28F7 DUP3 PUSH2 0x28B5 JUMP JUMPDEST PUSH2 0x2901 DUP2 DUP6 PUSH2 0x28BF JUMP JUMPDEST SWAP4 POP PUSH2 0x2911 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x28CF JUMP JUMPDEST PUSH2 0x291A DUP2 PUSH2 0x28DD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x293D DUP2 DUP5 PUSH2 0x28ED JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x296E DUP3 PUSH2 0x2945 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x297E DUP2 PUSH2 0x2964 JUMP JUMPDEST DUP2 EQ PUSH2 0x2988 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2999 DUP2 PUSH2 0x2975 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29B1 DUP2 PUSH2 0x299F JUMP JUMPDEST DUP2 EQ PUSH2 0x29BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x29CC DUP2 PUSH2 0x29A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29E8 JUMPI PUSH2 0x29E7 PUSH2 0x27FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x29F5 DUP6 DUP3 DUP7 ADD PUSH2 0x298B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2A06 DUP6 DUP3 DUP7 ADD PUSH2 0x29BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A19 DUP2 PUSH2 0x2882 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A23 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A34 DUP2 PUSH2 0x2A10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A4F JUMPI PUSH2 0x2A4E PUSH2 0x27FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2A5C DUP5 DUP3 DUP6 ADD PUSH2 0x2A26 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A6E DUP2 PUSH2 0x299F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A87 PUSH0 DUP4 ADD DUP5 PUSH2 0x2A65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2AA4 JUMPI PUSH2 0x2AA3 PUSH2 0x27FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2AB1 DUP7 DUP3 DUP8 ADD PUSH2 0x298B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2AC2 DUP7 DUP3 DUP8 ADD PUSH2 0x298B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2AD3 DUP7 DUP3 DUP8 ADD PUSH2 0x29BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AEF DUP2 PUSH2 0x2ADD JUMP JUMPDEST DUP2 EQ PUSH2 0x2AF9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B0A DUP2 PUSH2 0x2AE6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B25 JUMPI PUSH2 0x2B24 PUSH2 0x27FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B32 DUP5 DUP3 DUP6 ADD PUSH2 0x2AFC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B44 DUP2 PUSH2 0x2ADD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B5D PUSH0 DUP4 ADD DUP5 PUSH2 0x2B3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B79 JUMPI PUSH2 0x2B78 PUSH2 0x27FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B86 DUP6 DUP3 DUP7 ADD PUSH2 0x2AFC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2B97 DUP6 DUP3 DUP7 ADD PUSH2 0x298B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BB6 DUP2 PUSH2 0x2BA1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2BCF PUSH0 DUP4 ADD DUP5 PUSH2 0x2BAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2BEB JUMPI PUSH2 0x2BEA PUSH2 0x27FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2BF8 DUP6 DUP3 DUP7 ADD PUSH2 0x298B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2C09 DUP6 DUP3 DUP7 ADD PUSH2 0x2A26 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2C1D DUP3 PUSH2 0x2964 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C2D DUP2 PUSH2 0x2C13 JUMP JUMPDEST DUP2 EQ PUSH2 0x2C37 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2C48 DUP2 PUSH2 0x2C24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2C65 JUMPI PUSH2 0x2C64 PUSH2 0x27FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2C72 DUP7 DUP3 DUP8 ADD PUSH2 0x2C3A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2C83 DUP7 DUP3 DUP8 ADD PUSH2 0x298B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2C94 DUP7 DUP3 DUP8 ADD PUSH2 0x29BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CB3 JUMPI PUSH2 0x2CB2 PUSH2 0x27FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2CC0 DUP5 DUP3 DUP6 ADD PUSH2 0x29BE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2CD3 DUP3 PUSH2 0x2945 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CE3 DUP2 PUSH2 0x2CC9 JUMP JUMPDEST DUP2 EQ PUSH2 0x2CED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2CFE DUP2 PUSH2 0x2CDA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D1A JUMPI PUSH2 0x2D19 PUSH2 0x27FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2D27 DUP6 DUP3 DUP7 ADD PUSH2 0x2CF0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2D38 DUP6 DUP3 DUP7 ADD PUSH2 0x29BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D57 JUMPI PUSH2 0x2D56 PUSH2 0x27FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2D64 DUP5 DUP3 DUP6 ADD PUSH2 0x298B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D83 JUMPI PUSH2 0x2D82 PUSH2 0x27FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2D90 DUP6 DUP3 DUP7 ADD PUSH2 0x298B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2DA1 DUP6 DUP3 DUP7 ADD PUSH2 0x298B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DB4 DUP2 PUSH2 0x2964 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2DCD PUSH0 DUP4 ADD DUP5 PUSH2 0x2DAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2E17 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2E2A JUMPI PUSH2 0x2E29 PUSH2 0x2DD3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6E74726163743A204E6565642041646D696E000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E64 PUSH1 0x14 DUP4 PUSH2 0x28BF JUMP JUMPDEST SWAP2 POP PUSH2 0x2E6F DUP3 PUSH2 0x2E30 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2E91 DUP2 PUSH2 0x2E58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2EAB PUSH0 DUP4 ADD DUP6 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0x2EB8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2DAB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6565642041646D696E00000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2EF3 PUSH1 0xA DUP4 PUSH2 0x28BF JUMP JUMPDEST SWAP2 POP PUSH2 0x2EFE DUP3 PUSH2 0x2EBF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F20 DUP2 PUSH2 0x2EE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2F5B PUSH1 0xF DUP4 PUSH2 0x28BF JUMP JUMPDEST SWAP2 POP PUSH2 0x2F66 DUP3 PUSH2 0x2F27 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F88 DUP2 PUSH2 0x2F4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E65656420524553435545000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2FC3 PUSH1 0xB DUP4 PUSH2 0x28BF JUMP JUMPDEST SWAP2 POP PUSH2 0x2FCE DUP3 PUSH2 0x2F8F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2FF0 DUP2 PUSH2 0x2FB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x301A PUSH2 0x3015 PUSH2 0x3010 DUP5 PUSH2 0x2945 JUMP JUMPDEST PUSH2 0x2FF7 JUMP JUMPDEST PUSH2 0x2945 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x302B DUP3 PUSH2 0x3000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x303C DUP3 PUSH2 0x3021 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x304C DUP2 PUSH2 0x3032 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3065 PUSH0 DUP4 ADD DUP8 PUSH2 0x3043 JUMP JUMPDEST PUSH2 0x3072 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0x307F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2DAB JUMP JUMPDEST PUSH2 0x308C PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2A65 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x436F6E74726163743A20436F6E74726163742069732050617573656400000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x30C9 PUSH1 0x1C DUP4 PUSH2 0x28BF JUMP JUMPDEST SWAP2 POP PUSH2 0x30D4 DUP3 PUSH2 0x3095 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x30F6 DUP2 PUSH2 0x30BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6E74726163743A204E656564204275726E00000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3131 PUSH1 0x13 DUP4 PUSH2 0x28BF JUMP JUMPDEST SWAP2 POP PUSH2 0x313C DUP3 PUSH2 0x30FD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x315E DUP2 PUSH2 0x3125 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D696E74696E6720746F2064697361626C656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3199 PUSH1 0x13 DUP4 PUSH2 0x28BF JUMP JUMPDEST SWAP2 POP PUSH2 0x31A4 DUP3 PUSH2 0x3165 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x31C6 DUP2 PUSH2 0x318D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6E74726163743A204E656564204D696E746F000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3201 PUSH1 0x14 DUP4 PUSH2 0x28BF JUMP JUMPDEST SWAP2 POP PUSH2 0x320C DUP3 PUSH2 0x31CD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x322E DUP2 PUSH2 0x31F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x326C DUP3 PUSH2 0x299F JUMP JUMPDEST SWAP2 POP PUSH2 0x3277 DUP4 PUSH2 0x299F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x328F JUMPI PUSH2 0x328E PUSH2 0x3235 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6E74726163743A20537570706C7920436170206578636565646564000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x32C9 PUSH1 0x1D DUP4 PUSH2 0x28BF JUMP JUMPDEST SWAP2 POP PUSH2 0x32D4 DUP3 PUSH2 0x3295 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x32F6 DUP2 PUSH2 0x32BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3310 PUSH0 DUP4 ADD DUP6 PUSH2 0x2DAB JUMP JUMPDEST PUSH2 0x331D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2A65 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x332E DUP3 PUSH2 0x3021 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x333E DUP2 PUSH2 0x3324 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3357 PUSH0 DUP4 ADD DUP7 PUSH2 0x3335 JUMP JUMPDEST PUSH2 0x3364 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0x3371 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2A65 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x436F6E74726163743A204E656564204275726E66726F6D000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x33AD PUSH1 0x17 DUP4 PUSH2 0x28BF JUMP JUMPDEST SWAP2 POP PUSH2 0x33B8 DUP3 PUSH2 0x3379 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x33DA DUP2 PUSH2 0x33A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x33F4 PUSH0 DUP4 ADD DUP7 PUSH2 0x2DAB JUMP JUMPDEST PUSH2 0x3401 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0x340E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2DAB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4D696E74696E672064697361626C656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x344A PUSH1 0x10 DUP4 PUSH2 0x28BF JUMP JUMPDEST SWAP2 POP PUSH2 0x3455 DUP3 PUSH2 0x3416 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3477 DUP2 PUSH2 0x343E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6E74726163743A204E656564204D696E7400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x34B2 PUSH1 0x13 DUP4 PUSH2 0x28BF JUMP JUMPDEST SWAP2 POP PUSH2 0x34BD DUP3 PUSH2 0x347E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x34DF DUP2 PUSH2 0x34A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E65656420537570706C79000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x351A PUSH1 0xB DUP4 PUSH2 0x28BF JUMP JUMPDEST SWAP2 POP PUSH2 0x3525 DUP3 PUSH2 0x34E6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3547 DUP2 PUSH2 0x350E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6E74726163743A20537570706C792043617020746F6F206C6F7700000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3582 PUSH1 0x1C DUP4 PUSH2 0x28BF JUMP JUMPDEST SWAP2 POP PUSH2 0x358D DUP3 PUSH2 0x354E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x35AF DUP2 PUSH2 0x3576 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x35EA PUSH1 0x1F DUP4 PUSH2 0x28BF JUMP JUMPDEST SWAP2 POP PUSH2 0x35F5 DUP3 PUSH2 0x35B6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3617 DUP2 PUSH2 0x35DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3631 PUSH0 DUP4 ADD DUP6 PUSH2 0x2DAB JUMP JUMPDEST PUSH2 0x363E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2B3B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x3653 DUP2 PUSH2 0x2A10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x366E JUMPI PUSH2 0x366D PUSH2 0x27FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x367B DUP5 DUP3 DUP6 ADD PUSH2 0x3645 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3697 PUSH0 DUP4 ADD DUP7 PUSH2 0x2DAB JUMP JUMPDEST PUSH2 0x36A4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0x36B1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2A65 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x36D7 DUP3 PUSH2 0x36B9 JUMP JUMPDEST PUSH2 0x36E1 DUP2 DUP6 PUSH2 0x36C3 JUMP JUMPDEST SWAP4 POP PUSH2 0x36F1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x28CF JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3708 DUP3 DUP5 PUSH2 0x36CD JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 0xB6 PUSH21 0xCC755C7DE8AE8962D81BC7E5DE88EC0D20390E5865 0xB0 0xDB DUP11 DUP3 DUP10 0xF8 0xC0 0xCD PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "740:11682:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3794:322:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3144:97:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9594:376:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4226:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3002:82:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5328:245:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11019:251:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11612:285;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7257:209;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6202:303;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;12167:248;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1197:52;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1017:50;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1522:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1073:58;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7753:239:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;957:54;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1255;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;901:50;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8620:76;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1589:24:13;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6740:285:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2187:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10284:357:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8216:287;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2625:50;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1447:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1646:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3846:140:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4308:353:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1137:54;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4899:348;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1378:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2565:202:0;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;2074:89:4:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3794:322:13:-;3854:29;1230:19;3870:12;:10;:12::i;:::-;3854:7;:29::i;:::-;3846:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;3927:7;3918:6;;:16;;;;;;;;;;;;;;;;;;3949:7;3945:165;;;3977:42;3992:12;4006;:10;:12::i;:::-;3977:42;;;;;;;:::i;:::-;;;;;;;;3945:165;;;4055:44;4072:12;4086;:10;:12::i;:::-;4055:44;;;;;;;:::i;:::-;;;;;;;;3945:165;3794:322;:::o;3144:97:4:-;3196:7;3222:12;;3215:19;;3144:97;:::o;9594:376:13:-;9703:4;2261:21:3;:19;:21::i;:::-;9719:15:13::1;9737:12;:10;:12::i;:::-;9719:30;;9763:18;:27;9782:7;9763:27;;;;;;;;;;;;;;;;;;;;;;;;;9759:184;;;9806:26;9816:4;9822:2;9826:5;9806:9;:26::i;:::-;9759:184;;;9863:26;9873:4;9879:2;9883:5;9863:9;:26::i;:::-;9903:29;9913:4;9919:5;;;;;;;;;;;9926;;9903:9;:29::i;:::-;9759:184;9959:4;9952:11;;;2303:20:3::0;:18;:20::i;:::-;9594:376:13;;;;;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;4226:136::-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;3002:82:4:-;3051:5;3075:2;3068:9;;3002:82;:::o;5328:245:0:-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;11019:251:13:-;11109:27;1230:19;11125:10;11109:7;:27::i;:::-;11101:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;11191:1;11169:24;;:10;:24;;;11161:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;11256:7;11223:18;:30;11242:10;11223:30;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;11019:251;;:::o;11612:285::-;2261:21:3;:19;:21::i;:::-;11718:28:13::1;1289:20;11735:10;11718:7;:28::i;:::-;11710:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;11772:48;11800:5;11807:12;11779:6;11772:27;;;;:48;;;;;:::i;:::-;11835:55;11848:6;11856:12;11870:5;11877:12;11835:55;;;;;;;;;:::i;:::-;;;;;;;;2303:20:3::0;:18;:20::i;:::-;11612:285:13;;;:::o;7257:209::-;5403:6;;;;;;;;;;;5402:7;5394:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;7319:28:::1;1049:18;7334:12;:10;:12::i;:::-;7319:7;:28::i;:::-;7311:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7386:35;7399:7;7408:12;:10;:12::i;:::-;7386:35;;;;;;;:::i;:::-;;;;;;;;7431:28;7437:12;:10;:12::i;:::-;7451:7;7431:5;:28::i;:::-;7257:209:::0;:::o;6202:303::-;5403:6;;;;;;;;;;;5402:7;5394:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;5845:14:::1;;;;;;;;;;;5844:15;5836:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;6288:30:::2;991:20;6305:12;:10;:12::i;:::-;6288:7;:30::i;:::-;6280:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;6388:4;;6377:7;6361:13;:11;:13::i;:::-;:23;;;;:::i;:::-;:31;;6353:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;6441:28;6456:3;6461:7;6441:28;;;;;;;:::i;:::-;;;;;;;;6479:19;6485:3;6490:7;6479:5;:19::i;:::-;6202:303:::0;;:::o;12167:248::-;2261:21:3;:19;:21::i;:::-;12266:28:13::1;1289:20;12283:10;12266:7;:28::i;:::-;12258:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;12320:5;:14;;:28;12335:12;12320:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;12363:45;12374:5;12381:12;12395;12363:45;;;;;;;;:::i;:::-;;;;;;;;2303:20:3::0;:18;:20::i;:::-;12167:248:13;;:::o;1197:52::-;1230:19;1197:52;:::o;1017:50::-;1049:18;1017:50;:::o;1522:18::-;;;;;;;;;;;;;:::o;1073:58::-;1109:22;1073:58;:::o;3299:116:4:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;7753:239:13:-;5403:6;;;;;;;;;;;5402:7;5394:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;7833:32:::1;1109:22;7852:12;:10;:12::i;:::-;7833:7;:32::i;:::-;7825:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7908:46;7925:5;7932:7;7941:12;:10;:12::i;:::-;7908:46;;;;;;;;:::i;:::-;;;;;;;;7964:21;7970:5;7977:7;7964:5;:21::i;:::-;7753:239:::0;;:::o;957:54::-;991:20;957:54;:::o;1255:::-;1289:20;1255:54;:::o;901:50::-;933:18;901:50;:::o;8620:76::-;8662:4;8685;;8678:11;;8620:76;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;1589:24:13:-;;;;;;;;;;;;;:::o;2276:93:4:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;6740:285:13:-;5403:6;;;;;;;;;;;5402:7;5394:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;5615:12:::1;;;;;;;;;;;5614:13;5606:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;6809:28:::2;933:18;6824:12;:10;:12::i;:::-;6809:7;:28::i;:::-;6801:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;6906:4;;6895:7;6879:13;:11;:13::i;:::-;:23;;;;:::i;:::-;:31;;6871:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;6959:21;6972:7;6959:21;;;;;;:::i;:::-;;;;;;;;6990:28;6996:12;:10;:12::i;:::-;7010:7;6990:5;:28::i;:::-;6740:285:::0;:::o;2187:49:0:-;2232:4;2187:49;;;:::o;10284:357:13:-;10375:4;2261:21:3;:19;:21::i;:::-;10391:13:13::1;10407:12;:10;:12::i;:::-;10391:28;;10433:18;:25;10452:5;10433:25;;;;;;;;;;;;;;;;;;;;;;;;;10429:185;;;10474:27;10484:5;10491:2;10495:5;10474:9;:27::i;:::-;10429:185;;;10532:27;10542:5;10549:2;10553:5;10532:9;:27::i;:::-;10573:30;10583:5;10590;;;;;;;;;;;10597;;10573:9;:30::i;:::-;10429:185;10630:4;10623:11;;;2303:20:3::0;:18;:20::i;:::-;10284:357:13;;;;:::o;8216:287::-;5403:6;;;;;;;;;;;5402:7;5394:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;8288:30:::1;1171:20;8305:12;:10;:12::i;:::-;8288:7;:30::i;:::-;8280:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;8366:13;:11;:13::i;:::-;8352:10;:27;;8344:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;8429:10;8422:4;:17;;;;8454:42;8471:10;8483:12;:10;:12::i;:::-;8454:42;;;;;;;:::i;:::-;;;;;;;;8216:287:::0;:::o;2625:50::-;;;;;;;;;;;;;;;;;;;;;;:::o;1447:31::-;;;;:::o;1646:26::-;;;;;;;;;;;;;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;3846:140:4:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;4308:353:13:-;4378:29;1230:19;4394:12;:10;:12::i;:::-;4378:7;:29::i;:::-;4370:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;4457:15;4442:12;;:30;;;;;;;;;;;;;;;;;;4487:15;4483:172;;;4523:43;4539:12;4553;:10;:12::i;:::-;4523:43;;;;;;;:::i;:::-;;;;;;;;4483:172;;;4602:42;4617:12;4631;:10;:12::i;:::-;4602:42;;;;;;;:::i;:::-;;;;;;;;4483:172;4308:353;:::o;1137:54::-;1171:20;1137:54;:::o;4899:348::-;4970:29;1230:19;4986:12;:10;:12::i;:::-;4970:7;:29::i;:::-;4962:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;5041:14;5024;;:31;;;;;;;;;;;;;;;;;;5070:14;5066:175;;;5105:45;5123:12;5137;:10;:12::i;:::-;5105:45;;;;;;;:::i;:::-;;;;;;;;5066:175;;;5186:44;5203:12;5217;:10;:12::i;:::-;5186:44;;;;;;;:::i;:::-;;;;;;;;5066:175;4899:348;:::o;1378:20::-;;;;;;;;;;;;;:::o;762:146:11:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;656:96:10:-;709:7;735:10;728:17;;656:96;:::o;8989:128:4:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;2336:287:3:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;5656:300:4:-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;2629:209:3:-;1716:1;2809:7;:22;;;;2629:209::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;6730:317::-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;1303:160:8:-;1385:71;1405:5;1427;:14;;;1444:2;1448:5;1412:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1385:19;:71::i;:::-;1303:160;;;:::o;8247:206:4:-;8336:1;8317:21;;:7;:21;;;8313:89;;8388:1;8361:30;;;;;;;;;;;:::i;:::-;;;;;;;;8313:89;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;:::-;8247:206;;:::o;7721:208::-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;9949:432::-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;8978:264:13:-;9093:1;9077:18;;:4;:18;;;9073:122;;9146:4;;9136:6;9120:13;:11;:13::i;:::-;:22;;;;:::i;:::-;:30;;9112:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;9073:122;9204:31;9218:4;9224:2;9228:6;9204:13;:31::i;:::-;8978:264;;;:::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;4059:629:8:-;4478:23;4504:33;4532:4;4512:5;4504:27;;;;:33;;;;:::i;:::-;4478:59;;4572:1;4551:10;:17;:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;;;;;;;;;;:::i;:::-;;;;;;;;4547:135;4129:559;4059:629;;:::o;6271:1107:4:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;2705:151:9:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3394:4;3359:41;;;;;;;;;;;:::i;:::-;;;;;;;;3303:108;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;88:117:14;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:139::-;1887:6;1882:3;1877;1871:23;1928:1;1919:6;1914:3;1910:16;1903:27;1798:139;;;:::o;1943:102::-;1984:6;2035:2;2031:7;2026:2;2019:5;2015:14;2011:28;2001:38;;1943:102;;;:::o;2051:377::-;2139:3;2167:39;2200:5;2167:39;:::i;:::-;2222:71;2286:6;2281:3;2222:71;:::i;:::-;2215:78;;2302:65;2360:6;2355:3;2348:4;2341:5;2337:16;2302:65;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2143:285;2051:377;;;;:::o;2434:313::-;2547:4;2585:2;2574:9;2570:18;2562:26;;2634:9;2628:4;2624:20;2620:1;2609:9;2605:17;2598:47;2662:78;2735:4;2726:6;2662:78;:::i;:::-;2654:86;;2434:313;;;;:::o;2753:126::-;2790:7;2830:42;2823:5;2819:54;2808:65;;2753:126;;;:::o;2885:96::-;2922:7;2951:24;2969:5;2951:24;:::i;:::-;2940:35;;2885:96;;;:::o;2987:122::-;3060:24;3078:5;3060:24;:::i;:::-;3053:5;3050:35;3040:63;;3099:1;3096;3089:12;3040:63;2987:122;:::o;3115:139::-;3161:5;3199:6;3186:20;3177:29;;3215:33;3242:5;3215:33;:::i;:::-;3115:139;;;;:::o;3260:77::-;3297:7;3326:5;3315:16;;3260:77;;;:::o;3343:122::-;3416:24;3434:5;3416:24;:::i;:::-;3409:5;3406:35;3396:63;;3455:1;3452;3445:12;3396:63;3343:122;:::o;3471:139::-;3517:5;3555:6;3542:20;3533:29;;3571:33;3598:5;3571:33;:::i;:::-;3471:139;;;;:::o;3616:474::-;3684:6;3692;3741:2;3729:9;3720:7;3716:23;3712:32;3709:119;;;3747:79;;:::i;:::-;3709:119;3867:1;3892:53;3937:7;3928:6;3917:9;3913:22;3892:53;:::i;:::-;3882:63;;3838:117;3994:2;4020:53;4065:7;4056:6;4045:9;4041:22;4020:53;:::i;:::-;4010:63;;3965:118;3616:474;;;;;:::o;4096:116::-;4166:21;4181:5;4166:21;:::i;:::-;4159:5;4156:32;4146:60;;4202:1;4199;4192:12;4146:60;4096:116;:::o;4218:133::-;4261:5;4299:6;4286:20;4277:29;;4315:30;4339:5;4315:30;:::i;:::-;4218:133;;;;:::o;4357:323::-;4413:6;4462:2;4450:9;4441:7;4437:23;4433:32;4430:119;;;4468:79;;:::i;:::-;4430:119;4588:1;4613:50;4655:7;4646:6;4635:9;4631:22;4613:50;:::i;:::-;4603:60;;4559:114;4357:323;;;;:::o;4686:118::-;4773:24;4791:5;4773:24;:::i;:::-;4768:3;4761:37;4686:118;;:::o;4810:222::-;4903:4;4941:2;4930:9;4926:18;4918:26;;4954:71;5022:1;5011:9;5007:17;4998:6;4954:71;:::i;:::-;4810:222;;;;:::o;5038:619::-;5115:6;5123;5131;5180:2;5168:9;5159:7;5155:23;5151:32;5148:119;;;5186:79;;:::i;:::-;5148:119;5306:1;5331:53;5376:7;5367:6;5356:9;5352:22;5331:53;:::i;:::-;5321:63;;5277:117;5433:2;5459:53;5504:7;5495:6;5484:9;5480:22;5459:53;:::i;:::-;5449:63;;5404:118;5561:2;5587:53;5632:7;5623:6;5612:9;5608:22;5587:53;:::i;:::-;5577:63;;5532:118;5038:619;;;;;:::o;5663:77::-;5700:7;5729:5;5718:16;;5663:77;;;:::o;5746:122::-;5819:24;5837:5;5819:24;:::i;:::-;5812:5;5809:35;5799:63;;5858:1;5855;5848:12;5799:63;5746:122;:::o;5874:139::-;5920:5;5958:6;5945:20;5936:29;;5974:33;6001:5;5974:33;:::i;:::-;5874:139;;;;:::o;6019:329::-;6078:6;6127:2;6115:9;6106:7;6102:23;6098:32;6095:119;;;6133:79;;:::i;:::-;6095:119;6253:1;6278:53;6323:7;6314:6;6303:9;6299:22;6278:53;:::i;:::-;6268:63;;6224:117;6019:329;;;;:::o;6354:118::-;6441:24;6459:5;6441:24;:::i;:::-;6436:3;6429:37;6354:118;;:::o;6478:222::-;6571:4;6609:2;6598:9;6594:18;6586:26;;6622:71;6690:1;6679:9;6675:17;6666:6;6622:71;:::i;:::-;6478:222;;;;:::o;6706:474::-;6774:6;6782;6831:2;6819:9;6810:7;6806:23;6802:32;6799:119;;;6837:79;;:::i;:::-;6799:119;6957:1;6982:53;7027:7;7018:6;7007:9;7003:22;6982:53;:::i;:::-;6972:63;;6928:117;7084:2;7110:53;7155:7;7146:6;7135:9;7131:22;7110:53;:::i;:::-;7100:63;;7055:118;6706:474;;;;;:::o;7186:86::-;7221:7;7261:4;7254:5;7250:16;7239:27;;7186:86;;;:::o;7278:112::-;7361:22;7377:5;7361:22;:::i;:::-;7356:3;7349:35;7278:112;;:::o;7396:214::-;7485:4;7523:2;7512:9;7508:18;7500:26;;7536:67;7600:1;7589:9;7585:17;7576:6;7536:67;:::i;:::-;7396:214;;;;:::o;7616:468::-;7681:6;7689;7738:2;7726:9;7717:7;7713:23;7709:32;7706:119;;;7744:79;;:::i;:::-;7706:119;7864:1;7889:53;7934:7;7925:6;7914:9;7910:22;7889:53;:::i;:::-;7879:63;;7835:117;7991:2;8017:50;8059:7;8050:6;8039:9;8035:22;8017:50;:::i;:::-;8007:60;;7962:115;7616:468;;;;;:::o;8090:111::-;8142:7;8171:24;8189:5;8171:24;:::i;:::-;8160:35;;8090:111;;;:::o;8207:152::-;8295:39;8328:5;8295:39;:::i;:::-;8288:5;8285:50;8275:78;;8349:1;8346;8339:12;8275:78;8207:152;:::o;8365:169::-;8426:5;8464:6;8451:20;8442:29;;8480:48;8522:5;8480:48;:::i;:::-;8365:169;;;;:::o;8540:649::-;8632:6;8640;8648;8697:2;8685:9;8676:7;8672:23;8668:32;8665:119;;;8703:79;;:::i;:::-;8665:119;8823:1;8848:68;8908:7;8899:6;8888:9;8884:22;8848:68;:::i;:::-;8838:78;;8794:132;8965:2;8991:53;9036:7;9027:6;9016:9;9012:22;8991:53;:::i;:::-;8981:63;;8936:118;9093:2;9119:53;9164:7;9155:6;9144:9;9140:22;9119:53;:::i;:::-;9109:63;;9064:118;8540:649;;;;;:::o;9195:329::-;9254:6;9303:2;9291:9;9282:7;9278:23;9274:32;9271:119;;;9309:79;;:::i;:::-;9271:119;9429:1;9454:53;9499:7;9490:6;9479:9;9475:22;9454:53;:::i;:::-;9444:63;;9400:117;9195:329;;;;:::o;9530:104::-;9575:7;9604:24;9622:5;9604:24;:::i;:::-;9593:35;;9530:104;;;:::o;9640:138::-;9721:32;9747:5;9721:32;:::i;:::-;9714:5;9711:43;9701:71;;9768:1;9765;9758:12;9701:71;9640:138;:::o;9784:155::-;9838:5;9876:6;9863:20;9854:29;;9892:41;9927:5;9892:41;:::i;:::-;9784:155;;;;:::o;9945:490::-;10021:6;10029;10078:2;10066:9;10057:7;10053:23;10049:32;10046:119;;;10084:79;;:::i;:::-;10046:119;10204:1;10229:61;10282:7;10273:6;10262:9;10258:22;10229:61;:::i;:::-;10219:71;;10175:125;10339:2;10365:53;10410:7;10401:6;10390:9;10386:22;10365:53;:::i;:::-;10355:63;;10310:118;9945:490;;;;;:::o;10441:329::-;10500:6;10549:2;10537:9;10528:7;10524:23;10520:32;10517:119;;;10555:79;;:::i;:::-;10517:119;10675:1;10700:53;10745:7;10736:6;10725:9;10721:22;10700:53;:::i;:::-;10690:63;;10646:117;10441:329;;;;:::o;10776:474::-;10844:6;10852;10901:2;10889:9;10880:7;10876:23;10872:32;10869:119;;;10907:79;;:::i;:::-;10869:119;11027:1;11052:53;11097:7;11088:6;11077:9;11073:22;11052:53;:::i;:::-;11042:63;;10998:117;11154:2;11180:53;11225:7;11216:6;11205:9;11201:22;11180:53;:::i;:::-;11170:63;;11125:118;10776:474;;;;;:::o;11256:118::-;11343:24;11361:5;11343:24;:::i;:::-;11338:3;11331:37;11256:118;;:::o;11380:222::-;11473:4;11511:2;11500:9;11496:18;11488:26;;11524:71;11592:1;11581:9;11577:17;11568:6;11524:71;:::i;:::-;11380:222;;;;:::o;11608:180::-;11656:77;11653:1;11646:88;11753:4;11750:1;11743:15;11777:4;11774:1;11767:15;11794:320;11838:6;11875:1;11869:4;11865:12;11855:22;;11922:1;11916:4;11912:12;11943:18;11933:81;;11999:4;11991:6;11987:17;11977:27;;11933:81;12061:2;12053:6;12050:14;12030:18;12027:38;12024:84;;12080:18;;:::i;:::-;12024:84;11845:269;11794:320;;;:::o;12120:170::-;12260:22;12256:1;12248:6;12244:14;12237:46;12120:170;:::o;12296:366::-;12438:3;12459:67;12523:2;12518:3;12459:67;:::i;:::-;12452:74;;12535:93;12624:3;12535:93;:::i;:::-;12653:2;12648:3;12644:12;12637:19;;12296:366;;;:::o;12668:419::-;12834:4;12872:2;12861:9;12857:18;12849:26;;12921:9;12915:4;12911:20;12907:1;12896:9;12892:17;12885:47;12949:131;13075:4;12949:131;:::i;:::-;12941:139;;12668:419;;;:::o;13093:332::-;13214:4;13252:2;13241:9;13237:18;13229:26;;13265:71;13333:1;13322:9;13318:17;13309:6;13265:71;:::i;:::-;13346:72;13414:2;13403:9;13399:18;13390:6;13346:72;:::i;:::-;13093:332;;;;;:::o;13431:160::-;13571:12;13567:1;13559:6;13555:14;13548:36;13431:160;:::o;13597:366::-;13739:3;13760:67;13824:2;13819:3;13760:67;:::i;:::-;13753:74;;13836:93;13925:3;13836:93;:::i;:::-;13954:2;13949:3;13945:12;13938:19;;13597:366;;;:::o;13969:419::-;14135:4;14173:2;14162:9;14158:18;14150:26;;14222:9;14216:4;14212:20;14208:1;14197:9;14193:17;14186:47;14250:131;14376:4;14250:131;:::i;:::-;14242:139;;13969:419;;;:::o;14394:165::-;14534:17;14530:1;14522:6;14518:14;14511:41;14394:165;:::o;14565:366::-;14707:3;14728:67;14792:2;14787:3;14728:67;:::i;:::-;14721:74;;14804:93;14893:3;14804:93;:::i;:::-;14922:2;14917:3;14913:12;14906:19;;14565:366;;;:::o;14937:419::-;15103:4;15141:2;15130:9;15126:18;15118:26;;15190:9;15184:4;15180:20;15176:1;15165:9;15161:17;15154:47;15218:131;15344:4;15218:131;:::i;:::-;15210:139;;14937:419;;;:::o;15362:161::-;15502:13;15498:1;15490:6;15486:14;15479:37;15362:161;:::o;15529:366::-;15671:3;15692:67;15756:2;15751:3;15692:67;:::i;:::-;15685:74;;15768:93;15857:3;15768:93;:::i;:::-;15886:2;15881:3;15877:12;15870:19;;15529:366;;;:::o;15901:419::-;16067:4;16105:2;16094:9;16090:18;16082:26;;16154:9;16148:4;16144:20;16140:1;16129:9;16125:17;16118:47;16182:131;16308:4;16182:131;:::i;:::-;16174:139;;15901:419;;;:::o;16326:60::-;16354:3;16375:5;16368:12;;16326:60;;;:::o;16392:142::-;16442:9;16475:53;16493:34;16502:24;16520:5;16502:24;:::i;:::-;16493:34;:::i;:::-;16475:53;:::i;:::-;16462:66;;16392:142;;;:::o;16540:126::-;16590:9;16623:37;16654:5;16623:37;:::i;:::-;16610:50;;16540:126;;;:::o;16672:141::-;16737:9;16770:37;16801:5;16770:37;:::i;:::-;16757:50;;16672:141;;;:::o;16819:161::-;16921:52;16967:5;16921:52;:::i;:::-;16916:3;16909:65;16819:161;;:::o;16986:583::-;17178:4;17216:3;17205:9;17201:19;17193:27;;17230:86;17313:1;17302:9;17298:17;17289:6;17230:86;:::i;:::-;17326:72;17394:2;17383:9;17379:18;17370:6;17326:72;:::i;:::-;17408;17476:2;17465:9;17461:18;17452:6;17408:72;:::i;:::-;17490;17558:2;17547:9;17543:18;17534:6;17490:72;:::i;:::-;16986:583;;;;;;;:::o;17575:178::-;17715:30;17711:1;17703:6;17699:14;17692:54;17575:178;:::o;17759:366::-;17901:3;17922:67;17986:2;17981:3;17922:67;:::i;:::-;17915:74;;17998:93;18087:3;17998:93;:::i;:::-;18116:2;18111:3;18107:12;18100:19;;17759:366;;;:::o;18131:419::-;18297:4;18335:2;18324:9;18320:18;18312:26;;18384:9;18378:4;18374:20;18370:1;18359:9;18355:17;18348:47;18412:131;18538:4;18412:131;:::i;:::-;18404:139;;18131:419;;;:::o;18556:169::-;18696:21;18692:1;18684:6;18680:14;18673:45;18556:169;:::o;18731:366::-;18873:3;18894:67;18958:2;18953:3;18894:67;:::i;:::-;18887:74;;18970:93;19059:3;18970:93;:::i;:::-;19088:2;19083:3;19079:12;19072:19;;18731:366;;;:::o;19103:419::-;19269:4;19307:2;19296:9;19292:18;19284:26;;19356:9;19350:4;19346:20;19342:1;19331:9;19327:17;19320:47;19384:131;19510:4;19384:131;:::i;:::-;19376:139;;19103:419;;;:::o;19528:169::-;19668:21;19664:1;19656:6;19652:14;19645:45;19528:169;:::o;19703:366::-;19845:3;19866:67;19930:2;19925:3;19866:67;:::i;:::-;19859:74;;19942:93;20031:3;19942:93;:::i;:::-;20060:2;20055:3;20051:12;20044:19;;19703:366;;;:::o;20075:419::-;20241:4;20279:2;20268:9;20264:18;20256:26;;20328:9;20322:4;20318:20;20314:1;20303:9;20299:17;20292:47;20356:131;20482:4;20356:131;:::i;:::-;20348:139;;20075:419;;;:::o;20500:170::-;20640:22;20636:1;20628:6;20624:14;20617:46;20500:170;:::o;20676:366::-;20818:3;20839:67;20903:2;20898:3;20839:67;:::i;:::-;20832:74;;20915:93;21004:3;20915:93;:::i;:::-;21033:2;21028:3;21024:12;21017:19;;20676:366;;;:::o;21048:419::-;21214:4;21252:2;21241:9;21237:18;21229:26;;21301:9;21295:4;21291:20;21287:1;21276:9;21272:17;21265:47;21329:131;21455:4;21329:131;:::i;:::-;21321:139;;21048:419;;;:::o;21473:180::-;21521:77;21518:1;21511:88;21618:4;21615:1;21608:15;21642:4;21639:1;21632:15;21659:191;21699:3;21718:20;21736:1;21718:20;:::i;:::-;21713:25;;21752:20;21770:1;21752:20;:::i;:::-;21747:25;;21795:1;21792;21788:9;21781:16;;21816:3;21813:1;21810:10;21807:36;;;21823:18;;:::i;:::-;21807:36;21659:191;;;;:::o;21856:179::-;21996:31;21992:1;21984:6;21980:14;21973:55;21856:179;:::o;22041:366::-;22183:3;22204:67;22268:2;22263:3;22204:67;:::i;:::-;22197:74;;22280:93;22369:3;22280:93;:::i;:::-;22398:2;22393:3;22389:12;22382:19;;22041:366;;;:::o;22413:419::-;22579:4;22617:2;22606:9;22602:18;22594:26;;22666:9;22660:4;22656:20;22652:1;22641:9;22637:17;22630:47;22694:131;22820:4;22694:131;:::i;:::-;22686:139;;22413:419;;;:::o;22838:332::-;22959:4;22997:2;22986:9;22982:18;22974:26;;23010:71;23078:1;23067:9;23063:17;23054:6;23010:71;:::i;:::-;23091:72;23159:2;23148:9;23144:18;23135:6;23091:72;:::i;:::-;22838:332;;;;;:::o;23176:134::-;23234:9;23267:37;23298:5;23267:37;:::i;:::-;23254:50;;23176:134;;;:::o;23316:147::-;23411:45;23450:5;23411:45;:::i;:::-;23406:3;23399:58;23316:147;;:::o;23469:458::-;23626:4;23664:2;23653:9;23649:18;23641:26;;23677:79;23753:1;23742:9;23738:17;23729:6;23677:79;:::i;:::-;23766:72;23834:2;23823:9;23819:18;23810:6;23766:72;:::i;:::-;23848;23916:2;23905:9;23901:18;23892:6;23848:72;:::i;:::-;23469:458;;;;;;:::o;23933:173::-;24073:25;24069:1;24061:6;24057:14;24050:49;23933:173;:::o;24112:366::-;24254:3;24275:67;24339:2;24334:3;24275:67;:::i;:::-;24268:74;;24351:93;24440:3;24351:93;:::i;:::-;24469:2;24464:3;24460:12;24453:19;;24112:366;;;:::o;24484:419::-;24650:4;24688:2;24677:9;24673:18;24665:26;;24737:9;24731:4;24727:20;24723:1;24712:9;24708:17;24701:47;24765:131;24891:4;24765:131;:::i;:::-;24757:139;;24484:419;;;:::o;24909:442::-;25058:4;25096:2;25085:9;25081:18;25073:26;;25109:71;25177:1;25166:9;25162:17;25153:6;25109:71;:::i;:::-;25190:72;25258:2;25247:9;25243:18;25234:6;25190:72;:::i;:::-;25272;25340:2;25329:9;25325:18;25316:6;25272:72;:::i;:::-;24909:442;;;;;;:::o;25357:166::-;25497:18;25493:1;25485:6;25481:14;25474:42;25357:166;:::o;25529:366::-;25671:3;25692:67;25756:2;25751:3;25692:67;:::i;:::-;25685:74;;25768:93;25857:3;25768:93;:::i;:::-;25886:2;25881:3;25877:12;25870:19;;25529:366;;;:::o;25901:419::-;26067:4;26105:2;26094:9;26090:18;26082:26;;26154:9;26148:4;26144:20;26140:1;26129:9;26125:17;26118:47;26182:131;26308:4;26182:131;:::i;:::-;26174:139;;25901:419;;;:::o;26326:169::-;26466:21;26462:1;26454:6;26450:14;26443:45;26326:169;:::o;26501:366::-;26643:3;26664:67;26728:2;26723:3;26664:67;:::i;:::-;26657:74;;26740:93;26829:3;26740:93;:::i;:::-;26858:2;26853:3;26849:12;26842:19;;26501:366;;;:::o;26873:419::-;27039:4;27077:2;27066:9;27062:18;27054:26;;27126:9;27120:4;27116:20;27112:1;27101:9;27097:17;27090:47;27154:131;27280:4;27154:131;:::i;:::-;27146:139;;26873:419;;;:::o;27298:161::-;27438:13;27434:1;27426:6;27422:14;27415:37;27298:161;:::o;27465:366::-;27607:3;27628:67;27692:2;27687:3;27628:67;:::i;:::-;27621:74;;27704:93;27793:3;27704:93;:::i;:::-;27822:2;27817:3;27813:12;27806:19;;27465:366;;;:::o;27837:419::-;28003:4;28041:2;28030:9;28026:18;28018:26;;28090:9;28084:4;28080:20;28076:1;28065:9;28061:17;28054:47;28118:131;28244:4;28118:131;:::i;:::-;28110:139;;27837:419;;;:::o;28262:178::-;28402:30;28398:1;28390:6;28386:14;28379:54;28262:178;:::o;28446:366::-;28588:3;28609:67;28673:2;28668:3;28609:67;:::i;:::-;28602:74;;28685:93;28774:3;28685:93;:::i;:::-;28803:2;28798:3;28794:12;28787:19;;28446:366;;;:::o;28818:419::-;28984:4;29022:2;29011:9;29007:18;28999:26;;29071:9;29065:4;29061:20;29057:1;29046:9;29042:17;29035:47;29099:131;29225:4;29099:131;:::i;:::-;29091:139;;28818:419;;;:::o;29243:181::-;29383:33;29379:1;29371:6;29367:14;29360:57;29243:181;:::o;29430:366::-;29572:3;29593:67;29657:2;29652:3;29593:67;:::i;:::-;29586:74;;29669:93;29758:3;29669:93;:::i;:::-;29787:2;29782:3;29778:12;29771:19;;29430:366;;;:::o;29802:419::-;29968:4;30006:2;29995:9;29991:18;29983:26;;30055:9;30049:4;30045:20;30041:1;30030:9;30026:17;30019:47;30083:131;30209:4;30083:131;:::i;:::-;30075:139;;29802:419;;;:::o;30227:332::-;30348:4;30386:2;30375:9;30371:18;30363:26;;30399:71;30467:1;30456:9;30452:17;30443:6;30399:71;:::i;:::-;30480:72;30548:2;30537:9;30533:18;30524:6;30480:72;:::i;:::-;30227:332;;;;;:::o;30565:137::-;30619:5;30650:6;30644:13;30635:22;;30666:30;30690:5;30666:30;:::i;:::-;30565:137;;;;:::o;30708:345::-;30775:6;30824:2;30812:9;30803:7;30799:23;30795:32;30792:119;;;30830:79;;:::i;:::-;30792:119;30950:1;30975:61;31028:7;31019:6;31008:9;31004:22;30975:61;:::i;:::-;30965:71;;30921:125;30708:345;;;;:::o;31059:442::-;31208:4;31246:2;31235:9;31231:18;31223:26;;31259:71;31327:1;31316:9;31312:17;31303:6;31259:71;:::i;:::-;31340:72;31408:2;31397:9;31393:18;31384:6;31340:72;:::i;:::-;31422;31490:2;31479:9;31475:18;31466:6;31422:72;:::i;:::-;31059:442;;;;;;:::o;31507:98::-;31558:6;31592:5;31586:12;31576:22;;31507:98;;;:::o;31611:147::-;31712:11;31749:3;31734:18;;31611:147;;;;:::o;31764:386::-;31868:3;31896:38;31928:5;31896:38;:::i;:::-;31950:88;32031:6;32026:3;31950:88;:::i;:::-;31943:95;;32047:65;32105:6;32100:3;32093:4;32086:5;32082:16;32047:65;:::i;:::-;32137:6;32132:3;32128:16;32121:23;;31872:278;31764:386;;;;:::o;32156:271::-;32286:3;32308:93;32397:3;32388:6;32308:93;:::i;:::-;32301:100;;32418:3;32411:10;;32156:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2830600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "463",
								"_ADMIN()": "370",
								"_BURN()": "392",
								"_BURNFROM()": "436",
								"_MINT()": "437",
								"_MINTTO()": "393",
								"_RESCUE()": "415",
								"_SUPPLY()": "435",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2962",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "450",
								"disableMint(bool)": "infinite",
								"disableMintTo(bool)": "infinite",
								"ethRescue(address,uint256)": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3167",
								"mint(uint256)": "infinite",
								"mintDisabled()": "2584",
								"mintTo(address,uint256)": "infinite",
								"mintToDisabled()": "2650",
								"moveERC20(address,address,uint256)": "infinite",
								"name()": "infinite",
								"paused()": "2555",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"setPaused(bool)": "infinite",
								"setSupplyCap(uint256)": "infinite",
								"setWhitelistAddress(address,bool)": "27427",
								"supplyCap()": "2566",
								"supportsInterface(bytes4)": "764",
								"symbol()": "infinite",
								"totalSupply()": "2567",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"txFee()": "2536",
								"vault()": "2662",
								"whitelistedAddress(address)": "2922"
							},
							"internal": {
								"_update(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 740,
									"end": 12422,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 740,
									"end": 12422,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 740,
									"end": 12422,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1467,
									"end": 1478,
									"name": "PUSH",
									"source": 13,
									"value": "11C37937E08000"
								},
								{
									"begin": 1447,
									"end": 1478,
									"name": "PUSH",
									"source": 13,
									"value": "9"
								},
								{
									"begin": 1447,
									"end": 1478,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 2947,
									"end": 3586,
									"name": "CALLVALUE",
									"source": 13
								},
								{
									"begin": 2947,
									"end": 3586,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2947,
									"end": 3586,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2947,
									"end": 3586,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 2947,
									"end": 3586,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2947,
									"end": 3586,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2947,
									"end": 3586,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2947,
									"end": 3586,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 2947,
									"end": 3586,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 2947,
									"end": 3586,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2947,
									"end": 3586,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2947,
									"end": 3586,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 2947,
									"end": 3586,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 2947,
									"end": 3586,
									"name": "PUSHSIZE",
									"source": 13
								},
								{
									"begin": 2947,
									"end": 3586,
									"name": "CODESIZE",
									"source": 13
								},
								{
									"begin": 2947,
									"end": 3586,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 2947,
									"end": 3586,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2947,
									"end": 3586,
									"name": "PUSHSIZE",
									"source": 13
								},
								{
									"begin": 2947,
									"end": 3586,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2947,
									"end": 3586,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 2947,
									"end": 3586,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2947,
									"end": 3586,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2947,
									"end": 3586,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2947,
									"end": 3586,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 2947,
									"end": 3586,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2947,
									"end": 3586,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2947,
									"end": 3586,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2947,
									"end": 3586,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2947,
									"end": 3586,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 2947,
									"end": 3586,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2947,
									"end": 3586,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2947,
									"end": 3586,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 2947,
									"end": 3586,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2947,
									"end": 3586,
									"name": "tag",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 2947,
									"end": 3586,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "546F6B656E000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "544B4E0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3014,
									"end": 3028,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "84595161401484A000000"
								},
								{
									"begin": 3007,
									"end": 3011,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "7"
								},
								{
									"begin": 3007,
									"end": 3028,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3007,
									"end": 3028,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3007,
									"end": 3028,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 3007,
									"end": 3028,
									"modifierDepth": 1,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3096,
									"end": 3101,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3081,
									"end": 3093,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "A"
								},
								{
									"begin": 3081,
									"end": 3093,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 3081,
									"end": 3101,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 3081,
									"end": 3101,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 3081,
									"end": 3101,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3081,
									"end": 3101,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 3081,
									"end": 3101,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3081,
									"end": 3101,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "FF"
								},
								{
									"begin": 3081,
									"end": 3101,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 3081,
									"end": 3101,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 3081,
									"end": 3101,
									"modifierDepth": 1,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3081,
									"end": 3101,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3081,
									"end": 3101,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3081,
									"end": 3101,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3081,
									"end": 3101,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3081,
									"end": 3101,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 3081,
									"end": 3101,
									"modifierDepth": 1,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 3081,
									"end": 3101,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3081,
									"end": 3101,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 3081,
									"end": 3101,
									"modifierDepth": 1,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3156,
									"end": 3161,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3139,
									"end": 3153,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "A"
								},
								{
									"begin": 3139,
									"end": 3153,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 3139,
									"end": 3161,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 3139,
									"end": 3161,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 3139,
									"end": 3161,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3139,
									"end": 3161,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 3139,
									"end": 3161,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3139,
									"end": 3161,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "FF"
								},
								{
									"begin": 3139,
									"end": 3161,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 3139,
									"end": 3161,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 3139,
									"end": 3161,
									"modifierDepth": 1,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3139,
									"end": 3161,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3139,
									"end": 3161,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3139,
									"end": 3161,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3139,
									"end": 3161,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3139,
									"end": 3161,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 3139,
									"end": 3161,
									"modifierDepth": 1,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 3139,
									"end": 3161,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3139,
									"end": 3161,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 3139,
									"end": 3161,
									"modifierDepth": 1,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3229,
									"end": 3235,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3221,
									"end": 3226,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 3221,
									"end": 3226,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3221,
									"end": 3235,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 3221,
									"end": 3235,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 3221,
									"end": 3235,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3221,
									"end": 3235,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 3221,
									"end": 3235,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3221,
									"end": 3235,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3221,
									"end": 3235,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 3221,
									"end": 3235,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 3221,
									"end": 3235,
									"modifierDepth": 1,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3221,
									"end": 3235,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3221,
									"end": 3235,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3221,
									"end": 3235,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3221,
									"end": 3235,
									"modifierDepth": 1,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3221,
									"end": 3235,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 3221,
									"end": 3235,
									"modifierDepth": 1,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 3221,
									"end": 3235,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3221,
									"end": 3235,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 3221,
									"end": 3235,
									"modifierDepth": 1,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3245,
									"end": 3289,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "13"
								},
								{
									"begin": 2232,
									"end": 2236,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3256,
									"end": 3274,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3256,
									"end": 3274,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 3276,
									"end": 3288,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 3276,
									"end": 3286,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 3276,
									"end": 3286,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3276,
									"end": 3286,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 3276,
									"end": 3288,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3276,
									"end": 3288,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 3276,
									"end": 3288,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3276,
									"end": 3288,
									"modifierDepth": 1,
									"name": "tag",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 3276,
									"end": 3288,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3245,
									"end": 3255,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 3245,
									"end": 3255,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3245,
									"end": 3255,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 3245,
									"end": 3289,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3245,
									"end": 3289,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 3245,
									"end": 3289,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3245,
									"end": 3289,
									"modifierDepth": 1,
									"name": "tag",
									"source": 13,
									"value": "13"
								},
								{
									"begin": 3245,
									"end": 3289,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3245,
									"end": 3289,
									"modifierDepth": 1,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3380,
									"end": 3412,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 1230,
									"end": 1249,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "AE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3"
								},
								{
									"begin": 3399,
									"end": 3411,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 3399,
									"end": 3409,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 3399,
									"end": 3409,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3399,
									"end": 3409,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 3399,
									"end": 3411,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3399,
									"end": 3411,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 3399,
									"end": 3411,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3399,
									"end": 3411,
									"modifierDepth": 1,
									"name": "tag",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 3399,
									"end": 3411,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3380,
									"end": 3390,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 3380,
									"end": 3390,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3380,
									"end": 3390,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 3380,
									"end": 3412,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3380,
									"end": 3412,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 3380,
									"end": 3412,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3380,
									"end": 3412,
									"modifierDepth": 1,
									"name": "tag",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 3380,
									"end": 3412,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3380,
									"end": 3412,
									"modifierDepth": 1,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3422,
									"end": 3453,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 933,
									"end": 951,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "8C66330D9D4F6ABA064F25EF2A307366EA6D917616F44C075AA60FA15E5CB1CB"
								},
								{
									"begin": 3440,
									"end": 3452,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3440,
									"end": 3450,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 3440,
									"end": 3450,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3440,
									"end": 3450,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 3440,
									"end": 3452,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3440,
									"end": 3452,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 3440,
									"end": 3452,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3440,
									"end": 3452,
									"modifierDepth": 1,
									"name": "tag",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3440,
									"end": 3452,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3422,
									"end": 3432,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 3422,
									"end": 3432,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3422,
									"end": 3432,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 3422,
									"end": 3453,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3422,
									"end": 3453,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 3422,
									"end": 3453,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3422,
									"end": 3453,
									"modifierDepth": 1,
									"name": "tag",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 3422,
									"end": 3453,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3422,
									"end": 3453,
									"modifierDepth": 1,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3463,
									"end": 3494,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 1049,
									"end": 1067,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "9EDFAD36E7D4D9DA54B4F78F22BF97CB5B58BB7998294A4288DA41C15C647C45"
								},
								{
									"begin": 3481,
									"end": 3493,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 3481,
									"end": 3491,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 3481,
									"end": 3491,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3481,
									"end": 3491,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 3481,
									"end": 3493,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3481,
									"end": 3493,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 3481,
									"end": 3493,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3481,
									"end": 3493,
									"modifierDepth": 1,
									"name": "tag",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 3481,
									"end": 3493,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3463,
									"end": 3473,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 3463,
									"end": 3473,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3463,
									"end": 3473,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 3463,
									"end": 3494,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3463,
									"end": 3494,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 3463,
									"end": 3494,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3463,
									"end": 3494,
									"modifierDepth": 1,
									"name": "tag",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 3463,
									"end": 3494,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3463,
									"end": 3494,
									"modifierDepth": 1,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3504,
									"end": 3538,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 3510,
									"end": 3522,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 3510,
									"end": 3520,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 3510,
									"end": 3520,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3510,
									"end": 3520,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 3510,
									"end": 3522,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3510,
									"end": 3522,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 3510,
									"end": 3522,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3510,
									"end": 3522,
									"modifierDepth": 1,
									"name": "tag",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 3510,
									"end": 3522,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3524,
									"end": 3537,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "D3C21BCECCEDA1000000"
								},
								{
									"begin": 3504,
									"end": 3509,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 3504,
									"end": 3509,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3504,
									"end": 3509,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 3504,
									"end": 3538,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3504,
									"end": 3538,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 3504,
									"end": 3538,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3504,
									"end": 3538,
									"modifierDepth": 1,
									"name": "tag",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 3504,
									"end": 3538,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2947,
									"end": 3586,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 740,
									"end": 12422,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 740,
									"end": 12422,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 6285,
									"end": 6289,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6298,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6322,
									"end": 6326,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6336,
									"end": 6343,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7810,
									"end": 7811,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7791,
									"end": 7798,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 4,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 7835,
									"end": 7867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2931,
									"end": 2935,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2961,
									"end": 2965,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2975,
									"end": 2982,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8978,
									"end": 9242,
									"name": "tag",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 8978,
									"end": 9242,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9093,
									"end": 9094,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 9077,
									"end": 9095,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9077,
									"end": 9095,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 9077,
									"end": 9081,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 9077,
									"end": 9095,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9077,
									"end": 9095,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 9077,
									"end": 9095,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 9073,
									"end": 9195,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 9073,
									"end": 9195,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 9146,
									"end": 9150,
									"name": "PUSH",
									"source": 13,
									"value": "7"
								},
								{
									"begin": 9146,
									"end": 9150,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 9136,
									"end": 9142,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 9120,
									"end": 9133,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 9120,
									"end": 9131,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 9120,
									"end": 9131,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 9120,
									"end": 9131,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 9120,
									"end": 9133,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 9120,
									"end": 9133,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 9120,
									"end": 9133,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9120,
									"end": 9133,
									"name": "tag",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 9120,
									"end": 9133,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9120,
									"end": 9142,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 9120,
									"end": 9142,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 9120,
									"end": 9142,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9120,
									"end": 9142,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "46"
								},
								{
									"begin": 9120,
									"end": 9142,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9120,
									"end": 9142,
									"name": "tag",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 9120,
									"end": 9142,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9120,
									"end": 9150,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 9120,
									"end": 9150,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 9112,
									"end": 9184,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 9112,
									"end": 9184,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 9112,
									"end": 9184,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 9112,
									"end": 9184,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 9112,
									"end": 9184,
									"name": "PUSH",
									"source": 13,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9112,
									"end": 9184,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 9112,
									"end": 9184,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 9112,
									"end": 9184,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 9112,
									"end": 9184,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 9112,
									"end": 9184,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 9112,
									"end": 9184,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9112,
									"end": 9184,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 9112,
									"end": 9184,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9112,
									"end": 9184,
									"name": "tag",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 9112,
									"end": 9184,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9112,
									"end": 9184,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 9112,
									"end": 9184,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 9112,
									"end": 9184,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 9112,
									"end": 9184,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 9112,
									"end": 9184,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 9112,
									"end": 9184,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9112,
									"end": 9184,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 9112,
									"end": 9184,
									"name": "tag",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 9112,
									"end": 9184,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9073,
									"end": 9195,
									"name": "tag",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 9073,
									"end": 9195,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9204,
									"end": 9235,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "50"
								},
								{
									"begin": 9218,
									"end": 9222,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 9224,
									"end": 9226,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 9228,
									"end": 9234,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 9204,
									"end": 9217,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 9204,
									"end": 9217,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 9204,
									"end": 9217,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 9204,
									"end": 9235,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 9204,
									"end": 9235,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 9204,
									"end": 9235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9204,
									"end": 9235,
									"name": "tag",
									"source": 13,
									"value": "50"
								},
								{
									"begin": 9204,
									"end": 9235,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8978,
									"end": 9242,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8978,
									"end": 9242,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8978,
									"end": 9242,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8978,
									"end": 9242,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3144,
									"end": 3241,
									"name": "tag",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 3144,
									"end": 3241,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3196,
									"end": 3203,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3222,
									"end": 3234,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 3222,
									"end": 3234,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 3215,
									"end": 3234,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3215,
									"end": 3234,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3144,
									"end": 3241,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3144,
									"end": 3241,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6376,
									"end": 6377,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "55"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 4,
									"value": "55"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6579,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6580,
									"end": 6584,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6617,
									"end": 6622,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6603,
									"end": 6614,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "57"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6674,
									"end": 6678,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6680,
									"end": 6691,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6693,
									"end": 6698,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 6649,
									"end": 6699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "tag",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 4,
									"value": "57"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6866,
									"end": 6871,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6852,
									"end": 6863,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6534,
									"end": 6896,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6924,
									"end": 6925,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6910,
									"end": 6912,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7089,
									"end": 7094,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7301,
									"end": 7306,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7294,
									"end": 7296,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 4,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "62"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 7346,
									"end": 7371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 4,
									"value": "62"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 4
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 14,
									"value": "65"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 14,
									"value": "67"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 14,
									"value": "68"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "103"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "67"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 14,
									"value": "103"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 14,
									"value": "69"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "105"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "68"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 14,
									"value": "105"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "106"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 14,
									"value": "106"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 14,
									"value": "70"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "108"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "69"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 14,
									"value": "108"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 14
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "110"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "111"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "65"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 14,
									"value": "111"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 14,
									"value": "110"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "112"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "70"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 14,
									"value": "112"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "tag",
									"source": 14,
									"value": "71"
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1254,
									"end": 1260,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1293,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1202,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "tag",
									"source": 14,
									"value": "72"
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1355,
									"end": 1432,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1433,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1452,
									"end": 1456,
									"name": "PUSH",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 1442,
									"end": 1457,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1476,
									"end": 1480,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 1481,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "tag",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1541,
									"end": 1618,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1531,
									"end": 1619,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1667,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "tag",
									"source": 14,
									"value": "74"
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1723,
									"end": 1729,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1760,
									"end": 1761,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 1754,
									"end": 1758,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1750,
									"end": 1762,
									"name": "DIV",
									"source": 14
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 1805,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1797,
									"end": 1809,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1828,
									"end": 1846,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "117"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 14,
									"value": "7F"
								},
								{
									"begin": 1876,
									"end": 1882,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1872,
									"end": 1889,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "tag",
									"source": 14,
									"value": "117"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1935,
									"end": 1949,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 1915,
									"end": 1933,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1912,
									"end": 1950,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "118"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "119"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 1965,
									"end": 1983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "tag",
									"source": 14,
									"value": "119"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "tag",
									"source": 14,
									"value": "118"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1730,
									"end": 1999,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1679,
									"end": 1999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "tag",
									"source": 14,
									"value": "75"
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2054,
									"end": 2058,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2077,
									"end": 2080,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2100,
									"end": 2103,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2104,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 2134,
									"end": 2138,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2132,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "KECCAK256",
									"source": 14
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2005,
									"end": 2146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 14,
									"value": "76"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2189,
									"end": 2195,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2233,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 2220,
									"end": 2234,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2216,
									"end": 2239,
									"name": "DIV",
									"source": 14
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "tag",
									"source": 14,
									"value": "77"
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2295,
									"end": 2303,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2345,
									"end": 2350,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2339,
									"end": 2343,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2335,
									"end": 2351,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2251,
									"end": 2358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "tag",
									"source": 14,
									"value": "78"
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 2471,
									"end": 2481,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "124"
								},
								{
									"begin": 2536,
									"end": 2602,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2534,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "77"
								},
								{
									"begin": 2506,
									"end": 2603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "tag",
									"source": 14,
									"value": "124"
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "125"
								},
								{
									"begin": 2654,
									"end": 2662,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 2643,
									"end": 2652,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "77"
								},
								{
									"begin": 2624,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "tag",
									"source": 14,
									"value": "125"
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "SWAP6",
									"source": 14
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 2692,
									"end": 2701,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 2685,
									"end": 2690,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2681,
									"end": 2702,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2745,
									"end": 2749,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 2735,
									"end": 2743,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 2724,
									"end": 2729,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2721,
									"end": 2751,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2364,
									"end": 2757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "tag",
									"source": 14,
									"value": "79"
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2800,
									"end": 2807,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2829,
									"end": 2834,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2763,
									"end": 2840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "tag",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2846,
									"end": 2906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "tag",
									"source": 14,
									"value": "81"
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2962,
									"end": 2971,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "129"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "130"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "131"
								},
								{
									"begin": 3040,
									"end": 3045,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "79"
								},
								{
									"begin": 3022,
									"end": 3046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "tag",
									"source": 14,
									"value": "131"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 3013,
									"end": 3047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "tag",
									"source": 14,
									"value": "130"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "79"
								},
								{
									"begin": 2995,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "tag",
									"source": 14,
									"value": "129"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2912,
									"end": 3054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "tag",
									"source": 14,
									"value": "82"
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3103,
									"end": 3106,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3124,
									"end": 3129,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3060,
									"end": 3135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "tag",
									"source": 14,
									"value": "83"
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "134"
								},
								{
									"begin": 3282,
									"end": 3289,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "81"
								},
								{
									"begin": 3251,
									"end": 3290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "tag",
									"source": 14,
									"value": "134"
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "135"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "136"
								},
								{
									"begin": 3385,
									"end": 3401,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "82"
								},
								{
									"begin": 3361,
									"end": 3402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "tag",
									"source": 14,
									"value": "136"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3353,
									"end": 3359,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3346,
									"end": 3350,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3340,
									"end": 3351,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "78"
								},
								{
									"begin": 3312,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "tag",
									"source": 14,
									"value": "135"
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3306,
									"end": 3310,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3299,
									"end": 3404,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 3217,
									"end": 3410,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3141,
									"end": 3410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "tag",
									"source": 14,
									"value": "84"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3461,
									"end": 3464,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3416,
									"end": 3489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "tag",
									"source": 14,
									"value": "85"
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "139"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "84"
								},
								{
									"begin": 3572,
									"end": 3604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "tag",
									"source": 14,
									"value": "139"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "140"
								},
								{
									"begin": 3671,
									"end": 3677,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3663,
									"end": 3669,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "83"
								},
								{
									"begin": 3613,
									"end": 3678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "tag",
									"source": 14,
									"value": "140"
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3548,
									"end": 3684,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3495,
									"end": 3684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "tag",
									"source": 14,
									"value": "86"
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 14,
									"value": "142"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3767,
									"end": 3770,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3760,
									"end": 3765,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3757,
									"end": 3771,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "144"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "145"
								},
								{
									"begin": 3858,
									"end": 3859,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3856,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "85"
								},
								{
									"begin": 3821,
									"end": 3860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "tag",
									"source": 14,
									"value": "145"
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3794,
									"end": 3795,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 3787,
									"end": 3792,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3783,
									"end": 3796,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "142"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 14,
									"value": "144"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3690,
									"end": 3876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "tag",
									"source": 14,
									"value": "87"
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 3978,
									"end": 3981,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3975,
									"end": 3986,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "147"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "148"
								},
								{
									"begin": 4049,
									"end": 4054,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "75"
								},
								{
									"begin": 4017,
									"end": 4055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "tag",
									"source": 14,
									"value": "148"
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "149"
								},
								{
									"begin": 4119,
									"end": 4129,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "76"
								},
								{
									"begin": 4101,
									"end": 4130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "tag",
									"source": 14,
									"value": "149"
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4091,
									"end": 4099,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4087,
									"end": 4131,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4284,
									"end": 4286,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "150"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 4305,
									"end": 4313,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "tag",
									"source": 14,
									"value": "150"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "151"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "152"
								},
								{
									"begin": 4402,
									"end": 4405,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "76"
								},
								{
									"begin": 4384,
									"end": 4406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "tag",
									"source": 14,
									"value": "152"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4374,
									"end": 4382,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 4370,
									"end": 4407,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4357,
									"end": 4368,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "86"
								},
								{
									"begin": 4328,
									"end": 4408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "tag",
									"source": 14,
									"value": "151"
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "tag",
									"source": 14,
									"value": "147"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3882,
									"end": 4425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "tag",
									"source": 14,
									"value": "88"
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4485,
									"end": 4493,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4535,
									"end": 4540,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4529,
									"end": 4533,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4525,
									"end": 4541,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4431,
									"end": 4548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "tag",
									"source": 14,
									"value": "89"
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4598,
									"end": 4604,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "155"
								},
								{
									"begin": 4679,
									"end": 4680,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4675,
									"end": 4681,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 4667,
									"end": 4672,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 4664,
									"end": 4665,
									"name": "PUSH",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 4660,
									"end": 4673,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "88"
								},
								{
									"begin": 4631,
									"end": 4682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "tag",
									"source": 14,
									"value": "155"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4627,
									"end": 4683,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 4712,
									"end": 4716,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 4706,
									"end": 4710,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 4702,
									"end": 4717,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4605,
									"end": 4723,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4554,
									"end": 4723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "tag",
									"source": 14,
									"value": "90"
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "157"
								},
								{
									"begin": 4975,
									"end": 4978,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 4969,
									"end": 4973,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "89"
								},
								{
									"begin": 4950,
									"end": 4979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "tag",
									"source": 14,
									"value": "157"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5012,
									"end": 5015,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5009,
									"end": 5010,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 5005,
									"end": 5016,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4996,
									"end": 5017,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4728,
									"end": 5023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "tag",
									"source": 14,
									"value": "9"
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "159"
								},
								{
									"begin": 5178,
									"end": 5181,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "71"
								},
								{
									"begin": 5145,
									"end": 5182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "tag",
									"source": 14,
									"value": "159"
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5247,
									"end": 5265,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5245,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 5236,
									"end": 5266,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "160"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "161"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "72"
								},
								{
									"begin": 5269,
									"end": 5287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "tag",
									"source": 14,
									"value": "161"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "tag",
									"source": 14,
									"value": "160"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "162"
								},
								{
									"begin": 5345,
									"end": 5349,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5339,
									"end": 5350,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "74"
								},
								{
									"begin": 5313,
									"end": 5351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "tag",
									"source": 14,
									"value": "162"
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "163"
								},
								{
									"begin": 5458,
									"end": 5464,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "87"
								},
								{
									"begin": 5398,
									"end": 5465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "tag",
									"source": 14,
									"value": "163"
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5492,
									"end": 5493,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5548,
									"end": 5550,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 5540,
									"end": 5546,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 5537,
									"end": 5551,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 5565,
									"end": 5566,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "165"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 6222,
									"end": 6223,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 6239,
									"end": 6245,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "166"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6283,
									"end": 6286,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 6279,
									"end": 6298,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 6273,
									"end": 6299,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "tag",
									"source": 14,
									"value": "166"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "167"
								},
								{
									"begin": 6399,
									"end": 6405,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 6392,
									"end": 6397,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "90"
								},
								{
									"begin": 6339,
									"end": 6406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "tag",
									"source": 14,
									"value": "167"
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6333,
									"end": 6337,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 6326,
									"end": 6407,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 6195,
									"end": 6417,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "164"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "tag",
									"source": 14,
									"value": "165"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5612,
									"end": 5616,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 5608,
									"end": 5617,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 5600,
									"end": 5606,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 5596,
									"end": 5618,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "168"
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "75"
								},
								{
									"begin": 5646,
									"end": 5683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "tag",
									"source": 14,
									"value": "168"
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5705,
									"end": 5706,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 14,
									"value": "169"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5733,
									"end": 5740,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5730,
									"end": 5731,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 5727,
									"end": 5741,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "171"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 5812,
									"end": 5821,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 5807,
									"end": 5810,
									"name": "DUP10",
									"source": 14
								},
								{
									"begin": 5803,
									"end": 5822,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 5797,
									"end": 5823,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 5789,
									"end": 5795,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5782,
									"end": 5824,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 5863,
									"end": 5864,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 5855,
									"end": 5861,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5851,
									"end": 5865,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5910,
									"end": 5912,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 5899,
									"end": 5908,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 5895,
									"end": 5913,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 5753,
									"end": 5754,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 5749,
									"end": 5761,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "169"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 14,
									"value": "171"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5955,
									"end": 5961,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 5946,
									"end": 5953,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 5943,
									"end": 5962,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "172"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 6013,
									"end": 6022,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 6008,
									"end": 6011,
									"name": "DUP10",
									"source": 14
								},
								{
									"begin": 6004,
									"end": 6023,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 5998,
									"end": 6024,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "173"
								},
								{
									"begin": 6098,
									"end": 6102,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 6090,
									"end": 6096,
									"name": "DUP10",
									"source": 14
								},
								{
									"begin": 6086,
									"end": 6103,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 6075,
									"end": 6084,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "89"
								},
								{
									"begin": 6056,
									"end": 6104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "tag",
									"source": 14,
									"value": "173"
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6048,
									"end": 6054,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 6041,
									"end": 6105,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 5963,
									"end": 6119,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "tag",
									"source": 14,
									"value": "172"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6165,
									"end": 6166,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 6161,
									"end": 6162,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 6153,
									"end": 6159,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 6149,
									"end": 6163,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 6145,
									"end": 6167,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 6139,
									"end": 6143,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 6132,
									"end": 6168,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "tag",
									"source": 14,
									"value": "164"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5028,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "tag",
									"source": 14,
									"value": "91"
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "175"
								},
								{
									"begin": 6534,
									"end": 6539,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "68"
								},
								{
									"begin": 6516,
									"end": 6540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "tag",
									"source": 14,
									"value": "175"
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6511,
									"end": 6514,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6504,
									"end": 6541,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6429,
									"end": 6547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "tag",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6646,
									"end": 6650,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6686,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 6673,
									"end": 6682,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6669,
									"end": 6687,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "177"
								},
								{
									"begin": 6765,
									"end": 6766,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 6754,
									"end": 6763,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 6750,
									"end": 6767,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 6741,
									"end": 6747,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "91"
								},
								{
									"begin": 6697,
									"end": 6768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "tag",
									"source": 14,
									"value": "177"
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6553,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6781,
									"end": 6961,
									"name": "tag",
									"source": 14,
									"value": "92"
								},
								{
									"begin": 6781,
									"end": 6961,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6829,
									"end": 6906,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6826,
									"end": 6827,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 6819,
									"end": 6907,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 6926,
									"end": 6930,
									"name": "PUSH",
									"source": 14,
									"value": "11"
								},
								{
									"begin": 6923,
									"end": 6924,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 6916,
									"end": 6931,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 6950,
									"end": 6954,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 6947,
									"end": 6948,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 6940,
									"end": 6955,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "tag",
									"source": 14,
									"value": "46"
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7007,
									"end": 7010,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "180"
								},
								{
									"begin": 7044,
									"end": 7045,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "79"
								},
								{
									"begin": 7026,
									"end": 7046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "tag",
									"source": 14,
									"value": "180"
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7021,
									"end": 7046,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 7021,
									"end": 7046,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "181"
								},
								{
									"begin": 7078,
									"end": 7079,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "79"
								},
								{
									"begin": 7060,
									"end": 7080,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "tag",
									"source": 14,
									"value": "181"
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7055,
									"end": 7080,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 7055,
									"end": 7080,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7103,
									"end": 7104,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7100,
									"end": 7101,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7096,
									"end": 7105,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 7089,
									"end": 7105,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7089,
									"end": 7105,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7124,
									"end": 7127,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 7121,
									"end": 7122,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7118,
									"end": 7128,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "182"
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "183"
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "92"
								},
								{
									"begin": 7131,
									"end": 7149,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "tag",
									"source": 14,
									"value": "183"
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "tag",
									"source": 14,
									"value": "182"
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6967,
									"end": 7158,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7164,
									"end": 7333,
									"name": "tag",
									"source": 14,
									"value": "93"
								},
								{
									"begin": 7164,
									"end": 7333,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7248,
									"end": 7259,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 7282,
									"end": 7288,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7277,
									"end": 7280,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7270,
									"end": 7289,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 7322,
									"end": 7326,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 7317,
									"end": 7320,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7313,
									"end": 7327,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 7298,
									"end": 7327,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7298,
									"end": 7327,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7164,
									"end": 7333,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 7164,
									"end": 7333,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 7164,
									"end": 7333,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7164,
									"end": 7333,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7164,
									"end": 7333,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7339,
									"end": 7518,
									"name": "tag",
									"source": 14,
									"value": "94"
								},
								{
									"begin": 7339,
									"end": 7518,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7479,
									"end": 7510,
									"name": "PUSH",
									"source": 14,
									"value": "436F6E74726163743A20537570706C7920436170206578636565646564000000"
								},
								{
									"begin": 7475,
									"end": 7476,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 7467,
									"end": 7473,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7463,
									"end": 7477,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 7456,
									"end": 7511,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 7339,
									"end": 7518,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7339,
									"end": 7518,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7524,
									"end": 7890,
									"name": "tag",
									"source": 14,
									"value": "95"
								},
								{
									"begin": 7524,
									"end": 7890,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7666,
									"end": 7669,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 7687,
									"end": 7754,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "187"
								},
								{
									"begin": 7751,
									"end": 7753,
									"name": "PUSH",
									"source": 14,
									"value": "1D"
								},
								{
									"begin": 7746,
									"end": 7749,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 7687,
									"end": 7754,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "93"
								},
								{
									"begin": 7687,
									"end": 7754,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7687,
									"end": 7754,
									"name": "tag",
									"source": 14,
									"value": "187"
								},
								{
									"begin": 7687,
									"end": 7754,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7680,
									"end": 7754,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 7680,
									"end": 7754,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7763,
									"end": 7856,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "188"
								},
								{
									"begin": 7852,
									"end": 7855,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7763,
									"end": 7856,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "94"
								},
								{
									"begin": 7763,
									"end": 7856,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7763,
									"end": 7856,
									"name": "tag",
									"source": 14,
									"value": "188"
								},
								{
									"begin": 7763,
									"end": 7856,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7881,
									"end": 7883,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 7876,
									"end": 7879,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7872,
									"end": 7884,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 7865,
									"end": 7884,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7865,
									"end": 7884,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7524,
									"end": 7890,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 7524,
									"end": 7890,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7524,
									"end": 7890,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7524,
									"end": 7890,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7896,
									"end": 8315,
									"name": "tag",
									"source": 14,
									"value": "49"
								},
								{
									"begin": 7896,
									"end": 8315,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8062,
									"end": 8066,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 8100,
									"end": 8102,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 8089,
									"end": 8098,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8085,
									"end": 8103,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8077,
									"end": 8103,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 8077,
									"end": 8103,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8149,
									"end": 8158,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 8143,
									"end": 8147,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 8139,
									"end": 8159,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 8135,
									"end": 8136,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 8124,
									"end": 8133,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 8120,
									"end": 8137,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8113,
									"end": 8160,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 8177,
									"end": 8308,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "190"
								},
								{
									"begin": 8303,
									"end": 8307,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 8177,
									"end": 8308,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "95"
								},
								{
									"begin": 8177,
									"end": 8308,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8177,
									"end": 8308,
									"name": "tag",
									"source": 14,
									"value": "190"
								},
								{
									"begin": 8177,
									"end": 8308,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8169,
									"end": 8308,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 8169,
									"end": 8308,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7896,
									"end": 8315,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 7896,
									"end": 8315,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7896,
									"end": 8315,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7896,
									"end": 8315,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8321,
									"end": 8439,
									"name": "tag",
									"source": 14,
									"value": "96"
								},
								{
									"begin": 8321,
									"end": 8439,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8408,
									"end": 8432,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "192"
								},
								{
									"begin": 8426,
									"end": 8431,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 8408,
									"end": 8432,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "79"
								},
								{
									"begin": 8408,
									"end": 8432,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8408,
									"end": 8432,
									"name": "tag",
									"source": 14,
									"value": "192"
								},
								{
									"begin": 8408,
									"end": 8432,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8403,
									"end": 8406,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8396,
									"end": 8433,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 8321,
									"end": 8439,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8321,
									"end": 8439,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8321,
									"end": 8439,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8445,
									"end": 8887,
									"name": "tag",
									"source": 14,
									"value": "59"
								},
								{
									"begin": 8445,
									"end": 8887,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8594,
									"end": 8598,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 8632,
									"end": 8634,
									"name": "PUSH",
									"source": 14,
									"value": "60"
								},
								{
									"begin": 8621,
									"end": 8630,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8617,
									"end": 8635,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8609,
									"end": 8635,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 8609,
									"end": 8635,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8645,
									"end": 8716,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "194"
								},
								{
									"begin": 8713,
									"end": 8714,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 8702,
									"end": 8711,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 8698,
									"end": 8715,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8689,
									"end": 8695,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 8645,
									"end": 8716,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "91"
								},
								{
									"begin": 8645,
									"end": 8716,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8645,
									"end": 8716,
									"name": "tag",
									"source": 14,
									"value": "194"
								},
								{
									"begin": 8645,
									"end": 8716,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8726,
									"end": 8798,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "195"
								},
								{
									"begin": 8794,
									"end": 8796,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 8783,
									"end": 8792,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 8779,
									"end": 8797,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8770,
									"end": 8776,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 8726,
									"end": 8798,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "96"
								},
								{
									"begin": 8726,
									"end": 8798,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8726,
									"end": 8798,
									"name": "tag",
									"source": 14,
									"value": "195"
								},
								{
									"begin": 8726,
									"end": 8798,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8808,
									"end": 8880,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "196"
								},
								{
									"begin": 8876,
									"end": 8878,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 8865,
									"end": 8874,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 8861,
									"end": 8879,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8852,
									"end": 8858,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 8808,
									"end": 8880,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "96"
								},
								{
									"begin": 8808,
									"end": 8880,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8808,
									"end": 8880,
									"name": "tag",
									"source": 14,
									"value": "196"
								},
								{
									"begin": 8808,
									"end": 8880,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8445,
									"end": 8887,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": 8445,
									"end": 8887,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 8445,
									"end": 8887,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8445,
									"end": 8887,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8445,
									"end": 8887,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8445,
									"end": 8887,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8445,
									"end": 8887,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8893,
									"end": 9115,
									"name": "tag",
									"source": 14,
									"value": "63"
								},
								{
									"begin": 8893,
									"end": 9115,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8986,
									"end": 8990,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 9024,
									"end": 9026,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 9013,
									"end": 9022,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 9009,
									"end": 9027,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 9001,
									"end": 9027,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 9001,
									"end": 9027,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 9037,
									"end": 9108,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "198"
								},
								{
									"begin": 9105,
									"end": 9106,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 9094,
									"end": 9103,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 9090,
									"end": 9107,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 9081,
									"end": 9087,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 9037,
									"end": 9108,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "96"
								},
								{
									"begin": 9037,
									"end": 9108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 9037,
									"end": 9108,
									"name": "tag",
									"source": 14,
									"value": "198"
								},
								{
									"begin": 9037,
									"end": 9108,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8893,
									"end": 9115,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 8893,
									"end": 9115,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 8893,
									"end": 9115,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8893,
									"end": 9115,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8893,
									"end": 9115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 740,
									"end": 12422,
									"name": "tag",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 740,
									"end": 12422,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 740,
									"end": 12422,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 740,
									"end": 12422,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 740,
									"end": 12422,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 740,
									"end": 12422,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 740,
									"end": 12422,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 740,
									"end": 12422,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 740,
									"end": 12422,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122080b674cc755c7de8ae8962d81bc7e5de88ec0d20390e5865b0db8a8289f8c0cd64736f6c634300081a0033",
									".code": [
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "79CC6790"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "A9059CBB"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "D547741F"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "D547741F"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "DD62ED3E"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "DEB6DB36"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "EA5CB532"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "F2250D3D"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "FBFA77CF"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "A9059CBB"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "B6A3F59A"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "C30796AB"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "CF820461"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "D1C9F69B"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "91D14854"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "91D14854"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "956FECCF"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "95D89B41"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "A0712D68"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "A217FDDF"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "79CC6790"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "7E92A7FD"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "8D580B9F"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "8EBED5B1"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "8F770AD0"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "3F914AEF"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "51557289"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "51557289"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "53A4C31E"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "5C975ABB"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "6BA77A38"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "70A08231"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "3F914AEF"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "41F431FD"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "42966C68"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "449A52F8"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "48132F48"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "tag",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "23B872DD"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "23B872DD"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "248A9CA3"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "2F2FF15D"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "313CE567"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "36568ABE"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "tag",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "1FFC9A7"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "6FDDE03"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "95EA7B3"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "16C38B3C"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "18160DDD"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "tag",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 740,
											"end": 12422,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3794,
											"end": 4116,
											"name": "tag",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 3794,
											"end": 4116,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3794,
											"end": 4116,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 3794,
											"end": 4116,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3794,
											"end": 4116,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3794,
											"end": 4116,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 3794,
											"end": 4116,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3794,
											"end": 4116,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3794,
											"end": 4116,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3794,
											"end": 4116,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3794,
											"end": 4116,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 3794,
											"end": 4116,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3794,
											"end": 4116,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3794,
											"end": 4116,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 3794,
											"end": 4116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3794,
											"end": 4116,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 3794,
											"end": 4116,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3794,
											"end": 4116,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 3794,
											"end": 4116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3794,
											"end": 4116,
											"name": "tag",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 3794,
											"end": 4116,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3794,
											"end": 4116,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 9594,
											"end": 9970,
											"name": "tag",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 9594,
											"end": 9970,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9594,
											"end": 9970,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 9594,
											"end": 9970,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 9594,
											"end": 9970,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9594,
											"end": 9970,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 9594,
											"end": 9970,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9594,
											"end": 9970,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9594,
											"end": 9970,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9594,
											"end": 9970,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9594,
											"end": 9970,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 9594,
											"end": 9970,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9594,
											"end": 9970,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9594,
											"end": 9970,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 9594,
											"end": 9970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9594,
											"end": 9970,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 9594,
											"end": 9970,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9594,
											"end": 9970,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 9594,
											"end": 9970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9594,
											"end": 9970,
											"name": "tag",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 9594,
											"end": 9970,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9594,
											"end": 9970,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9594,
											"end": 9970,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9594,
											"end": 9970,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 9594,
											"end": 9970,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9594,
											"end": 9970,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9594,
											"end": 9970,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 9594,
											"end": 9970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9594,
											"end": 9970,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 9594,
											"end": 9970,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9594,
											"end": 9970,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9594,
											"end": 9970,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9594,
											"end": 9970,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9594,
											"end": 9970,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9594,
											"end": 9970,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9594,
											"end": 9970,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9594,
											"end": 9970,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 11019,
											"end": 11270,
											"name": "tag",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 11019,
											"end": 11270,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11019,
											"end": 11270,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 11019,
											"end": 11270,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 11019,
											"end": 11270,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11019,
											"end": 11270,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 11019,
											"end": 11270,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11019,
											"end": 11270,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11019,
											"end": 11270,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11019,
											"end": 11270,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11019,
											"end": 11270,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 11019,
											"end": 11270,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11019,
											"end": 11270,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11019,
											"end": 11270,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 11019,
											"end": 11270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11019,
											"end": 11270,
											"name": "tag",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 11019,
											"end": 11270,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11019,
											"end": 11270,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 11019,
											"end": 11270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11019,
											"end": 11270,
											"name": "tag",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 11019,
											"end": 11270,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11019,
											"end": 11270,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 11612,
											"end": 11897,
											"name": "tag",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 11612,
											"end": 11897,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11612,
											"end": 11897,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 11612,
											"end": 11897,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 11612,
											"end": 11897,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11612,
											"end": 11897,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 11612,
											"end": 11897,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11612,
											"end": 11897,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11612,
											"end": 11897,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11612,
											"end": 11897,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11612,
											"end": 11897,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 11612,
											"end": 11897,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11612,
											"end": 11897,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11612,
											"end": 11897,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 11612,
											"end": 11897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11612,
											"end": 11897,
											"name": "tag",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 11612,
											"end": 11897,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11612,
											"end": 11897,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 11612,
											"end": 11897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11612,
											"end": 11897,
											"name": "tag",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 11612,
											"end": 11897,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11612,
											"end": 11897,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 7257,
											"end": 7466,
											"name": "tag",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 7257,
											"end": 7466,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7257,
											"end": 7466,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 7257,
											"end": 7466,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7257,
											"end": 7466,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7257,
											"end": 7466,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 7257,
											"end": 7466,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7257,
											"end": 7466,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7257,
											"end": 7466,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7257,
											"end": 7466,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7257,
											"end": 7466,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 7257,
											"end": 7466,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7257,
											"end": 7466,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7257,
											"end": 7466,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 7257,
											"end": 7466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7257,
											"end": 7466,
											"name": "tag",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 7257,
											"end": 7466,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7257,
											"end": 7466,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 7257,
											"end": 7466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7257,
											"end": 7466,
											"name": "tag",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 7257,
											"end": 7466,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7257,
											"end": 7466,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 6202,
											"end": 6505,
											"name": "tag",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 6202,
											"end": 6505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6202,
											"end": 6505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 6202,
											"end": 6505,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6202,
											"end": 6505,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6202,
											"end": 6505,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 6202,
											"end": 6505,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6202,
											"end": 6505,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6202,
											"end": 6505,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6202,
											"end": 6505,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6202,
											"end": 6505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 6202,
											"end": 6505,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6202,
											"end": 6505,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6202,
											"end": 6505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 6202,
											"end": 6505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6202,
											"end": 6505,
											"name": "tag",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 6202,
											"end": 6505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6202,
											"end": 6505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 6202,
											"end": 6505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6202,
											"end": 6505,
											"name": "tag",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 6202,
											"end": 6505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6202,
											"end": 6505,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 12167,
											"end": 12415,
											"name": "tag",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 12167,
											"end": 12415,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12167,
											"end": 12415,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 12167,
											"end": 12415,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 12167,
											"end": 12415,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12167,
											"end": 12415,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 12167,
											"end": 12415,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12167,
											"end": 12415,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12167,
											"end": 12415,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12167,
											"end": 12415,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12167,
											"end": 12415,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 12167,
											"end": 12415,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12167,
											"end": 12415,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12167,
											"end": 12415,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 12167,
											"end": 12415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12167,
											"end": 12415,
											"name": "tag",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 12167,
											"end": 12415,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12167,
											"end": 12415,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 12167,
											"end": 12415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12167,
											"end": 12415,
											"name": "tag",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 12167,
											"end": 12415,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12167,
											"end": 12415,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1249,
											"name": "tag",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 1197,
											"end": 1249,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1249,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 1197,
											"end": 1249,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 1197,
											"end": 1249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1249,
											"name": "tag",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 1197,
											"end": 1249,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1249,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1197,
											"end": 1249,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1249,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 1197,
											"end": 1249,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1249,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1249,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 1197,
											"end": 1249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1249,
											"name": "tag",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 1197,
											"end": 1249,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1249,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1197,
											"end": 1249,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1249,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1249,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1249,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1249,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1249,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 1017,
											"end": 1067,
											"name": "tag",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 1017,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1017,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 1017,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 1017,
											"end": 1067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1017,
											"end": 1067,
											"name": "tag",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 1017,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1017,
											"end": 1067,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1017,
											"end": 1067,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1017,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 1017,
											"end": 1067,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1017,
											"end": 1067,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1017,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 1017,
											"end": 1067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1017,
											"end": 1067,
											"name": "tag",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 1017,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1017,
											"end": 1067,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1017,
											"end": 1067,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1017,
											"end": 1067,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1017,
											"end": 1067,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1017,
											"end": 1067,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1017,
											"end": 1067,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1017,
											"end": 1067,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 1522,
											"end": 1540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "tag",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 1522,
											"end": 1540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "tag",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 1073,
											"end": 1131,
											"name": "tag",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 1073,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1073,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 1073,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 1073,
											"end": 1131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1073,
											"end": 1131,
											"name": "tag",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 1073,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1073,
											"end": 1131,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1073,
											"end": 1131,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1073,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 1073,
											"end": 1131,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1073,
											"end": 1131,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1073,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 1073,
											"end": 1131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1073,
											"end": 1131,
											"name": "tag",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 1073,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1073,
											"end": 1131,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1073,
											"end": 1131,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1073,
											"end": 1131,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1073,
											"end": 1131,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1073,
											"end": 1131,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1073,
											"end": 1131,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1073,
											"end": 1131,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 7753,
											"end": 7992,
											"name": "tag",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 7753,
											"end": 7992,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7753,
											"end": 7992,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 7753,
											"end": 7992,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7753,
											"end": 7992,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7753,
											"end": 7992,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 7753,
											"end": 7992,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7753,
											"end": 7992,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7753,
											"end": 7992,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7753,
											"end": 7992,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7753,
											"end": 7992,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 7753,
											"end": 7992,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7753,
											"end": 7992,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7753,
											"end": 7992,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 7753,
											"end": 7992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7753,
											"end": 7992,
											"name": "tag",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 7753,
											"end": 7992,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7753,
											"end": 7992,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 7753,
											"end": 7992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7753,
											"end": 7992,
											"name": "tag",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 7753,
											"end": 7992,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7753,
											"end": 7992,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 957,
											"end": 1011,
											"name": "tag",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 957,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 957,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 957,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "136"
										},
										{
											"begin": 957,
											"end": 1011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 957,
											"end": 1011,
											"name": "tag",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 957,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 957,
											"end": 1011,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 957,
											"end": 1011,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 957,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 957,
											"end": 1011,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 957,
											"end": 1011,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 957,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 957,
											"end": 1011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 957,
											"end": 1011,
											"name": "tag",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 957,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 957,
											"end": 1011,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 957,
											"end": 1011,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 957,
											"end": 1011,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 957,
											"end": 1011,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 957,
											"end": 1011,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 957,
											"end": 1011,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 957,
											"end": 1011,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 1255,
											"end": 1309,
											"name": "tag",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 1255,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1255,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 1255,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 1255,
											"end": 1309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1255,
											"end": 1309,
											"name": "tag",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 1255,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1255,
											"end": 1309,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1255,
											"end": 1309,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1255,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 1255,
											"end": 1309,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1255,
											"end": 1309,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1255,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 1255,
											"end": 1309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1255,
											"end": 1309,
											"name": "tag",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 1255,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1255,
											"end": 1309,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1255,
											"end": 1309,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1255,
											"end": 1309,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1255,
											"end": 1309,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1255,
											"end": 1309,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1255,
											"end": 1309,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1255,
											"end": 1309,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 901,
											"end": 951,
											"name": "tag",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 901,
											"end": 951,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 901,
											"end": 951,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 901,
											"end": 951,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 901,
											"end": 951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 901,
											"end": 951,
											"name": "tag",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 901,
											"end": 951,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 901,
											"end": 951,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 901,
											"end": 951,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 901,
											"end": 951,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 901,
											"end": 951,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 901,
											"end": 951,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 901,
											"end": 951,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 901,
											"end": 951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 901,
											"end": 951,
											"name": "tag",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 901,
											"end": 951,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 901,
											"end": 951,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 901,
											"end": 951,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 901,
											"end": 951,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 901,
											"end": 951,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 901,
											"end": 951,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 901,
											"end": 951,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 901,
											"end": 951,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 8620,
											"end": 8696,
											"name": "tag",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 8620,
											"end": 8696,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8620,
											"end": 8696,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 8620,
											"end": 8696,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 8620,
											"end": 8696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8620,
											"end": 8696,
											"name": "tag",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 8620,
											"end": 8696,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8620,
											"end": 8696,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8620,
											"end": 8696,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8620,
											"end": 8696,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 8620,
											"end": 8696,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8620,
											"end": 8696,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8620,
											"end": 8696,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 8620,
											"end": 8696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8620,
											"end": 8696,
											"name": "tag",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 8620,
											"end": 8696,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8620,
											"end": 8696,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8620,
											"end": 8696,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8620,
											"end": 8696,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8620,
											"end": 8696,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8620,
											"end": 8696,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8620,
											"end": 8696,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8620,
											"end": 8696,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1589,
											"end": 1613,
											"name": "tag",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 1589,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1589,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 1589,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 1589,
											"end": 1613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1589,
											"end": 1613,
											"name": "tag",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 1589,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1589,
											"end": 1613,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1589,
											"end": 1613,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1589,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 1589,
											"end": 1613,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1589,
											"end": 1613,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1589,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 1589,
											"end": 1613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1589,
											"end": 1613,
											"name": "tag",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 1589,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1589,
											"end": 1613,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1589,
											"end": 1613,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1589,
											"end": 1613,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1589,
											"end": 1613,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1589,
											"end": 1613,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1589,
											"end": 1613,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1589,
											"end": 1613,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 6740,
											"end": 7025,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 6740,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6740,
											"end": 7025,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 6740,
											"end": 7025,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6740,
											"end": 7025,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6740,
											"end": 7025,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 6740,
											"end": 7025,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6740,
											"end": 7025,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6740,
											"end": 7025,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6740,
											"end": 7025,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6740,
											"end": 7025,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 6740,
											"end": 7025,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6740,
											"end": 7025,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6740,
											"end": 7025,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 6740,
											"end": 7025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6740,
											"end": 7025,
											"name": "tag",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 6740,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6740,
											"end": 7025,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 6740,
											"end": 7025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6740,
											"end": 7025,
											"name": "tag",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 6740,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6740,
											"end": 7025,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 10284,
											"end": 10641,
											"name": "tag",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 10284,
											"end": 10641,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10284,
											"end": 10641,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 10284,
											"end": 10641,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 10284,
											"end": 10641,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10284,
											"end": 10641,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 10284,
											"end": 10641,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10284,
											"end": 10641,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10284,
											"end": 10641,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10284,
											"end": 10641,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10284,
											"end": 10641,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 10284,
											"end": 10641,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10284,
											"end": 10641,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10284,
											"end": 10641,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 10284,
											"end": 10641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10284,
											"end": 10641,
											"name": "tag",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 10284,
											"end": 10641,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10284,
											"end": 10641,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 10284,
											"end": 10641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10284,
											"end": 10641,
											"name": "tag",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 10284,
											"end": 10641,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10284,
											"end": 10641,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10284,
											"end": 10641,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10284,
											"end": 10641,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 10284,
											"end": 10641,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10284,
											"end": 10641,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10284,
											"end": 10641,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 10284,
											"end": 10641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10284,
											"end": 10641,
											"name": "tag",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 10284,
											"end": 10641,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10284,
											"end": 10641,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10284,
											"end": 10641,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10284,
											"end": 10641,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10284,
											"end": 10641,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10284,
											"end": 10641,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10284,
											"end": 10641,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10284,
											"end": 10641,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 8216,
											"end": 8503,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 8216,
											"end": 8503,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8216,
											"end": 8503,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 8216,
											"end": 8503,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8216,
											"end": 8503,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8216,
											"end": 8503,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 8216,
											"end": 8503,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8216,
											"end": 8503,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8216,
											"end": 8503,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8216,
											"end": 8503,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8216,
											"end": 8503,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 8216,
											"end": 8503,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8216,
											"end": 8503,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8216,
											"end": 8503,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 8216,
											"end": 8503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8216,
											"end": 8503,
											"name": "tag",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 8216,
											"end": 8503,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8216,
											"end": 8503,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 8216,
											"end": 8503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8216,
											"end": 8503,
											"name": "tag",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 8216,
											"end": 8503,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8216,
											"end": 8503,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "tag",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 2625,
											"end": 2675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "tag",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 2625,
											"end": 2675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "tag",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 2625,
											"end": 2675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "tag",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 1447,
											"end": 1478,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 1447,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1447,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 1447,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 1447,
											"end": 1478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1447,
											"end": 1478,
											"name": "tag",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 1447,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1447,
											"end": 1478,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1447,
											"end": 1478,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1447,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 1447,
											"end": 1478,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1447,
											"end": 1478,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1447,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 1447,
											"end": 1478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1447,
											"end": 1478,
											"name": "tag",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 1447,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1447,
											"end": 1478,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1447,
											"end": 1478,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1447,
											"end": 1478,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1447,
											"end": 1478,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1447,
											"end": 1478,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1447,
											"end": 1478,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1447,
											"end": 1478,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 1646,
											"end": 1672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "tag",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 1646,
											"end": 1672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "tag",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4308,
											"end": 4661,
											"name": "tag",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4308,
											"end": 4661,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4308,
											"end": 4661,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 4308,
											"end": 4661,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4308,
											"end": 4661,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4308,
											"end": 4661,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4308,
											"end": 4661,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4308,
											"end": 4661,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4308,
											"end": 4661,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4308,
											"end": 4661,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4308,
											"end": 4661,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 4308,
											"end": 4661,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4308,
											"end": 4661,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4308,
											"end": 4661,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 4308,
											"end": 4661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4308,
											"end": 4661,
											"name": "tag",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 4308,
											"end": 4661,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4308,
											"end": 4661,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 4308,
											"end": 4661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4308,
											"end": 4661,
											"name": "tag",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 4308,
											"end": 4661,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4308,
											"end": 4661,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1191,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 1137,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 1137,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 1137,
											"end": 1191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1191,
											"name": "tag",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 1137,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1191,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1137,
											"end": 1191,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 1137,
											"end": 1191,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1191,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 1137,
											"end": 1191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1191,
											"name": "tag",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 1137,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1191,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1137,
											"end": 1191,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1191,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1191,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1191,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1191,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1191,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 4899,
											"end": 5247,
											"name": "tag",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 4899,
											"end": 5247,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4899,
											"end": 5247,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 4899,
											"end": 5247,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4899,
											"end": 5247,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4899,
											"end": 5247,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4899,
											"end": 5247,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4899,
											"end": 5247,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4899,
											"end": 5247,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4899,
											"end": 5247,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4899,
											"end": 5247,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 4899,
											"end": 5247,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4899,
											"end": 5247,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4899,
											"end": 5247,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 4899,
											"end": 5247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4899,
											"end": 5247,
											"name": "tag",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 4899,
											"end": 5247,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4899,
											"end": 5247,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 4899,
											"end": 5247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4899,
											"end": 5247,
											"name": "tag",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 4899,
											"end": 5247,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4899,
											"end": 5247,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 1378,
											"end": 1398,
											"name": "tag",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 1378,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1378,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 1378,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 1378,
											"end": 1398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1378,
											"end": 1398,
											"name": "tag",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 1378,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1378,
											"end": 1398,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1378,
											"end": 1398,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1378,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 1378,
											"end": 1398,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1378,
											"end": 1398,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1378,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 1378,
											"end": 1398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1378,
											"end": 1398,
											"name": "tag",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 1378,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1378,
											"end": 1398,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1378,
											"end": 1398,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1378,
											"end": 1398,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1378,
											"end": 1398,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1378,
											"end": 1398,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1378,
											"end": 1398,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1378,
											"end": 1398,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 2748,
											"end": 2759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 2724,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3794,
											"end": 4116,
											"name": "tag",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 3794,
											"end": 4116,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3854,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 1230,
											"end": 1249,
											"name": "PUSH",
											"source": 13,
											"value": "AE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3"
										},
										{
											"begin": 3870,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 3870,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 3870,
											"end": 3882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3870,
											"end": 3882,
											"name": "tag",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 3870,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3854,
											"end": 3861,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 3854,
											"end": 3883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3854,
											"end": 3883,
											"name": "tag",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 3854,
											"end": 3883,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3846,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 3846,
											"end": 3908,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3846,
											"end": 3908,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3908,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3846,
											"end": 3908,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3846,
											"end": 3908,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3846,
											"end": 3908,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3846,
											"end": 3908,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3846,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 3846,
											"end": 3908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3846,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 3846,
											"end": 3908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3846,
											"end": 3908,
											"name": "tag",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 3846,
											"end": 3908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3846,
											"end": 3908,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3908,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3846,
											"end": 3908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3846,
											"end": 3908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3846,
											"end": 3908,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3846,
											"end": 3908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3846,
											"end": 3908,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3846,
											"end": 3908,
											"name": "tag",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 3846,
											"end": 3908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3927,
											"end": 3934,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3918,
											"end": 3924,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 3918,
											"end": 3924,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3918,
											"end": 3934,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3918,
											"end": 3934,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3918,
											"end": 3934,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3918,
											"end": 3934,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3918,
											"end": 3934,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3918,
											"end": 3934,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 3918,
											"end": 3934,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 3918,
											"end": 3934,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 3918,
											"end": 3934,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3918,
											"end": 3934,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3918,
											"end": 3934,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3918,
											"end": 3934,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3918,
											"end": 3934,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3918,
											"end": 3934,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 3918,
											"end": 3934,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 3918,
											"end": 3934,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3918,
											"end": 3934,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3918,
											"end": 3934,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3949,
											"end": 3956,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3945,
											"end": 4110,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3945,
											"end": 4110,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 3945,
											"end": 4110,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3977,
											"end": 4019,
											"name": "PUSH",
											"source": 13,
											"value": "D8C9C5623123DF8E137854C59A08F9084B75609FE24584228D44FFDCE5AB920A"
										},
										{
											"begin": 3992,
											"end": 4004,
											"name": "NUMBER",
											"source": 13
										},
										{
											"begin": 4006,
											"end": 4018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 4006,
											"end": 4016,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 4006,
											"end": 4018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4006,
											"end": 4018,
											"name": "tag",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 4006,
											"end": 4018,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3977,
											"end": 4019,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3977,
											"end": 4019,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3977,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 3977,
											"end": 4019,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3977,
											"end": 4019,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3977,
											"end": 4019,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3977,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 3977,
											"end": 4019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3977,
											"end": 4019,
											"name": "tag",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 3977,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3977,
											"end": 4019,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3977,
											"end": 4019,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3977,
											"end": 4019,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3977,
											"end": 4019,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3977,
											"end": 4019,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3977,
											"end": 4019,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3977,
											"end": 4019,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 3945,
											"end": 4110,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 3945,
											"end": 4110,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3945,
											"end": 4110,
											"name": "tag",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 3945,
											"end": 4110,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4055,
											"end": 4099,
											"name": "PUSH",
											"source": 13,
											"value": "1E7A7234AD01ED7353BF129217F5C162773639A6CB22773E84BCD5A2B0EF362E"
										},
										{
											"begin": 4072,
											"end": 4084,
											"name": "NUMBER",
											"source": 13
										},
										{
											"begin": 4086,
											"end": 4098,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 4086,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 4086,
											"end": 4098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4086,
											"end": 4098,
											"name": "tag",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 4086,
											"end": 4098,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4055,
											"end": 4099,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4055,
											"end": 4099,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4055,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 4055,
											"end": 4099,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4055,
											"end": 4099,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4055,
											"end": 4099,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4055,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 4055,
											"end": 4099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4055,
											"end": 4099,
											"name": "tag",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 4055,
											"end": 4099,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4055,
											"end": 4099,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4055,
											"end": 4099,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4055,
											"end": 4099,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4055,
											"end": 4099,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4055,
											"end": 4099,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4055,
											"end": 4099,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4055,
											"end": 4099,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 3945,
											"end": 4110,
											"name": "tag",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 3945,
											"end": 4110,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3794,
											"end": 4116,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3794,
											"end": 4116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9594,
											"end": 9970,
											"name": "tag",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 9594,
											"end": 9970,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9703,
											"end": 9707,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9719,
											"end": 9734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9737,
											"end": 9749,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 9737,
											"end": 9747,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 9737,
											"end": 9749,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9737,
											"end": 9749,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 9737,
											"end": 9749,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9719,
											"end": 9749,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9719,
											"end": 9749,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9763,
											"end": 9781,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "B"
										},
										{
											"begin": 9763,
											"end": 9790,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9782,
											"end": 9789,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9763,
											"end": 9790,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9763,
											"end": 9790,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9763,
											"end": 9790,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9763,
											"end": 9790,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9763,
											"end": 9790,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9763,
											"end": 9790,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9763,
											"end": 9790,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9763,
											"end": 9790,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9763,
											"end": 9790,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9763,
											"end": 9790,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9763,
											"end": 9790,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9763,
											"end": 9790,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9763,
											"end": 9790,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9763,
											"end": 9790,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9763,
											"end": 9790,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 9763,
											"end": 9790,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9763,
											"end": 9790,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9763,
											"end": 9790,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 9763,
											"end": 9790,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9763,
											"end": 9790,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 9763,
											"end": 9790,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 9763,
											"end": 9790,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9763,
											"end": 9790,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 9763,
											"end": 9790,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 9763,
											"end": 9790,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9759,
											"end": 9943,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9759,
											"end": 9943,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 9759,
											"end": 9943,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9806,
											"end": 9832,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 9816,
											"end": 9820,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9822,
											"end": 9824,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9826,
											"end": 9831,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9806,
											"end": 9815,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 9806,
											"end": 9832,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9806,
											"end": 9832,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 9806,
											"end": 9832,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9759,
											"end": 9943,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 9759,
											"end": 9943,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9759,
											"end": 9943,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 9759,
											"end": 9943,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9863,
											"end": 9889,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 9873,
											"end": 9877,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9879,
											"end": 9881,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9883,
											"end": 9888,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9863,
											"end": 9872,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 9863,
											"end": 9889,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9863,
											"end": 9889,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 9863,
											"end": 9889,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9903,
											"end": 9932,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 9913,
											"end": 9917,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9919,
											"end": 9924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 9919,
											"end": 9924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9919,
											"end": 9924,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9919,
											"end": 9924,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 9919,
											"end": 9924,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9919,
											"end": 9924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 9919,
											"end": 9924,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 9919,
											"end": 9924,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9919,
											"end": 9924,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 9919,
											"end": 9924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9919,
											"end": 9924,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9926,
											"end": 9931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 9926,
											"end": 9931,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 9903,
											"end": 9912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 9903,
											"end": 9932,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9903,
											"end": 9932,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 9903,
											"end": 9932,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9759,
											"end": 9943,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 9759,
											"end": 9943,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9959,
											"end": 9963,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 9952,
											"end": 9963,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9952,
											"end": 9963,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9952,
											"end": 9963,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9594,
											"end": 9970,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9594,
											"end": 9970,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9594,
											"end": 9970,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9594,
											"end": 9970,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9594,
											"end": 9970,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9594,
											"end": 9970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4300,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 5443,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11019,
											"end": 11270,
											"name": "tag",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 11019,
											"end": 11270,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11109,
											"end": 11136,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 1230,
											"end": 1249,
											"name": "PUSH",
											"source": 13,
											"value": "AE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3"
										},
										{
											"begin": 11125,
											"end": 11135,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 11109,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 11109,
											"end": 11136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11109,
											"end": 11136,
											"name": "tag",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 11109,
											"end": 11136,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11101,
											"end": 11151,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 11101,
											"end": 11151,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11101,
											"end": 11151,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11101,
											"end": 11151,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 11101,
											"end": 11151,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11101,
											"end": 11151,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11101,
											"end": 11151,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11101,
											"end": 11151,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 11101,
											"end": 11151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11101,
											"end": 11151,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 11101,
											"end": 11151,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11101,
											"end": 11151,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 11101,
											"end": 11151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11101,
											"end": 11151,
											"name": "tag",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 11101,
											"end": 11151,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11101,
											"end": 11151,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11101,
											"end": 11151,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 11101,
											"end": 11151,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11101,
											"end": 11151,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11101,
											"end": 11151,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11101,
											"end": 11151,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11101,
											"end": 11151,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 11101,
											"end": 11151,
											"name": "tag",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 11101,
											"end": 11151,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11191,
											"end": 11192,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11169,
											"end": 11193,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11169,
											"end": 11193,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11169,
											"end": 11179,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11169,
											"end": 11193,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11169,
											"end": 11193,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11169,
											"end": 11193,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11161,
											"end": 11213,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 11161,
											"end": 11213,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11161,
											"end": 11213,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11161,
											"end": 11213,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 11161,
											"end": 11213,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11161,
											"end": 11213,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11161,
											"end": 11213,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11161,
											"end": 11213,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 11161,
											"end": 11213,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11161,
											"end": 11213,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 11161,
											"end": 11213,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11161,
											"end": 11213,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 11161,
											"end": 11213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11161,
											"end": 11213,
											"name": "tag",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 11161,
											"end": 11213,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11161,
											"end": 11213,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11161,
											"end": 11213,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 11161,
											"end": 11213,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11161,
											"end": 11213,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11161,
											"end": 11213,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11161,
											"end": 11213,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11161,
											"end": 11213,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 11161,
											"end": 11213,
											"name": "tag",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 11161,
											"end": 11213,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11256,
											"end": 11263,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11223,
											"end": 11241,
											"name": "PUSH",
											"source": 13,
											"value": "B"
										},
										{
											"begin": 11223,
											"end": 11253,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11242,
											"end": 11252,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11223,
											"end": 11253,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11223,
											"end": 11253,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11223,
											"end": 11253,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11223,
											"end": 11253,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11223,
											"end": 11253,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11223,
											"end": 11253,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11223,
											"end": 11253,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11223,
											"end": 11253,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11223,
											"end": 11253,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11223,
											"end": 11253,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11223,
											"end": 11253,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11223,
											"end": 11253,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11223,
											"end": 11253,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11223,
											"end": 11253,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11223,
											"end": 11253,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 11223,
											"end": 11253,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11223,
											"end": 11263,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 11223,
											"end": 11263,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 11223,
											"end": 11263,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11223,
											"end": 11263,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 11223,
											"end": 11263,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11223,
											"end": 11263,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 11223,
											"end": 11263,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 11223,
											"end": 11263,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 11223,
											"end": 11263,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11223,
											"end": 11263,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11223,
											"end": 11263,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11223,
											"end": 11263,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11223,
											"end": 11263,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11223,
											"end": 11263,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 11223,
											"end": 11263,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 11223,
											"end": 11263,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11223,
											"end": 11263,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 11223,
											"end": 11263,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11019,
											"end": 11270,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11019,
											"end": 11270,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11019,
											"end": 11270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11612,
											"end": 11897,
											"name": "tag",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 11612,
											"end": 11897,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11718,
											"end": 11746,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 1289,
											"end": 1309,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "508F8F8BE8F5DBCB88F4F4500430B8B3684C471ED936F31FEA912C78AD46A6B9"
										},
										{
											"begin": 11735,
											"end": 11745,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 11718,
											"end": 11725,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 11718,
											"end": 11746,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11718,
											"end": 11746,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 11718,
											"end": 11746,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11710,
											"end": 11762,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 11710,
											"end": 11762,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11710,
											"end": 11762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11710,
											"end": 11762,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 11710,
											"end": 11762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11710,
											"end": 11762,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11710,
											"end": 11762,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11710,
											"end": 11762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 11710,
											"end": 11762,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11710,
											"end": 11762,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 11710,
											"end": 11762,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11710,
											"end": 11762,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 11710,
											"end": 11762,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11710,
											"end": 11762,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 11710,
											"end": 11762,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11710,
											"end": 11762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11710,
											"end": 11762,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 11710,
											"end": 11762,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11710,
											"end": 11762,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11710,
											"end": 11762,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11710,
											"end": 11762,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11710,
											"end": 11762,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 11710,
											"end": 11762,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 11710,
											"end": 11762,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11772,
											"end": 11820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 11800,
											"end": 11805,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11807,
											"end": 11819,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11779,
											"end": 11785,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11772,
											"end": 11799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11772,
											"end": 11799,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11772,
											"end": 11799,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 11772,
											"end": 11799,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11772,
											"end": 11820,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11772,
											"end": 11820,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11772,
											"end": 11820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11772,
											"end": 11820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11772,
											"end": 11820,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11772,
											"end": 11820,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11772,
											"end": 11820,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 11772,
											"end": 11820,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11835,
											"end": 11890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "494215F965756BBC8B7F57ADDD2A0EBDBCE467A4999F8320C67ADC1771885D7B"
										},
										{
											"begin": 11848,
											"end": 11854,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11856,
											"end": 11868,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 13
										},
										{
											"begin": 11870,
											"end": 11875,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11877,
											"end": 11889,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11835,
											"end": 11890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11835,
											"end": 11890,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 11835,
											"end": 11890,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 11835,
											"end": 11890,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 11835,
											"end": 11890,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 11835,
											"end": 11890,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11835,
											"end": 11890,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11835,
											"end": 11890,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11835,
											"end": 11890,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 11835,
											"end": 11890,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11835,
											"end": 11890,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 11835,
											"end": 11890,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11835,
											"end": 11890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11835,
											"end": 11890,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 11835,
											"end": 11890,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11835,
											"end": 11890,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11835,
											"end": 11890,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11835,
											"end": 11890,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11835,
											"end": 11890,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11612,
											"end": 11897,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11612,
											"end": 11897,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11612,
											"end": 11897,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11612,
											"end": 11897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7257,
											"end": 7466,
											"name": "tag",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 7257,
											"end": 7466,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5402,
											"end": 5409,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 5394,
											"end": 5442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "tag",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "tag",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7319,
											"end": 7347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 1049,
											"end": 1067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "9EDFAD36E7D4D9DA54B4F78F22BF97CB5B58BB7998294A4288DA41C15C647C45"
										},
										{
											"begin": 7334,
											"end": 7346,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 7334,
											"end": 7344,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 7334,
											"end": 7346,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7334,
											"end": 7346,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 7334,
											"end": 7346,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7319,
											"end": 7326,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 7319,
											"end": 7347,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7319,
											"end": 7347,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 7319,
											"end": 7347,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7311,
											"end": 7371,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 7311,
											"end": 7371,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7311,
											"end": 7371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7311,
											"end": 7371,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7311,
											"end": 7371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7311,
											"end": 7371,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7311,
											"end": 7371,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7311,
											"end": 7371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7311,
											"end": 7371,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7311,
											"end": 7371,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 7311,
											"end": 7371,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7311,
											"end": 7371,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 7311,
											"end": 7371,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7311,
											"end": 7371,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 7311,
											"end": 7371,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7311,
											"end": 7371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7311,
											"end": 7371,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7311,
											"end": 7371,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7311,
											"end": 7371,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7311,
											"end": 7371,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7311,
											"end": 7371,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7311,
											"end": 7371,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7311,
											"end": 7371,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 7311,
											"end": 7371,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7386,
											"end": 7421,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "63706707D038997D2210EB026BB1339397DEAB463921538A81BB98E69EE54CA8"
										},
										{
											"begin": 7399,
											"end": 7406,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7408,
											"end": 7420,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 7408,
											"end": 7418,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 7408,
											"end": 7420,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7408,
											"end": 7420,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 7408,
											"end": 7420,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7386,
											"end": 7421,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7386,
											"end": 7421,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7386,
											"end": 7421,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 7386,
											"end": 7421,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7386,
											"end": 7421,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7386,
											"end": 7421,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7386,
											"end": 7421,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 7386,
											"end": 7421,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7386,
											"end": 7421,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 7386,
											"end": 7421,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7386,
											"end": 7421,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7386,
											"end": 7421,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7386,
											"end": 7421,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7386,
											"end": 7421,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7386,
											"end": 7421,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7386,
											"end": 7421,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7386,
											"end": 7421,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 7431,
											"end": 7459,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 7437,
											"end": 7449,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 7437,
											"end": 7447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 7437,
											"end": 7449,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7437,
											"end": 7449,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 7437,
											"end": 7449,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7451,
											"end": 7458,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7431,
											"end": 7436,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 7431,
											"end": 7459,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7431,
											"end": 7459,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 7431,
											"end": 7459,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7257,
											"end": 7466,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7257,
											"end": 7466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6202,
											"end": 6505,
											"name": "tag",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 6202,
											"end": 6505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5402,
											"end": 5409,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 5394,
											"end": 5442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "tag",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "tag",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5845,
											"end": 5859,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 5845,
											"end": 5859,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 5845,
											"end": 5859,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5845,
											"end": 5859,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5845,
											"end": 5859,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5845,
											"end": 5859,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 5845,
											"end": 5859,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 5845,
											"end": 5859,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5845,
											"end": 5859,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 5845,
											"end": 5859,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 5845,
											"end": 5859,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5844,
											"end": 5859,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5836,
											"end": 5883,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 5836,
											"end": 5883,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5836,
											"end": 5883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5836,
											"end": 5883,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5836,
											"end": 5883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5836,
											"end": 5883,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5836,
											"end": 5883,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5836,
											"end": 5883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5836,
											"end": 5883,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5836,
											"end": 5883,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 5836,
											"end": 5883,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5836,
											"end": 5883,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 5836,
											"end": 5883,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5836,
											"end": 5883,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 5836,
											"end": 5883,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5836,
											"end": 5883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5836,
											"end": 5883,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5836,
											"end": 5883,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5836,
											"end": 5883,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5836,
											"end": 5883,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5836,
											"end": 5883,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5836,
											"end": 5883,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5836,
											"end": 5883,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 5836,
											"end": 5883,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6288,
											"end": 6318,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 991,
											"end": 1011,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "7D800F56A05ADCB6245DF540492A560D0E668AAC15EE6C7DD40668064913DA33"
										},
										{
											"begin": 6305,
											"end": 6317,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 6305,
											"end": 6315,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 6305,
											"end": 6317,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6305,
											"end": 6317,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 6305,
											"end": 6317,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6288,
											"end": 6295,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 6288,
											"end": 6318,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6288,
											"end": 6318,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 6288,
											"end": 6318,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6280,
											"end": 6343,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 6280,
											"end": 6343,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6280,
											"end": 6343,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6280,
											"end": 6343,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6280,
											"end": 6343,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6280,
											"end": 6343,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6280,
											"end": 6343,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6280,
											"end": 6343,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6280,
											"end": 6343,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6280,
											"end": 6343,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 6280,
											"end": 6343,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6280,
											"end": 6343,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 6280,
											"end": 6343,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6280,
											"end": 6343,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 6280,
											"end": 6343,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6280,
											"end": 6343,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6280,
											"end": 6343,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6280,
											"end": 6343,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6280,
											"end": 6343,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6280,
											"end": 6343,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6280,
											"end": 6343,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6280,
											"end": 6343,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6280,
											"end": 6343,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 6280,
											"end": 6343,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6388,
											"end": 6392,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 6388,
											"end": 6392,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6377,
											"end": 6384,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6361,
											"end": 6374,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 6361,
											"end": 6372,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 6361,
											"end": 6374,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6361,
											"end": 6374,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 6361,
											"end": 6374,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6361,
											"end": 6384,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 6361,
											"end": 6384,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6361,
											"end": 6384,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6361,
											"end": 6384,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 6361,
											"end": 6384,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6361,
											"end": 6384,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 6361,
											"end": 6384,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6361,
											"end": 6392,
											"modifierDepth": 2,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6361,
											"end": 6392,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6353,
											"end": 6426,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 6353,
											"end": 6426,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6353,
											"end": 6426,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6353,
											"end": 6426,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6353,
											"end": 6426,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6353,
											"end": 6426,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6353,
											"end": 6426,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6353,
											"end": 6426,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6353,
											"end": 6426,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6353,
											"end": 6426,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 6353,
											"end": 6426,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6353,
											"end": 6426,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 6353,
											"end": 6426,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6353,
											"end": 6426,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 6353,
											"end": 6426,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6353,
											"end": 6426,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6353,
											"end": 6426,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6353,
											"end": 6426,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6353,
											"end": 6426,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6353,
											"end": 6426,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6353,
											"end": 6426,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6353,
											"end": 6426,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6353,
											"end": 6426,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 6353,
											"end": 6426,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6441,
											"end": 6469,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "E98063832B4FF0356868961B75F7F49B096B14EA066C9725301AD197F2F63147"
										},
										{
											"begin": 6456,
											"end": 6459,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6461,
											"end": 6468,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6441,
											"end": 6469,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6441,
											"end": 6469,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6441,
											"end": 6469,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 6441,
											"end": 6469,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6441,
											"end": 6469,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6441,
											"end": 6469,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6441,
											"end": 6469,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 6441,
											"end": 6469,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6441,
											"end": 6469,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 6441,
											"end": 6469,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6441,
											"end": 6469,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6441,
											"end": 6469,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6441,
											"end": 6469,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6441,
											"end": 6469,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6441,
											"end": 6469,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6441,
											"end": 6469,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6441,
											"end": 6469,
											"modifierDepth": 2,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 6479,
											"end": 6498,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 6485,
											"end": 6488,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6490,
											"end": 6497,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6479,
											"end": 6484,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 6479,
											"end": 6498,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6479,
											"end": 6498,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 6479,
											"end": 6498,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6202,
											"end": 6505,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6202,
											"end": 6505,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6202,
											"end": 6505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12167,
											"end": 12415,
											"name": "tag",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 12167,
											"end": 12415,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12266,
											"end": 12294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 1289,
											"end": 1309,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "508F8F8BE8F5DBCB88F4F4500430B8B3684C471ED936F31FEA912C78AD46A6B9"
										},
										{
											"begin": 12283,
											"end": 12293,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 12266,
											"end": 12273,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 12266,
											"end": 12294,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12266,
											"end": 12294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 12266,
											"end": 12294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12258,
											"end": 12310,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 12258,
											"end": 12310,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12258,
											"end": 12310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12258,
											"end": 12310,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12258,
											"end": 12310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12258,
											"end": 12310,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12258,
											"end": 12310,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12258,
											"end": 12310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 12258,
											"end": 12310,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12258,
											"end": 12310,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 12258,
											"end": 12310,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12258,
											"end": 12310,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 12258,
											"end": 12310,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12258,
											"end": 12310,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 12258,
											"end": 12310,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12258,
											"end": 12310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12258,
											"end": 12310,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12258,
											"end": 12310,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12258,
											"end": 12310,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12258,
											"end": 12310,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12258,
											"end": 12310,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12258,
											"end": 12310,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 12258,
											"end": 12310,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 12258,
											"end": 12310,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12320,
											"end": 12325,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12320,
											"end": 12334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12320,
											"end": 12334,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12320,
											"end": 12348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8FC"
										},
										{
											"begin": 12335,
											"end": 12347,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12320,
											"end": 12348,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12320,
											"end": 12348,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12320,
											"end": 12348,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12320,
											"end": 12348,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 12320,
											"end": 12348,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12320,
											"end": 12348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12320,
											"end": 12348,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12320,
											"end": 12348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12320,
											"end": 12348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12320,
											"end": 12348,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12320,
											"end": 12348,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12320,
											"end": 12348,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12320,
											"end": 12348,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12320,
											"end": 12348,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12320,
											"end": 12348,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12320,
											"end": 12348,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 12320,
											"end": 12348,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 12320,
											"end": 12348,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 12320,
											"end": 12348,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 12320,
											"end": 12348,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12320,
											"end": 12348,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12320,
											"end": 12348,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12320,
											"end": 12348,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12320,
											"end": 12348,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12320,
											"end": 12348,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12320,
											"end": 12348,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12320,
											"end": 12348,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 12320,
											"end": 12348,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12320,
											"end": 12348,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 12320,
											"end": 12348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12320,
											"end": 12348,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12320,
											"end": 12348,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 12320,
											"end": 12348,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 12320,
											"end": 12348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12320,
											"end": 12348,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 12320,
											"end": 12348,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 12320,
											"end": 12348,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12320,
											"end": 12348,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12363,
											"end": 12408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3B1C0368C81E47D03164182DC6F9FCF4F5E4B3BD9462D74960D729F73138CE36"
										},
										{
											"begin": 12374,
											"end": 12379,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12381,
											"end": 12393,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 13
										},
										{
											"begin": 12395,
											"end": 12407,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12363,
											"end": 12408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12363,
											"end": 12408,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12363,
											"end": 12408,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 12363,
											"end": 12408,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 12363,
											"end": 12408,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12363,
											"end": 12408,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12363,
											"end": 12408,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12363,
											"end": 12408,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 12363,
											"end": 12408,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12363,
											"end": 12408,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 12363,
											"end": 12408,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12363,
											"end": 12408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12363,
											"end": 12408,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12363,
											"end": 12408,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12363,
											"end": 12408,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12363,
											"end": 12408,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12363,
											"end": 12408,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12363,
											"end": 12408,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12167,
											"end": 12415,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12167,
											"end": 12415,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12167,
											"end": 12415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1249,
											"name": "tag",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 1197,
											"end": 1249,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1230,
											"end": 1249,
											"name": "PUSH",
											"source": 13,
											"value": "AE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3"
										},
										{
											"begin": 1197,
											"end": 1249,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1017,
											"end": 1067,
											"name": "tag",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 1017,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1049,
											"end": 1067,
											"name": "PUSH",
											"source": 13,
											"value": "9EDFAD36E7D4D9DA54B4F78F22BF97CB5B58BB7998294A4288DA41C15C647C45"
										},
										{
											"begin": 1017,
											"end": 1067,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1017,
											"end": 1067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "tag",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 1540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1073,
											"end": 1131,
											"name": "tag",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 1073,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1109,
											"end": 1131,
											"name": "PUSH",
											"source": 13,
											"value": "C8A3BEFA5973FF6E159AFC769978D92F26BAE29C51A73D11C9112A05B68D25E6"
										},
										{
											"begin": 1073,
											"end": 1131,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1073,
											"end": 1131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7753,
											"end": 7992,
											"name": "tag",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 7753,
											"end": 7992,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5402,
											"end": 5409,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 5394,
											"end": 5442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "tag",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "tag",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7833,
											"end": 7865,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 1109,
											"end": 1131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "C8A3BEFA5973FF6E159AFC769978D92F26BAE29C51A73D11C9112A05B68D25E6"
										},
										{
											"begin": 7852,
											"end": 7864,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 7852,
											"end": 7862,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 7852,
											"end": 7864,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7852,
											"end": 7864,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 7852,
											"end": 7864,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7833,
											"end": 7840,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 7833,
											"end": 7865,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7833,
											"end": 7865,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 7833,
											"end": 7865,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7825,
											"end": 7893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 7825,
											"end": 7893,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7825,
											"end": 7893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7825,
											"end": 7893,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7825,
											"end": 7893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7825,
											"end": 7893,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7825,
											"end": 7893,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7825,
											"end": 7893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7825,
											"end": 7893,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7825,
											"end": 7893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 7825,
											"end": 7893,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7825,
											"end": 7893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 7825,
											"end": 7893,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7825,
											"end": 7893,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 7825,
											"end": 7893,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7825,
											"end": 7893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7825,
											"end": 7893,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7825,
											"end": 7893,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7825,
											"end": 7893,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7825,
											"end": 7893,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7825,
											"end": 7893,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7825,
											"end": 7893,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7825,
											"end": 7893,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 7825,
											"end": 7893,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7908,
											"end": 7954,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "E419CE2AAB145A1FEAF5893BB6A9478F9282415BBD81C76D5CFFF2D4F13431DD"
										},
										{
											"begin": 7925,
											"end": 7930,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7932,
											"end": 7939,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7941,
											"end": 7953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 7941,
											"end": 7951,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 7941,
											"end": 7953,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7941,
											"end": 7953,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 7941,
											"end": 7953,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7908,
											"end": 7954,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7908,
											"end": 7954,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7908,
											"end": 7954,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 7908,
											"end": 7954,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7908,
											"end": 7954,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7908,
											"end": 7954,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7908,
											"end": 7954,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7908,
											"end": 7954,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 7908,
											"end": 7954,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7908,
											"end": 7954,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 7908,
											"end": 7954,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7908,
											"end": 7954,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7908,
											"end": 7954,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7908,
											"end": 7954,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7908,
											"end": 7954,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7908,
											"end": 7954,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7908,
											"end": 7954,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7908,
											"end": 7954,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 7964,
											"end": 7985,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 7970,
											"end": 7975,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7977,
											"end": 7984,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7964,
											"end": 7969,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 7964,
											"end": 7985,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7964,
											"end": 7985,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 7964,
											"end": 7985,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7753,
											"end": 7992,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7753,
											"end": 7992,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7753,
											"end": 7992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 957,
											"end": 1011,
											"name": "tag",
											"source": 13,
											"value": "136"
										},
										{
											"begin": 957,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 991,
											"end": 1011,
											"name": "PUSH",
											"source": 13,
											"value": "7D800F56A05ADCB6245DF540492A560D0E668AAC15EE6C7DD40668064913DA33"
										},
										{
											"begin": 957,
											"end": 1011,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 957,
											"end": 1011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1255,
											"end": 1309,
											"name": "tag",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 1255,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1289,
											"end": 1309,
											"name": "PUSH",
											"source": 13,
											"value": "508F8F8BE8F5DBCB88F4F4500430B8B3684C471ED936F31FEA912C78AD46A6B9"
										},
										{
											"begin": 1255,
											"end": 1309,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1255,
											"end": 1309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 901,
											"end": 951,
											"name": "tag",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 901,
											"end": 951,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 933,
											"end": 951,
											"name": "PUSH",
											"source": 13,
											"value": "8C66330D9D4F6ABA064F25EF2A307366EA6D917616F44C075AA60FA15E5CB1CB"
										},
										{
											"begin": 901,
											"end": 951,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 901,
											"end": 951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8620,
											"end": 8696,
											"name": "tag",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 8620,
											"end": 8696,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8662,
											"end": 8666,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8685,
											"end": 8689,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 8685,
											"end": 8689,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 8678,
											"end": 8689,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8678,
											"end": 8689,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8620,
											"end": 8696,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8620,
											"end": 8696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1589,
											"end": 1613,
											"name": "tag",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 1589,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1589,
											"end": 1613,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 1589,
											"end": 1613,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1589,
											"end": 1613,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1589,
											"end": 1613,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1589,
											"end": 1613,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1589,
											"end": 1613,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1589,
											"end": 1613,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1589,
											"end": 1613,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1589,
											"end": 1613,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1589,
											"end": 1613,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1589,
											"end": 1613,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1589,
											"end": 1613,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1589,
											"end": 1613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "344"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "344"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "345"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "345"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "346"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "347"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "346"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "347"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "346"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6740,
											"end": 7025,
											"name": "tag",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 6740,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5402,
											"end": 5409,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 5394,
											"end": 5442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "tag",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "tag",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5615,
											"end": 5627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 5615,
											"end": 5627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 5615,
											"end": 5627,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5615,
											"end": 5627,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5615,
											"end": 5627,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5615,
											"end": 5627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 5615,
											"end": 5627,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 5615,
											"end": 5627,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5615,
											"end": 5627,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 5615,
											"end": 5627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 5615,
											"end": 5627,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5614,
											"end": 5627,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5606,
											"end": 5648,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 5606,
											"end": 5648,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5606,
											"end": 5648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5606,
											"end": 5648,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5606,
											"end": 5648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5606,
											"end": 5648,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5606,
											"end": 5648,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5606,
											"end": 5648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5606,
											"end": 5648,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5606,
											"end": 5648,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 5606,
											"end": 5648,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5606,
											"end": 5648,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 5606,
											"end": 5648,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5606,
											"end": 5648,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 5606,
											"end": 5648,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5606,
											"end": 5648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5606,
											"end": 5648,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5606,
											"end": 5648,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5606,
											"end": 5648,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5606,
											"end": 5648,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5606,
											"end": 5648,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5606,
											"end": 5648,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5606,
											"end": 5648,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 5606,
											"end": 5648,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6809,
											"end": 6837,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 933,
											"end": 951,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "8C66330D9D4F6ABA064F25EF2A307366EA6D917616F44C075AA60FA15E5CB1CB"
										},
										{
											"begin": 6824,
											"end": 6836,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 6824,
											"end": 6834,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 6824,
											"end": 6836,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6824,
											"end": 6836,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 6824,
											"end": 6836,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6809,
											"end": 6816,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 6809,
											"end": 6837,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6809,
											"end": 6837,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 6809,
											"end": 6837,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6801,
											"end": 6861,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 6801,
											"end": 6861,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6801,
											"end": 6861,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6801,
											"end": 6861,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6801,
											"end": 6861,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6801,
											"end": 6861,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6801,
											"end": 6861,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6801,
											"end": 6861,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6801,
											"end": 6861,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6801,
											"end": 6861,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 6801,
											"end": 6861,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6801,
											"end": 6861,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 6801,
											"end": 6861,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6801,
											"end": 6861,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 6801,
											"end": 6861,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6801,
											"end": 6861,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6801,
											"end": 6861,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6801,
											"end": 6861,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6801,
											"end": 6861,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6801,
											"end": 6861,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6801,
											"end": 6861,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6801,
											"end": 6861,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6801,
											"end": 6861,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 6801,
											"end": 6861,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6906,
											"end": 6910,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 6906,
											"end": 6910,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6895,
											"end": 6902,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6879,
											"end": 6892,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 6879,
											"end": 6890,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 6879,
											"end": 6892,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6879,
											"end": 6892,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 6879,
											"end": 6892,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6879,
											"end": 6902,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 6879,
											"end": 6902,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6879,
											"end": 6902,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6879,
											"end": 6902,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 6879,
											"end": 6902,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6879,
											"end": 6902,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 6879,
											"end": 6902,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6879,
											"end": 6910,
											"modifierDepth": 2,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6879,
											"end": 6910,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6871,
											"end": 6944,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 6871,
											"end": 6944,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6871,
											"end": 6944,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6871,
											"end": 6944,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6871,
											"end": 6944,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6871,
											"end": 6944,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6871,
											"end": 6944,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6871,
											"end": 6944,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6871,
											"end": 6944,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6871,
											"end": 6944,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 6871,
											"end": 6944,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6871,
											"end": 6944,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 6871,
											"end": 6944,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6871,
											"end": 6944,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 6871,
											"end": 6944,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6871,
											"end": 6944,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6871,
											"end": 6944,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6871,
											"end": 6944,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6871,
											"end": 6944,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6871,
											"end": 6944,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6871,
											"end": 6944,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6871,
											"end": 6944,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6871,
											"end": 6944,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 6871,
											"end": 6944,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6959,
											"end": 6980,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "772F66A00A405709C30E7F18FEADCC8F123B20C09C7260165D3EEC36C9F21372"
										},
										{
											"begin": 6972,
											"end": 6979,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6959,
											"end": 6980,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6959,
											"end": 6980,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6959,
											"end": 6980,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 6959,
											"end": 6980,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6959,
											"end": 6980,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6959,
											"end": 6980,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 6959,
											"end": 6980,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6959,
											"end": 6980,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 6959,
											"end": 6980,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6959,
											"end": 6980,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6959,
											"end": 6980,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6959,
											"end": 6980,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6959,
											"end": 6980,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6959,
											"end": 6980,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6959,
											"end": 6980,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6959,
											"end": 6980,
											"modifierDepth": 2,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 6990,
											"end": 7018,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 6996,
											"end": 7008,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 6996,
											"end": 7006,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 6996,
											"end": 7008,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6996,
											"end": 7008,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 6996,
											"end": 7008,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7010,
											"end": 7017,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6990,
											"end": 6995,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 6990,
											"end": 7018,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6990,
											"end": 7018,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 6990,
											"end": 7018,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6740,
											"end": 7025,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6740,
											"end": 7025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10284,
											"end": 10641,
											"name": "tag",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 10284,
											"end": 10641,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10375,
											"end": 10379,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10391,
											"end": 10404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10407,
											"end": 10419,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 10407,
											"end": 10417,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 10407,
											"end": 10419,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10407,
											"end": 10419,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 10407,
											"end": 10419,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10391,
											"end": 10419,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10391,
											"end": 10419,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10433,
											"end": 10451,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "B"
										},
										{
											"begin": 10433,
											"end": 10458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10452,
											"end": 10457,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10433,
											"end": 10458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10433,
											"end": 10458,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10433,
											"end": 10458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10433,
											"end": 10458,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10433,
											"end": 10458,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10433,
											"end": 10458,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10433,
											"end": 10458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10433,
											"end": 10458,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10433,
											"end": 10458,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10433,
											"end": 10458,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10433,
											"end": 10458,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10433,
											"end": 10458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10433,
											"end": 10458,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10433,
											"end": 10458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10433,
											"end": 10458,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 10433,
											"end": 10458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10433,
											"end": 10458,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10433,
											"end": 10458,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 10433,
											"end": 10458,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10433,
											"end": 10458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 10433,
											"end": 10458,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 10433,
											"end": 10458,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10433,
											"end": 10458,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 10433,
											"end": 10458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 10433,
											"end": 10458,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10429,
											"end": 10614,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10429,
											"end": 10614,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 10429,
											"end": 10614,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10474,
											"end": 10501,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 10484,
											"end": 10489,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10491,
											"end": 10493,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10495,
											"end": 10500,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10474,
											"end": 10483,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 10474,
											"end": 10501,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10474,
											"end": 10501,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 10474,
											"end": 10501,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10429,
											"end": 10614,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 10429,
											"end": 10614,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10429,
											"end": 10614,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 10429,
											"end": 10614,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10532,
											"end": 10559,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 10542,
											"end": 10547,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10549,
											"end": 10551,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10553,
											"end": 10558,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10532,
											"end": 10541,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 10532,
											"end": 10559,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10532,
											"end": 10559,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 10532,
											"end": 10559,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10573,
											"end": 10603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 10583,
											"end": 10588,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10590,
											"end": 10595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 10590,
											"end": 10595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10590,
											"end": 10595,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10590,
											"end": 10595,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 10590,
											"end": 10595,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10590,
											"end": 10595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 10590,
											"end": 10595,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 10590,
											"end": 10595,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10590,
											"end": 10595,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 10590,
											"end": 10595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10590,
											"end": 10595,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10597,
											"end": 10602,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 10597,
											"end": 10602,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 10573,
											"end": 10582,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 10573,
											"end": 10603,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10573,
											"end": 10603,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 10573,
											"end": 10603,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10429,
											"end": 10614,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 10429,
											"end": 10614,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10630,
											"end": 10634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 10623,
											"end": 10634,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10623,
											"end": 10634,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10623,
											"end": 10634,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10284,
											"end": 10641,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10284,
											"end": 10641,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10284,
											"end": 10641,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10284,
											"end": 10641,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10284,
											"end": 10641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8216,
											"end": 8503,
											"name": "tag",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 8216,
											"end": 8503,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 5403,
											"end": 5409,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5402,
											"end": 5409,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 5394,
											"end": 5442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "tag",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "tag",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 5394,
											"end": 5442,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8288,
											"end": 8318,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 1171,
											"end": 1191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "EA4DEFABEB90FA1E79F929D6C8D482FEE8A115926A592B79634D39A67CCE3B62"
										},
										{
											"begin": 8305,
											"end": 8317,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 8305,
											"end": 8315,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 8305,
											"end": 8317,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8305,
											"end": 8317,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 8305,
											"end": 8317,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8288,
											"end": 8295,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 8288,
											"end": 8318,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8288,
											"end": 8318,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 8288,
											"end": 8318,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8280,
											"end": 8334,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 8280,
											"end": 8334,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8280,
											"end": 8334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8280,
											"end": 8334,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8280,
											"end": 8334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8280,
											"end": 8334,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8280,
											"end": 8334,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8280,
											"end": 8334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8280,
											"end": 8334,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8280,
											"end": 8334,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 8280,
											"end": 8334,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8280,
											"end": 8334,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 8280,
											"end": 8334,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8280,
											"end": 8334,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 8280,
											"end": 8334,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8280,
											"end": 8334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8280,
											"end": 8334,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8280,
											"end": 8334,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8280,
											"end": 8334,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8280,
											"end": 8334,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8280,
											"end": 8334,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8280,
											"end": 8334,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8280,
											"end": 8334,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 8280,
											"end": 8334,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8366,
											"end": 8379,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 8366,
											"end": 8377,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 8366,
											"end": 8379,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8366,
											"end": 8379,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 8366,
											"end": 8379,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8352,
											"end": 8362,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8352,
											"end": 8379,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 8352,
											"end": 8379,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8344,
											"end": 8412,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 8344,
											"end": 8412,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8344,
											"end": 8412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8344,
											"end": 8412,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8344,
											"end": 8412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8344,
											"end": 8412,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8344,
											"end": 8412,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8344,
											"end": 8412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8344,
											"end": 8412,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8344,
											"end": 8412,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 8344,
											"end": 8412,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8344,
											"end": 8412,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 8344,
											"end": 8412,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8344,
											"end": 8412,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 8344,
											"end": 8412,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8344,
											"end": 8412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8344,
											"end": 8412,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8344,
											"end": 8412,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8344,
											"end": 8412,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8344,
											"end": 8412,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8344,
											"end": 8412,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8344,
											"end": 8412,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8344,
											"end": 8412,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 8344,
											"end": 8412,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8429,
											"end": 8439,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8422,
											"end": 8426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 8422,
											"end": 8439,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8422,
											"end": 8439,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8422,
											"end": 8439,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 8422,
											"end": 8439,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8454,
											"end": 8496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "A11CBDEB4D62442FAE7C8EC6286585B17C47ACB7B17BBCAB1BEADCE84BEFA300"
										},
										{
											"begin": 8471,
											"end": 8481,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8483,
											"end": 8495,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 8483,
											"end": 8493,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 8483,
											"end": 8495,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8483,
											"end": 8495,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 8483,
											"end": 8495,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8454,
											"end": 8496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8454,
											"end": 8496,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8454,
											"end": 8496,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 8454,
											"end": 8496,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8454,
											"end": 8496,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8454,
											"end": 8496,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8454,
											"end": 8496,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 8454,
											"end": 8496,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8454,
											"end": 8496,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 8454,
											"end": 8496,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8454,
											"end": 8496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8454,
											"end": 8496,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8454,
											"end": 8496,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8454,
											"end": 8496,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8454,
											"end": 8496,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8454,
											"end": 8496,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8454,
											"end": 8496,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 8216,
											"end": 8503,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8216,
											"end": 8503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "tag",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "PUSH",
											"source": 13,
											"value": "B"
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2625,
											"end": 2675,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2625,
											"end": 2675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1447,
											"end": 1478,
											"name": "tag",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 1447,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1447,
											"end": 1478,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 1447,
											"end": 1478,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1447,
											"end": 1478,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1447,
											"end": 1478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "tag",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1646,
											"end": 1672,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1646,
											"end": 1672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4717,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4308,
											"end": 4661,
											"name": "tag",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 4308,
											"end": 4661,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4378,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 1230,
											"end": 1249,
											"name": "PUSH",
											"source": 13,
											"value": "AE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3"
										},
										{
											"begin": 4394,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 4394,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 4394,
											"end": 4406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4394,
											"end": 4406,
											"name": "tag",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 4394,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4378,
											"end": 4385,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 4378,
											"end": 4407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4378,
											"end": 4407,
											"name": "tag",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 4378,
											"end": 4407,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4370,
											"end": 4432,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 4370,
											"end": 4432,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4370,
											"end": 4432,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4370,
											"end": 4432,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4370,
											"end": 4432,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4370,
											"end": 4432,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4370,
											"end": 4432,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4370,
											"end": 4432,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4370,
											"end": 4432,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4370,
											"end": 4432,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 4370,
											"end": 4432,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4370,
											"end": 4432,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 4370,
											"end": 4432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4370,
											"end": 4432,
											"name": "tag",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 4370,
											"end": 4432,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4370,
											"end": 4432,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4370,
											"end": 4432,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4370,
											"end": 4432,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4370,
											"end": 4432,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4370,
											"end": 4432,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4370,
											"end": 4432,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4370,
											"end": 4432,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4370,
											"end": 4432,
											"name": "tag",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 4370,
											"end": 4432,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4457,
											"end": 4472,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4442,
											"end": 4454,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 4442,
											"end": 4454,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 4442,
											"end": 4472,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 4442,
											"end": 4472,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 4442,
											"end": 4472,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4442,
											"end": 4472,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4442,
											"end": 4472,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4442,
											"end": 4472,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4442,
											"end": 4472,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4442,
											"end": 4472,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 4442,
											"end": 4472,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4442,
											"end": 4472,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4442,
											"end": 4472,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4442,
											"end": 4472,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4442,
											"end": 4472,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4442,
											"end": 4472,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4442,
											"end": 4472,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 4442,
											"end": 4472,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4442,
											"end": 4472,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 4442,
											"end": 4472,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4487,
											"end": 4502,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4483,
											"end": 4655,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4483,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 4483,
											"end": 4655,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4523,
											"end": 4566,
											"name": "PUSH",
											"source": 13,
											"value": "5668502CA8E7B393C09D1DAC964CA45A27870A78D7BA212B7A189450897CA05F"
										},
										{
											"begin": 4539,
											"end": 4551,
											"name": "NUMBER",
											"source": 13
										},
										{
											"begin": 4553,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 4553,
											"end": 4563,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 4553,
											"end": 4565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4553,
											"end": 4565,
											"name": "tag",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 4553,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4523,
											"end": 4566,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4566,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4523,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 4523,
											"end": 4566,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4523,
											"end": 4566,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4523,
											"end": 4566,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4523,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 4523,
											"end": 4566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4523,
											"end": 4566,
											"name": "tag",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 4523,
											"end": 4566,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4523,
											"end": 4566,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4566,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4523,
											"end": 4566,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4523,
											"end": 4566,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4523,
											"end": 4566,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4523,
											"end": 4566,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4523,
											"end": 4566,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 4483,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 4483,
											"end": 4655,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4483,
											"end": 4655,
											"name": "tag",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 4483,
											"end": 4655,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4602,
											"end": 4644,
											"name": "PUSH",
											"source": 13,
											"value": "98E05482FDB38DF5EB461FB932FA6E1AF90A3569939CE5A8D92D699B102D6402"
										},
										{
											"begin": 4617,
											"end": 4629,
											"name": "NUMBER",
											"source": 13
										},
										{
											"begin": 4631,
											"end": 4643,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 4631,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 4631,
											"end": 4643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4631,
											"end": 4643,
											"name": "tag",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 4631,
											"end": 4643,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4602,
											"end": 4644,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4602,
											"end": 4644,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4602,
											"end": 4644,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 4602,
											"end": 4644,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4602,
											"end": 4644,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4602,
											"end": 4644,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4602,
											"end": 4644,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 4602,
											"end": 4644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4602,
											"end": 4644,
											"name": "tag",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 4602,
											"end": 4644,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4602,
											"end": 4644,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4602,
											"end": 4644,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4602,
											"end": 4644,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4602,
											"end": 4644,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4602,
											"end": 4644,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4602,
											"end": 4644,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4602,
											"end": 4644,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 4483,
											"end": 4655,
											"name": "tag",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 4483,
											"end": 4655,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4308,
											"end": 4661,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4308,
											"end": 4661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1191,
											"name": "tag",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 1137,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1171,
											"end": 1191,
											"name": "PUSH",
											"source": 13,
											"value": "EA4DEFABEB90FA1E79F929D6C8D482FEE8A115926A592B79634D39A67CCE3B62"
										},
										{
											"begin": 1137,
											"end": 1191,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1137,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4899,
											"end": 5247,
											"name": "tag",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 4899,
											"end": 5247,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4970,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 1230,
											"end": 1249,
											"name": "PUSH",
											"source": 13,
											"value": "AE6C2FC584631AF4C9385B8A55683F1A75C813747E27EFEF5AFECE31C6B230D3"
										},
										{
											"begin": 4986,
											"end": 4998,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 4986,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 4986,
											"end": 4998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4986,
											"end": 4998,
											"name": "tag",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 4986,
											"end": 4998,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4970,
											"end": 4977,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 4970,
											"end": 4999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4970,
											"end": 4999,
											"name": "tag",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 4970,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4962,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 4962,
											"end": 5014,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4962,
											"end": 5014,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4962,
											"end": 5014,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4962,
											"end": 5014,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4962,
											"end": 5014,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4962,
											"end": 5014,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4962,
											"end": 5014,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4962,
											"end": 5014,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4962,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 4962,
											"end": 5014,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4962,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 4962,
											"end": 5014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4962,
											"end": 5014,
											"name": "tag",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 4962,
											"end": 5014,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4962,
											"end": 5014,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4962,
											"end": 5014,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4962,
											"end": 5014,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4962,
											"end": 5014,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4962,
											"end": 5014,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4962,
											"end": 5014,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4962,
											"end": 5014,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4962,
											"end": 5014,
											"name": "tag",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 4962,
											"end": 5014,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5041,
											"end": 5055,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 5024,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 5024,
											"end": 5055,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 5024,
											"end": 5055,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5024,
											"end": 5055,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5024,
											"end": 5055,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5024,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 5024,
											"end": 5055,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 5024,
											"end": 5055,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 5024,
											"end": 5055,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5024,
											"end": 5055,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5024,
											"end": 5055,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5024,
											"end": 5055,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5024,
											"end": 5055,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5024,
											"end": 5055,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 5024,
											"end": 5055,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 5024,
											"end": 5055,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5024,
											"end": 5055,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5024,
											"end": 5055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5070,
											"end": 5084,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5066,
											"end": 5241,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5066,
											"end": 5241,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 5066,
											"end": 5241,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5105,
											"end": 5150,
											"name": "PUSH",
											"source": 13,
											"value": "218E25F0A7435729F5A66AAE50A9ED0084535A0080300C1C2E8366D8DF7136ED"
										},
										{
											"begin": 5123,
											"end": 5135,
											"name": "NUMBER",
											"source": 13
										},
										{
											"begin": 5137,
											"end": 5149,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 5137,
											"end": 5147,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 5137,
											"end": 5149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5137,
											"end": 5149,
											"name": "tag",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 5137,
											"end": 5149,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5105,
											"end": 5150,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5105,
											"end": 5150,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5105,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 5105,
											"end": 5150,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5105,
											"end": 5150,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5105,
											"end": 5150,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5105,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 5105,
											"end": 5150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5105,
											"end": 5150,
											"name": "tag",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 5105,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5105,
											"end": 5150,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5105,
											"end": 5150,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5105,
											"end": 5150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5105,
											"end": 5150,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5105,
											"end": 5150,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5105,
											"end": 5150,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5105,
											"end": 5150,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 5066,
											"end": 5241,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 5066,
											"end": 5241,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5066,
											"end": 5241,
											"name": "tag",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 5066,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5186,
											"end": 5230,
											"name": "PUSH",
											"source": 13,
											"value": "41606E1DCEE38320F9EDBFCD642AEAA81BB2140C705DE9D4A7814024A1E9A314"
										},
										{
											"begin": 5203,
											"end": 5215,
											"name": "NUMBER",
											"source": 13
										},
										{
											"begin": 5217,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 5217,
											"end": 5227,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 5217,
											"end": 5229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5217,
											"end": 5229,
											"name": "tag",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 5217,
											"end": 5229,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5186,
											"end": 5230,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5186,
											"end": 5230,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5186,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 5186,
											"end": 5230,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5186,
											"end": 5230,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5186,
											"end": 5230,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5186,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 5186,
											"end": 5230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5186,
											"end": 5230,
											"name": "tag",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 5186,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5186,
											"end": 5230,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5186,
											"end": 5230,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5186,
											"end": 5230,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5186,
											"end": 5230,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5186,
											"end": 5230,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5186,
											"end": 5230,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5186,
											"end": 5230,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 5066,
											"end": 5241,
											"name": "tag",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 5066,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4899,
											"end": 5247,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4899,
											"end": 5247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1378,
											"end": 1398,
											"name": "tag",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 1378,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1378,
											"end": 1398,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 1378,
											"end": 1398,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1378,
											"end": 1398,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1378,
											"end": 1398,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1378,
											"end": 1398,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1378,
											"end": 1398,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1378,
											"end": 1398,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1378,
											"end": 1398,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1378,
											"end": 1398,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1378,
											"end": 1398,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1378,
											"end": 1398,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1378,
											"end": 1398,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1378,
											"end": 1398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "425"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "426"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 4,
											"value": "425"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "428"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "429"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "430"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 3,
											"value": "429"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 3,
											"value": "428"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "432"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "433"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 4,
											"value": "433"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 4,
											"value": "432"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "434"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "435"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 4,
											"value": "435"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 4,
											"value": "434"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "436"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "437"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 4,
											"value": "436"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 3282,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "tag",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6322,
											"end": 6326,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 6397,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 6397,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 6828,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "tag",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6872,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6877,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 6894,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 6949,
											"end": 6961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "tag",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 6947,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 6938,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 6987,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "tag",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 1444,
											"end": 1446,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1448,
											"end": 1453,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 1412,
											"end": 1455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "tag",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1385,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 1385,
											"end": 1456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "tag",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1303,
											"end": 1463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "tag",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8336,
											"end": 8337,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8317,
											"end": 8324,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "458"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "459"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 8361,
											"end": 8391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "tag",
											"source": 4,
											"value": "459"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "tag",
											"source": 4,
											"value": "458"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "460"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8445,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "437"
										},
										{
											"begin": 8411,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "tag",
											"source": 4,
											"value": "460"
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8247,
											"end": 8453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "462"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "463"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 4,
											"value": "463"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 4,
											"value": "462"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "464"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "437"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 4,
											"value": "464"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 4,
											"value": "426"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "466"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "467"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 4,
											"value": "467"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 4,
											"value": "466"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "468"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "469"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 4,
											"value": "469"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 4,
											"value": "468"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "470"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "471"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 4,
											"value": "471"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 4,
											"value": "470"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8978,
											"end": 9242,
											"name": "tag",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 8978,
											"end": 9242,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9093,
											"end": 9094,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9077,
											"end": 9095,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9077,
											"end": 9095,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9077,
											"end": 9081,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9077,
											"end": 9095,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9077,
											"end": 9095,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9077,
											"end": 9095,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9073,
											"end": 9195,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 9073,
											"end": 9195,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9146,
											"end": 9150,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 9146,
											"end": 9150,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 9136,
											"end": 9142,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9120,
											"end": 9133,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 9120,
											"end": 9131,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 9120,
											"end": 9133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9120,
											"end": 9133,
											"name": "tag",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 9120,
											"end": 9133,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9120,
											"end": 9142,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 9120,
											"end": 9142,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9120,
											"end": 9142,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9120,
											"end": 9142,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 9120,
											"end": 9142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9120,
											"end": 9142,
											"name": "tag",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 9120,
											"end": 9142,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9120,
											"end": 9150,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9120,
											"end": 9150,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9112,
											"end": 9184,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 9112,
											"end": 9184,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9112,
											"end": 9184,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9112,
											"end": 9184,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9112,
											"end": 9184,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9112,
											"end": 9184,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9112,
											"end": 9184,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9112,
											"end": 9184,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 9112,
											"end": 9184,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9112,
											"end": 9184,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 9112,
											"end": 9184,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9112,
											"end": 9184,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 9112,
											"end": 9184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9112,
											"end": 9184,
											"name": "tag",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 9112,
											"end": 9184,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9112,
											"end": 9184,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9112,
											"end": 9184,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9112,
											"end": 9184,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9112,
											"end": 9184,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9112,
											"end": 9184,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9112,
											"end": 9184,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9112,
											"end": 9184,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9112,
											"end": 9184,
											"name": "tag",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 9112,
											"end": 9184,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9073,
											"end": 9195,
											"name": "tag",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 9073,
											"end": 9195,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9204,
											"end": 9235,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 9218,
											"end": 9222,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9224,
											"end": 9226,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9228,
											"end": 9234,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9204,
											"end": 9217,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 9204,
											"end": 9235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9204,
											"end": 9235,
											"name": "tag",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 9204,
											"end": 9235,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8978,
											"end": 9242,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8978,
											"end": 9242,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8978,
											"end": 9242,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8978,
											"end": 9242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "484"
										},
										{
											"begin": 3565,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "tag",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4512,
											"end": 4517,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "490"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4669,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 8,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 4631,
											"end": 4671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "tag",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "tag",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4129,
											"end": 4688,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4059,
											"end": 4688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 4,
											"value": "479"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "494"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "495"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 4,
											"value": "495"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "496"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 4,
											"value": "494"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "497"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "498"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "499"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 4,
											"value": "498"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 4,
											"value": "497"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 4,
											"value": "496"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "500"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "501"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 4,
											"value": "500"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 4,
											"value": "501"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "502"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 4,
											"value": "502"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 2811,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "tag",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3279,
											"end": 3291,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3307,
											"end": 3328,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "507"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 9,
											"value": "CD78605900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 3359,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "tag",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "tag",
											"source": 9,
											"value": "507"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "510"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "513"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "512"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 9,
											"value": "513"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 9,
											"value": "512"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "515"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 9,
											"value": "515"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "517"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "519"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 9,
											"value": "517"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5055,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "521"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 9,
											"value": "521"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 9,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "523"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 5121,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "tag",
											"source": 9,
											"value": "523"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 9,
											"value": "519"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5894,
											"end": 5895,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5884,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 9,
											"value": "1425EA4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 14,
											"value": "528"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 14,
											"value": "530"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 14,
											"value": "531"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "612"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "530"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 14,
											"value": "612"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "613"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 14,
											"value": "613"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 14,
											"value": "532"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "615"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "531"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 14,
											"value": "615"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "617"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "618"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "528"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 14,
											"value": "618"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 14,
											"value": "617"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "619"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "532"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 14,
											"value": "619"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 14,
											"value": "533"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 14,
											"value": "534"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "622"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "533"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 14,
											"value": "622"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "624"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "534"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 14,
											"value": "624"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 14,
											"value": "535"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "tag",
											"source": 14,
											"value": "537"
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1882,
											"end": 1885,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "MCOPY",
											"source": 14
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1903,
											"end": 1930,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1798,
											"end": 1937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "tag",
											"source": 14,
											"value": "538"
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2015,
											"end": 2029,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1943,
											"end": 2045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "tag",
											"source": 14,
											"value": "539"
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2139,
											"end": 2142,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "630"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "535"
										},
										{
											"begin": 2167,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "tag",
											"source": 14,
											"value": "630"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "631"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 2222,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "tag",
											"source": 14,
											"value": "631"
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "632"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "537"
										},
										{
											"begin": 2302,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "tag",
											"source": 14,
											"value": "632"
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "633"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "538"
										},
										{
											"begin": 2392,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 14,
											"value": "633"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2143,
											"end": 2428,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2051,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "tag",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2605,
											"end": 2622,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2598,
											"end": 2645,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "635"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "539"
										},
										{
											"begin": 2662,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "tag",
											"source": 14,
											"value": "635"
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2434,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "tag",
											"source": 14,
											"value": "540"
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2872,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2823,
											"end": 2828,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2819,
											"end": 2873,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2808,
											"end": 2873,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2808,
											"end": 2873,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2753,
											"end": 2879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "tag",
											"source": 14,
											"value": "541"
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2922,
											"end": 2929,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "638"
										},
										{
											"begin": 2969,
											"end": 2974,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "540"
										},
										{
											"begin": 2951,
											"end": 2975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "tag",
											"source": 14,
											"value": "638"
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2940,
											"end": 2975,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2940,
											"end": 2975,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2885,
											"end": 2981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "tag",
											"source": 14,
											"value": "542"
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "640"
										},
										{
											"begin": 3078,
											"end": 3083,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "541"
										},
										{
											"begin": 3060,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "tag",
											"source": 14,
											"value": "640"
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3053,
											"end": 3058,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3050,
											"end": 3085,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "641"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3099,
											"end": 3100,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3097,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3089,
											"end": 3101,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "tag",
											"source": 14,
											"value": "641"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2987,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "tag",
											"source": 14,
											"value": "543"
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3161,
											"end": 3166,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3205,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3186,
											"end": 3206,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "643"
										},
										{
											"begin": 3242,
											"end": 3247,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "542"
										},
										{
											"begin": 3215,
											"end": 3248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "tag",
											"source": 14,
											"value": "643"
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3115,
											"end": 3254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "tag",
											"source": 14,
											"value": "544"
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3297,
											"end": 3304,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3331,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3315,
											"end": 3331,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3315,
											"end": 3331,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3260,
											"end": 3337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "tag",
											"source": 14,
											"value": "545"
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "646"
										},
										{
											"begin": 3434,
											"end": 3439,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "544"
										},
										{
											"begin": 3416,
											"end": 3440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "tag",
											"source": 14,
											"value": "646"
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3409,
											"end": 3414,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3406,
											"end": 3441,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "647"
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3455,
											"end": 3456,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3452,
											"end": 3453,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3445,
											"end": 3457,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "tag",
											"source": 14,
											"value": "647"
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3343,
											"end": 3465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "tag",
											"source": 14,
											"value": "546"
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3517,
											"end": 3522,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3555,
											"end": 3561,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3542,
											"end": 3562,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3533,
											"end": 3562,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3533,
											"end": 3562,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "649"
										},
										{
											"begin": 3598,
											"end": 3603,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "545"
										},
										{
											"begin": 3571,
											"end": 3604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "tag",
											"source": 14,
											"value": "649"
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3471,
											"end": 3610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "tag",
											"source": 14,
											"value": "63"
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3684,
											"end": 3690,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3698,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3741,
											"end": 3743,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3729,
											"end": 3738,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3716,
											"end": 3739,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3712,
											"end": 3744,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "651"
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "652"
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "528"
										},
										{
											"begin": 3747,
											"end": 3826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "tag",
											"source": 14,
											"value": "652"
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "tag",
											"source": 14,
											"value": "651"
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3867,
											"end": 3868,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "653"
										},
										{
											"begin": 3937,
											"end": 3944,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3928,
											"end": 3934,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3917,
											"end": 3926,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3913,
											"end": 3935,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "543"
										},
										{
											"begin": 3892,
											"end": 3945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "tag",
											"source": 14,
											"value": "653"
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3882,
											"end": 3945,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3882,
											"end": 3945,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3838,
											"end": 3955,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3994,
											"end": 3996,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "654"
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4056,
											"end": 4062,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4045,
											"end": 4054,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4041,
											"end": 4063,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "546"
										},
										{
											"begin": 4020,
											"end": 4073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "tag",
											"source": 14,
											"value": "654"
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4010,
											"end": 4073,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4010,
											"end": 4073,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3965,
											"end": 4083,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3616,
											"end": 4090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4096,
											"end": 4212,
											"name": "tag",
											"source": 14,
											"value": "547"
										},
										{
											"begin": 4096,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4166,
											"end": 4187,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "656"
										},
										{
											"begin": 4181,
											"end": 4186,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4166,
											"end": 4187,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "533"
										},
										{
											"begin": 4166,
											"end": 4187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4166,
											"end": 4187,
											"name": "tag",
											"source": 14,
											"value": "656"
										},
										{
											"begin": 4166,
											"end": 4187,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4159,
											"end": 4164,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4156,
											"end": 4188,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 4146,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "657"
										},
										{
											"begin": 4146,
											"end": 4206,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4202,
											"end": 4203,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4199,
											"end": 4200,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4192,
											"end": 4204,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4146,
											"end": 4206,
											"name": "tag",
											"source": 14,
											"value": "657"
										},
										{
											"begin": 4146,
											"end": 4206,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4096,
											"end": 4212,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4096,
											"end": 4212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4218,
											"end": 4351,
											"name": "tag",
											"source": 14,
											"value": "548"
										},
										{
											"begin": 4218,
											"end": 4351,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4261,
											"end": 4266,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4299,
											"end": 4305,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4286,
											"end": 4306,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 4277,
											"end": 4306,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4277,
											"end": 4306,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4315,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "659"
										},
										{
											"begin": 4339,
											"end": 4344,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4315,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "547"
										},
										{
											"begin": 4315,
											"end": 4345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4315,
											"end": 4345,
											"name": "tag",
											"source": 14,
											"value": "659"
										},
										{
											"begin": 4315,
											"end": 4345,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4218,
											"end": 4351,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4218,
											"end": 4351,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4218,
											"end": 4351,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4218,
											"end": 4351,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4218,
											"end": 4351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4357,
											"end": 4680,
											"name": "tag",
											"source": 14,
											"value": "68"
										},
										{
											"begin": 4357,
											"end": 4680,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4413,
											"end": 4419,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4462,
											"end": 4464,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4450,
											"end": 4459,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4441,
											"end": 4448,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4437,
											"end": 4460,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4433,
											"end": 4465,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4430,
											"end": 4549,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4430,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "661"
										},
										{
											"begin": 4430,
											"end": 4549,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4468,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "662"
										},
										{
											"begin": 4468,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "528"
										},
										{
											"begin": 4468,
											"end": 4547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4468,
											"end": 4547,
											"name": "tag",
											"source": 14,
											"value": "662"
										},
										{
											"begin": 4468,
											"end": 4547,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4430,
											"end": 4549,
											"name": "tag",
											"source": 14,
											"value": "661"
										},
										{
											"begin": 4430,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4588,
											"end": 4589,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4613,
											"end": 4663,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "663"
										},
										{
											"begin": 4655,
											"end": 4662,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4646,
											"end": 4652,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4635,
											"end": 4644,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4631,
											"end": 4653,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4663,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "548"
										},
										{
											"begin": 4613,
											"end": 4663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4663,
											"name": "tag",
											"source": 14,
											"value": "663"
										},
										{
											"begin": 4613,
											"end": 4663,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4603,
											"end": 4663,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4603,
											"end": 4663,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4559,
											"end": 4673,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4357,
											"end": 4680,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4357,
											"end": 4680,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4357,
											"end": 4680,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4357,
											"end": 4680,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4357,
											"end": 4680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4686,
											"end": 4804,
											"name": "tag",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 4686,
											"end": 4804,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4773,
											"end": 4797,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "665"
										},
										{
											"begin": 4791,
											"end": 4796,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4773,
											"end": 4797,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "544"
										},
										{
											"begin": 4773,
											"end": 4797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4773,
											"end": 4797,
											"name": "tag",
											"source": 14,
											"value": "665"
										},
										{
											"begin": 4773,
											"end": 4797,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4768,
											"end": 4771,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4761,
											"end": 4798,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4686,
											"end": 4804,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4686,
											"end": 4804,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4686,
											"end": 4804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4810,
											"end": 5032,
											"name": "tag",
											"source": 14,
											"value": "73"
										},
										{
											"begin": 4810,
											"end": 5032,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 4907,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4941,
											"end": 4943,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4930,
											"end": 4939,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4926,
											"end": 4944,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4918,
											"end": 4944,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4918,
											"end": 4944,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4954,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "667"
										},
										{
											"begin": 5022,
											"end": 5023,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5011,
											"end": 5020,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5007,
											"end": 5024,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4998,
											"end": 5004,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4954,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 4954,
											"end": 5025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4954,
											"end": 5025,
											"name": "tag",
											"source": 14,
											"value": "667"
										},
										{
											"begin": 4954,
											"end": 5025,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4810,
											"end": 5032,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4810,
											"end": 5032,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4810,
											"end": 5032,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4810,
											"end": 5032,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4810,
											"end": 5032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5038,
											"end": 5657,
											"name": "tag",
											"source": 14,
											"value": "76"
										},
										{
											"begin": 5038,
											"end": 5657,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5115,
											"end": 5121,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5123,
											"end": 5129,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5131,
											"end": 5137,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5180,
											"end": 5182,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 5168,
											"end": 5177,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5159,
											"end": 5166,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5155,
											"end": 5178,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5151,
											"end": 5183,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 5148,
											"end": 5267,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5148,
											"end": 5267,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "669"
										},
										{
											"begin": 5148,
											"end": 5267,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5186,
											"end": 5265,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "670"
										},
										{
											"begin": 5186,
											"end": 5265,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "528"
										},
										{
											"begin": 5186,
											"end": 5265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5186,
											"end": 5265,
											"name": "tag",
											"source": 14,
											"value": "670"
										},
										{
											"begin": 5186,
											"end": 5265,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5148,
											"end": 5267,
											"name": "tag",
											"source": 14,
											"value": "669"
										},
										{
											"begin": 5148,
											"end": 5267,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5306,
											"end": 5307,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5331,
											"end": 5384,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "671"
										},
										{
											"begin": 5376,
											"end": 5383,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5367,
											"end": 5373,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5356,
											"end": 5365,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 5352,
											"end": 5374,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5331,
											"end": 5384,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "543"
										},
										{
											"begin": 5331,
											"end": 5384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5331,
											"end": 5384,
											"name": "tag",
											"source": 14,
											"value": "671"
										},
										{
											"begin": 5331,
											"end": 5384,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5321,
											"end": 5384,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 5321,
											"end": 5384,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5277,
											"end": 5394,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5433,
											"end": 5435,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5459,
											"end": 5512,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "672"
										},
										{
											"begin": 5504,
											"end": 5511,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5495,
											"end": 5501,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5484,
											"end": 5493,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 5480,
											"end": 5502,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5459,
											"end": 5512,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "543"
										},
										{
											"begin": 5459,
											"end": 5512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5459,
											"end": 5512,
											"name": "tag",
											"source": 14,
											"value": "672"
										},
										{
											"begin": 5459,
											"end": 5512,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5449,
											"end": 5512,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5449,
											"end": 5512,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5404,
											"end": 5522,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5561,
											"end": 5563,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5587,
											"end": 5640,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "673"
										},
										{
											"begin": 5632,
											"end": 5639,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5623,
											"end": 5629,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5612,
											"end": 5621,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 5608,
											"end": 5630,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5587,
											"end": 5640,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "546"
										},
										{
											"begin": 5587,
											"end": 5640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5587,
											"end": 5640,
											"name": "tag",
											"source": 14,
											"value": "673"
										},
										{
											"begin": 5587,
											"end": 5640,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5577,
											"end": 5640,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5577,
											"end": 5640,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5532,
											"end": 5650,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5038,
											"end": 5657,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5038,
											"end": 5657,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5038,
											"end": 5657,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5038,
											"end": 5657,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5038,
											"end": 5657,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5038,
											"end": 5657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5663,
											"end": 5740,
											"name": "tag",
											"source": 14,
											"value": "550"
										},
										{
											"begin": 5663,
											"end": 5740,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5700,
											"end": 5707,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5729,
											"end": 5734,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5718,
											"end": 5734,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5718,
											"end": 5734,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5663,
											"end": 5740,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5663,
											"end": 5740,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5663,
											"end": 5740,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5663,
											"end": 5740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5746,
											"end": 5868,
											"name": "tag",
											"source": 14,
											"value": "551"
										},
										{
											"begin": 5746,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5819,
											"end": 5843,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "676"
										},
										{
											"begin": 5837,
											"end": 5842,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5819,
											"end": 5843,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "550"
										},
										{
											"begin": 5819,
											"end": 5843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5819,
											"end": 5843,
											"name": "tag",
											"source": 14,
											"value": "676"
										},
										{
											"begin": 5819,
											"end": 5843,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5812,
											"end": 5817,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5809,
											"end": 5844,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 5799,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "677"
										},
										{
											"begin": 5799,
											"end": 5862,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5858,
											"end": 5859,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5855,
											"end": 5856,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5848,
											"end": 5860,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5799,
											"end": 5862,
											"name": "tag",
											"source": 14,
											"value": "677"
										},
										{
											"begin": 5799,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5746,
											"end": 5868,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5746,
											"end": 5868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5874,
											"end": 6013,
											"name": "tag",
											"source": 14,
											"value": "552"
										},
										{
											"begin": 5874,
											"end": 6013,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5920,
											"end": 5925,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5958,
											"end": 5964,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5945,
											"end": 5965,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 5936,
											"end": 5965,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5936,
											"end": 5965,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5974,
											"end": 6007,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "679"
										},
										{
											"begin": 6001,
											"end": 6006,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5974,
											"end": 6007,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "551"
										},
										{
											"begin": 5974,
											"end": 6007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5974,
											"end": 6007,
											"name": "tag",
											"source": 14,
											"value": "679"
										},
										{
											"begin": 5974,
											"end": 6007,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5874,
											"end": 6013,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5874,
											"end": 6013,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5874,
											"end": 6013,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5874,
											"end": 6013,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5874,
											"end": 6013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6019,
											"end": 6348,
											"name": "tag",
											"source": 14,
											"value": "81"
										},
										{
											"begin": 6019,
											"end": 6348,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6078,
											"end": 6084,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6127,
											"end": 6129,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6115,
											"end": 6124,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6106,
											"end": 6113,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6102,
											"end": 6125,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6098,
											"end": 6130,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 6095,
											"end": 6214,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6095,
											"end": 6214,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "681"
										},
										{
											"begin": 6095,
											"end": 6214,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6212,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "682"
										},
										{
											"begin": 6133,
											"end": 6212,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "528"
										},
										{
											"begin": 6133,
											"end": 6212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6133,
											"end": 6212,
											"name": "tag",
											"source": 14,
											"value": "682"
										},
										{
											"begin": 6133,
											"end": 6212,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6095,
											"end": 6214,
											"name": "tag",
											"source": 14,
											"value": "681"
										},
										{
											"begin": 6095,
											"end": 6214,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6253,
											"end": 6254,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6278,
											"end": 6331,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "683"
										},
										{
											"begin": 6323,
											"end": 6330,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6314,
											"end": 6320,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6303,
											"end": 6312,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6299,
											"end": 6321,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6278,
											"end": 6331,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "552"
										},
										{
											"begin": 6278,
											"end": 6331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6278,
											"end": 6331,
											"name": "tag",
											"source": 14,
											"value": "683"
										},
										{
											"begin": 6278,
											"end": 6331,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6268,
											"end": 6331,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6268,
											"end": 6331,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6224,
											"end": 6341,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6019,
											"end": 6348,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6019,
											"end": 6348,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6019,
											"end": 6348,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6019,
											"end": 6348,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6019,
											"end": 6348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6354,
											"end": 6472,
											"name": "tag",
											"source": 14,
											"value": "553"
										},
										{
											"begin": 6354,
											"end": 6472,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6441,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "685"
										},
										{
											"begin": 6459,
											"end": 6464,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6441,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "550"
										},
										{
											"begin": 6441,
											"end": 6465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6441,
											"end": 6465,
											"name": "tag",
											"source": 14,
											"value": "685"
										},
										{
											"begin": 6441,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6436,
											"end": 6439,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6429,
											"end": 6466,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6354,
											"end": 6472,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6354,
											"end": 6472,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6354,
											"end": 6472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6478,
											"end": 6700,
											"name": "tag",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 6478,
											"end": 6700,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6571,
											"end": 6575,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6609,
											"end": 6611,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6598,
											"end": 6607,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6594,
											"end": 6612,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6586,
											"end": 6612,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6586,
											"end": 6612,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6622,
											"end": 6693,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "687"
										},
										{
											"begin": 6690,
											"end": 6691,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6679,
											"end": 6688,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6675,
											"end": 6692,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6666,
											"end": 6672,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6622,
											"end": 6693,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "553"
										},
										{
											"begin": 6622,
											"end": 6693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6622,
											"end": 6693,
											"name": "tag",
											"source": 14,
											"value": "687"
										},
										{
											"begin": 6622,
											"end": 6693,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6478,
											"end": 6700,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6478,
											"end": 6700,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6478,
											"end": 6700,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6478,
											"end": 6700,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6478,
											"end": 6700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6706,
											"end": 7180,
											"name": "tag",
											"source": 14,
											"value": "87"
										},
										{
											"begin": 6706,
											"end": 7180,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6774,
											"end": 6780,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6831,
											"end": 6833,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6819,
											"end": 6828,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6810,
											"end": 6817,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6806,
											"end": 6829,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6802,
											"end": 6834,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 6799,
											"end": 6918,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6799,
											"end": 6918,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "689"
										},
										{
											"begin": 6799,
											"end": 6918,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6837,
											"end": 6916,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "690"
										},
										{
											"begin": 6837,
											"end": 6916,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "528"
										},
										{
											"begin": 6837,
											"end": 6916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6837,
											"end": 6916,
											"name": "tag",
											"source": 14,
											"value": "690"
										},
										{
											"begin": 6837,
											"end": 6916,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6799,
											"end": 6918,
											"name": "tag",
											"source": 14,
											"value": "689"
										},
										{
											"begin": 6799,
											"end": 6918,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6957,
											"end": 6958,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6982,
											"end": 7035,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "691"
										},
										{
											"begin": 7027,
											"end": 7034,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7018,
											"end": 7024,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7007,
											"end": 7016,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 7003,
											"end": 7025,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6982,
											"end": 7035,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "552"
										},
										{
											"begin": 6982,
											"end": 7035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6982,
											"end": 7035,
											"name": "tag",
											"source": 14,
											"value": "691"
										},
										{
											"begin": 6982,
											"end": 7035,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6972,
											"end": 7035,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6972,
											"end": 7035,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6928,
											"end": 7045,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7084,
											"end": 7086,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7110,
											"end": 7163,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "692"
										},
										{
											"begin": 7155,
											"end": 7162,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7146,
											"end": 7152,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7135,
											"end": 7144,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 7131,
											"end": 7153,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7110,
											"end": 7163,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "543"
										},
										{
											"begin": 7110,
											"end": 7163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7110,
											"end": 7163,
											"name": "tag",
											"source": 14,
											"value": "692"
										},
										{
											"begin": 7110,
											"end": 7163,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7100,
											"end": 7163,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7100,
											"end": 7163,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7055,
											"end": 7173,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6706,
											"end": 7180,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6706,
											"end": 7180,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6706,
											"end": 7180,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6706,
											"end": 7180,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6706,
											"end": 7180,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6706,
											"end": 7180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7186,
											"end": 7272,
											"name": "tag",
											"source": 14,
											"value": "554"
										},
										{
											"begin": 7186,
											"end": 7272,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7221,
											"end": 7228,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7261,
											"end": 7265,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 7254,
											"end": 7259,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7250,
											"end": 7266,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 7239,
											"end": 7266,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7239,
											"end": 7266,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7186,
											"end": 7272,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7186,
											"end": 7272,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7186,
											"end": 7272,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7186,
											"end": 7272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7278,
											"end": 7390,
											"name": "tag",
											"source": 14,
											"value": "555"
										},
										{
											"begin": 7278,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7361,
											"end": 7383,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "695"
										},
										{
											"begin": 7377,
											"end": 7382,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7361,
											"end": 7383,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "554"
										},
										{
											"begin": 7361,
											"end": 7383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7361,
											"end": 7383,
											"name": "tag",
											"source": 14,
											"value": "695"
										},
										{
											"begin": 7361,
											"end": 7383,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7356,
											"end": 7359,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7349,
											"end": 7384,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7278,
											"end": 7390,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7278,
											"end": 7390,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7278,
											"end": 7390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7396,
											"end": 7610,
											"name": "tag",
											"source": 14,
											"value": "92"
										},
										{
											"begin": 7396,
											"end": 7610,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7485,
											"end": 7489,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7523,
											"end": 7525,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7512,
											"end": 7521,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7508,
											"end": 7526,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7500,
											"end": 7526,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7500,
											"end": 7526,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7536,
											"end": 7603,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "697"
										},
										{
											"begin": 7600,
											"end": 7601,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7589,
											"end": 7598,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7585,
											"end": 7602,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7576,
											"end": 7582,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7536,
											"end": 7603,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "555"
										},
										{
											"begin": 7536,
											"end": 7603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7536,
											"end": 7603,
											"name": "tag",
											"source": 14,
											"value": "697"
										},
										{
											"begin": 7536,
											"end": 7603,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7396,
											"end": 7610,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7396,
											"end": 7610,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7396,
											"end": 7610,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7396,
											"end": 7610,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7396,
											"end": 7610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7616,
											"end": 8084,
											"name": "tag",
											"source": 14,
											"value": "98"
										},
										{
											"begin": 7616,
											"end": 8084,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7681,
											"end": 7687,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7689,
											"end": 7695,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7738,
											"end": 7740,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7726,
											"end": 7735,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7717,
											"end": 7724,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7713,
											"end": 7736,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7709,
											"end": 7741,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 7706,
											"end": 7825,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7706,
											"end": 7825,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "699"
										},
										{
											"begin": 7706,
											"end": 7825,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7744,
											"end": 7823,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "700"
										},
										{
											"begin": 7744,
											"end": 7823,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "528"
										},
										{
											"begin": 7744,
											"end": 7823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7744,
											"end": 7823,
											"name": "tag",
											"source": 14,
											"value": "700"
										},
										{
											"begin": 7744,
											"end": 7823,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7706,
											"end": 7825,
											"name": "tag",
											"source": 14,
											"value": "699"
										},
										{
											"begin": 7706,
											"end": 7825,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7889,
											"end": 7942,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "701"
										},
										{
											"begin": 7934,
											"end": 7941,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7925,
											"end": 7931,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7914,
											"end": 7923,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 7910,
											"end": 7932,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7889,
											"end": 7942,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "543"
										},
										{
											"begin": 7889,
											"end": 7942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7889,
											"end": 7942,
											"name": "tag",
											"source": 14,
											"value": "701"
										},
										{
											"begin": 7889,
											"end": 7942,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7879,
											"end": 7942,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7879,
											"end": 7942,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7835,
											"end": 7952,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7991,
											"end": 7993,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8017,
											"end": 8067,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "702"
										},
										{
											"begin": 8059,
											"end": 8066,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8050,
											"end": 8056,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8039,
											"end": 8048,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 8035,
											"end": 8057,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8017,
											"end": 8067,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "548"
										},
										{
											"begin": 8017,
											"end": 8067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8017,
											"end": 8067,
											"name": "tag",
											"source": 14,
											"value": "702"
										},
										{
											"begin": 8017,
											"end": 8067,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8007,
											"end": 8067,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8007,
											"end": 8067,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7962,
											"end": 8077,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7616,
											"end": 8084,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7616,
											"end": 8084,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7616,
											"end": 8084,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7616,
											"end": 8084,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7616,
											"end": 8084,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7616,
											"end": 8084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8090,
											"end": 8201,
											"name": "tag",
											"source": 14,
											"value": "556"
										},
										{
											"begin": 8090,
											"end": 8201,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8142,
											"end": 8149,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8171,
											"end": 8195,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "704"
										},
										{
											"begin": 8189,
											"end": 8194,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8171,
											"end": 8195,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "541"
										},
										{
											"begin": 8171,
											"end": 8195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8171,
											"end": 8195,
											"name": "tag",
											"source": 14,
											"value": "704"
										},
										{
											"begin": 8171,
											"end": 8195,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8160,
											"end": 8195,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8160,
											"end": 8195,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8090,
											"end": 8201,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8090,
											"end": 8201,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8090,
											"end": 8201,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8090,
											"end": 8201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8207,
											"end": 8359,
											"name": "tag",
											"source": 14,
											"value": "557"
										},
										{
											"begin": 8207,
											"end": 8359,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8295,
											"end": 8334,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "706"
										},
										{
											"begin": 8328,
											"end": 8333,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8295,
											"end": 8334,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "556"
										},
										{
											"begin": 8295,
											"end": 8334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8295,
											"end": 8334,
											"name": "tag",
											"source": 14,
											"value": "706"
										},
										{
											"begin": 8295,
											"end": 8334,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8288,
											"end": 8293,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8285,
											"end": 8335,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 8275,
											"end": 8353,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "707"
										},
										{
											"begin": 8275,
											"end": 8353,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8349,
											"end": 8350,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8346,
											"end": 8347,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8339,
											"end": 8351,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 8275,
											"end": 8353,
											"name": "tag",
											"source": 14,
											"value": "707"
										},
										{
											"begin": 8275,
											"end": 8353,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8207,
											"end": 8359,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8207,
											"end": 8359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8365,
											"end": 8534,
											"name": "tag",
											"source": 14,
											"value": "558"
										},
										{
											"begin": 8365,
											"end": 8534,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8426,
											"end": 8431,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8464,
											"end": 8470,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8451,
											"end": 8471,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 8442,
											"end": 8471,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8442,
											"end": 8471,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8480,
											"end": 8528,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "709"
										},
										{
											"begin": 8522,
											"end": 8527,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8480,
											"end": 8528,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "557"
										},
										{
											"begin": 8480,
											"end": 8528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8480,
											"end": 8528,
											"name": "tag",
											"source": 14,
											"value": "709"
										},
										{
											"begin": 8480,
											"end": 8528,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8365,
											"end": 8534,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8365,
											"end": 8534,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8365,
											"end": 8534,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8365,
											"end": 8534,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8365,
											"end": 8534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8540,
											"end": 9189,
											"name": "tag",
											"source": 14,
											"value": "102"
										},
										{
											"begin": 8540,
											"end": 9189,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8632,
											"end": 8638,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8640,
											"end": 8646,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8648,
											"end": 8654,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8697,
											"end": 8699,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 8685,
											"end": 8694,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8676,
											"end": 8683,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 8672,
											"end": 8695,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 8668,
											"end": 8700,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 8665,
											"end": 8784,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8665,
											"end": 8784,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "711"
										},
										{
											"begin": 8665,
											"end": 8784,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8703,
											"end": 8782,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "712"
										},
										{
											"begin": 8703,
											"end": 8782,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "528"
										},
										{
											"begin": 8703,
											"end": 8782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8703,
											"end": 8782,
											"name": "tag",
											"source": 14,
											"value": "712"
										},
										{
											"begin": 8703,
											"end": 8782,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8665,
											"end": 8784,
											"name": "tag",
											"source": 14,
											"value": "711"
										},
										{
											"begin": 8665,
											"end": 8784,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8823,
											"end": 8824,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8848,
											"end": 8916,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "713"
										},
										{
											"begin": 8908,
											"end": 8915,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 8899,
											"end": 8905,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8888,
											"end": 8897,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 8884,
											"end": 8906,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8848,
											"end": 8916,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "558"
										},
										{
											"begin": 8848,
											"end": 8916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8848,
											"end": 8916,
											"name": "tag",
											"source": 14,
											"value": "713"
										},
										{
											"begin": 8848,
											"end": 8916,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8838,
											"end": 8916,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 8838,
											"end": 8916,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8794,
											"end": 8926,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8965,
											"end": 8967,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8991,
											"end": 9044,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "714"
										},
										{
											"begin": 9036,
											"end": 9043,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 9027,
											"end": 9033,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9016,
											"end": 9025,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 9012,
											"end": 9034,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8991,
											"end": 9044,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "543"
										},
										{
											"begin": 8991,
											"end": 9044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8991,
											"end": 9044,
											"name": "tag",
											"source": 14,
											"value": "714"
										},
										{
											"begin": 8991,
											"end": 9044,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8981,
											"end": 9044,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8981,
											"end": 9044,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8936,
											"end": 9054,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9093,
											"end": 9095,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 9119,
											"end": 9172,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "715"
										},
										{
											"begin": 9164,
											"end": 9171,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 9155,
											"end": 9161,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9144,
											"end": 9153,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 9140,
											"end": 9162,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9119,
											"end": 9172,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "546"
										},
										{
											"begin": 9119,
											"end": 9172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9119,
											"end": 9172,
											"name": "tag",
											"source": 14,
											"value": "715"
										},
										{
											"begin": 9119,
											"end": 9172,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9109,
											"end": 9172,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9109,
											"end": 9172,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9064,
											"end": 9182,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8540,
											"end": 9189,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8540,
											"end": 9189,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8540,
											"end": 9189,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8540,
											"end": 9189,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8540,
											"end": 9189,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8540,
											"end": 9189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9195,
											"end": 9524,
											"name": "tag",
											"source": 14,
											"value": "106"
										},
										{
											"begin": 9195,
											"end": 9524,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9254,
											"end": 9260,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9303,
											"end": 9305,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9291,
											"end": 9300,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9282,
											"end": 9289,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9278,
											"end": 9301,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 9274,
											"end": 9306,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 9271,
											"end": 9390,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9271,
											"end": 9390,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "717"
										},
										{
											"begin": 9271,
											"end": 9390,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9309,
											"end": 9388,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "718"
										},
										{
											"begin": 9309,
											"end": 9388,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "528"
										},
										{
											"begin": 9309,
											"end": 9388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9309,
											"end": 9388,
											"name": "tag",
											"source": 14,
											"value": "718"
										},
										{
											"begin": 9309,
											"end": 9388,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9271,
											"end": 9390,
											"name": "tag",
											"source": 14,
											"value": "717"
										},
										{
											"begin": 9271,
											"end": 9390,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9429,
											"end": 9430,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9454,
											"end": 9507,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "719"
										},
										{
											"begin": 9499,
											"end": 9506,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9490,
											"end": 9496,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9479,
											"end": 9488,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9475,
											"end": 9497,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9454,
											"end": 9507,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "546"
										},
										{
											"begin": 9454,
											"end": 9507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9454,
											"end": 9507,
											"name": "tag",
											"source": 14,
											"value": "719"
										},
										{
											"begin": 9454,
											"end": 9507,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9444,
											"end": 9507,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9444,
											"end": 9507,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9400,
											"end": 9517,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9195,
											"end": 9524,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9195,
											"end": 9524,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9195,
											"end": 9524,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9195,
											"end": 9524,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9195,
											"end": 9524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9530,
											"end": 9634,
											"name": "tag",
											"source": 14,
											"value": "559"
										},
										{
											"begin": 9530,
											"end": 9634,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9575,
											"end": 9582,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9604,
											"end": 9628,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "721"
										},
										{
											"begin": 9622,
											"end": 9627,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9604,
											"end": 9628,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "540"
										},
										{
											"begin": 9604,
											"end": 9628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9604,
											"end": 9628,
											"name": "tag",
											"source": 14,
											"value": "721"
										},
										{
											"begin": 9604,
											"end": 9628,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9593,
											"end": 9628,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9593,
											"end": 9628,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9530,
											"end": 9634,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9530,
											"end": 9634,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9530,
											"end": 9634,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9530,
											"end": 9634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9640,
											"end": 9778,
											"name": "tag",
											"source": 14,
											"value": "560"
										},
										{
											"begin": 9640,
											"end": 9778,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9721,
											"end": 9753,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "723"
										},
										{
											"begin": 9747,
											"end": 9752,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9721,
											"end": 9753,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "559"
										},
										{
											"begin": 9721,
											"end": 9753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9721,
											"end": 9753,
											"name": "tag",
											"source": 14,
											"value": "723"
										},
										{
											"begin": 9721,
											"end": 9753,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9714,
											"end": 9719,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9711,
											"end": 9754,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 9701,
											"end": 9772,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "724"
										},
										{
											"begin": 9701,
											"end": 9772,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9768,
											"end": 9769,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9765,
											"end": 9766,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9758,
											"end": 9770,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 9701,
											"end": 9772,
											"name": "tag",
											"source": 14,
											"value": "724"
										},
										{
											"begin": 9701,
											"end": 9772,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9640,
											"end": 9778,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9640,
											"end": 9778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9784,
											"end": 9939,
											"name": "tag",
											"source": 14,
											"value": "561"
										},
										{
											"begin": 9784,
											"end": 9939,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9838,
											"end": 9843,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9876,
											"end": 9882,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9863,
											"end": 9883,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 9854,
											"end": 9883,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9854,
											"end": 9883,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9892,
											"end": 9933,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "726"
										},
										{
											"begin": 9927,
											"end": 9932,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9892,
											"end": 9933,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "560"
										},
										{
											"begin": 9892,
											"end": 9933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9892,
											"end": 9933,
											"name": "tag",
											"source": 14,
											"value": "726"
										},
										{
											"begin": 9892,
											"end": 9933,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9784,
											"end": 9939,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9784,
											"end": 9939,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9784,
											"end": 9939,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9784,
											"end": 9939,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9784,
											"end": 9939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9945,
											"end": 10435,
											"name": "tag",
											"source": 14,
											"value": "113"
										},
										{
											"begin": 9945,
											"end": 10435,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10021,
											"end": 10027,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10029,
											"end": 10035,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10078,
											"end": 10080,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10075,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10057,
											"end": 10064,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 10053,
											"end": 10076,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 10049,
											"end": 10081,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 10046,
											"end": 10165,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10046,
											"end": 10165,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "728"
										},
										{
											"begin": 10046,
											"end": 10165,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10084,
											"end": 10163,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "729"
										},
										{
											"begin": 10084,
											"end": 10163,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "528"
										},
										{
											"begin": 10084,
											"end": 10163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10084,
											"end": 10163,
											"name": "tag",
											"source": 14,
											"value": "729"
										},
										{
											"begin": 10084,
											"end": 10163,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10046,
											"end": 10165,
											"name": "tag",
											"source": 14,
											"value": "728"
										},
										{
											"begin": 10046,
											"end": 10165,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10204,
											"end": 10205,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10229,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "730"
										},
										{
											"begin": 10282,
											"end": 10289,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 10273,
											"end": 10279,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10262,
											"end": 10271,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10258,
											"end": 10280,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10229,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "561"
										},
										{
											"begin": 10229,
											"end": 10290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10229,
											"end": 10290,
											"name": "tag",
											"source": 14,
											"value": "730"
										},
										{
											"begin": 10229,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10219,
											"end": 10290,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10219,
											"end": 10290,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10175,
											"end": 10300,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10339,
											"end": 10341,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10365,
											"end": 10418,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "731"
										},
										{
											"begin": 10410,
											"end": 10417,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 10401,
											"end": 10407,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10390,
											"end": 10399,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10386,
											"end": 10408,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10365,
											"end": 10418,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "546"
										},
										{
											"begin": 10365,
											"end": 10418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10365,
											"end": 10418,
											"name": "tag",
											"source": 14,
											"value": "731"
										},
										{
											"begin": 10365,
											"end": 10418,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10355,
											"end": 10418,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10355,
											"end": 10418,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10310,
											"end": 10428,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9945,
											"end": 10435,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9945,
											"end": 10435,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9945,
											"end": 10435,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9945,
											"end": 10435,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9945,
											"end": 10435,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9945,
											"end": 10435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10441,
											"end": 10770,
											"name": "tag",
											"source": 14,
											"value": "129"
										},
										{
											"begin": 10441,
											"end": 10770,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10500,
											"end": 10506,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10549,
											"end": 10551,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10537,
											"end": 10546,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10528,
											"end": 10535,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10524,
											"end": 10547,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 10520,
											"end": 10552,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 10517,
											"end": 10636,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10517,
											"end": 10636,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "733"
										},
										{
											"begin": 10517,
											"end": 10636,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10555,
											"end": 10634,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "734"
										},
										{
											"begin": 10555,
											"end": 10634,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "528"
										},
										{
											"begin": 10555,
											"end": 10634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10555,
											"end": 10634,
											"name": "tag",
											"source": 14,
											"value": "734"
										},
										{
											"begin": 10555,
											"end": 10634,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10517,
											"end": 10636,
											"name": "tag",
											"source": 14,
											"value": "733"
										},
										{
											"begin": 10517,
											"end": 10636,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10675,
											"end": 10676,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10700,
											"end": 10753,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "735"
										},
										{
											"begin": 10745,
											"end": 10752,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10736,
											"end": 10742,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10725,
											"end": 10734,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 10721,
											"end": 10743,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10700,
											"end": 10753,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "543"
										},
										{
											"begin": 10700,
											"end": 10753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10700,
											"end": 10753,
											"name": "tag",
											"source": 14,
											"value": "735"
										},
										{
											"begin": 10700,
											"end": 10753,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10690,
											"end": 10753,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10690,
											"end": 10753,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10646,
											"end": 10763,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10441,
											"end": 10770,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10441,
											"end": 10770,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10441,
											"end": 10770,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10441,
											"end": 10770,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10441,
											"end": 10770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10776,
											"end": 11250,
											"name": "tag",
											"source": 14,
											"value": "185"
										},
										{
											"begin": 10776,
											"end": 11250,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10844,
											"end": 10850,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10852,
											"end": 10858,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10901,
											"end": 10903,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10889,
											"end": 10898,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10880,
											"end": 10887,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 10876,
											"end": 10899,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 10872,
											"end": 10904,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 10869,
											"end": 10988,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10869,
											"end": 10988,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "737"
										},
										{
											"begin": 10869,
											"end": 10988,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10907,
											"end": 10986,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "738"
										},
										{
											"begin": 10907,
											"end": 10986,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "528"
										},
										{
											"begin": 10907,
											"end": 10986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10907,
											"end": 10986,
											"name": "tag",
											"source": 14,
											"value": "738"
										},
										{
											"begin": 10907,
											"end": 10986,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10869,
											"end": 10988,
											"name": "tag",
											"source": 14,
											"value": "737"
										},
										{
											"begin": 10869,
											"end": 10988,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11027,
											"end": 11028,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11105,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "739"
										},
										{
											"begin": 11097,
											"end": 11104,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 11088,
											"end": 11094,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11077,
											"end": 11086,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 11073,
											"end": 11095,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11052,
											"end": 11105,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "543"
										},
										{
											"begin": 11052,
											"end": 11105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11052,
											"end": 11105,
											"name": "tag",
											"source": 14,
											"value": "739"
										},
										{
											"begin": 11052,
											"end": 11105,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11042,
											"end": 11105,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11042,
											"end": 11105,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10998,
											"end": 11115,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11154,
											"end": 11156,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11180,
											"end": 11233,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "740"
										},
										{
											"begin": 11225,
											"end": 11232,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 11216,
											"end": 11222,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11205,
											"end": 11214,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 11201,
											"end": 11223,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11180,
											"end": 11233,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "543"
										},
										{
											"begin": 11180,
											"end": 11233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11180,
											"end": 11233,
											"name": "tag",
											"source": 14,
											"value": "740"
										},
										{
											"begin": 11180,
											"end": 11233,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11170,
											"end": 11233,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11170,
											"end": 11233,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11125,
											"end": 11243,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10776,
											"end": 11250,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10776,
											"end": 11250,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10776,
											"end": 11250,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10776,
											"end": 11250,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10776,
											"end": 11250,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10776,
											"end": 11250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11256,
											"end": 11374,
											"name": "tag",
											"source": 14,
											"value": "562"
										},
										{
											"begin": 11256,
											"end": 11374,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11343,
											"end": 11367,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "742"
										},
										{
											"begin": 11361,
											"end": 11366,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11343,
											"end": 11367,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "541"
										},
										{
											"begin": 11343,
											"end": 11367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11343,
											"end": 11367,
											"name": "tag",
											"source": 14,
											"value": "742"
										},
										{
											"begin": 11343,
											"end": 11367,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11338,
											"end": 11341,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11331,
											"end": 11368,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11256,
											"end": 11374,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11256,
											"end": 11374,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11256,
											"end": 11374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11380,
											"end": 11602,
											"name": "tag",
											"source": 14,
											"value": "200"
										},
										{
											"begin": 11380,
											"end": 11602,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11473,
											"end": 11477,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11511,
											"end": 11513,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11500,
											"end": 11509,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11496,
											"end": 11514,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11488,
											"end": 11514,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11488,
											"end": 11514,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11524,
											"end": 11595,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "744"
										},
										{
											"begin": 11592,
											"end": 11593,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11581,
											"end": 11590,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11577,
											"end": 11594,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11568,
											"end": 11574,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11524,
											"end": 11595,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "562"
										},
										{
											"begin": 11524,
											"end": 11595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11524,
											"end": 11595,
											"name": "tag",
											"source": 14,
											"value": "744"
										},
										{
											"begin": 11524,
											"end": 11595,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11380,
											"end": 11602,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11380,
											"end": 11602,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11380,
											"end": 11602,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11380,
											"end": 11602,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11380,
											"end": 11602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11608,
											"end": 11788,
											"name": "tag",
											"source": 14,
											"value": "563"
										},
										{
											"begin": 11608,
											"end": 11788,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11656,
											"end": 11733,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11653,
											"end": 11654,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11646,
											"end": 11734,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11753,
											"end": 11757,
											"name": "PUSH",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 11750,
											"end": 11751,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 11743,
											"end": 11758,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11777,
											"end": 11781,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 11774,
											"end": 11775,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11767,
											"end": 11782,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 11794,
											"end": 12114,
											"name": "tag",
											"source": 14,
											"value": "207"
										},
										{
											"begin": 11794,
											"end": 12114,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11838,
											"end": 11844,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11875,
											"end": 11876,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 11869,
											"end": 11873,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11865,
											"end": 11877,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 11855,
											"end": 11877,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11855,
											"end": 11877,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11922,
											"end": 11923,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 11916,
											"end": 11920,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11912,
											"end": 11924,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11943,
											"end": 11961,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11933,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "747"
										},
										{
											"begin": 11933,
											"end": 12014,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11999,
											"end": 12003,
											"name": "PUSH",
											"source": 14,
											"value": "7F"
										},
										{
											"begin": 11991,
											"end": 11997,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11987,
											"end": 12004,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11977,
											"end": 12004,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11977,
											"end": 12004,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11933,
											"end": 12014,
											"name": "tag",
											"source": 14,
											"value": "747"
										},
										{
											"begin": 11933,
											"end": 12014,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12061,
											"end": 12063,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12053,
											"end": 12059,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12050,
											"end": 12064,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12030,
											"end": 12048,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12027,
											"end": 12065,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 12024,
											"end": 12108,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "748"
										},
										{
											"begin": 12024,
											"end": 12108,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12080,
											"end": 12098,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "749"
										},
										{
											"begin": 12080,
											"end": 12098,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "563"
										},
										{
											"begin": 12080,
											"end": 12098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12080,
											"end": 12098,
											"name": "tag",
											"source": 14,
											"value": "749"
										},
										{
											"begin": 12080,
											"end": 12098,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12024,
											"end": 12108,
											"name": "tag",
											"source": 14,
											"value": "748"
										},
										{
											"begin": 12024,
											"end": 12108,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11845,
											"end": 12114,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11794,
											"end": 12114,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11794,
											"end": 12114,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11794,
											"end": 12114,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11794,
											"end": 12114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12120,
											"end": 12290,
											"name": "tag",
											"source": 14,
											"value": "564"
										},
										{
											"begin": 12120,
											"end": 12290,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12260,
											"end": 12282,
											"name": "PUSH",
											"source": 14,
											"value": "436F6E74726163743A204E6565642041646D696E000000000000000000000000"
										},
										{
											"begin": 12256,
											"end": 12257,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12248,
											"end": 12254,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12244,
											"end": 12258,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12237,
											"end": 12283,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12120,
											"end": 12290,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12120,
											"end": 12290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12296,
											"end": 12662,
											"name": "tag",
											"source": 14,
											"value": "565"
										},
										{
											"begin": 12296,
											"end": 12662,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12438,
											"end": 12441,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12459,
											"end": 12526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "752"
										},
										{
											"begin": 12523,
											"end": 12525,
											"name": "PUSH",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 12518,
											"end": 12521,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12459,
											"end": 12526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 12459,
											"end": 12526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12459,
											"end": 12526,
											"name": "tag",
											"source": 14,
											"value": "752"
										},
										{
											"begin": 12459,
											"end": 12526,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12452,
											"end": 12526,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12452,
											"end": 12526,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12535,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "753"
										},
										{
											"begin": 12624,
											"end": 12627,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12535,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "564"
										},
										{
											"begin": 12535,
											"end": 12628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12535,
											"end": 12628,
											"name": "tag",
											"source": 14,
											"value": "753"
										},
										{
											"begin": 12535,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12653,
											"end": 12655,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12648,
											"end": 12651,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12644,
											"end": 12656,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12637,
											"end": 12656,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12637,
											"end": 12656,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12296,
											"end": 12662,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12296,
											"end": 12662,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12296,
											"end": 12662,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12296,
											"end": 12662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12668,
											"end": 13087,
											"name": "tag",
											"source": 14,
											"value": "222"
										},
										{
											"begin": 12668,
											"end": 13087,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12834,
											"end": 12838,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12872,
											"end": 12874,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12861,
											"end": 12870,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12857,
											"end": 12875,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12849,
											"end": 12875,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12849,
											"end": 12875,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12921,
											"end": 12930,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12915,
											"end": 12919,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12911,
											"end": 12931,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 12907,
											"end": 12908,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12896,
											"end": 12905,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12892,
											"end": 12909,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12885,
											"end": 12932,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12949,
											"end": 13080,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "755"
										},
										{
											"begin": 13075,
											"end": 13079,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12949,
											"end": 13080,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "565"
										},
										{
											"begin": 12949,
											"end": 13080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12949,
											"end": 13080,
											"name": "tag",
											"source": 14,
											"value": "755"
										},
										{
											"begin": 12949,
											"end": 13080,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12941,
											"end": 13080,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12941,
											"end": 13080,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12668,
											"end": 13087,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12668,
											"end": 13087,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12668,
											"end": 13087,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12668,
											"end": 13087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13093,
											"end": 13425,
											"name": "tag",
											"source": 14,
											"value": "226"
										},
										{
											"begin": 13093,
											"end": 13425,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13214,
											"end": 13218,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13252,
											"end": 13254,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 13241,
											"end": 13250,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13237,
											"end": 13255,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13229,
											"end": 13255,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13229,
											"end": 13255,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13265,
											"end": 13336,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "757"
										},
										{
											"begin": 13333,
											"end": 13334,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13322,
											"end": 13331,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13318,
											"end": 13335,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13309,
											"end": 13315,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 13265,
											"end": 13336,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 13265,
											"end": 13336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13265,
											"end": 13336,
											"name": "tag",
											"source": 14,
											"value": "757"
										},
										{
											"begin": 13265,
											"end": 13336,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "758"
										},
										{
											"begin": 13414,
											"end": 13416,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13403,
											"end": 13412,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13399,
											"end": 13417,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13390,
											"end": 13396,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "562"
										},
										{
											"begin": 13346,
											"end": 13418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "tag",
											"source": 14,
											"value": "758"
										},
										{
											"begin": 13346,
											"end": 13418,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13093,
											"end": 13425,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 13093,
											"end": 13425,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13093,
											"end": 13425,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13093,
											"end": 13425,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13093,
											"end": 13425,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13093,
											"end": 13425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13431,
											"end": 13591,
											"name": "tag",
											"source": 14,
											"value": "566"
										},
										{
											"begin": 13431,
											"end": 13591,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13571,
											"end": 13583,
											"name": "PUSH",
											"source": 14,
											"value": "4E6565642041646D696E00000000000000000000000000000000000000000000"
										},
										{
											"begin": 13567,
											"end": 13568,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13559,
											"end": 13565,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13555,
											"end": 13569,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13548,
											"end": 13584,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13431,
											"end": 13591,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13431,
											"end": 13591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13597,
											"end": 13963,
											"name": "tag",
											"source": 14,
											"value": "567"
										},
										{
											"begin": 13597,
											"end": 13963,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13739,
											"end": 13742,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13760,
											"end": 13827,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "761"
										},
										{
											"begin": 13824,
											"end": 13826,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 13819,
											"end": 13822,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13760,
											"end": 13827,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 13760,
											"end": 13827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13760,
											"end": 13827,
											"name": "tag",
											"source": 14,
											"value": "761"
										},
										{
											"begin": 13760,
											"end": 13827,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13753,
											"end": 13827,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13753,
											"end": 13827,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13836,
											"end": 13929,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "762"
										},
										{
											"begin": 13925,
											"end": 13928,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13836,
											"end": 13929,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "566"
										},
										{
											"begin": 13836,
											"end": 13929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13836,
											"end": 13929,
											"name": "tag",
											"source": 14,
											"value": "762"
										},
										{
											"begin": 13836,
											"end": 13929,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13954,
											"end": 13956,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13949,
											"end": 13952,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13945,
											"end": 13957,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13938,
											"end": 13957,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13938,
											"end": 13957,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13597,
											"end": 13963,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13597,
											"end": 13963,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13597,
											"end": 13963,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13597,
											"end": 13963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13969,
											"end": 14388,
											"name": "tag",
											"source": 14,
											"value": "262"
										},
										{
											"begin": 13969,
											"end": 14388,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14135,
											"end": 14139,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14173,
											"end": 14175,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14162,
											"end": 14171,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14158,
											"end": 14176,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14150,
											"end": 14176,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14150,
											"end": 14176,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14222,
											"end": 14231,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14216,
											"end": 14220,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14212,
											"end": 14232,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 14208,
											"end": 14209,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14197,
											"end": 14206,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14193,
											"end": 14210,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14186,
											"end": 14233,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14250,
											"end": 14381,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "764"
										},
										{
											"begin": 14376,
											"end": 14380,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14250,
											"end": 14381,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "567"
										},
										{
											"begin": 14250,
											"end": 14381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14250,
											"end": 14381,
											"name": "tag",
											"source": 14,
											"value": "764"
										},
										{
											"begin": 14250,
											"end": 14381,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14242,
											"end": 14381,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14242,
											"end": 14381,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13969,
											"end": 14388,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13969,
											"end": 14388,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13969,
											"end": 14388,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13969,
											"end": 14388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14394,
											"end": 14559,
											"name": "tag",
											"source": 14,
											"value": "568"
										},
										{
											"begin": 14394,
											"end": 14559,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14534,
											"end": 14551,
											"name": "PUSH",
											"source": 14,
											"value": "496E76616C696420616464726573730000000000000000000000000000000000"
										},
										{
											"begin": 14530,
											"end": 14531,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14522,
											"end": 14528,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14518,
											"end": 14532,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14511,
											"end": 14552,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14394,
											"end": 14559,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14394,
											"end": 14559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14565,
											"end": 14931,
											"name": "tag",
											"source": 14,
											"value": "569"
										},
										{
											"begin": 14565,
											"end": 14931,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14707,
											"end": 14710,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14728,
											"end": 14795,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "767"
										},
										{
											"begin": 14792,
											"end": 14794,
											"name": "PUSH",
											"source": 14,
											"value": "F"
										},
										{
											"begin": 14787,
											"end": 14790,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14728,
											"end": 14795,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 14728,
											"end": 14795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14728,
											"end": 14795,
											"name": "tag",
											"source": 14,
											"value": "767"
										},
										{
											"begin": 14728,
											"end": 14795,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14721,
											"end": 14795,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14721,
											"end": 14795,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14804,
											"end": 14897,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "768"
										},
										{
											"begin": 14893,
											"end": 14896,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14804,
											"end": 14897,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "568"
										},
										{
											"begin": 14804,
											"end": 14897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14804,
											"end": 14897,
											"name": "tag",
											"source": 14,
											"value": "768"
										},
										{
											"begin": 14804,
											"end": 14897,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14922,
											"end": 14924,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14917,
											"end": 14920,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14913,
											"end": 14925,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14906,
											"end": 14925,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14906,
											"end": 14925,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14565,
											"end": 14931,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14565,
											"end": 14931,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14565,
											"end": 14931,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14565,
											"end": 14931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14937,
											"end": 15356,
											"name": "tag",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 14937,
											"end": 15356,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15103,
											"end": 15107,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15141,
											"end": 15143,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15130,
											"end": 15139,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15126,
											"end": 15144,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15118,
											"end": 15144,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15118,
											"end": 15144,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15190,
											"end": 15199,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15184,
											"end": 15188,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15180,
											"end": 15200,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 15176,
											"end": 15177,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15165,
											"end": 15174,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15161,
											"end": 15178,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15154,
											"end": 15201,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15218,
											"end": 15349,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "770"
										},
										{
											"begin": 15344,
											"end": 15348,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15218,
											"end": 15349,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "569"
										},
										{
											"begin": 15218,
											"end": 15349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15218,
											"end": 15349,
											"name": "tag",
											"source": 14,
											"value": "770"
										},
										{
											"begin": 15218,
											"end": 15349,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15210,
											"end": 15349,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15210,
											"end": 15349,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14937,
											"end": 15356,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14937,
											"end": 15356,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14937,
											"end": 15356,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14937,
											"end": 15356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15362,
											"end": 15523,
											"name": "tag",
											"source": 14,
											"value": "570"
										},
										{
											"begin": 15362,
											"end": 15523,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15502,
											"end": 15515,
											"name": "PUSH",
											"source": 14,
											"value": "4E65656420524553435545000000000000000000000000000000000000000000"
										},
										{
											"begin": 15498,
											"end": 15499,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15490,
											"end": 15496,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15486,
											"end": 15500,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15479,
											"end": 15516,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15362,
											"end": 15523,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15362,
											"end": 15523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15529,
											"end": 15895,
											"name": "tag",
											"source": 14,
											"value": "571"
										},
										{
											"begin": 15529,
											"end": 15895,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15671,
											"end": 15674,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15692,
											"end": 15759,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "773"
										},
										{
											"begin": 15756,
											"end": 15758,
											"name": "PUSH",
											"source": 14,
											"value": "B"
										},
										{
											"begin": 15751,
											"end": 15754,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15692,
											"end": 15759,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 15692,
											"end": 15759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15692,
											"end": 15759,
											"name": "tag",
											"source": 14,
											"value": "773"
										},
										{
											"begin": 15692,
											"end": 15759,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15685,
											"end": 15759,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15685,
											"end": 15759,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15768,
											"end": 15861,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "774"
										},
										{
											"begin": 15857,
											"end": 15860,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15768,
											"end": 15861,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "570"
										},
										{
											"begin": 15768,
											"end": 15861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15768,
											"end": 15861,
											"name": "tag",
											"source": 14,
											"value": "774"
										},
										{
											"begin": 15768,
											"end": 15861,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15886,
											"end": 15888,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15881,
											"end": 15884,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15877,
											"end": 15889,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15870,
											"end": 15889,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15870,
											"end": 15889,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15529,
											"end": 15895,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15529,
											"end": 15895,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15529,
											"end": 15895,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15529,
											"end": 15895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15901,
											"end": 16320,
											"name": "tag",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 15901,
											"end": 16320,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16067,
											"end": 16071,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16105,
											"end": 16107,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 16094,
											"end": 16103,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16090,
											"end": 16108,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16082,
											"end": 16108,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16082,
											"end": 16108,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16154,
											"end": 16163,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16148,
											"end": 16152,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16144,
											"end": 16164,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 16140,
											"end": 16141,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16129,
											"end": 16138,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16125,
											"end": 16142,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16118,
											"end": 16165,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16182,
											"end": 16313,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "776"
										},
										{
											"begin": 16308,
											"end": 16312,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16182,
											"end": 16313,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "571"
										},
										{
											"begin": 16182,
											"end": 16313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16182,
											"end": 16313,
											"name": "tag",
											"source": 14,
											"value": "776"
										},
										{
											"begin": 16182,
											"end": 16313,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16174,
											"end": 16313,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16174,
											"end": 16313,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15901,
											"end": 16320,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15901,
											"end": 16320,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15901,
											"end": 16320,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15901,
											"end": 16320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16326,
											"end": 16386,
											"name": "tag",
											"source": 14,
											"value": "572"
										},
										{
											"begin": 16326,
											"end": 16386,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16354,
											"end": 16357,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16375,
											"end": 16380,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16368,
											"end": 16380,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16368,
											"end": 16380,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16326,
											"end": 16386,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16326,
											"end": 16386,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16326,
											"end": 16386,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16326,
											"end": 16386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16392,
											"end": 16534,
											"name": "tag",
											"source": 14,
											"value": "573"
										},
										{
											"begin": 16392,
											"end": 16534,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16442,
											"end": 16451,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16475,
											"end": 16528,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "779"
										},
										{
											"begin": 16493,
											"end": 16527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "780"
										},
										{
											"begin": 16502,
											"end": 16526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "781"
										},
										{
											"begin": 16520,
											"end": 16525,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 16502,
											"end": 16526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "540"
										},
										{
											"begin": 16502,
											"end": 16526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16502,
											"end": 16526,
											"name": "tag",
											"source": 14,
											"value": "781"
										},
										{
											"begin": 16502,
											"end": 16526,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16493,
											"end": 16527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "572"
										},
										{
											"begin": 16493,
											"end": 16527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16493,
											"end": 16527,
											"name": "tag",
											"source": 14,
											"value": "780"
										},
										{
											"begin": 16493,
											"end": 16527,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16475,
											"end": 16528,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "540"
										},
										{
											"begin": 16475,
											"end": 16528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16475,
											"end": 16528,
											"name": "tag",
											"source": 14,
											"value": "779"
										},
										{
											"begin": 16475,
											"end": 16528,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16462,
											"end": 16528,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16462,
											"end": 16528,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16392,
											"end": 16534,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16392,
											"end": 16534,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16392,
											"end": 16534,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16392,
											"end": 16534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16540,
											"end": 16666,
											"name": "tag",
											"source": 14,
											"value": "574"
										},
										{
											"begin": 16540,
											"end": 16666,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16590,
											"end": 16599,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16623,
											"end": 16660,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "783"
										},
										{
											"begin": 16654,
											"end": 16659,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16623,
											"end": 16660,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "573"
										},
										{
											"begin": 16623,
											"end": 16660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16623,
											"end": 16660,
											"name": "tag",
											"source": 14,
											"value": "783"
										},
										{
											"begin": 16623,
											"end": 16660,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16610,
											"end": 16660,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16610,
											"end": 16660,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16540,
											"end": 16666,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16540,
											"end": 16666,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16540,
											"end": 16666,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16540,
											"end": 16666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16672,
											"end": 16813,
											"name": "tag",
											"source": 14,
											"value": "575"
										},
										{
											"begin": 16672,
											"end": 16813,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16737,
											"end": 16746,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16770,
											"end": 16807,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "785"
										},
										{
											"begin": 16801,
											"end": 16806,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16770,
											"end": 16807,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "574"
										},
										{
											"begin": 16770,
											"end": 16807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16770,
											"end": 16807,
											"name": "tag",
											"source": 14,
											"value": "785"
										},
										{
											"begin": 16770,
											"end": 16807,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16757,
											"end": 16807,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16757,
											"end": 16807,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16672,
											"end": 16813,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16672,
											"end": 16813,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16672,
											"end": 16813,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16672,
											"end": 16813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16819,
											"end": 16980,
											"name": "tag",
											"source": 14,
											"value": "576"
										},
										{
											"begin": 16819,
											"end": 16980,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16921,
											"end": 16973,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "787"
										},
										{
											"begin": 16967,
											"end": 16972,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16921,
											"end": 16973,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "575"
										},
										{
											"begin": 16921,
											"end": 16973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16921,
											"end": 16973,
											"name": "tag",
											"source": 14,
											"value": "787"
										},
										{
											"begin": 16921,
											"end": 16973,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16916,
											"end": 16919,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16909,
											"end": 16974,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16819,
											"end": 16980,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16819,
											"end": 16980,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16819,
											"end": 16980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16986,
											"end": 17569,
											"name": "tag",
											"source": 14,
											"value": "276"
										},
										{
											"begin": 16986,
											"end": 17569,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17178,
											"end": 17182,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17216,
											"end": 17219,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 17205,
											"end": 17214,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17201,
											"end": 17220,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17193,
											"end": 17220,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17193,
											"end": 17220,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17230,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "789"
										},
										{
											"begin": 17313,
											"end": 17314,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17302,
											"end": 17311,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 17298,
											"end": 17315,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17289,
											"end": 17295,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 17230,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "576"
										},
										{
											"begin": 17230,
											"end": 17316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17230,
											"end": 17316,
											"name": "tag",
											"source": 14,
											"value": "789"
										},
										{
											"begin": 17230,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17326,
											"end": 17398,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "790"
										},
										{
											"begin": 17394,
											"end": 17396,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 17383,
											"end": 17392,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 17379,
											"end": 17397,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17370,
											"end": 17376,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 17326,
											"end": 17398,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 17326,
											"end": 17398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17326,
											"end": 17398,
											"name": "tag",
											"source": 14,
											"value": "790"
										},
										{
											"begin": 17326,
											"end": 17398,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17408,
											"end": 17480,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "791"
										},
										{
											"begin": 17476,
											"end": 17478,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 17465,
											"end": 17474,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 17461,
											"end": 17479,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17452,
											"end": 17458,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 17408,
											"end": 17480,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "562"
										},
										{
											"begin": 17408,
											"end": 17480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17408,
											"end": 17480,
											"name": "tag",
											"source": 14,
											"value": "791"
										},
										{
											"begin": 17408,
											"end": 17480,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17490,
											"end": 17562,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "792"
										},
										{
											"begin": 17558,
											"end": 17560,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 17547,
											"end": 17556,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 17543,
											"end": 17561,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17534,
											"end": 17540,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 17490,
											"end": 17562,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 17490,
											"end": 17562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17490,
											"end": 17562,
											"name": "tag",
											"source": 14,
											"value": "792"
										},
										{
											"begin": 17490,
											"end": 17562,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16986,
											"end": 17569,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 16986,
											"end": 17569,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 16986,
											"end": 17569,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16986,
											"end": 17569,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16986,
											"end": 17569,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16986,
											"end": 17569,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16986,
											"end": 17569,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16986,
											"end": 17569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17575,
											"end": 17753,
											"name": "tag",
											"source": 14,
											"value": "577"
										},
										{
											"begin": 17575,
											"end": 17753,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17715,
											"end": 17745,
											"name": "PUSH",
											"source": 14,
											"value": "436F6E74726163743A20436F6E74726163742069732050617573656400000000"
										},
										{
											"begin": 17711,
											"end": 17712,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17703,
											"end": 17709,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17699,
											"end": 17713,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17692,
											"end": 17746,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17575,
											"end": 17753,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17575,
											"end": 17753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17759,
											"end": 18125,
											"name": "tag",
											"source": 14,
											"value": "578"
										},
										{
											"begin": 17759,
											"end": 18125,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17901,
											"end": 17904,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17922,
											"end": 17989,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "795"
										},
										{
											"begin": 17986,
											"end": 17988,
											"name": "PUSH",
											"source": 14,
											"value": "1C"
										},
										{
											"begin": 17981,
											"end": 17984,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 17922,
											"end": 17989,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 17922,
											"end": 17989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17922,
											"end": 17989,
											"name": "tag",
											"source": 14,
											"value": "795"
										},
										{
											"begin": 17922,
											"end": 17989,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17915,
											"end": 17989,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17915,
											"end": 17989,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17998,
											"end": 18091,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "796"
										},
										{
											"begin": 18087,
											"end": 18090,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17998,
											"end": 18091,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "577"
										},
										{
											"begin": 17998,
											"end": 18091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17998,
											"end": 18091,
											"name": "tag",
											"source": 14,
											"value": "796"
										},
										{
											"begin": 17998,
											"end": 18091,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18116,
											"end": 18118,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 18111,
											"end": 18114,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18107,
											"end": 18119,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18100,
											"end": 18119,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18100,
											"end": 18119,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17759,
											"end": 18125,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17759,
											"end": 18125,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17759,
											"end": 18125,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17759,
											"end": 18125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18131,
											"end": 18550,
											"name": "tag",
											"source": 14,
											"value": "281"
										},
										{
											"begin": 18131,
											"end": 18550,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18297,
											"end": 18301,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18335,
											"end": 18337,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 18324,
											"end": 18333,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18320,
											"end": 18338,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18312,
											"end": 18338,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18312,
											"end": 18338,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18384,
											"end": 18393,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18378,
											"end": 18382,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18374,
											"end": 18394,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 18370,
											"end": 18371,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18359,
											"end": 18368,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18355,
											"end": 18372,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18348,
											"end": 18395,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 18412,
											"end": 18543,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "798"
										},
										{
											"begin": 18538,
											"end": 18542,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18412,
											"end": 18543,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "578"
										},
										{
											"begin": 18412,
											"end": 18543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18412,
											"end": 18543,
											"name": "tag",
											"source": 14,
											"value": "798"
										},
										{
											"begin": 18412,
											"end": 18543,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18404,
											"end": 18543,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18404,
											"end": 18543,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18131,
											"end": 18550,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18131,
											"end": 18550,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18131,
											"end": 18550,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18131,
											"end": 18550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18556,
											"end": 18725,
											"name": "tag",
											"source": 14,
											"value": "579"
										},
										{
											"begin": 18556,
											"end": 18725,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18696,
											"end": 18717,
											"name": "PUSH",
											"source": 14,
											"value": "436F6E74726163743A204E656564204275726E00000000000000000000000000"
										},
										{
											"begin": 18692,
											"end": 18693,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18684,
											"end": 18690,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18680,
											"end": 18694,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18673,
											"end": 18718,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 18556,
											"end": 18725,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18556,
											"end": 18725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18731,
											"end": 19097,
											"name": "tag",
											"source": 14,
											"value": "580"
										},
										{
											"begin": 18731,
											"end": 19097,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18873,
											"end": 18876,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18894,
											"end": 18961,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "801"
										},
										{
											"begin": 18958,
											"end": 18960,
											"name": "PUSH",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 18953,
											"end": 18956,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18894,
											"end": 18961,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 18894,
											"end": 18961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18894,
											"end": 18961,
											"name": "tag",
											"source": 14,
											"value": "801"
										},
										{
											"begin": 18894,
											"end": 18961,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18887,
											"end": 18961,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18887,
											"end": 18961,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18970,
											"end": 19063,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "802"
										},
										{
											"begin": 19059,
											"end": 19062,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18970,
											"end": 19063,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "579"
										},
										{
											"begin": 18970,
											"end": 19063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18970,
											"end": 19063,
											"name": "tag",
											"source": 14,
											"value": "802"
										},
										{
											"begin": 18970,
											"end": 19063,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19088,
											"end": 19090,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 19083,
											"end": 19086,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19079,
											"end": 19091,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19072,
											"end": 19091,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19072,
											"end": 19091,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18731,
											"end": 19097,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18731,
											"end": 19097,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18731,
											"end": 19097,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18731,
											"end": 19097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19103,
											"end": 19522,
											"name": "tag",
											"source": 14,
											"value": "287"
										},
										{
											"begin": 19103,
											"end": 19522,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19269,
											"end": 19273,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19307,
											"end": 19309,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 19296,
											"end": 19305,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19292,
											"end": 19310,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19284,
											"end": 19310,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19284,
											"end": 19310,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19356,
											"end": 19365,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19350,
											"end": 19354,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19346,
											"end": 19366,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 19342,
											"end": 19343,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19331,
											"end": 19340,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19327,
											"end": 19344,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19320,
											"end": 19367,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 19384,
											"end": 19515,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "804"
										},
										{
											"begin": 19510,
											"end": 19514,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19384,
											"end": 19515,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "580"
										},
										{
											"begin": 19384,
											"end": 19515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19384,
											"end": 19515,
											"name": "tag",
											"source": 14,
											"value": "804"
										},
										{
											"begin": 19384,
											"end": 19515,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19376,
											"end": 19515,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19376,
											"end": 19515,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19103,
											"end": 19522,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19103,
											"end": 19522,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19103,
											"end": 19522,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19103,
											"end": 19522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19528,
											"end": 19697,
											"name": "tag",
											"source": 14,
											"value": "581"
										},
										{
											"begin": 19528,
											"end": 19697,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19668,
											"end": 19689,
											"name": "PUSH",
											"source": 14,
											"value": "4D696E74696E6720746F2064697361626C656400000000000000000000000000"
										},
										{
											"begin": 19664,
											"end": 19665,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19656,
											"end": 19662,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19652,
											"end": 19666,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19645,
											"end": 19690,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 19528,
											"end": 19697,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19528,
											"end": 19697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19703,
											"end": 20069,
											"name": "tag",
											"source": 14,
											"value": "582"
										},
										{
											"begin": 19703,
											"end": 20069,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19845,
											"end": 19848,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19866,
											"end": 19933,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "807"
										},
										{
											"begin": 19930,
											"end": 19932,
											"name": "PUSH",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 19925,
											"end": 19928,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19866,
											"end": 19933,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 19866,
											"end": 19933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19866,
											"end": 19933,
											"name": "tag",
											"source": 14,
											"value": "807"
										},
										{
											"begin": 19866,
											"end": 19933,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19859,
											"end": 19933,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19859,
											"end": 19933,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19942,
											"end": 20035,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "808"
										},
										{
											"begin": 20031,
											"end": 20034,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19942,
											"end": 20035,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "581"
										},
										{
											"begin": 19942,
											"end": 20035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19942,
											"end": 20035,
											"name": "tag",
											"source": 14,
											"value": "808"
										},
										{
											"begin": 19942,
											"end": 20035,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20060,
											"end": 20062,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 20055,
											"end": 20058,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20051,
											"end": 20063,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20044,
											"end": 20063,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20044,
											"end": 20063,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19703,
											"end": 20069,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19703,
											"end": 20069,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19703,
											"end": 20069,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19703,
											"end": 20069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20075,
											"end": 20494,
											"name": "tag",
											"source": 14,
											"value": "299"
										},
										{
											"begin": 20075,
											"end": 20494,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20241,
											"end": 20245,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20279,
											"end": 20281,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 20268,
											"end": 20277,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20264,
											"end": 20282,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20256,
											"end": 20282,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20256,
											"end": 20282,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20328,
											"end": 20337,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20322,
											"end": 20326,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20318,
											"end": 20338,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 20314,
											"end": 20315,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20303,
											"end": 20312,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 20299,
											"end": 20316,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20292,
											"end": 20339,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 20356,
											"end": 20487,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "810"
										},
										{
											"begin": 20482,
											"end": 20486,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20356,
											"end": 20487,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "582"
										},
										{
											"begin": 20356,
											"end": 20487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20356,
											"end": 20487,
											"name": "tag",
											"source": 14,
											"value": "810"
										},
										{
											"begin": 20356,
											"end": 20487,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20348,
											"end": 20487,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20348,
											"end": 20487,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20075,
											"end": 20494,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20075,
											"end": 20494,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20075,
											"end": 20494,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20075,
											"end": 20494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20500,
											"end": 20670,
											"name": "tag",
											"source": 14,
											"value": "583"
										},
										{
											"begin": 20500,
											"end": 20670,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20640,
											"end": 20662,
											"name": "PUSH",
											"source": 14,
											"value": "436F6E74726163743A204E656564204D696E746F000000000000000000000000"
										},
										{
											"begin": 20636,
											"end": 20637,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20628,
											"end": 20634,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20624,
											"end": 20638,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20617,
											"end": 20663,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 20500,
											"end": 20670,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20500,
											"end": 20670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20676,
											"end": 21042,
											"name": "tag",
											"source": 14,
											"value": "584"
										},
										{
											"begin": 20676,
											"end": 21042,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20818,
											"end": 20821,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20839,
											"end": 20906,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "813"
										},
										{
											"begin": 20903,
											"end": 20905,
											"name": "PUSH",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 20898,
											"end": 20901,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 20839,
											"end": 20906,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 20839,
											"end": 20906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20839,
											"end": 20906,
											"name": "tag",
											"source": 14,
											"value": "813"
										},
										{
											"begin": 20839,
											"end": 20906,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20832,
											"end": 20906,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20832,
											"end": 20906,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20915,
											"end": 21008,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "814"
										},
										{
											"begin": 21004,
											"end": 21007,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20915,
											"end": 21008,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "583"
										},
										{
											"begin": 20915,
											"end": 21008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20915,
											"end": 21008,
											"name": "tag",
											"source": 14,
											"value": "814"
										},
										{
											"begin": 20915,
											"end": 21008,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21033,
											"end": 21035,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 21028,
											"end": 21031,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21024,
											"end": 21036,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21017,
											"end": 21036,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21017,
											"end": 21036,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20676,
											"end": 21042,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20676,
											"end": 21042,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20676,
											"end": 21042,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20676,
											"end": 21042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21048,
											"end": 21467,
											"name": "tag",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 21048,
											"end": 21467,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21214,
											"end": 21218,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21252,
											"end": 21254,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 21241,
											"end": 21250,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21237,
											"end": 21255,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21229,
											"end": 21255,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21229,
											"end": 21255,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21301,
											"end": 21310,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21295,
											"end": 21299,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21291,
											"end": 21311,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 21287,
											"end": 21288,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21276,
											"end": 21285,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 21272,
											"end": 21289,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21265,
											"end": 21312,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 21329,
											"end": 21460,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "816"
										},
										{
											"begin": 21455,
											"end": 21459,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21329,
											"end": 21460,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "584"
										},
										{
											"begin": 21329,
											"end": 21460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21329,
											"end": 21460,
											"name": "tag",
											"source": 14,
											"value": "816"
										},
										{
											"begin": 21329,
											"end": 21460,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21321,
											"end": 21460,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21321,
											"end": 21460,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21048,
											"end": 21467,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21048,
											"end": 21467,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21048,
											"end": 21467,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21048,
											"end": 21467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21473,
											"end": 21653,
											"name": "tag",
											"source": 14,
											"value": "585"
										},
										{
											"begin": 21473,
											"end": 21653,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21521,
											"end": 21598,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21518,
											"end": 21519,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21511,
											"end": 21599,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 21618,
											"end": 21622,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 21615,
											"end": 21616,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 21608,
											"end": 21623,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 21642,
											"end": 21646,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 21639,
											"end": 21640,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21632,
											"end": 21647,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 21659,
											"end": 21850,
											"name": "tag",
											"source": 14,
											"value": "308"
										},
										{
											"begin": 21659,
											"end": 21850,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21699,
											"end": 21702,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21718,
											"end": 21738,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "819"
										},
										{
											"begin": 21736,
											"end": 21737,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21718,
											"end": 21738,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "544"
										},
										{
											"begin": 21718,
											"end": 21738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21718,
											"end": 21738,
											"name": "tag",
											"source": 14,
											"value": "819"
										},
										{
											"begin": 21718,
											"end": 21738,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21713,
											"end": 21738,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21713,
											"end": 21738,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21752,
											"end": 21772,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "820"
										},
										{
											"begin": 21770,
											"end": 21771,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 21752,
											"end": 21772,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "544"
										},
										{
											"begin": 21752,
											"end": 21772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21752,
											"end": 21772,
											"name": "tag",
											"source": 14,
											"value": "820"
										},
										{
											"begin": 21752,
											"end": 21772,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21747,
											"end": 21772,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 21747,
											"end": 21772,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21795,
											"end": 21796,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21792,
											"end": 21793,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21788,
											"end": 21797,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21781,
											"end": 21797,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21781,
											"end": 21797,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21816,
											"end": 21819,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 21813,
											"end": 21814,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21810,
											"end": 21820,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 21807,
											"end": 21843,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 21807,
											"end": 21843,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "821"
										},
										{
											"begin": 21807,
											"end": 21843,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 21823,
											"end": 21841,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "822"
										},
										{
											"begin": 21823,
											"end": 21841,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "585"
										},
										{
											"begin": 21823,
											"end": 21841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21823,
											"end": 21841,
											"name": "tag",
											"source": 14,
											"value": "822"
										},
										{
											"begin": 21823,
											"end": 21841,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21807,
											"end": 21843,
											"name": "tag",
											"source": 14,
											"value": "821"
										},
										{
											"begin": 21807,
											"end": 21843,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21659,
											"end": 21850,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 21659,
											"end": 21850,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21659,
											"end": 21850,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21659,
											"end": 21850,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21659,
											"end": 21850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21856,
											"end": 22035,
											"name": "tag",
											"source": 14,
											"value": "586"
										},
										{
											"begin": 21856,
											"end": 22035,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21996,
											"end": 22027,
											"name": "PUSH",
											"source": 14,
											"value": "436F6E74726163743A20537570706C7920436170206578636565646564000000"
										},
										{
											"begin": 21992,
											"end": 21993,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21984,
											"end": 21990,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21980,
											"end": 21994,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21973,
											"end": 22028,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 21856,
											"end": 22035,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21856,
											"end": 22035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22041,
											"end": 22407,
											"name": "tag",
											"source": 14,
											"value": "587"
										},
										{
											"begin": 22041,
											"end": 22407,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22183,
											"end": 22186,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22204,
											"end": 22271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "825"
										},
										{
											"begin": 22268,
											"end": 22270,
											"name": "PUSH",
											"source": 14,
											"value": "1D"
										},
										{
											"begin": 22263,
											"end": 22266,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 22204,
											"end": 22271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 22204,
											"end": 22271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22204,
											"end": 22271,
											"name": "tag",
											"source": 14,
											"value": "825"
										},
										{
											"begin": 22204,
											"end": 22271,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22197,
											"end": 22271,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22197,
											"end": 22271,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22280,
											"end": 22373,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "826"
										},
										{
											"begin": 22369,
											"end": 22372,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22280,
											"end": 22373,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "586"
										},
										{
											"begin": 22280,
											"end": 22373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22280,
											"end": 22373,
											"name": "tag",
											"source": 14,
											"value": "826"
										},
										{
											"begin": 22280,
											"end": 22373,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22398,
											"end": 22400,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 22393,
											"end": 22396,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22389,
											"end": 22401,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22382,
											"end": 22401,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22382,
											"end": 22401,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22041,
											"end": 22407,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22041,
											"end": 22407,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22041,
											"end": 22407,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22041,
											"end": 22407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22413,
											"end": 22832,
											"name": "tag",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 22413,
											"end": 22832,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22579,
											"end": 22583,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22617,
											"end": 22619,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 22606,
											"end": 22615,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22602,
											"end": 22620,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22594,
											"end": 22620,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22594,
											"end": 22620,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22666,
											"end": 22675,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 22660,
											"end": 22664,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 22656,
											"end": 22676,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 22652,
											"end": 22653,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22641,
											"end": 22650,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 22637,
											"end": 22654,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22630,
											"end": 22677,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 22694,
											"end": 22825,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "828"
										},
										{
											"begin": 22820,
											"end": 22824,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 22694,
											"end": 22825,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "587"
										},
										{
											"begin": 22694,
											"end": 22825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22694,
											"end": 22825,
											"name": "tag",
											"source": 14,
											"value": "828"
										},
										{
											"begin": 22694,
											"end": 22825,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22686,
											"end": 22825,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22686,
											"end": 22825,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22413,
											"end": 22832,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22413,
											"end": 22832,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22413,
											"end": 22832,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22413,
											"end": 22832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22838,
											"end": 23170,
											"name": "tag",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 22838,
											"end": 23170,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22959,
											"end": 22963,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22997,
											"end": 22999,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 22986,
											"end": 22995,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22982,
											"end": 23000,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22974,
											"end": 23000,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22974,
											"end": 23000,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23010,
											"end": 23081,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "830"
										},
										{
											"begin": 23078,
											"end": 23079,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23067,
											"end": 23076,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 23063,
											"end": 23080,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23054,
											"end": 23060,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 23010,
											"end": 23081,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "562"
										},
										{
											"begin": 23010,
											"end": 23081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23010,
											"end": 23081,
											"name": "tag",
											"source": 14,
											"value": "830"
										},
										{
											"begin": 23010,
											"end": 23081,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23091,
											"end": 23163,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "831"
										},
										{
											"begin": 23159,
											"end": 23161,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 23148,
											"end": 23157,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 23144,
											"end": 23162,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23135,
											"end": 23141,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 23091,
											"end": 23163,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 23091,
											"end": 23163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23091,
											"end": 23163,
											"name": "tag",
											"source": 14,
											"value": "831"
										},
										{
											"begin": 23091,
											"end": 23163,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22838,
											"end": 23170,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 22838,
											"end": 23170,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 22838,
											"end": 23170,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22838,
											"end": 23170,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22838,
											"end": 23170,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22838,
											"end": 23170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23176,
											"end": 23310,
											"name": "tag",
											"source": 14,
											"value": "588"
										},
										{
											"begin": 23176,
											"end": 23310,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23234,
											"end": 23243,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23267,
											"end": 23304,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "833"
										},
										{
											"begin": 23298,
											"end": 23303,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23267,
											"end": 23304,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "574"
										},
										{
											"begin": 23267,
											"end": 23304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23267,
											"end": 23304,
											"name": "tag",
											"source": 14,
											"value": "833"
										},
										{
											"begin": 23267,
											"end": 23304,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23254,
											"end": 23304,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23254,
											"end": 23304,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23176,
											"end": 23310,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23176,
											"end": 23310,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23176,
											"end": 23310,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23176,
											"end": 23310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23316,
											"end": 23463,
											"name": "tag",
											"source": 14,
											"value": "589"
										},
										{
											"begin": 23316,
											"end": 23463,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23411,
											"end": 23456,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "835"
										},
										{
											"begin": 23450,
											"end": 23455,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23411,
											"end": 23456,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "588"
										},
										{
											"begin": 23411,
											"end": 23456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23411,
											"end": 23456,
											"name": "tag",
											"source": 14,
											"value": "835"
										},
										{
											"begin": 23411,
											"end": 23456,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23406,
											"end": 23409,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23399,
											"end": 23457,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 23316,
											"end": 23463,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23316,
											"end": 23463,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23316,
											"end": 23463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23469,
											"end": 23927,
											"name": "tag",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 23469,
											"end": 23927,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23626,
											"end": 23630,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23664,
											"end": 23666,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 23653,
											"end": 23662,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23649,
											"end": 23667,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23641,
											"end": 23667,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23641,
											"end": 23667,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23677,
											"end": 23756,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "837"
										},
										{
											"begin": 23753,
											"end": 23754,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23742,
											"end": 23751,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 23738,
											"end": 23755,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23729,
											"end": 23735,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 23677,
											"end": 23756,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "589"
										},
										{
											"begin": 23677,
											"end": 23756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23677,
											"end": 23756,
											"name": "tag",
											"source": 14,
											"value": "837"
										},
										{
											"begin": 23677,
											"end": 23756,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23766,
											"end": 23838,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "838"
										},
										{
											"begin": 23834,
											"end": 23836,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 23823,
											"end": 23832,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 23819,
											"end": 23837,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23810,
											"end": 23816,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 23766,
											"end": 23838,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 23766,
											"end": 23838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23766,
											"end": 23838,
											"name": "tag",
											"source": 14,
											"value": "838"
										},
										{
											"begin": 23766,
											"end": 23838,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23848,
											"end": 23920,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "839"
										},
										{
											"begin": 23916,
											"end": 23918,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 23905,
											"end": 23914,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 23901,
											"end": 23919,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23892,
											"end": 23898,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 23848,
											"end": 23920,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 23848,
											"end": 23920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23848,
											"end": 23920,
											"name": "tag",
											"source": 14,
											"value": "839"
										},
										{
											"begin": 23848,
											"end": 23920,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23469,
											"end": 23927,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 23469,
											"end": 23927,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 23469,
											"end": 23927,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23469,
											"end": 23927,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23469,
											"end": 23927,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23469,
											"end": 23927,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23469,
											"end": 23927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23933,
											"end": 24106,
											"name": "tag",
											"source": 14,
											"value": "590"
										},
										{
											"begin": 23933,
											"end": 24106,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24073,
											"end": 24098,
											"name": "PUSH",
											"source": 14,
											"value": "436F6E74726163743A204E656564204275726E66726F6D000000000000000000"
										},
										{
											"begin": 24069,
											"end": 24070,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24061,
											"end": 24067,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24057,
											"end": 24071,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24050,
											"end": 24099,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 23933,
											"end": 24106,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23933,
											"end": 24106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24112,
											"end": 24478,
											"name": "tag",
											"source": 14,
											"value": "591"
										},
										{
											"begin": 24112,
											"end": 24478,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24254,
											"end": 24257,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24275,
											"end": 24342,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "842"
										},
										{
											"begin": 24339,
											"end": 24341,
											"name": "PUSH",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 24334,
											"end": 24337,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 24275,
											"end": 24342,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 24275,
											"end": 24342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24275,
											"end": 24342,
											"name": "tag",
											"source": 14,
											"value": "842"
										},
										{
											"begin": 24275,
											"end": 24342,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24268,
											"end": 24342,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24268,
											"end": 24342,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24351,
											"end": 24444,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "843"
										},
										{
											"begin": 24440,
											"end": 24443,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24351,
											"end": 24444,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "590"
										},
										{
											"begin": 24351,
											"end": 24444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24351,
											"end": 24444,
											"name": "tag",
											"source": 14,
											"value": "843"
										},
										{
											"begin": 24351,
											"end": 24444,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24469,
											"end": 24471,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 24464,
											"end": 24467,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24460,
											"end": 24472,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24453,
											"end": 24472,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24453,
											"end": 24472,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24112,
											"end": 24478,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24112,
											"end": 24478,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24112,
											"end": 24478,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24112,
											"end": 24478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24484,
											"end": 24903,
											"name": "tag",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 24484,
											"end": 24903,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24650,
											"end": 24654,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24688,
											"end": 24690,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 24677,
											"end": 24686,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24673,
											"end": 24691,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24665,
											"end": 24691,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24665,
											"end": 24691,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24737,
											"end": 24746,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24731,
											"end": 24735,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24727,
											"end": 24747,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 24723,
											"end": 24724,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24712,
											"end": 24721,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 24708,
											"end": 24725,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24701,
											"end": 24748,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 24765,
											"end": 24896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "845"
										},
										{
											"begin": 24891,
											"end": 24895,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24765,
											"end": 24896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "591"
										},
										{
											"begin": 24765,
											"end": 24896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24765,
											"end": 24896,
											"name": "tag",
											"source": 14,
											"value": "845"
										},
										{
											"begin": 24765,
											"end": 24896,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24757,
											"end": 24896,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24757,
											"end": 24896,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24484,
											"end": 24903,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24484,
											"end": 24903,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24484,
											"end": 24903,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24484,
											"end": 24903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24909,
											"end": 25351,
											"name": "tag",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 24909,
											"end": 25351,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25058,
											"end": 25062,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25096,
											"end": 25098,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 25085,
											"end": 25094,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25081,
											"end": 25099,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 25073,
											"end": 25099,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25073,
											"end": 25099,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25109,
											"end": 25180,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "847"
										},
										{
											"begin": 25177,
											"end": 25178,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25166,
											"end": 25175,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 25162,
											"end": 25179,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 25153,
											"end": 25159,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 25109,
											"end": 25180,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "562"
										},
										{
											"begin": 25109,
											"end": 25180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25109,
											"end": 25180,
											"name": "tag",
											"source": 14,
											"value": "847"
										},
										{
											"begin": 25109,
											"end": 25180,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25190,
											"end": 25262,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "848"
										},
										{
											"begin": 25258,
											"end": 25260,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 25247,
											"end": 25256,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 25243,
											"end": 25261,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 25234,
											"end": 25240,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 25190,
											"end": 25262,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 25190,
											"end": 25262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25190,
											"end": 25262,
											"name": "tag",
											"source": 14,
											"value": "848"
										},
										{
											"begin": 25190,
											"end": 25262,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25272,
											"end": 25344,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "849"
										},
										{
											"begin": 25340,
											"end": 25342,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 25329,
											"end": 25338,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 25325,
											"end": 25343,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 25316,
											"end": 25322,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 25272,
											"end": 25344,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "562"
										},
										{
											"begin": 25272,
											"end": 25344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25272,
											"end": 25344,
											"name": "tag",
											"source": 14,
											"value": "849"
										},
										{
											"begin": 25272,
											"end": 25344,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24909,
											"end": 25351,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 24909,
											"end": 25351,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 24909,
											"end": 25351,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24909,
											"end": 25351,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24909,
											"end": 25351,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24909,
											"end": 25351,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24909,
											"end": 25351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25357,
											"end": 25523,
											"name": "tag",
											"source": 14,
											"value": "592"
										},
										{
											"begin": 25357,
											"end": 25523,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25497,
											"end": 25515,
											"name": "PUSH",
											"source": 14,
											"value": "4D696E74696E672064697361626C656400000000000000000000000000000000"
										},
										{
											"begin": 25493,
											"end": 25494,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25485,
											"end": 25491,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25481,
											"end": 25495,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 25474,
											"end": 25516,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 25357,
											"end": 25523,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25357,
											"end": 25523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25529,
											"end": 25895,
											"name": "tag",
											"source": 14,
											"value": "593"
										},
										{
											"begin": 25529,
											"end": 25895,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25671,
											"end": 25674,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25692,
											"end": 25759,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "852"
										},
										{
											"begin": 25756,
											"end": 25758,
											"name": "PUSH",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 25751,
											"end": 25754,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 25692,
											"end": 25759,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 25692,
											"end": 25759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25692,
											"end": 25759,
											"name": "tag",
											"source": 14,
											"value": "852"
										},
										{
											"begin": 25692,
											"end": 25759,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25685,
											"end": 25759,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 25685,
											"end": 25759,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25768,
											"end": 25861,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "853"
										},
										{
											"begin": 25857,
											"end": 25860,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25768,
											"end": 25861,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "592"
										},
										{
											"begin": 25768,
											"end": 25861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25768,
											"end": 25861,
											"name": "tag",
											"source": 14,
											"value": "853"
										},
										{
											"begin": 25768,
											"end": 25861,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25886,
											"end": 25888,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 25881,
											"end": 25884,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25877,
											"end": 25889,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 25870,
											"end": 25889,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25870,
											"end": 25889,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25529,
											"end": 25895,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 25529,
											"end": 25895,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25529,
											"end": 25895,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25529,
											"end": 25895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25901,
											"end": 26320,
											"name": "tag",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 25901,
											"end": 26320,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26067,
											"end": 26071,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 26105,
											"end": 26107,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 26094,
											"end": 26103,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26090,
											"end": 26108,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26082,
											"end": 26108,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 26082,
											"end": 26108,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26154,
											"end": 26163,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26148,
											"end": 26152,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26144,
											"end": 26164,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 26140,
											"end": 26141,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 26129,
											"end": 26138,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 26125,
											"end": 26142,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26118,
											"end": 26165,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 26182,
											"end": 26313,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "855"
										},
										{
											"begin": 26308,
											"end": 26312,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26182,
											"end": 26313,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "593"
										},
										{
											"begin": 26182,
											"end": 26313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26182,
											"end": 26313,
											"name": "tag",
											"source": 14,
											"value": "855"
										},
										{
											"begin": 26182,
											"end": 26313,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26174,
											"end": 26313,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 26174,
											"end": 26313,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25901,
											"end": 26320,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 25901,
											"end": 26320,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25901,
											"end": 26320,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25901,
											"end": 26320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26326,
											"end": 26495,
											"name": "tag",
											"source": 14,
											"value": "594"
										},
										{
											"begin": 26326,
											"end": 26495,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26466,
											"end": 26487,
											"name": "PUSH",
											"source": 14,
											"value": "436F6E74726163743A204E656564204D696E7400000000000000000000000000"
										},
										{
											"begin": 26462,
											"end": 26463,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 26454,
											"end": 26460,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26450,
											"end": 26464,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26443,
											"end": 26488,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 26326,
											"end": 26495,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26326,
											"end": 26495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26501,
											"end": 26867,
											"name": "tag",
											"source": 14,
											"value": "595"
										},
										{
											"begin": 26501,
											"end": 26867,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26643,
											"end": 26646,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 26664,
											"end": 26731,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "858"
										},
										{
											"begin": 26728,
											"end": 26730,
											"name": "PUSH",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 26723,
											"end": 26726,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 26664,
											"end": 26731,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 26664,
											"end": 26731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26664,
											"end": 26731,
											"name": "tag",
											"source": 14,
											"value": "858"
										},
										{
											"begin": 26664,
											"end": 26731,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26657,
											"end": 26731,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 26657,
											"end": 26731,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26740,
											"end": 26833,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "859"
										},
										{
											"begin": 26829,
											"end": 26832,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26740,
											"end": 26833,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "594"
										},
										{
											"begin": 26740,
											"end": 26833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26740,
											"end": 26833,
											"name": "tag",
											"source": 14,
											"value": "859"
										},
										{
											"begin": 26740,
											"end": 26833,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26858,
											"end": 26860,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 26853,
											"end": 26856,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26849,
											"end": 26861,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26842,
											"end": 26861,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 26842,
											"end": 26861,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26501,
											"end": 26867,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 26501,
											"end": 26867,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 26501,
											"end": 26867,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26501,
											"end": 26867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26873,
											"end": 27292,
											"name": "tag",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 26873,
											"end": 27292,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27039,
											"end": 27043,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 27077,
											"end": 27079,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 27066,
											"end": 27075,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27062,
											"end": 27080,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 27054,
											"end": 27080,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 27054,
											"end": 27080,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27126,
											"end": 27135,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 27120,
											"end": 27124,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 27116,
											"end": 27136,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 27112,
											"end": 27113,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 27101,
											"end": 27110,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 27097,
											"end": 27114,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 27090,
											"end": 27137,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 27154,
											"end": 27285,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "861"
										},
										{
											"begin": 27280,
											"end": 27284,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 27154,
											"end": 27285,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "595"
										},
										{
											"begin": 27154,
											"end": 27285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27154,
											"end": 27285,
											"name": "tag",
											"source": 14,
											"value": "861"
										},
										{
											"begin": 27154,
											"end": 27285,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27146,
											"end": 27285,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 27146,
											"end": 27285,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26873,
											"end": 27292,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 26873,
											"end": 27292,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 26873,
											"end": 27292,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26873,
											"end": 27292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27298,
											"end": 27459,
											"name": "tag",
											"source": 14,
											"value": "596"
										},
										{
											"begin": 27298,
											"end": 27459,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27438,
											"end": 27451,
											"name": "PUSH",
											"source": 14,
											"value": "4E65656420537570706C79000000000000000000000000000000000000000000"
										},
										{
											"begin": 27434,
											"end": 27435,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 27426,
											"end": 27432,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27422,
											"end": 27436,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 27415,
											"end": 27452,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 27298,
											"end": 27459,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27298,
											"end": 27459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27465,
											"end": 27831,
											"name": "tag",
											"source": 14,
											"value": "597"
										},
										{
											"begin": 27465,
											"end": 27831,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27607,
											"end": 27610,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 27628,
											"end": 27695,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "864"
										},
										{
											"begin": 27692,
											"end": 27694,
											"name": "PUSH",
											"source": 14,
											"value": "B"
										},
										{
											"begin": 27687,
											"end": 27690,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 27628,
											"end": 27695,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 27628,
											"end": 27695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27628,
											"end": 27695,
											"name": "tag",
											"source": 14,
											"value": "864"
										},
										{
											"begin": 27628,
											"end": 27695,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27621,
											"end": 27695,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 27621,
											"end": 27695,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27704,
											"end": 27797,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "865"
										},
										{
											"begin": 27793,
											"end": 27796,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27704,
											"end": 27797,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "596"
										},
										{
											"begin": 27704,
											"end": 27797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27704,
											"end": 27797,
											"name": "tag",
											"source": 14,
											"value": "865"
										},
										{
											"begin": 27704,
											"end": 27797,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27822,
											"end": 27824,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 27817,
											"end": 27820,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27813,
											"end": 27825,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 27806,
											"end": 27825,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 27806,
											"end": 27825,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27465,
											"end": 27831,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 27465,
											"end": 27831,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 27465,
											"end": 27831,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27465,
											"end": 27831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27837,
											"end": 28256,
											"name": "tag",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 27837,
											"end": 28256,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28003,
											"end": 28007,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 28041,
											"end": 28043,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 28030,
											"end": 28039,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 28026,
											"end": 28044,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28018,
											"end": 28044,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 28018,
											"end": 28044,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28090,
											"end": 28099,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 28084,
											"end": 28088,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 28080,
											"end": 28100,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 28076,
											"end": 28077,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 28065,
											"end": 28074,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 28061,
											"end": 28078,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28054,
											"end": 28101,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 28118,
											"end": 28249,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "867"
										},
										{
											"begin": 28244,
											"end": 28248,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 28118,
											"end": 28249,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "597"
										},
										{
											"begin": 28118,
											"end": 28249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28118,
											"end": 28249,
											"name": "tag",
											"source": 14,
											"value": "867"
										},
										{
											"begin": 28118,
											"end": 28249,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28110,
											"end": 28249,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 28110,
											"end": 28249,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27837,
											"end": 28256,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 27837,
											"end": 28256,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 27837,
											"end": 28256,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27837,
											"end": 28256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28262,
											"end": 28440,
											"name": "tag",
											"source": 14,
											"value": "598"
										},
										{
											"begin": 28262,
											"end": 28440,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28402,
											"end": 28432,
											"name": "PUSH",
											"source": 14,
											"value": "436F6E74726163743A20537570706C792043617020746F6F206C6F7700000000"
										},
										{
											"begin": 28398,
											"end": 28399,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 28390,
											"end": 28396,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 28386,
											"end": 28400,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28379,
											"end": 28433,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 28262,
											"end": 28440,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28262,
											"end": 28440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28446,
											"end": 28812,
											"name": "tag",
											"source": 14,
											"value": "599"
										},
										{
											"begin": 28446,
											"end": 28812,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28588,
											"end": 28591,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 28609,
											"end": 28676,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "870"
										},
										{
											"begin": 28673,
											"end": 28675,
											"name": "PUSH",
											"source": 14,
											"value": "1C"
										},
										{
											"begin": 28668,
											"end": 28671,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 28609,
											"end": 28676,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 28609,
											"end": 28676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28609,
											"end": 28676,
											"name": "tag",
											"source": 14,
											"value": "870"
										},
										{
											"begin": 28609,
											"end": 28676,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28602,
											"end": 28676,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 28602,
											"end": 28676,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28685,
											"end": 28778,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "871"
										},
										{
											"begin": 28774,
											"end": 28777,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 28685,
											"end": 28778,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "598"
										},
										{
											"begin": 28685,
											"end": 28778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28685,
											"end": 28778,
											"name": "tag",
											"source": 14,
											"value": "871"
										},
										{
											"begin": 28685,
											"end": 28778,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28803,
											"end": 28805,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 28798,
											"end": 28801,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 28794,
											"end": 28806,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28787,
											"end": 28806,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 28787,
											"end": 28806,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28446,
											"end": 28812,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 28446,
											"end": 28812,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 28446,
											"end": 28812,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28446,
											"end": 28812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28818,
											"end": 29237,
											"name": "tag",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 28818,
											"end": 29237,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28984,
											"end": 28988,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 29022,
											"end": 29024,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 29011,
											"end": 29020,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 29007,
											"end": 29025,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28999,
											"end": 29025,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 28999,
											"end": 29025,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29071,
											"end": 29080,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 29065,
											"end": 29069,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 29061,
											"end": 29081,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 29057,
											"end": 29058,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 29046,
											"end": 29055,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 29042,
											"end": 29059,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 29035,
											"end": 29082,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 29099,
											"end": 29230,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "873"
										},
										{
											"begin": 29225,
											"end": 29229,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 29099,
											"end": 29230,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "599"
										},
										{
											"begin": 29099,
											"end": 29230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29099,
											"end": 29230,
											"name": "tag",
											"source": 14,
											"value": "873"
										},
										{
											"begin": 29099,
											"end": 29230,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29091,
											"end": 29230,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 29091,
											"end": 29230,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28818,
											"end": 29237,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 28818,
											"end": 29237,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 28818,
											"end": 29237,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28818,
											"end": 29237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29243,
											"end": 29424,
											"name": "tag",
											"source": 14,
											"value": "600"
										},
										{
											"begin": 29243,
											"end": 29424,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29383,
											"end": 29416,
											"name": "PUSH",
											"source": 14,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 29379,
											"end": 29380,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 29371,
											"end": 29377,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 29367,
											"end": 29381,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 29360,
											"end": 29417,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 29243,
											"end": 29424,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29243,
											"end": 29424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29430,
											"end": 29796,
											"name": "tag",
											"source": 14,
											"value": "601"
										},
										{
											"begin": 29430,
											"end": 29796,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29572,
											"end": 29575,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 29593,
											"end": 29660,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "876"
										},
										{
											"begin": 29657,
											"end": 29659,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 29652,
											"end": 29655,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 29593,
											"end": 29660,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 29593,
											"end": 29660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29593,
											"end": 29660,
											"name": "tag",
											"source": 14,
											"value": "876"
										},
										{
											"begin": 29593,
											"end": 29660,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29586,
											"end": 29660,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 29586,
											"end": 29660,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29669,
											"end": 29762,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "877"
										},
										{
											"begin": 29758,
											"end": 29761,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 29669,
											"end": 29762,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "600"
										},
										{
											"begin": 29669,
											"end": 29762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29669,
											"end": 29762,
											"name": "tag",
											"source": 14,
											"value": "877"
										},
										{
											"begin": 29669,
											"end": 29762,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29787,
											"end": 29789,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 29782,
											"end": 29785,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 29778,
											"end": 29790,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 29771,
											"end": 29790,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 29771,
											"end": 29790,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29430,
											"end": 29796,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 29430,
											"end": 29796,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 29430,
											"end": 29796,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29430,
											"end": 29796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29802,
											"end": 30221,
											"name": "tag",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 29802,
											"end": 30221,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29968,
											"end": 29972,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 30006,
											"end": 30008,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 29995,
											"end": 30004,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 29991,
											"end": 30009,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 29983,
											"end": 30009,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 29983,
											"end": 30009,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30055,
											"end": 30064,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 30049,
											"end": 30053,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 30045,
											"end": 30065,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 30041,
											"end": 30042,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 30030,
											"end": 30039,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 30026,
											"end": 30043,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 30019,
											"end": 30066,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 30083,
											"end": 30214,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "879"
										},
										{
											"begin": 30209,
											"end": 30213,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 30083,
											"end": 30214,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "601"
										},
										{
											"begin": 30083,
											"end": 30214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30083,
											"end": 30214,
											"name": "tag",
											"source": 14,
											"value": "879"
										},
										{
											"begin": 30083,
											"end": 30214,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30075,
											"end": 30214,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 30075,
											"end": 30214,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29802,
											"end": 30221,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 29802,
											"end": 30221,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 29802,
											"end": 30221,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29802,
											"end": 30221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30227,
											"end": 30559,
											"name": "tag",
											"source": 14,
											"value": "484"
										},
										{
											"begin": 30227,
											"end": 30559,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30348,
											"end": 30352,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 30386,
											"end": 30388,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 30375,
											"end": 30384,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 30371,
											"end": 30389,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 30363,
											"end": 30389,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 30363,
											"end": 30389,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30399,
											"end": 30470,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "881"
										},
										{
											"begin": 30467,
											"end": 30468,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 30456,
											"end": 30465,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 30452,
											"end": 30469,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 30443,
											"end": 30449,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 30399,
											"end": 30470,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "562"
										},
										{
											"begin": 30399,
											"end": 30470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30399,
											"end": 30470,
											"name": "tag",
											"source": 14,
											"value": "881"
										},
										{
											"begin": 30399,
											"end": 30470,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30480,
											"end": 30552,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "882"
										},
										{
											"begin": 30548,
											"end": 30550,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 30537,
											"end": 30546,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 30533,
											"end": 30551,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 30524,
											"end": 30530,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 30480,
											"end": 30552,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "553"
										},
										{
											"begin": 30480,
											"end": 30552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30480,
											"end": 30552,
											"name": "tag",
											"source": 14,
											"value": "882"
										},
										{
											"begin": 30480,
											"end": 30552,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30227,
											"end": 30559,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 30227,
											"end": 30559,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 30227,
											"end": 30559,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30227,
											"end": 30559,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30227,
											"end": 30559,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30227,
											"end": 30559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30565,
											"end": 30702,
											"name": "tag",
											"source": 14,
											"value": "602"
										},
										{
											"begin": 30565,
											"end": 30702,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30619,
											"end": 30624,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 30650,
											"end": 30656,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 30644,
											"end": 30657,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 30635,
											"end": 30657,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 30635,
											"end": 30657,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30666,
											"end": 30696,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "884"
										},
										{
											"begin": 30690,
											"end": 30695,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 30666,
											"end": 30696,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "547"
										},
										{
											"begin": 30666,
											"end": 30696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30666,
											"end": 30696,
											"name": "tag",
											"source": 14,
											"value": "884"
										},
										{
											"begin": 30666,
											"end": 30696,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30565,
											"end": 30702,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 30565,
											"end": 30702,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 30565,
											"end": 30702,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30565,
											"end": 30702,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30565,
											"end": 30702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30708,
											"end": 31053,
											"name": "tag",
											"source": 14,
											"value": "490"
										},
										{
											"begin": 30708,
											"end": 31053,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30775,
											"end": 30781,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 30824,
											"end": 30826,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 30812,
											"end": 30821,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 30803,
											"end": 30810,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 30799,
											"end": 30822,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 30795,
											"end": 30827,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 30792,
											"end": 30911,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 30792,
											"end": 30911,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "886"
										},
										{
											"begin": 30792,
											"end": 30911,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 30830,
											"end": 30909,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "887"
										},
										{
											"begin": 30830,
											"end": 30909,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "528"
										},
										{
											"begin": 30830,
											"end": 30909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30830,
											"end": 30909,
											"name": "tag",
											"source": 14,
											"value": "887"
										},
										{
											"begin": 30830,
											"end": 30909,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30792,
											"end": 30911,
											"name": "tag",
											"source": 14,
											"value": "886"
										},
										{
											"begin": 30792,
											"end": 30911,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30950,
											"end": 30951,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 30975,
											"end": 31036,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "888"
										},
										{
											"begin": 31028,
											"end": 31035,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 31019,
											"end": 31025,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 31008,
											"end": 31017,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 31004,
											"end": 31026,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 30975,
											"end": 31036,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "602"
										},
										{
											"begin": 30975,
											"end": 31036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30975,
											"end": 31036,
											"name": "tag",
											"source": 14,
											"value": "888"
										},
										{
											"begin": 30975,
											"end": 31036,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30965,
											"end": 31036,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 30965,
											"end": 31036,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30921,
											"end": 31046,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30708,
											"end": 31053,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 30708,
											"end": 31053,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 30708,
											"end": 31053,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30708,
											"end": 31053,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30708,
											"end": 31053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31059,
											"end": 31501,
											"name": "tag",
											"source": 14,
											"value": "499"
										},
										{
											"begin": 31059,
											"end": 31501,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31208,
											"end": 31212,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 31246,
											"end": 31248,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 31235,
											"end": 31244,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 31231,
											"end": 31249,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 31223,
											"end": 31249,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 31223,
											"end": 31249,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31259,
											"end": 31330,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "890"
										},
										{
											"begin": 31327,
											"end": 31328,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 31316,
											"end": 31325,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 31312,
											"end": 31329,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 31303,
											"end": 31309,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 31259,
											"end": 31330,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "562"
										},
										{
											"begin": 31259,
											"end": 31330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31259,
											"end": 31330,
											"name": "tag",
											"source": 14,
											"value": "890"
										},
										{
											"begin": 31259,
											"end": 31330,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31340,
											"end": 31412,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "891"
										},
										{
											"begin": 31408,
											"end": 31410,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 31397,
											"end": 31406,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 31393,
											"end": 31411,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 31384,
											"end": 31390,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 31340,
											"end": 31412,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 31340,
											"end": 31412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31340,
											"end": 31412,
											"name": "tag",
											"source": 14,
											"value": "891"
										},
										{
											"begin": 31340,
											"end": 31412,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31422,
											"end": 31494,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "892"
										},
										{
											"begin": 31490,
											"end": 31492,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 31479,
											"end": 31488,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 31475,
											"end": 31493,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 31466,
											"end": 31472,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 31422,
											"end": 31494,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 31422,
											"end": 31494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31422,
											"end": 31494,
											"name": "tag",
											"source": 14,
											"value": "892"
										},
										{
											"begin": 31422,
											"end": 31494,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31059,
											"end": 31501,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 31059,
											"end": 31501,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 31059,
											"end": 31501,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31059,
											"end": 31501,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31059,
											"end": 31501,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31059,
											"end": 31501,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31059,
											"end": 31501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31507,
											"end": 31605,
											"name": "tag",
											"source": 14,
											"value": "603"
										},
										{
											"begin": 31507,
											"end": 31605,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31558,
											"end": 31564,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 31592,
											"end": 31597,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 31586,
											"end": 31598,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 31576,
											"end": 31598,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 31576,
											"end": 31598,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31507,
											"end": 31605,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 31507,
											"end": 31605,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 31507,
											"end": 31605,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31507,
											"end": 31605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31611,
											"end": 31758,
											"name": "tag",
											"source": 14,
											"value": "604"
										},
										{
											"begin": 31611,
											"end": 31758,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31712,
											"end": 31723,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 31749,
											"end": 31752,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 31734,
											"end": 31752,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 31734,
											"end": 31752,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31611,
											"end": 31758,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 31611,
											"end": 31758,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 31611,
											"end": 31758,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31611,
											"end": 31758,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31611,
											"end": 31758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31764,
											"end": 32150,
											"name": "tag",
											"source": 14,
											"value": "605"
										},
										{
											"begin": 31764,
											"end": 32150,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31868,
											"end": 31871,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 31896,
											"end": 31934,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "896"
										},
										{
											"begin": 31928,
											"end": 31933,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 31896,
											"end": 31934,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "603"
										},
										{
											"begin": 31896,
											"end": 31934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31896,
											"end": 31934,
											"name": "tag",
											"source": 14,
											"value": "896"
										},
										{
											"begin": 31896,
											"end": 31934,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31950,
											"end": 32038,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "897"
										},
										{
											"begin": 32031,
											"end": 32037,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 32026,
											"end": 32029,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 31950,
											"end": 32038,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "604"
										},
										{
											"begin": 31950,
											"end": 32038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31950,
											"end": 32038,
											"name": "tag",
											"source": 14,
											"value": "897"
										},
										{
											"begin": 31950,
											"end": 32038,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31943,
											"end": 32038,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 31943,
											"end": 32038,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32047,
											"end": 32112,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "898"
										},
										{
											"begin": 32105,
											"end": 32111,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 32100,
											"end": 32103,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 32093,
											"end": 32097,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 32086,
											"end": 32091,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 32082,
											"end": 32098,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 32047,
											"end": 32112,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "537"
										},
										{
											"begin": 32047,
											"end": 32112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 32047,
											"end": 32112,
											"name": "tag",
											"source": 14,
											"value": "898"
										},
										{
											"begin": 32047,
											"end": 32112,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 32137,
											"end": 32143,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 32132,
											"end": 32135,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 32128,
											"end": 32144,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 32121,
											"end": 32144,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 32121,
											"end": 32144,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31872,
											"end": 32150,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31764,
											"end": 32150,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 31764,
											"end": 32150,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 31764,
											"end": 32150,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31764,
											"end": 32150,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31764,
											"end": 32150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 32156,
											"end": 32427,
											"name": "tag",
											"source": 14,
											"value": "510"
										},
										{
											"begin": 32156,
											"end": 32427,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 32286,
											"end": 32289,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 32308,
											"end": 32401,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "900"
										},
										{
											"begin": 32397,
											"end": 32400,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 32388,
											"end": 32394,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 32308,
											"end": 32401,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "605"
										},
										{
											"begin": 32308,
											"end": 32401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 32308,
											"end": 32401,
											"name": "tag",
											"source": 14,
											"value": "900"
										},
										{
											"begin": 32308,
											"end": 32401,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 32301,
											"end": 32401,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 32301,
											"end": 32401,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32418,
											"end": 32421,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 32411,
											"end": 32421,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 32411,
											"end": 32421,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32156,
											"end": 32427,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 32156,
											"end": 32427,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 32156,
											"end": 32427,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32156,
											"end": 32427,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32156,
											"end": 32427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"_ADMIN()": "51557289",
							"_BURN()": "53a4c31e",
							"_BURNFROM()": "6ba77a38",
							"_MINT()": "8ebed5b1",
							"_MINTTO()": "7e92a7fd",
							"_RESCUE()": "8d580b9f",
							"_SUPPLY()": "ea5cb532",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"disableMint(bool)": "deb6db36",
							"disableMintTo(bool)": "f2250d3d",
							"ethRescue(address,uint256)": "48132f48",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"mint(uint256)": "a0712d68",
							"mintDisabled()": "956feccf",
							"mintTo(address,uint256)": "449a52f8",
							"mintToDisabled()": "d1c9f69b",
							"moveERC20(address,address,uint256)": "41f431fd",
							"name()": "06fdde03",
							"paused()": "5c975abb",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"setPaused(bool)": "16c38b3c",
							"setSupplyCap(uint256)": "b6a3f59a",
							"setWhitelistAddress(address,bool)": "3f914aef",
							"supplyCap()": "8f770ad0",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"txFee()": "cf820461",
							"vault()": "fbfa77cf",
							"whitelistedAddress(address)": "c30796ab"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_blockHeight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_pausedBy\",\"type\":\"address\"}],\"name\":\"ContractPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_blockHeight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_unpausedBy\",\"type\":\"address\"}],\"name\":\"ContractUnpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_blockHeight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_dest\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Rescued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_dest\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_blockHeight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"ETHRescued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_blockHeight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_disabledBy\",\"type\":\"address\"}],\"name\":\"MintingDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_blockHeight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_enabledBy\",\"type\":\"address\"}],\"name\":\"MintingEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_blockHeight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_disabledBy\",\"type\":\"address\"}],\"name\":\"MintingToDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_blockHeight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_enabledBy\",\"type\":\"address\"}],\"name\":\"MintingToEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newCap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_changedBy\",\"type\":\"address\"}],\"name\":\"SupplyCapChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_burner\",\"type\":\"address\"}],\"name\":\"TokensBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_burner\",\"type\":\"address\"}],\"name\":\"TokensBurnedFrom\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"TokensMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"TokensMintedTo\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_ADMIN\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_BURN\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_BURNFROM\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_MINT\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_MINTTO\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_RESCUE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_SUPPLY\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_disableMinting\",\"type\":\"bool\"}],\"name\":\"disableMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_disableMintTo\",\"type\":\"bool\"}],\"name\":\"disableMintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_dest\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_etherAmount\",\"type\":\"uint256\"}],\"name\":\"ethRescue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintDisabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintToDisabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_ERC20\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_dest\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ERC20Amount\",\"type\":\"uint256\"}],\"name\":\"moveERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_supplyCap\",\"type\":\"uint256\"}],\"name\":\"setSupplyCap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_whitelist\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"setWhitelistAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supplyCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelistedAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract implements an ERC20 token with additional features such as minting, burning, pausing, supply capping, and transfer fee mechanisms. It uses role-based access control for administrative functions and is protected against reentrancy attacks.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Function to burn tokens from the caller's balance. Only callable by an address with the _BURN role, and if the contract is not paused.\",\"params\":{\"_amount\":\"The amount of tokens to burn.\"}},\"burnFrom(address,uint256)\":{\"details\":\"Function to burn tokens from a specific address. Only callable by an address with the _BURNFROM role, and if the contract is not paused.\",\"params\":{\"_amount\":\"The amount of tokens to burn.\",\"_from\":\"The address to burn tokens from.\"}},\"constructor\":{\"details\":\"Constructor to initialize the token contract with a vault address and an initial supply of tokens.\",\"params\":{\"_vault\":\"The address where transaction fees will be sent.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"disableMint(bool)\":{\"details\":\"Function to disable or enable minting. Only callable by an admin.\",\"params\":{\"_disableMinting\":\"Boolean indicating whether minting should be disabled.\"}},\"disableMintTo(bool)\":{\"details\":\"Function to disable or enable minting to specific addresses. Only callable by an admin.\",\"params\":{\"_disableMintTo\":\"Boolean indicating whether minting to specific addresses should be disabled.\"}},\"ethRescue(address,uint256)\":{\"details\":\"Function to rescue Ether sent to the contract by mistake. Only callable by an address with the _RESCUE role.\",\"params\":{\"_dest\":\"The address to send the rescued Ether to.\",\"_etherAmount\":\"The amount of Ether to rescue.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"mint(uint256)\":{\"details\":\"Function to mint tokens to the caller. Only callable by an address with the _MINT role, and if minting is enabled and contract is not paused.\",\"params\":{\"_amount\":\"The amount of tokens to mint.\"}},\"mintTo(address,uint256)\":{\"details\":\"Function to mint tokens to a specific address. Only callable by an address with the _MINTTO role, and if minting to is enabled and contract is not paused.\",\"params\":{\"_amount\":\"The amount of tokens to mint.\",\"_to\":\"The address to mint tokens to.\"}},\"moveERC20(address,address,uint256)\":{\"details\":\"Function to rescue ERC20 tokens sent to the contract by mistake. Only callable by an address with the _RESCUE role.\",\"params\":{\"_ERC20\":\"The address of the ERC20 token to rescue.\",\"_ERC20Amount\":\"The amount of tokens to rescue.\",\"_dest\":\"The address to send the rescued tokens to.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setPaused(bool)\":{\"details\":\"Function to pause or unpause the contract's operations. Only callable by an admin.\",\"params\":{\"_paused\":\"Boolean indicating whether the contract should be paused.\"}},\"setSupplyCap(uint256)\":{\"details\":\"Function to change the supply cap of the token. Only callable by an address with the _SUPPLY role, and if the contract is not paused.\",\"params\":{\"_supplyCap\":\"The new supply cap.\"}},\"setWhitelistAddress(address,bool)\":{\"details\":\"Function to add or remove an address from the whitelist. Whitelisted addresses are exempt from transfer fees. Only callable by an admin.\",\"params\":{\"_status\":\"Boolean indicating whether to add (true) or remove (false) the address from the whitelist.\",\"_whitelist\":\"The address to whitelist or remove from the whitelist.\"}},\"supplyCap()\":{\"details\":\"Function to get the current supply cap.\",\"returns\":{\"_0\":\"The current supply cap.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"Function to transfer tokens from the caller's address to another, applying a transaction fee unless the sender is whitelisted.\",\"params\":{\"to\":\"The address receiving tokens.\",\"value\":\"The amount of tokens to transfer.\"},\"returns\":{\"_0\":\"True if the transfer was successful.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Function to transfer tokens from one address to another, applying a transaction fee unless the sender is whitelisted.\",\"params\":{\"from\":\"The address sending tokens.\",\"to\":\"The address receiving tokens.\",\"value\":\"The amount of tokens to transfer.\"},\"returns\":{\"_0\":\"True if the transfer was successful.\"}}},\"title\":\"Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/token.sol\":\"Token\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"src/token.sol\":{\"keccak256\":\"0xde151152fde6d8c743508ffb60bf56f0717e1f0b05c82d810af0a7d44db03bbb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1d1ff2421f1d0833de1cde85e6a8bbf5d4dfd7daef06b8b69a3a538b86ec2a52\",\"dweb:/ipfs/QmbGt1q1cD48AWyNXZQpAjazMgsCWfnRYEkvRcW6YgdFbb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 603,
								"contract": "src/token.sol:Token",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 609,
								"contract": "src/token.sol:Token",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 611,
								"contract": "src/token.sol:Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 613,
								"contract": "src/token.sol:Token",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 615,
								"contract": "src/token.sol:Token",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 26,
								"contract": "src/token.sol:Token",
								"label": "_roles",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 526,
								"contract": "src/token.sol:Token",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1904,
								"contract": "src/token.sol:Token",
								"label": "_cap",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1906,
								"contract": "src/token.sol:Token",
								"label": "vault",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 1909,
								"contract": "src/token.sol:Token",
								"label": "txFee",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1911,
								"contract": "src/token.sol:Token",
								"label": "paused",
								"offset": 0,
								"slot": "10",
								"type": "t_bool"
							},
							{
								"astId": 1913,
								"contract": "src/token.sol:Token",
								"label": "mintDisabled",
								"offset": 1,
								"slot": "10",
								"type": "t_bool"
							},
							{
								"astId": 1915,
								"contract": "src/token.sol:Token",
								"label": "mintToDisabled",
								"offset": 2,
								"slot": "10",
								"type": "t_bool"
							},
							{
								"astId": 2004,
								"contract": "src/token.sol:Token",
								"label": "whitelistedAddress",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "src/token.sol:Token",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "src/token.sol:Token",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1808
						],
						"ERC165": [
							1832
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1809,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1808,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1833,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1832,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1808,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1832,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								1832,
								1844,
								378,
								1808
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1831
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1831,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1790,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1790,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1790,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1790,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "235:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "256:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "323:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "364:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "356:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "381:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "373:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:37:1"
									},
									"src": "317:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "399:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "558:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:2:1"
									},
									"src": "552:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "595:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "860:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "893:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "877:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "915:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "899:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "950:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "934:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:87:1"
									},
									"src": "854:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "970:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1193:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1221:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1205:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1243:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1227:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1268:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1252:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:71:1"
									},
									"src": "1187:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1282:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1568:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1596:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1580:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1618:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1602:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1643:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1627:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:71:1"
									},
									"src": "1562:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1657:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1747:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1763:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1755:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1755:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1777:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1769:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1809:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1809:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:6:1"
									},
									"scope": 378,
									"src": "1738:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1821:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2019:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2040:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2032:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2031:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:9:1"
									},
									"scope": 378,
									"src": "2010:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2084:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2337:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2355:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2347:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2369:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2361:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:0:1"
									},
									"scope": 378,
									"src": "2328:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2393:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2630:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2649:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2641:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2663:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2655:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2680:0:1"
									},
									"scope": 378,
									"src": "2621:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2687:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3192:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3213:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3205:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3227:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3219:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3204:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:1"
									},
									"scope": 378,
									"src": "3183:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "225:3033:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3150:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							515
						],
						"IERC20Errors": [
							420
						],
						"IERC721Errors": [
							468
						]
					},
					"id": 516,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:2",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 420,
							"linearizedBaseContracts": [
								420
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 390,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "652:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "668:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "685:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:2"
									},
									"src": "621:80:2"
								},
								{
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 395,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "889:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:2"
									},
									"src": "864:41:2"
								},
								{
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 400,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1102:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:2"
									},
									"src": "1075:45:2"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 409,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1509:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1526:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1545:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:2"
									},
									"src": "1476:85:2"
								},
								{
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 414,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "1773:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:2"
									},
									"src": "1746:45:2"
								},
								{
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 419,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:2"
									},
									"src": "1997:43:2"
								}
							],
							"scope": 516,
							"src": "278:1764:2",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 421,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:2",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 468,
							"linearizedBaseContracts": [
								468
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 426,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2465:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:2"
									},
									"src": "2440:40:2"
								},
								{
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 431,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "2652:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:2"
									},
									"src": "2623:46:2"
								},
								{
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 440,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "2996:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3012:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3029:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:2"
									},
									"src": "2969:75:2"
								},
								{
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 445,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "3233:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:2"
									},
									"src": "3207:42:2"
								},
								{
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 450,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3447:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:2"
									},
									"src": "3419:46:2"
								},
								{
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 457,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3756:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3774:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:2"
									},
									"src": "3723:68:2"
								},
								{
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 462,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "4004:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:2"
									},
									"src": "3976:46:2"
								},
								{
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 467,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "4258:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:2"
									},
									"src": "4230:46:2"
								}
							],
							"scope": 516,
							"src": "2186:2092:2",
							"usedErrors": [
								426,
								431,
								440,
								445,
								450,
								457,
								462,
								467
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 469,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:2",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 515,
							"linearizedBaseContracts": [
								515
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 480,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4854:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4870:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4887:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4903:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:2"
									},
									"src": "4821:99:2"
								},
								{
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 485,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "5110:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:2"
									},
									"src": "5083:43:2"
								},
								{
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 490,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "5325:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:2"
									},
									"src": "5296:47:2"
								},
								{
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 497,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5645:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5663:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:2"
									},
									"src": "5610:68:2"
								},
								{
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 502,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "5892:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:2"
									},
									"src": "5863:47:2"
								},
								{
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 507,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "6147:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:2"
									},
									"src": "6118:47:2"
								},
								{
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 514,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6488:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6507:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:2"
									},
									"src": "6456:73:2"
								}
							],
							"scope": 516,
							"src": "4424:2107:2",
							"usedErrors": [
								480,
								485,
								490,
								497,
								502,
								507,
								514
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							580
						]
					},
					"id": 581,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 517,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 518,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:3",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 580,
							"linearizedBaseContracts": [
								580
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 521,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 580,
									"src": "1676:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 519,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 520,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 524,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 580,
									"src": "1723:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 522,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 523,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 526,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 580,
									"src": "1767:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 525,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "1811:39:3",
										"statements": [
											{
												"expression": {
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 529,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "1821:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 530,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "1831:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 532,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:3"
											}
										]
									},
									"id": 534,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:3"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:3"
									},
									"scope": 580,
									"src": "1797:53:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "2251:79:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 537,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "2261:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:3"
											},
											{
												"id": 540,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:3"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 541,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "2303:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:3"
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 545,
									"name": "nonReentrant",
									"nameLocation": "2236:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:3"
									},
									"src": "2227:103:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "2375:248:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 549,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "2468:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 550,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "2479:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 548,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:3"
											},
											{
												"expression": {
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 555,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "2598:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 556,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "2608:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 558,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:3"
											}
										]
									},
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:3"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:3"
									},
									"scope": 580,
									"src": "2336:287:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 567,
										"nodeType": "Block",
										"src": "2667:171:3",
										"statements": [
											{
												"expression": {
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 563,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "2809:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 564,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "2819:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 566,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:3"
											}
										]
									},
									"id": 568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:3"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:3"
									},
									"scope": 580,
									"src": "2629:209:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "3081:43:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 574,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "3098:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 575,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "3109:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 573,
												"id": 577,
												"nodeType": "Return",
												"src": "3091:26:3"
											}
										]
									},
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:3",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:3"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "3075:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 571,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:3"
									},
									"scope": 580,
									"src": "3017:107:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 581,
							"src": "888:2238:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1808
						],
						"ERC20": [
							1095
						],
						"IERC20": [
							1173
						],
						"IERC20Errors": [
							420
						],
						"IERC20Metadata": [
							1199
						]
					},
					"id": 1096,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 582,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 584,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1096,
							"sourceUnit": 1174,
							"src": "131:36:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 583,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1173,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 586,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1096,
							"sourceUnit": 1200,
							"src": "168:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 585,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1199,
										"src": "176:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 588,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1096,
							"sourceUnit": 1809,
							"src": "232:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 587,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1808,
										"src": "240:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 590,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1096,
							"sourceUnit": 516,
							"src": "281:65:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 589,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 420,
										"src": "289:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 592,
										"name": "Context",
										"nameLocations": [
											"1428:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1808,
										"src": "1428:7:4"
									},
									"id": 593,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:4"
								},
								{
									"baseName": {
										"id": 594,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1173,
										"src": "1437:6:4"
									},
									"id": 595,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:4"
								},
								{
									"baseName": {
										"id": 596,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1199,
										"src": "1445:14:4"
									},
									"id": 597,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:4"
								},
								{
									"baseName": {
										"id": 598,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 420,
										"src": "1461:12:4"
									},
									"id": 599,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:4"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 591,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 1095,
							"linearizedBaseContracts": [
								1095,
								420,
								1199,
								1173,
								1808
							],
							"name": "ERC20",
							"nameLocation": "1419:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 603,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1095,
									"src": "1480:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 602,
										"keyName": "account",
										"keyNameLocation": "1496:7:4",
										"keyType": {
											"id": 600,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 601,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 609,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1095,
									"src": "1540:83:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 608,
										"keyName": "account",
										"keyNameLocation": "1556:7:4",
										"keyType": {
											"id": 604,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 607,
											"keyName": "spender",
											"keyNameLocation": "1583:7:4",
											"keyType": {
												"id": 605,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 606,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 611,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1095,
									"src": "1630:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 610,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 613,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1095,
									"src": "1665:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 612,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 615,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1095,
									"src": "1691:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 614,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "1952:57:4",
										"statements": [
											{
												"expression": {
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 623,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "1962:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 624,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "1970:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 626,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:4"
											},
											{
												"expression": {
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 627,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "1985:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 628,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 620,
														"src": "1995:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 630,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:4"
											}
										]
									},
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 632,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "1908:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 617,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "1929:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 619,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:4"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:4"
									},
									"scope": 1095,
									"src": "1896:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1186
									],
									"body": {
										"id": 640,
										"nodeType": "Block",
										"src": "2134:29:4",
										"statements": [
											{
												"expression": {
													"id": 638,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 613,
													"src": "2151:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 637,
												"id": 639,
												"nodeType": "Return",
												"src": "2144:12:4"
											}
										]
									},
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 641,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:4"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "2119:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 635,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:4"
									},
									"scope": 1095,
									"src": "2074:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1192
									],
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "2338:31:4",
										"statements": [
											{
												"expression": {
													"id": 647,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 615,
													"src": "2355:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 646,
												"id": 648,
												"nodeType": "Return",
												"src": "2348:14:4"
											}
										]
									},
									"documentation": {
										"id": 642,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:4"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "2323:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 644,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:4"
									},
									"scope": 1095,
									"src": "2276:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1198
									],
									"body": {
										"id": 658,
										"nodeType": "Block",
										"src": "3058:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 655,
												"id": 657,
												"nodeType": "Return",
												"src": "3068:9:4"
											}
										]
									},
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:4"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "3051:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 653,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:4"
									},
									"scope": 1095,
									"src": "3002:82:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1122
									],
									"body": {
										"id": 667,
										"nodeType": "Block",
										"src": "3205:36:4",
										"statements": [
											{
												"expression": {
													"id": 665,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 611,
													"src": "3222:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 664,
												"id": 666,
												"nodeType": "Return",
												"src": "3215:19:4"
											}
										]
									},
									"documentation": {
										"id": 660,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:4"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "3196:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:4"
									},
									"scope": 1095,
									"src": "3144:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1130
									],
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "3373:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 676,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "3390:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 678,
													"indexExpression": {
														"id": 677,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "3400:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 675,
												"id": 679,
												"nodeType": "Return",
												"src": "3383:25:4"
											}
										]
									},
									"documentation": {
										"id": 669,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "3318:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:4"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "3364:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:4"
									},
									"scope": 1095,
									"src": "3299:116:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1140
									],
									"body": {
										"id": 704,
										"nodeType": "Block",
										"src": "3685:103:4",
										"statements": [
											{
												"assignments": [
													692
												],
												"declarations": [
													{
														"constant": false,
														"id": 692,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 704,
														"src": "3695:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 691,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 695,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 693,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1790,
														"src": "3711:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 697,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "3743:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 698,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "3750:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 699,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "3754:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 696,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "3733:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 701,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 690,
												"id": 703,
												"nodeType": "Return",
												"src": "3770:11:4"
											}
										]
									},
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3628:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3640:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:4"
									},
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3679:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 688,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:4"
									},
									"scope": 1095,
									"src": "3610:178:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1150
									],
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "3935:51:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 715,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "3952:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 717,
														"indexExpression": {
															"id": 716,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "3964:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 719,
													"indexExpression": {
														"id": 718,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "3971:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 714,
												"id": 720,
												"nodeType": "Return",
												"src": "3945:34:4"
											}
										]
									},
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "3865:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "3880:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:4"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "3926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:4"
									},
									"scope": 1095,
									"src": "3846:140:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1160
									],
									"body": {
										"id": 745,
										"nodeType": "Block",
										"src": "4372:107:4",
										"statements": [
											{
												"assignments": [
													733
												],
												"declarations": [
													{
														"constant": false,
														"id": 733,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 745,
														"src": "4382:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 732,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 736,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 734,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1790,
														"src": "4398:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 738,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "4429:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 739,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "4436:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 740,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "4445:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 737,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															986,
															1046
														],
														"referencedDeclaration": 986,
														"src": "4420:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 742,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 731,
												"id": 744,
												"nodeType": "Return",
												"src": "4461:11:4"
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "4310:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "4327:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:4"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "4366:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 729,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:4"
									},
									"scope": 1095,
									"src": "4293:186:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1172
									],
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "5132:151:4",
										"statements": [
											{
												"assignments": [
													759
												],
												"declarations": [
													{
														"constant": false,
														"id": 759,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "5142:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 758,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 762,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 760,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1790,
														"src": "5160:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 764,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "5198:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 765,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "5204:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 766,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "5213:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 763,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1094,
														"src": "5182:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 768,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 770,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "5239:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 771,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "5245:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 772,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "5249:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 769,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "5229:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 774,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 757,
												"id": 776,
												"nodeType": "Return",
												"src": "5265:11:4"
											}
										]
									},
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:4",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "5061:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "5075:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "5087:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:4"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "5126:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 755,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:4"
									},
									"scope": 1095,
									"src": "5039:244:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "5725:231:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 788,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 781,
														"src": "5739:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 789,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 792,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 802,
												"nodeType": "IfStatement",
												"src": "5735:86:4",
												"trueBody": {
													"id": 801,
													"nodeType": "Block",
													"src": "5759:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 797,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 796,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 795,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 794,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "5780:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 800,
															"nodeType": "RevertStatement",
															"src": "5773:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 803,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "5834:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 806,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 804,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 807,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 817,
												"nodeType": "IfStatement",
												"src": "5830:86:4",
												"trueBody": {
													"id": 816,
													"nodeType": "Block",
													"src": "5852:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 812,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 811,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 810,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 809,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "5873:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 815,
															"nodeType": "RevertStatement",
															"src": "5866:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 819,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "5933:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 820,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "5939:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 821,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "5943:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 818,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "5925:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 823,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:4"
											}
										]
									},
									"documentation": {
										"id": 779,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "5675:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "5689:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "5701:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:4"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:4"
									},
									"scope": 1095,
									"src": "5656:300:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 901,
										"nodeType": "Block",
										"src": "6346:1032:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 835,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "6360:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 836,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 839,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 872,
													"nodeType": "Block",
													"src": "6534:362:4",
													"statements": [
														{
															"assignments": [
																847
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 847,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 872,
																	"src": "6548:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 846,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 851,
															"initialValue": {
																"baseExpression": {
																	"id": 848,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 603,
																	"src": "6570:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 850,
																"indexExpression": {
																	"id": 849,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "6580:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 854,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 852,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 847,
																	"src": "6603:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 853,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 832,
																	"src": "6617:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 862,
															"nodeType": "IfStatement",
															"src": "6599:115:4",
															"trueBody": {
																"id": 861,
																"nodeType": "Block",
																"src": "6624:90:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 856,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 828,
																					"src": "6674:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 857,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 847,
																					"src": "6680:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 858,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 832,
																					"src": "6693:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 855,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 390,
																				"src": "6649:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 859,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 860,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:4"
																	}
																]
															}
														},
														{
															"id": 871,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:4",
															"statements": [
																{
																	"expression": {
																		"id": 869,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 863,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 603,
																				"src": "6834:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 865,
																			"indexExpression": {
																				"id": 864,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 828,
																				"src": "6844:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 868,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 866,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 847,
																				"src": "6852:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 867,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 832,
																				"src": "6866:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 870,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:4"
																}
															]
														}
													]
												},
												"id": 873,
												"nodeType": "IfStatement",
												"src": "6356:540:4",
												"trueBody": {
													"id": 845,
													"nodeType": "Block",
													"src": "6380:148:4",
													"statements": [
														{
															"expression": {
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 841,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 611,
																	"src": "6496:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 842,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 832,
																	"src": "6512:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 844,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 874,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "6910:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 875,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 878,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 893,
													"nodeType": "Block",
													"src": "7125:206:4",
													"statements": [
														{
															"id": 892,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:4",
															"statements": [
																{
																	"expression": {
																		"id": 890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 886,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 603,
																				"src": "7284:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 888,
																			"indexExpression": {
																				"id": 887,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 830,
																				"src": "7294:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 889,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 832,
																			"src": "7301:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 891,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:4"
																}
															]
														}
													]
												},
												"id": 894,
												"nodeType": "IfStatement",
												"src": "6906:425:4",
												"trueBody": {
													"id": 885,
													"nodeType": "Block",
													"src": "6928:191:4",
													"statements": [
														{
															"id": 884,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:4",
															"statements": [
																{
																	"expression": {
																		"id": 882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 880,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 611,
																			"src": "7073:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 881,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 832,
																			"src": "7089:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 883,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:4"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 896,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "7355:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 897,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "7361:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 898,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "7365:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 895,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "7346:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 900,
												"nodeType": "EmitStatement",
												"src": "7341:30:4"
											}
										]
									},
									"documentation": {
										"id": 826,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:4",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "6288:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "6302:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "6314:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:4"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:4"
									},
									"scope": 1095,
									"src": "6271:1107:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 934,
										"nodeType": "Block",
										"src": "7777:152:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 910,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "7791:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 911,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 914,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 924,
												"nodeType": "IfStatement",
												"src": "7787:91:4",
												"trueBody": {
													"id": 923,
													"nodeType": "Block",
													"src": "7814:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 919,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 918,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 917,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 916,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "7835:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 922,
															"nodeType": "RevertStatement",
															"src": "7828:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 926,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 930,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "7907:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 931,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "7916:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 925,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "7887:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 933,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:4"
											}
										]
									},
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:4",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "7736:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "7753:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:4"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:4"
									},
									"scope": 1095,
									"src": "7721:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 967,
										"nodeType": "Block",
										"src": "8303:150:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 943,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "8317:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 946,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 944,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 947,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 957,
												"nodeType": "IfStatement",
												"src": "8313:89:4",
												"trueBody": {
													"id": 956,
													"nodeType": "Block",
													"src": "8340:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 952,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 951,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 950,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 953,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 949,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "8361:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 954,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 955,
															"nodeType": "RevertStatement",
															"src": "8354:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 959,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "8419:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 960,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 964,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "8440:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 958,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "8411:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 966,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:4"
											}
										]
									},
									"documentation": {
										"id": 936,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "8262:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "8279:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:4"
									},
									"returnParameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:4"
									},
									"scope": 1095,
									"src": "8247:206:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 985,
										"nodeType": "Block",
										"src": "9063:54:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 979,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "9082:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 980,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "9089:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 981,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "9098:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 978,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															986,
															1046
														],
														"referencedDeclaration": 1046,
														"src": "9073:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 984,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:4"
											}
										]
									},
									"documentation": {
										"id": 969,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:4",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 986,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "9007:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "9022:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "9039:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:4"
									},
									"returnParameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:4"
									},
									"scope": 1095,
									"src": "8989:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "10047:334:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 998,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "10061:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 999,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1002,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1012,
												"nodeType": "IfStatement",
												"src": "10057:89:4",
												"trueBody": {
													"id": 1011,
													"nodeType": "Block",
													"src": "10082:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1007,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1006,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1005,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1004,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "10103:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1010,
															"nodeType": "RevertStatement",
															"src": "10096:39:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1013,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 991,
														"src": "10159:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1016,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1014,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1017,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1027,
												"nodeType": "IfStatement",
												"src": "10155:90:4",
												"trueBody": {
													"id": 1026,
													"nodeType": "Block",
													"src": "10182:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1022,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1021,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1020,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1019,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "10203:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1025,
															"nodeType": "RevertStatement",
															"src": "10196:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1028,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "10254:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1031,
															"indexExpression": {
																"id": 1029,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 989,
																"src": "10266:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1032,
														"indexExpression": {
															"id": 1030,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "10273:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1033,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 993,
														"src": "10284:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1035,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:4"
											},
											{
												"condition": {
													"id": 1036,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 995,
													"src": "10303:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1044,
												"nodeType": "IfStatement",
												"src": "10299:76:4",
												"trueBody": {
													"id": 1043,
													"nodeType": "Block",
													"src": "10314:61:4",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1038,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 989,
																		"src": "10342:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1039,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 991,
																		"src": "10349:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1040,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 993,
																		"src": "10358:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1037,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1116,
																	"src": "10333:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1042,
															"nodeType": "EmitStatement",
															"src": "10328:36:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 987,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:4",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "9967:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "9982:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "9999:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "10014:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 994,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:4"
									},
									"returnParameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:4"
									},
									"scope": 1095,
									"src": "9949:432:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1093,
										"nodeType": "Block",
										"src": "10752:388:4",
										"statements": [
											{
												"assignments": [
													1057
												],
												"declarations": [
													{
														"constant": false,
														"id": 1057,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 1093,
														"src": "10762:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1056,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1062,
												"initialValue": {
													"arguments": [
														{
															"id": 1059,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "10799:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1060,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "10806:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1058,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "10789:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1063,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1057,
														"src": "10828:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1065,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1064,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1068,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1092,
												"nodeType": "IfStatement",
												"src": "10824:310:4",
												"trueBody": {
													"id": 1091,
													"nodeType": "Block",
													"src": "10867:267:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1070,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "10885:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1071,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1053,
																	"src": "10904:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1080,
															"nodeType": "IfStatement",
															"src": "10881:130:4",
															"trueBody": {
																"id": 1079,
																"nodeType": "Block",
																"src": "10911:100:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1074,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1051,
																					"src": "10963:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1075,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1057,
																					"src": "10972:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1076,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1053,
																					"src": "10990:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1073,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 409,
																				"src": "10936:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1077,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1078,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:4"
																	}
																]
															}
														},
														{
															"id": 1090,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1082,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1049,
																				"src": "11061:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1083,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1051,
																				"src": "11068:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1086,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1084,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1057,
																					"src": "11077:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1085,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1053,
																					"src": "11096:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1087,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1081,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				986,
																				1046
																			],
																			"referencedDeclaration": 1046,
																			"src": "11052:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1088,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1089,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1047,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:4",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "10688:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "10703:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "10720:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:4"
									},
									"returnParameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:4"
									},
									"scope": 1095,
									"src": "10663:477:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1096,
							"src": "1401:9741:4",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": [
								1107,
								1116
							]
						}
					],
					"src": "105:11038:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1173
						]
					},
					"id": 1174,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1097,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1098,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:5",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1173,
							"linearizedBaseContracts": [
								1173
							],
							"name": "IERC20",
							"nameLocation": "213:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1099,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1107,
									"name": "Transfer",
									"nameLocation": "395:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "404:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "426:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "446:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:5"
									},
									"src": "389:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1108,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1116,
									"name": "Approval",
									"nameLocation": "626:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "635:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "658:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "683:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:5"
									},
									"src": "620:78:5"
								},
								{
									"documentation": {
										"id": 1117,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1122,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:5"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "820:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:5"
									},
									"scope": 1173,
									"src": "774:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1123,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1130,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "930:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:5"
									},
									"returnParameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "970:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:5"
									},
									"scope": 1173,
									"src": "911:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1131,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1140,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "1221:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "1233:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:5"
									},
									"returnParameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "1266:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1137,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:5"
									},
									"scope": 1173,
									"src": "1203:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1141,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "1566:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "1581:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:5"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "1621:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:5"
									},
									"scope": 1173,
									"src": "1547:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1151,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1160,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "2325:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "2342:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:5"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "2375:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1157,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:5"
									},
									"scope": 1173,
									"src": "2308:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1161,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1172,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "2711:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "2725:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "2737:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:5"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "2770:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1169,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:5"
									},
									"scope": 1173,
									"src": "2689:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1174,
							"src": "203:2575:5",
							"usedErrors": [],
							"usedEvents": [
								1107,
								1116
							]
						}
					],
					"src": "106:2673:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1173
						],
						"IERC20Metadata": [
							1199
						]
					},
					"id": 1200,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1175,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1177,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1200,
							"sourceUnit": 1174,
							"src": "151:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1176,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1173,
										"src": "159:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1179,
										"name": "IERC20",
										"nameLocations": [
											"305:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1173,
										"src": "305:6:6"
									},
									"id": 1180,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1178,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:6",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 1199,
							"linearizedBaseContracts": [
								1199,
								1173
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1181,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1186,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:6"
									},
									"returnParameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "416:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1183,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:6"
									},
									"scope": 1199,
									"src": "377:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1187,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:6"
									},
									"returnParameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "539:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1189,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:6"
									},
									"scope": 1199,
									"src": "498:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1193,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1198,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:6"
									},
									"returnParameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "673:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1195,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:6"
									},
									"scope": 1199,
									"src": "630:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1200,
							"src": "277:405:6",
							"usedErrors": [],
							"usedEvents": [
								1107,
								1116
							]
						}
					],
					"src": "125:558:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							1235
						]
					},
					"id": 1236,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1201,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1202,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:7",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 1235,
							"linearizedBaseContracts": [
								1235
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1203,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:7",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 1220,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "3022:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "3045:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "3070:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "3093:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "3119:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1212,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "3136:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1214,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "3155:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1216,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:7"
									},
									"returnParameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:7"
									},
									"scope": 1235,
									"src": "2997:183:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1221,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:7",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 1228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "3501:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:7"
									},
									"returnParameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "3539:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:7"
									},
									"scope": 1235,
									"src": "3485:63:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1229,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:7",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 1234,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:7"
									},
									"returnParameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "3791:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1231,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:7"
									},
									"scope": 1235,
									"src": "3740:60:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1236,
							"src": "2113:1689:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1778
						],
						"IERC20": [
							1173
						],
						"IERC20Permit": [
							1235
						],
						"SafeERC20": [
							1525
						]
					},
					"id": 1526,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1237,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1239,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1526,
							"sourceUnit": 1174,
							"src": "141:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1238,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1173,
										"src": "149:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 1241,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1526,
							"sourceUnit": 1236,
							"src": "179:60:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1240,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1235,
										"src": "187:12:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 1243,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1526,
							"sourceUnit": 1779,
							"src": "240:51:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1242,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1778,
										"src": "248:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1244,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:8",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1525,
							"linearizedBaseContracts": [
								1525
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1247,
									"libraryName": {
										"id": 1245,
										"name": "Address",
										"nameLocations": [
											"781:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1778,
										"src": "781:7:8"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:8",
									"typeName": {
										"id": 1246,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 1248,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:8",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 1252,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "907:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:8"
									},
									"src": "876:46:8"
								},
								{
									"documentation": {
										"id": 1253,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:8",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 1261,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "1043:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "1060:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "1086:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:8"
									},
									"src": "1004:109:8"
								},
								{
									"body": {
										"id": 1284,
										"nodeType": "Block",
										"src": "1375:88:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1273,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1265,
															"src": "1405:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1173",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1276,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1265,
																		"src": "1427:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1173",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:8",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1140,
																	"src": "1427:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1278,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1267,
																			"src": "1444:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1279,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1269,
																			"src": "1448:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1280,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 1274,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1275,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:8",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1173",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1272,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1475,
														"src": "1385:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1173_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1283,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:8"
											}
										]
									},
									"documentation": {
										"id": 1262,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:8",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 1285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "1325:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1173",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1264,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1263,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1173,
														"src": "1325:6:8"
													},
													"referencedDeclaration": 1173,
													"src": "1325:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1173",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "1339:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "1351:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:8"
									},
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:8"
									},
									"scope": 1525,
									"src": "1303:160:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1311,
										"nodeType": "Block",
										"src": "1792:98:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1299,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "1822:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1173",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1302,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1289,
																		"src": "1844:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1173",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:8",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1172,
																	"src": "1844:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1304,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1291,
																			"src": "1865:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1305,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1293,
																			"src": "1871:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1306,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1295,
																			"src": "1875:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1307,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 1300,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1301,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:8",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1173",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1298,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1475,
														"src": "1802:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1173_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1310,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:8"
											}
										]
									},
									"documentation": {
										"id": 1286,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:8",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 1312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "1728:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1173",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1288,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1287,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1173,
														"src": "1728:6:8"
													},
													"referencedDeclaration": 1173,
													"src": "1728:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1173",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "1742:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "1756:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "1768:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:8"
									},
									"returnParameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:8"
									},
									"scope": 1525,
									"src": "1702:188:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1342,
										"nodeType": "Block",
										"src": "2167:139:8",
										"statements": [
											{
												"assignments": [
													1324
												],
												"declarations": [
													{
														"constant": false,
														"id": 1324,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 1342,
														"src": "2177:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1323,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1333,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1329,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1525",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1525",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 1328,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1327,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1331,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1318,
															"src": "2231:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1325,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1316,
															"src": "2200:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1173",
																"typeString": "contract IERC20"
															}
														},
														"id": 1326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:8",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1150,
														"src": "2200:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1335,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1316,
															"src": "2262:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1173",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 1336,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1318,
															"src": "2269:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1337,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1324,
																"src": "2278:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1338,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1320,
																"src": "2293:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1173",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1334,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1433,
														"src": "2249:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1173_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1341,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:8"
											}
										]
									},
									"documentation": {
										"id": 1313,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:8",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 1343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "2112:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1173",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1315,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1314,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1173,
														"src": "2112:6:8"
													},
													"referencedDeclaration": 1173,
													"src": "2112:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1173",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "2126:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "2143:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:8"
									},
									"returnParameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:8"
									},
									"scope": 1525,
									"src": "2081:225:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1385,
										"nodeType": "Block",
										"src": "2607:370:8",
										"statements": [
											{
												"id": 1384,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:8",
												"statements": [
													{
														"assignments": [
															1355
														],
														"declarations": [
															{
																"constant": false,
																"id": 1355,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:8",
																"nodeType": "VariableDeclaration",
																"scope": 1384,
																"src": "2641:24:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1354,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1364,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1360,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1525",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1525",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1358,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1362,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1349,
																	"src": "2699:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1356,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1347,
																	"src": "2668:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1173",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:8",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1150,
																"src": "2668:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1365,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1355,
																"src": "2725:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1366,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1351,
																"src": "2744:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1375,
														"nodeType": "IfStatement",
														"src": "2721:160:8",
														"trueBody": {
															"id": 1374,
															"nodeType": "Block",
															"src": "2763:118:8",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 1369,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1349,
																				"src": "2821:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1370,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1355,
																				"src": "2830:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1371,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1351,
																				"src": "2848:17:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1368,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1261,
																			"src": "2788:32:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 1372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 1373,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:8"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1377,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1347,
																	"src": "2907:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1173",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 1378,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1349,
																	"src": "2914:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1379,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1355,
																		"src": "2923:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1380,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1351,
																		"src": "2942:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1173",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1376,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1433,
																"src": "2894:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1173_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 1382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1383,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1344,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:8",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 1386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "2540:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1173",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1346,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1345,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1173,
														"src": "2540:6:8"
													},
													"referencedDeclaration": 1173,
													"src": "2540:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1173",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "2554:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "2571:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:8"
									},
									"returnParameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:8"
									},
									"scope": 1525,
									"src": "2509:468:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1432,
										"nodeType": "Block",
										"src": "3373:303:8",
										"statements": [
											{
												"assignments": [
													1398
												],
												"declarations": [
													{
														"constant": false,
														"id": 1398,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 1432,
														"src": "3383:25:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1397,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1407,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1401,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1390,
																"src": "3426:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1173",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:8",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1160,
															"src": "3426:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 1403,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1392,
																	"src": "3442:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1404,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1394,
																	"src": "3451:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1405,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 1399,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1400,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:8",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 1406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:8"
											},
											{
												"condition": {
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:8",
													"subExpression": {
														"arguments": [
															{
																"id": 1409,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1390,
																"src": "3498:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1173",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 1410,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1398,
																"src": "3505:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$1173",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1408,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "3474:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1173_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 1411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1431,
												"nodeType": "IfStatement",
												"src": "3469:201:8",
												"trueBody": {
													"id": 1430,
													"nodeType": "Block",
													"src": "3520:150:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1414,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1390,
																		"src": "3554:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1173",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1417,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1390,
																					"src": "3576:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1173",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1418,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:8",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1160,
																				"src": "3576:13:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1419,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1392,
																						"src": "3592:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 1420,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 1421,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 1415,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1416,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:8",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$1173",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1413,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1475,
																	"src": "3534:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1173_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1424,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1426,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1390,
																		"src": "3639:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1173",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 1427,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1398,
																		"src": "3646:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$1173",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1425,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1475,
																	"src": "3619:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1173_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1429,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1387,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:8",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 1433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "3318:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1173",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1389,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1388,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1173,
														"src": "3318:6:8"
													},
													"referencedDeclaration": 1173,
													"src": "3318:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1173",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "3332:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "3349:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:8"
									},
									"returnParameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:8"
									},
									"scope": 1525,
									"src": "3296:380:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1474,
										"nodeType": "Block",
										"src": "4129:559:8",
										"statements": [
											{
												"assignments": [
													1443
												],
												"declarations": [
													{
														"constant": false,
														"id": 1443,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1474,
														"src": "4478:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1442,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1451,
												"initialValue": {
													"arguments": [
														{
															"id": 1449,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "4532:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1446,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1437,
																	"src": "4512:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1173",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1173",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1445,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1444,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:8",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1599,
														"src": "4504:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 1450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1455,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1452,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1443,
																"src": "4551:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:8",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1454,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 1458,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1443,
																	"src": "4589:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1460,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 1459,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:8",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 1461,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 1456,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1457,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:8",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1473,
												"nodeType": "IfStatement",
												"src": "4547:135:8",
												"trueBody": {
													"id": 1472,
													"nodeType": "Block",
													"src": "4610:72:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1468,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1437,
																				"src": "4664:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$1173",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$1173",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1467,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1466,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1465,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1252,
																	"src": "4631:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1471,
															"nodeType": "RevertStatement",
															"src": "4624:47:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1434,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:8",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "4088:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1173",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1436,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1435,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1173,
														"src": "4088:6:8"
													},
													"referencedDeclaration": 1173,
													"src": "4088:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1173",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "4102:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1438,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:8"
									},
									"returnParameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:8"
									},
									"scope": 1525,
									"src": "4059:629:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1523,
										"nodeType": "Block",
										"src": "5278:489:8",
										"statements": [
											{
												"assignments": [
													1487,
													1489
												],
												"declarations": [
													{
														"constant": false,
														"id": 1487,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1523,
														"src": "5574:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1486,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1489,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1523,
														"src": "5588:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1488,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1497,
												"initialValue": {
													"arguments": [
														{
															"id": 1495,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1481,
															"src": "5635:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1492,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1479,
																	"src": "5623:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1173",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1173",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1491,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1490,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1494,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:8",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1498,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1487,
															"src": "5657:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1499,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1489,
																				"src": "5669:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:8",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1501,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1505,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1489,
																				"src": "5706:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1507,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1506,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:8",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1508,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1503,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1504,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:8",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 1511,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1515,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1479,
																			"src": "5738:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1173",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$1173",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1513,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:8",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:8",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1485,
												"id": 1522,
												"nodeType": "Return",
												"src": "5650:110:8"
											}
										]
									},
									"documentation": {
										"id": 1476,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:8",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 1524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "5222:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1173",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1478,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1477,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1173,
														"src": "5222:6:8"
													},
													"referencedDeclaration": 1173,
													"src": "5222:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1173",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "5236:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1480,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:8"
									},
									"returnParameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "5272:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1483,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:8"
									},
									"scope": 1525,
									"src": "5189:578:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1526,
							"src": "751:5018:8",
							"usedErrors": [
								1252,
								1261
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1778
						]
					},
					"id": 1779,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1527,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1528,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:9",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1778,
							"linearizedBaseContracts": [
								1778
							],
							"name": "Address",
							"nameLocation": "203:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1529,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:9",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 1533,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "349:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:9"
									},
									"src": "316:50:9"
								},
								{
									"documentation": {
										"id": 1534,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:9",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1538,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "475:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:9"
									},
									"src": "452:39:9"
								},
								{
									"documentation": {
										"id": 1539,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:9",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 1541,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:9"
									},
									"src": "591:24:9"
								},
								{
									"body": {
										"id": 1581,
										"nodeType": "Block",
										"src": "1602:260:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1551,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1778",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1778",
																		"typeString": "library Address"
																	}
																],
																"id": 1550,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1549,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:9",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1554,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1546,
														"src": "1640:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1564,
												"nodeType": "IfStatement",
												"src": "1612:109:9",
												"trueBody": {
													"id": 1563,
													"nodeType": "Block",
													"src": "1648:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1559,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1778",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1778",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1557,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1556,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1533,
																	"src": "1669:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1562,
															"nodeType": "RevertStatement",
															"src": "1662:48:9"
														}
													]
												}
											},
											{
												"assignments": [
													1566,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1566,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1581,
														"src": "1732:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1565,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1573,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1567,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1544,
																"src": "1750:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1568,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:9",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1570,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1569,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1546,
																"src": "1772:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:9"
											},
											{
												"condition": {
													"id": 1575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:9",
													"subExpression": {
														"id": 1574,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1566,
														"src": "1798:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1580,
												"nodeType": "IfStatement",
												"src": "1793:63:9",
												"trueBody": {
													"id": 1579,
													"nodeType": "Block",
													"src": "1807:49:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1576,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1541,
																	"src": "1828:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1577,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1578,
															"nodeType": "RevertStatement",
															"src": "1821:24:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1542,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:9",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "1550:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:9",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "1577:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:9"
									},
									"returnParameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:9"
									},
									"scope": 1778,
									"src": "1531:331:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1598,
										"nodeType": "Block",
										"src": "2794:62:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1593,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1585,
															"src": "2833:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1594,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1587,
															"src": "2841:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1595,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1592,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1645,
														"src": "2811:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1591,
												"id": 1597,
												"nodeType": "Return",
												"src": "2804:45:9"
											}
										]
									},
									"documentation": {
										"id": 1583,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:9",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "2727:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "2743:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1586,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:9"
									},
									"returnParameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "2780:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1589,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:9"
									},
									"scope": 1778,
									"src": "2705:151:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1644,
										"nodeType": "Block",
										"src": "3293:279:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1613,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1778",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1778",
																		"typeString": "library Address"
																	}
																],
																"id": 1612,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1611,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:9",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1616,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1606,
														"src": "3331:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1626,
												"nodeType": "IfStatement",
												"src": "3303:108:9",
												"trueBody": {
													"id": 1625,
													"nodeType": "Block",
													"src": "3338:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1621,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1778",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1778",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1619,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1622,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1618,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1533,
																	"src": "3359:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1624,
															"nodeType": "RevertStatement",
															"src": "3352:48:9"
														}
													]
												}
											},
											{
												"assignments": [
													1628,
													1630
												],
												"declarations": [
													{
														"constant": false,
														"id": 1628,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1644,
														"src": "3421:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1627,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1630,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1644,
														"src": "3435:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1629,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1637,
												"initialValue": {
													"arguments": [
														{
															"id": 1635,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1604,
															"src": "3488:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1631,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1602,
																"src": "3462:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:9",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1634,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1633,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1606,
																"src": "3481:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1639,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1602,
															"src": "3537:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1640,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1628,
															"src": "3545:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1641,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1630,
															"src": "3554:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1638,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1737,
														"src": "3510:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1610,
												"id": 1643,
												"nodeType": "Return",
												"src": "3503:62:9"
											}
										]
									},
									"documentation": {
										"id": 1600,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1645,
												"src": "3211:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1645,
												"src": "3227:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1603,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1645,
												"src": "3246:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:9"
									},
									"returnParameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1645,
												"src": "3279:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1608,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:9"
									},
									"scope": 1778,
									"src": "3180:392:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1670,
										"nodeType": "Block",
										"src": "3811:154:9",
										"statements": [
											{
												"assignments": [
													1656,
													1658
												],
												"declarations": [
													{
														"constant": false,
														"id": 1656,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1670,
														"src": "3822:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1655,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1658,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1670,
														"src": "3836:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1657,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1663,
												"initialValue": {
													"arguments": [
														{
															"id": 1661,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1650,
															"src": "3881:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1659,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1648,
															"src": "3863:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1660,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:9",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1665,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1648,
															"src": "3930:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1666,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1656,
															"src": "3938:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1667,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1658,
															"src": "3947:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1664,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1737,
														"src": "3903:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1654,
												"id": 1669,
												"nodeType": "Return",
												"src": "3896:62:9"
											}
										]
									},
									"documentation": {
										"id": 1646,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "3739:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "3755:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1649,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:9"
									},
									"returnParameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "3797:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1652,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:9"
									},
									"scope": 1778,
									"src": "3711:254:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1696,
										"nodeType": "Block",
										"src": "4203:156:9",
										"statements": [
											{
												"assignments": [
													1682,
													1684
												],
												"declarations": [
													{
														"constant": false,
														"id": 1682,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1696,
														"src": "4214:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1681,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1684,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1696,
														"src": "4228:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1683,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1689,
												"initialValue": {
													"arguments": [
														{
															"id": 1687,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1676,
															"src": "4275:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1685,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1674,
															"src": "4255:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:9",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1691,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1674,
															"src": "4324:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1692,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1682,
															"src": "4332:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1693,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1684,
															"src": "4341:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1690,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1737,
														"src": "4297:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1680,
												"id": 1695,
												"nodeType": "Return",
												"src": "4290:62:9"
											}
										]
									},
									"documentation": {
										"id": 1672,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "4136:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "4152:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1675,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:9"
									},
									"returnParameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "4189:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1678,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:9"
									},
									"scope": 1778,
									"src": "4106:253:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1736,
										"nodeType": "Block",
										"src": "4783:424:9",
										"statements": [
											{
												"condition": {
													"id": 1710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:9",
													"subExpression": {
														"id": 1709,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1702,
														"src": "4798:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1734,
													"nodeType": "Block",
													"src": "4857:344:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1716,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1704,
																			"src": "5045:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1717,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:9",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1720,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1700,
																				"src": "5071:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1721,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:9",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:9",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1731,
															"nodeType": "IfStatement",
															"src": "5041:119:9",
															"trueBody": {
																"id": 1730,
																"nodeType": "Block",
																"src": "5096:64:9",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1727,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1700,
																					"src": "5138:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1726,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1538,
																				"src": "5121:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1728,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1729,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:9"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1732,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1704,
																"src": "5180:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1708,
															"id": 1733,
															"nodeType": "Return",
															"src": "5173:17:9"
														}
													]
												},
												"id": 1735,
												"nodeType": "IfStatement",
												"src": "4793:408:9",
												"trueBody": {
													"id": 1715,
													"nodeType": "Block",
													"src": "4807:44:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1712,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1704,
																		"src": "4829:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1711,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1777,
																	"src": "4821:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1714,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1698,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:9",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 1737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "4670:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "4694:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1701,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "4716:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1703,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:9"
									},
									"returnParameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "4769:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1706,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:9"
									},
									"scope": 1778,
									"src": "4625:582:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1758,
										"nodeType": "Block",
										"src": "5509:122:9",
										"statements": [
											{
												"condition": {
													"id": 1748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:9",
													"subExpression": {
														"id": 1747,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1740,
														"src": "5524:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1756,
													"nodeType": "Block",
													"src": "5583:42:9",
													"statements": [
														{
															"expression": {
																"id": 1754,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1742,
																"src": "5604:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1746,
															"id": 1755,
															"nodeType": "Return",
															"src": "5597:17:9"
														}
													]
												},
												"id": 1757,
												"nodeType": "IfStatement",
												"src": "5519:106:9",
												"trueBody": {
													"id": 1753,
													"nodeType": "Block",
													"src": "5533:44:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1750,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1742,
																		"src": "5555:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1749,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1777,
																	"src": "5547:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1752,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1738,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:9",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 1759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "5433:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1739,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "5447:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1741,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:9"
									},
									"returnParameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "5495:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1744,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:9"
									},
									"scope": 1778,
									"src": "5407:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1776,
										"nodeType": "Block",
										"src": "5798:461:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1765,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1762,
															"src": "5874:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1767,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1774,
													"nodeType": "Block",
													"src": "6204:49:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1771,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1541,
																	"src": "6225:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1773,
															"nodeType": "RevertStatement",
															"src": "6218:24:9"
														}
													]
												},
												"id": 1775,
												"nodeType": "IfStatement",
												"src": "5870:383:9",
												"trueBody": {
													"id": 1770,
													"nodeType": "Block",
													"src": "5897:301:9",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:9",
																"nodeType": "YulBlock",
																"src": "6055:133:9",
																"statements": [
																	{
																		"nativeSrc": "6073:40:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:9"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:9"
																			},
																			"nativeSrc": "6096:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:9"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:9",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:9",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:9",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:9",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:9"
																					},
																					"nativeSrc": "6137:19:9",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:9"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:9",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:9"
																			},
																			"nativeSrc": "6130:44:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:9"
																		},
																		"nativeSrc": "6130:44:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:9"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1762,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:9",
																	"valueSize": 1
																},
																{
																	"declaration": 1762,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:9",
																	"valueSize": 1
																}
															],
															"id": 1769,
															"nodeType": "InlineAssembly",
															"src": "6046:142:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1760,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:9",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 1777,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "5760:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1761,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:9"
									},
									"returnParameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:9"
									},
									"scope": 1778,
									"src": "5743:516:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1779,
							"src": "195:6066:9",
							"usedErrors": [
								1533,
								1538,
								1541
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1808
						]
					},
					"id": 1809,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1780,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:10"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1781,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:10",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1808,
							"linearizedBaseContracts": [
								1808
							],
							"name": "Context",
							"nameLocation": "642:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1789,
										"nodeType": "Block",
										"src": "718:34:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1786,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:10",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1785,
												"id": 1788,
												"nodeType": "Return",
												"src": "728:17:10"
											}
										]
									},
									"id": 1790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:10"
									},
									"returnParameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1790,
												"src": "709:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:10"
									},
									"scope": 1808,
									"src": "656:96:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1798,
										"nodeType": "Block",
										"src": "825:32:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1795,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:10",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1794,
												"id": 1797,
												"nodeType": "Return",
												"src": "835:15:10"
											}
										]
									},
									"id": 1799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:10"
									},
									"returnParameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1799,
												"src": "809:14:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1792,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:10"
									},
									"scope": 1808,
									"src": "758:99:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1806,
										"nodeType": "Block",
										"src": "935:25:10",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1804,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1803,
												"id": 1805,
												"nodeType": "Return",
												"src": "945:8:10"
											}
										]
									},
									"id": 1807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1800,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:10"
									},
									"returnParameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "926:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:10"
									},
									"scope": 1808,
									"src": "863:97:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1809,
							"src": "624:338:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1832
						],
						"IERC165": [
							1844
						]
					},
					"id": 1833,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1810,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1812,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1833,
							"sourceUnit": 1845,
							"src": "140:38:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1811,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1844,
										"src": "148:7:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1814,
										"name": "IERC165",
										"nameLocations": [
											"687:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1844,
										"src": "687:7:11"
									},
									"id": 1815,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:11"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1813,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:11",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1832,
							"linearizedBaseContracts": [
								1832,
								1844
							],
							"name": "ERC165",
							"nameLocation": "677:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1843
									],
									"body": {
										"id": 1830,
										"nodeType": "Block",
										"src": "844:64:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1823,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1818,
														"src": "861:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1825,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1844,
																	"src": "881:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1844_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1844_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1824,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1826,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1844",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1827,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:11",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1822,
												"id": 1829,
												"nodeType": "Return",
												"src": "854:47:11"
											}
										]
									},
									"documentation": {
										"id": 1816,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:11",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1831,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "789:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1817,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:11"
									},
									"returnParameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "838:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1820,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:11"
									},
									"scope": 1832,
									"src": "762:146:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1833,
							"src": "659:251:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1844
						]
					},
					"id": 1845,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1834,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1835,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:12",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1844,
							"linearizedBaseContracts": [
								1844
							],
							"name": "IERC165",
							"nameLocation": "431:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1836,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:12",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1843,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "817:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1837,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:12"
									},
									"returnParameters": {
										"id": 1842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "860:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1840,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:12"
									},
									"scope": 1844,
									"src": "790:76:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1845,
							"src": "421:447:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:12"
				},
				"id": 12
			},
			"src/token.sol": {
				"ast": {
					"absolutePath": "src/token.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"ERC20": [
							1095
						],
						"IERC20": [
							1173
						],
						"ReentrancyGuard": [
							580
						],
						"SafeERC20": [
							1525
						],
						"Token": [
							2634
						]
					},
					"id": 2635,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1846,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1848,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2635,
							"sourceUnit": 296,
							"src": "62:79:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1847,
										"name": "AccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 295,
										"src": "70:13:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1850,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2635,
							"sourceUnit": 1096,
							"src": "142:68:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1849,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1095,
										"src": "150:5:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1852,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2635,
							"sourceUnit": 1526,
							"src": "211:82:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1851,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1525,
										"src": "219:9:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1854,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2635,
							"sourceUnit": 1174,
							"src": "294:70:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1853,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1173,
										"src": "302:6:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1856,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2635,
							"sourceUnit": 581,
							"src": "365:85:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1855,
										"name": "ReentrancyGuard",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 580,
										"src": "373:15:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1858,
										"name": "ERC20",
										"nameLocations": [
											"758:5:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1095,
										"src": "758:5:13"
									},
									"id": 1859,
									"nodeType": "InheritanceSpecifier",
									"src": "758:5:13"
								},
								{
									"baseName": {
										"id": 1860,
										"name": "AccessControl",
										"nameLocations": [
											"765:13:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "765:13:13"
									},
									"id": 1861,
									"nodeType": "InheritanceSpecifier",
									"src": "765:13:13"
								},
								{
									"baseName": {
										"id": 1862,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"780:15:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 580,
										"src": "780:15:13"
									},
									"id": 1863,
									"nodeType": "InheritanceSpecifier",
									"src": "780:15:13"
								}
							],
							"canonicalName": "Token",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1857,
								"nodeType": "StructuredDocumentation",
								"src": "452:287:13",
								"text": " @title Token\n @dev This contract implements an ERC20 token with additional features such as minting, burning, pausing, supply capping,\n and transfer fee mechanisms. It uses role-based access control for administrative functions and is protected against reentrancy attacks."
							},
							"fullyImplemented": true,
							"id": 2634,
							"linearizedBaseContracts": [
								2634,
								580,
								295,
								1832,
								1844,
								378,
								1095,
								420,
								1199,
								1173,
								1808
							],
							"name": "Token",
							"nameLocation": "749:5:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1867,
									"libraryName": {
										"id": 1864,
										"name": "SafeERC20",
										"nameLocations": [
											"809:9:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1525,
										"src": "809:9:13"
									},
									"nodeType": "UsingForDirective",
									"src": "803:27:13",
									"typeName": {
										"id": 1866,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1865,
											"name": "IERC20",
											"nameLocations": [
												"823:6:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1173,
											"src": "823:6:13"
										},
										"referencedDeclaration": 1173,
										"src": "823:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1173",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "8ebed5b1",
									"id": 1872,
									"mutability": "constant",
									"name": "_MINT",
									"nameLocation": "925:5:13",
									"nodeType": "VariableDeclaration",
									"scope": 2634,
									"src": "901:50:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1868,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "901:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5f4d494e54",
												"id": 1870,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "943:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8c66330d9d4f6aba064f25ef2a307366ea6d917616f44c075aa60fa15e5cb1cb",
													"typeString": "literal_string \"_MINT\""
												},
												"value": "_MINT"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8c66330d9d4f6aba064f25ef2a307366ea6d917616f44c075aa60fa15e5cb1cb",
													"typeString": "literal_string \"_MINT\""
												}
											],
											"id": 1869,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "933:9:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1871,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "933:18:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "7e92a7fd",
									"id": 1877,
									"mutability": "constant",
									"name": "_MINTTO",
									"nameLocation": "981:7:13",
									"nodeType": "VariableDeclaration",
									"scope": 2634,
									"src": "957:54:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1873,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "957:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5f4d494e54544f",
												"id": 1875,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1001:9:13",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_7d800f56a05adcb6245df540492a560d0e668aac15ee6c7dd40668064913da33",
													"typeString": "literal_string \"_MINTTO\""
												},
												"value": "_MINTTO"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_7d800f56a05adcb6245df540492a560d0e668aac15ee6c7dd40668064913da33",
													"typeString": "literal_string \"_MINTTO\""
												}
											],
											"id": 1874,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "991:9:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1876,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "991:20:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "53a4c31e",
									"id": 1882,
									"mutability": "constant",
									"name": "_BURN",
									"nameLocation": "1041:5:13",
									"nodeType": "VariableDeclaration",
									"scope": 2634,
									"src": "1017:50:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1878,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1017:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5f4255524e",
												"id": 1880,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1059:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_9edfad36e7d4d9da54b4f78f22bf97cb5b58bb7998294a4288da41c15c647c45",
													"typeString": "literal_string \"_BURN\""
												},
												"value": "_BURN"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_9edfad36e7d4d9da54b4f78f22bf97cb5b58bb7998294a4288da41c15c647c45",
													"typeString": "literal_string \"_BURN\""
												}
											],
											"id": 1879,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1049:9:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1881,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1049:18:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "6ba77a38",
									"id": 1887,
									"mutability": "constant",
									"name": "_BURNFROM",
									"nameLocation": "1097:9:13",
									"nodeType": "VariableDeclaration",
									"scope": 2634,
									"src": "1073:58:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1883,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1073:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5f4255524e46524f4d",
												"id": 1885,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1119:11:13",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_c8a3befa5973ff6e159afc769978d92f26bae29c51a73d11c9112a05b68d25e6",
													"typeString": "literal_string \"_BURNFROM\""
												},
												"value": "_BURNFROM"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_c8a3befa5973ff6e159afc769978d92f26bae29c51a73d11c9112a05b68d25e6",
													"typeString": "literal_string \"_BURNFROM\""
												}
											],
											"id": 1884,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1109:9:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1886,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1109:22:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "ea5cb532",
									"id": 1892,
									"mutability": "constant",
									"name": "_SUPPLY",
									"nameLocation": "1161:7:13",
									"nodeType": "VariableDeclaration",
									"scope": 2634,
									"src": "1137:54:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1888,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1137:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5f535550504c59",
												"id": 1890,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1181:9:13",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_ea4defabeb90fa1e79f929d6c8d482fee8a115926a592b79634d39a67cce3b62",
													"typeString": "literal_string \"_SUPPLY\""
												},
												"value": "_SUPPLY"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_ea4defabeb90fa1e79f929d6c8d482fee8a115926a592b79634d39a67cce3b62",
													"typeString": "literal_string \"_SUPPLY\""
												}
											],
											"id": 1889,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1171:9:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1891,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1171:20:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "51557289",
									"id": 1897,
									"mutability": "constant",
									"name": "_ADMIN",
									"nameLocation": "1221:6:13",
									"nodeType": "VariableDeclaration",
									"scope": 2634,
									"src": "1197:52:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1893,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1197:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5f41444d494e",
												"id": 1895,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1240:8:13",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_ae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d3",
													"typeString": "literal_string \"_ADMIN\""
												},
												"value": "_ADMIN"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_ae6c2fc584631af4c9385b8a55683f1a75c813747e27efef5afece31c6b230d3",
													"typeString": "literal_string \"_ADMIN\""
												}
											],
											"id": 1894,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1230:9:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1896,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1230:19:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "8d580b9f",
									"id": 1902,
									"mutability": "constant",
									"name": "_RESCUE",
									"nameLocation": "1279:7:13",
									"nodeType": "VariableDeclaration",
									"scope": 2634,
									"src": "1255:54:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1898,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1255:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5f524553435545",
												"id": 1900,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1299:9:13",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_508f8f8be8f5dbcb88f4f4500430b8b3684c471ed936f31fea912c78ad46a6b9",
													"typeString": "literal_string \"_RESCUE\""
												},
												"value": "_RESCUE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_508f8f8be8f5dbcb88f4f4500430b8b3684c471ed936f31fea912c78ad46a6b9",
													"typeString": "literal_string \"_RESCUE\""
												}
											],
											"id": 1899,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1289:9:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1901,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1289:20:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1904,
									"mutability": "mutable",
									"name": "_cap",
									"nameLocation": "1332:4:13",
									"nodeType": "VariableDeclaration",
									"scope": 2634,
									"src": "1319:17:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1903,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1319:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "fbfa77cf",
									"id": 1906,
									"mutability": "mutable",
									"name": "vault",
									"nameLocation": "1393:5:13",
									"nodeType": "VariableDeclaration",
									"scope": 2634,
									"src": "1378:20:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1905,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1378:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cf820461",
									"id": 1909,
									"mutability": "mutable",
									"name": "txFee",
									"nameLocation": "1459:5:13",
									"nodeType": "VariableDeclaration",
									"scope": 2634,
									"src": "1447:31:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1907,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1447:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "302e303035",
										"id": 1908,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1467:11:13",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000000000000000_by_1",
											"typeString": "int_const 5000000000000000"
										},
										"value": "0.005"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5c975abb",
									"id": 1911,
									"mutability": "mutable",
									"name": "paused",
									"nameLocation": "1534:6:13",
									"nodeType": "VariableDeclaration",
									"scope": 2634,
									"src": "1522:18:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1910,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1522:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "956feccf",
									"id": 1913,
									"mutability": "mutable",
									"name": "mintDisabled",
									"nameLocation": "1601:12:13",
									"nodeType": "VariableDeclaration",
									"scope": 2634,
									"src": "1589:24:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1912,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1589:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d1c9f69b",
									"id": 1915,
									"mutability": "mutable",
									"name": "mintToDisabled",
									"nameLocation": "1658:14:13",
									"nodeType": "VariableDeclaration",
									"scope": 2634,
									"src": "1646:26:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1914,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1646:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "772f66a00a405709c30e7f18feadcc8f123b20c09c7260165d3eec36c9f21372",
									"id": 1919,
									"name": "TokensMinted",
									"nameLocation": "1791:12:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1917,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1809:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1919,
												"src": "1804:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1916,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1804:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1803:14:13"
									},
									"src": "1785:33:13"
								},
								{
									"anonymous": false,
									"eventSelector": "e98063832b4ff0356868961b75f7f49b096b14ea066c9725301ad197f2f63147",
									"id": 1925,
									"name": "TokensMintedTo",
									"nameLocation": "1829:14:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1921,
												"indexed": false,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "1852:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "1844:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1923,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1862:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "1857:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1922,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1857:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1843:27:13"
									},
									"src": "1823:48:13"
								},
								{
									"anonymous": false,
									"eventSelector": "63706707d038997d2210eb026bb1339397deab463921538a81bb98e69ee54ca8",
									"id": 1931,
									"name": "TokensBurned",
									"nameLocation": "1882:12:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1927,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1900:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "1895:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1926,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1895:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1929,
												"indexed": false,
												"mutability": "mutable",
												"name": "_burner",
												"nameLocation": "1917:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "1909:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1909:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1894:31:13"
									},
									"src": "1876:50:13"
								},
								{
									"anonymous": false,
									"eventSelector": "e419ce2aab145a1feaf5893bb6a9478f9282415bbd81c76d5cfff2d4f13431dd",
									"id": 1939,
									"name": "TokensBurnedFrom",
									"nameLocation": "1937:16:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1933,
												"indexed": false,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "1962:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "1954:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1954:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1935,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1974:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "1969:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1934,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1969:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1937,
												"indexed": false,
												"mutability": "mutable",
												"name": "_burner",
												"nameLocation": "1991:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "1983:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1953:46:13"
									},
									"src": "1931:69:13"
								},
								{
									"anonymous": false,
									"eventSelector": "a11cbdeb4d62442fae7c8ec6286585b17c47acb7b17bbcab1beadce84befa300",
									"id": 1945,
									"name": "SupplyCapChanged",
									"nameLocation": "2011:16:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1941,
												"indexed": false,
												"mutability": "mutable",
												"name": "_newCap",
												"nameLocation": "2033:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "2028:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1940,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1943,
												"indexed": false,
												"mutability": "mutable",
												"name": "_changedBy",
												"nameLocation": "2050:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "2042:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2042:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:34:13"
									},
									"src": "2005:57:13"
								},
								{
									"anonymous": false,
									"eventSelector": "d8c9c5623123df8e137854c59a08f9084b75609fe24584228d44ffdce5ab920a",
									"id": 1951,
									"name": "ContractPaused",
									"nameLocation": "2073:14:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1947,
												"indexed": false,
												"mutability": "mutable",
												"name": "_blockHeight",
												"nameLocation": "2093:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 1951,
												"src": "2088:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1946,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2088:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1949,
												"indexed": false,
												"mutability": "mutable",
												"name": "_pausedBy",
												"nameLocation": "2115:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1951,
												"src": "2107:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1948,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2107:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:38:13"
									},
									"src": "2067:59:13"
								},
								{
									"anonymous": false,
									"eventSelector": "1e7a7234ad01ed7353bf129217f5c162773639a6cb22773e84bcd5a2b0ef362e",
									"id": 1957,
									"name": "ContractUnpaused",
									"nameLocation": "2137:16:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1953,
												"indexed": false,
												"mutability": "mutable",
												"name": "_blockHeight",
												"nameLocation": "2159:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 1957,
												"src": "2154:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1952,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1955,
												"indexed": false,
												"mutability": "mutable",
												"name": "_unpausedBy",
												"nameLocation": "2181:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1957,
												"src": "2173:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2173:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:40:13"
									},
									"src": "2131:63:13"
								},
								{
									"anonymous": false,
									"eventSelector": "98e05482fdb38df5eb461fb932fa6e1af90a3569939ce5a8d92d699b102d6402",
									"id": 1963,
									"name": "MintingEnabled",
									"nameLocation": "2205:14:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1959,
												"indexed": false,
												"mutability": "mutable",
												"name": "_blockHeight",
												"nameLocation": "2225:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "2220:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1958,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2220:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1961,
												"indexed": false,
												"mutability": "mutable",
												"name": "_enabledBy",
												"nameLocation": "2247:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "2239:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2239:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2219:39:13"
									},
									"src": "2199:60:13"
								},
								{
									"anonymous": false,
									"eventSelector": "5668502ca8e7b393c09d1dac964ca45a27870a78d7ba212b7a189450897ca05f",
									"id": 1969,
									"name": "MintingDisabled",
									"nameLocation": "2270:15:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1965,
												"indexed": false,
												"mutability": "mutable",
												"name": "_blockHeight",
												"nameLocation": "2291:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "2286:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1964,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2286:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1967,
												"indexed": false,
												"mutability": "mutable",
												"name": "_disabledBy",
												"nameLocation": "2313:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "2305:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2305:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2285:40:13"
									},
									"src": "2264:62:13"
								},
								{
									"anonymous": false,
									"eventSelector": "41606e1dcee38320f9edbfcd642aeaa81bb2140c705de9d4a7814024a1e9a314",
									"id": 1975,
									"name": "MintingToEnabled",
									"nameLocation": "2337:16:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1971,
												"indexed": false,
												"mutability": "mutable",
												"name": "_blockHeight",
												"nameLocation": "2359:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "2354:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1970,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2354:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1973,
												"indexed": false,
												"mutability": "mutable",
												"name": "_enabledBy",
												"nameLocation": "2381:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "2373:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2373:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2353:39:13"
									},
									"src": "2331:62:13"
								},
								{
									"anonymous": false,
									"eventSelector": "218e25f0a7435729f5a66aae50a9ed0084535a0080300c1c2e8366d8df7136ed",
									"id": 1981,
									"name": "MintingToDisabled",
									"nameLocation": "2404:17:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1977,
												"indexed": false,
												"mutability": "mutable",
												"name": "_blockHeight",
												"nameLocation": "2427:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "2422:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1976,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2422:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1979,
												"indexed": false,
												"mutability": "mutable",
												"name": "_disabledBy",
												"nameLocation": "2449:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "2441:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2441:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2421:40:13"
									},
									"src": "2398:64:13"
								},
								{
									"anonymous": false,
									"eventSelector": "3b1c0368c81e47d03164182dc6f9fcf4f5e4b3bd9462d74960d729f73138ce36",
									"id": 1989,
									"name": "ETHRescued",
									"nameLocation": "2473:10:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1983,
												"indexed": false,
												"mutability": "mutable",
												"name": "_dest",
												"nameLocation": "2492:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "2484:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2484:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1985,
												"indexed": false,
												"mutability": "mutable",
												"name": "_blockHeight",
												"nameLocation": "2504:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "2499:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1984,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2499:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1987,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2523:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "2518:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1986,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2518:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2483:48:13"
									},
									"src": "2467:65:13"
								},
								{
									"anonymous": false,
									"eventSelector": "494215f965756bbc8b7f57addd2a0ebdbce467a4999f8320c67adc1771885d7b",
									"id": 2000,
									"name": "ERC20Rescued",
									"nameLocation": "2543:12:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1992,
												"indexed": false,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "2563:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2000,
												"src": "2556:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1173",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1991,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1990,
														"name": "IERC20",
														"nameLocations": [
															"2556:6:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1173,
														"src": "2556:6:13"
													},
													"referencedDeclaration": 1173,
													"src": "2556:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1173",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1994,
												"indexed": false,
												"mutability": "mutable",
												"name": "_blockHeight",
												"nameLocation": "2576:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2000,
												"src": "2571:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1993,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2571:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1996,
												"indexed": false,
												"mutability": "mutable",
												"name": "_dest",
												"nameLocation": "2598:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2000,
												"src": "2590:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2590:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1998,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2610:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2000,
												"src": "2605:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1997,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2605:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2555:63:13"
									},
									"src": "2537:82:13"
								},
								{
									"constant": false,
									"functionSelector": "c30796ab",
									"id": 2004,
									"mutability": "mutable",
									"name": "whitelistedAddress",
									"nameLocation": "2657:18:13",
									"nodeType": "VariableDeclaration",
									"scope": 2634,
									"src": "2625:50:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 2003,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2001,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2633:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2625:24:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2002,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2644:4:13",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2060,
										"nodeType": "Block",
										"src": "2997:589:13",
										"statements": [
											{
												"expression": {
													"id": 2016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2014,
														"name": "_cap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1904,
														"src": "3007:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3130303030303030",
														"id": 2015,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3014:14:13",
														"subdenomination": "ether",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000000000000000000000000_by_1",
															"typeString": "int_const 10000000000000000000000000"
														},
														"value": "10000000"
													},
													"src": "3007:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2017,
												"nodeType": "ExpressionStatement",
												"src": "3007:21:13"
											},
											{
												"expression": {
													"id": 2020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2018,
														"name": "mintDisabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1913,
														"src": "3081:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2019,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3096:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3081:20:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2021,
												"nodeType": "ExpressionStatement",
												"src": "3081:20:13"
											},
											{
												"expression": {
													"id": 2024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2022,
														"name": "mintToDisabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1915,
														"src": "3139:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2023,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3156:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3139:22:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2025,
												"nodeType": "ExpressionStatement",
												"src": "3139:22:13"
											},
											{
												"expression": {
													"id": 2028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2026,
														"name": "vault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1906,
														"src": "3221:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2027,
														"name": "_vault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2007,
														"src": "3229:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3221:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2029,
												"nodeType": "ExpressionStatement",
												"src": "3221:14:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2031,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "3256:18:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2032,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1790,
																"src": "3276:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3276:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2030,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "3245:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3245:44:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2035,
												"nodeType": "ExpressionStatement",
												"src": "3245:44:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2037,
															"name": "_ADMIN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1897,
															"src": "3391:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2038,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1790,
																"src": "3399:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3399:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2036,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "3380:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3380:32:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2041,
												"nodeType": "ExpressionStatement",
												"src": "3380:32:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2043,
															"name": "_MINT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1872,
															"src": "3433:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2044,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1790,
																"src": "3440:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3440:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2042,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "3422:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3422:31:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2047,
												"nodeType": "ExpressionStatement",
												"src": "3422:31:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2049,
															"name": "_BURN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1882,
															"src": "3474:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2050,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1790,
																"src": "3481:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3481:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2048,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "3463:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3463:31:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2053,
												"nodeType": "ExpressionStatement",
												"src": "3463:31:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2055,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1790,
																"src": "3510:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3510:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "31303030303030",
															"id": 2057,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3524:13:13",
															"subdenomination": "ether",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000"
															},
															"value": "1000000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000"
															}
														],
														"id": 2054,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 935,
														"src": "3504:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3504:34:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2059,
												"nodeType": "ExpressionStatement",
												"src": "3504:34:13"
											}
										]
									},
									"documentation": {
										"id": 2005,
										"nodeType": "StructuredDocumentation",
										"src": "2750:192:13",
										"text": " @dev Constructor to initialize the token contract with a vault address and an initial supply of tokens.\n @param _vault The address where transaction fees will be sent."
									},
									"id": 2061,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "546f6b656e",
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2981:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_1317f51c845ce3bfb7c268e5337a825f12f3d0af9584c2bbfbf4e64e314eaf73",
														"typeString": "literal_string \"Token\""
													},
													"value": "Token"
												},
												{
													"hexValue": "544b4e",
													"id": 2011,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2990:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_9ee187a325c80a9ca820b4f297a58770bf5a85fede3756f8e7e9d14ff37d7b66",
														"typeString": "literal_string \"TKN\""
													},
													"value": "TKN"
												}
											],
											"id": 2012,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2009,
												"name": "ERC20",
												"nameLocations": [
													"2975:5:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1095,
												"src": "2975:5:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "2975:21:13"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2007,
												"mutability": "mutable",
												"name": "_vault",
												"nameLocation": "2967:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "2959:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2006,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2959:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2958:16:13"
									},
									"returnParameters": {
										"id": 2013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2997:0:13"
									},
									"scope": 2634,
									"src": "2947:639:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2098,
										"nodeType": "Block",
										"src": "3836:280:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2069,
																	"name": "_ADMIN",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1897,
																	"src": "3862:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2070,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1790,
																		"src": "3870:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3870:12:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2068,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "3854:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 2072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3854:29:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e74726163743a204e6565642041646d696e",
															"id": 2073,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3885:22:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bb63c1d83da1ab52c7d8fe2a042a1198f2d359766d8d53fcde4a52b8346f6c66",
																"typeString": "literal_string \"Contract: Need Admin\""
															},
															"value": "Contract: Need Admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bb63c1d83da1ab52c7d8fe2a042a1198f2d359766d8d53fcde4a52b8346f6c66",
																"typeString": "literal_string \"Contract: Need Admin\""
															}
														],
														"id": 2067,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3846:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3846:62:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2075,
												"nodeType": "ExpressionStatement",
												"src": "3846:62:13"
											},
											{
												"expression": {
													"id": 2078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2076,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1911,
														"src": "3918:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2077,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2064,
														"src": "3927:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3918:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2079,
												"nodeType": "ExpressionStatement",
												"src": "3918:16:13"
											},
											{
												"condition": {
													"id": 2080,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2064,
													"src": "3949:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2096,
													"nodeType": "Block",
													"src": "4036:74:13",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2090,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "4072:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 2091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4078:6:13",
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "4072:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2092,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1790,
																			"src": "4086:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2093,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4086:12:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2089,
																	"name": "ContractUnpaused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1957,
																	"src": "4055:16:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (uint256,address)"
																	}
																},
																"id": 2094,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4055:44:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2095,
															"nodeType": "EmitStatement",
															"src": "4050:49:13"
														}
													]
												},
												"id": 2097,
												"nodeType": "IfStatement",
												"src": "3945:165:13",
												"trueBody": {
													"id": 2088,
													"nodeType": "Block",
													"src": "3958:72:13",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2082,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "3992:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 2083,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3998:6:13",
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "3992:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2084,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1790,
																			"src": "4006:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2085,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4006:12:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2081,
																	"name": "ContractPaused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1951,
																	"src": "3977:14:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (uint256,address)"
																	}
																},
																"id": 2086,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3977:42:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2087,
															"nodeType": "EmitStatement",
															"src": "3972:47:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2062,
										"nodeType": "StructuredDocumentation",
										"src": "3596:193:13",
										"text": " @dev Function to pause or unpause the contract's operations.\n Only callable by an admin.\n @param _paused Boolean indicating whether the contract should be paused."
									},
									"functionSelector": "16c38b3c",
									"id": 2099,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setPaused",
									"nameLocation": "3803:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2064,
												"mutability": "mutable",
												"name": "_paused",
												"nameLocation": "3818:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "3813:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2063,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3813:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3812:14:13"
									},
									"returnParameters": {
										"id": 2066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3836:0:13"
									},
									"scope": 2634,
									"src": "3794:322:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2136,
										"nodeType": "Block",
										"src": "4360:301:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2107,
																	"name": "_ADMIN",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1897,
																	"src": "4386:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2108,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1790,
																		"src": "4394:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4394:12:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2106,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "4378:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 2110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4378:29:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e74726163743a204e6565642041646d696e",
															"id": 2111,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4409:22:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bb63c1d83da1ab52c7d8fe2a042a1198f2d359766d8d53fcde4a52b8346f6c66",
																"typeString": "literal_string \"Contract: Need Admin\""
															},
															"value": "Contract: Need Admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bb63c1d83da1ab52c7d8fe2a042a1198f2d359766d8d53fcde4a52b8346f6c66",
																"typeString": "literal_string \"Contract: Need Admin\""
															}
														],
														"id": 2105,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4370:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4370:62:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2113,
												"nodeType": "ExpressionStatement",
												"src": "4370:62:13"
											},
											{
												"expression": {
													"id": 2116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2114,
														"name": "mintDisabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1913,
														"src": "4442:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2115,
														"name": "_disableMinting",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2102,
														"src": "4457:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4442:30:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2117,
												"nodeType": "ExpressionStatement",
												"src": "4442:30:13"
											},
											{
												"condition": {
													"id": 2118,
													"name": "_disableMinting",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2102,
													"src": "4487:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2134,
													"nodeType": "Block",
													"src": "4583:72:13",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2128,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "4617:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 2129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4623:6:13",
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "4617:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2130,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1790,
																			"src": "4631:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4631:12:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2127,
																	"name": "MintingEnabled",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1963,
																	"src": "4602:14:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (uint256,address)"
																	}
																},
																"id": 2132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4602:42:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2133,
															"nodeType": "EmitStatement",
															"src": "4597:47:13"
														}
													]
												},
												"id": 2135,
												"nodeType": "IfStatement",
												"src": "4483:172:13",
												"trueBody": {
													"id": 2126,
													"nodeType": "Block",
													"src": "4504:73:13",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2120,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "4539:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 2121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4545:6:13",
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "4539:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2122,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1790,
																			"src": "4553:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4553:12:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2119,
																	"name": "MintingDisabled",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1969,
																	"src": "4523:15:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (uint256,address)"
																	}
																},
																"id": 2124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4523:43:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2125,
															"nodeType": "EmitStatement",
															"src": "4518:48:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2100,
										"nodeType": "StructuredDocumentation",
										"src": "4122:181:13",
										"text": " @dev Function to disable or enable minting.\n Only callable by an admin.\n @param _disableMinting Boolean indicating whether minting should be disabled."
									},
									"functionSelector": "deb6db36",
									"id": 2137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "disableMint",
									"nameLocation": "4317:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "_disableMinting",
												"nameLocation": "4334:15:13",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "4329:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2101,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4329:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4328:22:13"
									},
									"returnParameters": {
										"id": 2104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4360:0:13"
									},
									"scope": 2634,
									"src": "4308:353:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2174,
										"nodeType": "Block",
										"src": "4952:295:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2145,
																	"name": "_ADMIN",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1897,
																	"src": "4978:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2146,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1790,
																		"src": "4986:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4986:12:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2144,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "4970:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 2148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4970:29:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6565642041646d696e",
															"id": 2149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5001:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b001b48f6c58139e2cae9da1391afe3c88f4951fb872771eda2713f4f3a0a6c2",
																"typeString": "literal_string \"Need Admin\""
															},
															"value": "Need Admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b001b48f6c58139e2cae9da1391afe3c88f4951fb872771eda2713f4f3a0a6c2",
																"typeString": "literal_string \"Need Admin\""
															}
														],
														"id": 2143,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4962:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4962:52:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2151,
												"nodeType": "ExpressionStatement",
												"src": "4962:52:13"
											},
											{
												"expression": {
													"id": 2154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2152,
														"name": "mintToDisabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1915,
														"src": "5024:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2153,
														"name": "_disableMintTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2140,
														"src": "5041:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5024:31:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2155,
												"nodeType": "ExpressionStatement",
												"src": "5024:31:13"
											},
											{
												"condition": {
													"id": 2156,
													"name": "_disableMintTo",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2140,
													"src": "5070:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2172,
													"nodeType": "Block",
													"src": "5167:74:13",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2166,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "5203:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 2167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5209:6:13",
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "5203:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2168,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1790,
																			"src": "5217:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2169,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5217:12:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2165,
																	"name": "MintingToEnabled",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1975,
																	"src": "5186:16:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (uint256,address)"
																	}
																},
																"id": 2170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5186:44:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2171,
															"nodeType": "EmitStatement",
															"src": "5181:49:13"
														}
													]
												},
												"id": 2173,
												"nodeType": "IfStatement",
												"src": "5066:175:13",
												"trueBody": {
													"id": 2164,
													"nodeType": "Block",
													"src": "5086:75:13",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2158,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "5123:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 2159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5129:6:13",
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "5123:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2160,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1790,
																			"src": "5137:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2161,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5137:12:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2157,
																	"name": "MintingToDisabled",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1981,
																	"src": "5105:17:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (uint256,address)"
																	}
																},
																"id": 2162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5105:45:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2163,
															"nodeType": "EmitStatement",
															"src": "5100:50:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2138,
										"nodeType": "StructuredDocumentation",
										"src": "4670:224:13",
										"text": " @dev Function to disable or enable minting to specific addresses.\n Only callable by an admin.\n @param _disableMintTo Boolean indicating whether minting to specific addresses should be disabled."
									},
									"functionSelector": "f2250d3d",
									"id": 2175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "disableMintTo",
									"nameLocation": "4908:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "_disableMintTo",
												"nameLocation": "4927:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "4922:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4922:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4921:21:13"
									},
									"returnParameters": {
										"id": 2142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4952:0:13"
									},
									"scope": 2634,
									"src": "4899:348:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2185,
										"nodeType": "Block",
										"src": "5384:76:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5402:7:13",
															"subExpression": {
																"id": 2179,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1911,
																"src": "5403:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e74726163743a20436f6e747261637420697320506175736564",
															"id": 2181,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5411:30:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_14cda221cd50cc4488a50638b29b8104950f854aa06a190e98dcd3542f450149",
																"typeString": "literal_string \"Contract: Contract is Paused\""
															},
															"value": "Contract: Contract is Paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_14cda221cd50cc4488a50638b29b8104950f854aa06a190e98dcd3542f450149",
																"typeString": "literal_string \"Contract: Contract is Paused\""
															}
														],
														"id": 2178,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5394:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5394:48:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2183,
												"nodeType": "ExpressionStatement",
												"src": "5394:48:13"
											},
											{
												"id": 2184,
												"nodeType": "PlaceholderStatement",
												"src": "5452:1:13"
											}
										]
									},
									"documentation": {
										"id": 2176,
										"nodeType": "StructuredDocumentation",
										"src": "5257:105:13",
										"text": " @dev Modifier to ensure that the contract is not paused before executing the function."
									},
									"id": 2186,
									"name": "pause",
									"nameLocation": "5376:5:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5381:2:13"
									},
									"src": "5367:93:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2196,
										"nodeType": "Block",
										"src": "5596:70:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5614:13:13",
															"subExpression": {
																"id": 2190,
																"name": "mintDisabled",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1913,
																"src": "5615:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696e74696e672064697361626c6564",
															"id": 2192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5629:18:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9dc314731a2c8965068716b51a74d383c5485fe34630c16f5621cb0575192124",
																"typeString": "literal_string \"Minting disabled\""
															},
															"value": "Minting disabled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9dc314731a2c8965068716b51a74d383c5485fe34630c16f5621cb0575192124",
																"typeString": "literal_string \"Minting disabled\""
															}
														],
														"id": 2189,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5606:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5606:42:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2194,
												"nodeType": "ExpressionStatement",
												"src": "5606:42:13"
											},
											{
												"id": 2195,
												"nodeType": "PlaceholderStatement",
												"src": "5658:1:13"
											}
										]
									},
									"documentation": {
										"id": 2187,
										"nodeType": "StructuredDocumentation",
										"src": "5470:102:13",
										"text": " @dev Modifier to ensure that minting is not disabled before executing the function."
									},
									"id": 2197,
									"name": "mintDis",
									"nameLocation": "5586:7:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5593:2:13"
									},
									"src": "5577:89:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2207,
										"nodeType": "Block",
										"src": "5826:75:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5844:15:13",
															"subExpression": {
																"id": 2201,
																"name": "mintToDisabled",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1915,
																"src": "5845:14:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696e74696e6720746f2064697361626c6564",
															"id": 2203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5861:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ba2e9cd8d3fa598fea6366ddadf891a9cbec04b837294279cc52e9e496f33766",
																"typeString": "literal_string \"Minting to disabled\""
															},
															"value": "Minting to disabled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ba2e9cd8d3fa598fea6366ddadf891a9cbec04b837294279cc52e9e496f33766",
																"typeString": "literal_string \"Minting to disabled\""
															}
														],
														"id": 2200,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5836:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5836:47:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2205,
												"nodeType": "ExpressionStatement",
												"src": "5836:47:13"
											},
											{
												"id": 2206,
												"nodeType": "PlaceholderStatement",
												"src": "5893:1:13"
											}
										]
									},
									"documentation": {
										"id": 2198,
										"nodeType": "StructuredDocumentation",
										"src": "5676:124:13",
										"text": " @dev Modifier to ensure that minting to specific addresses is not disabled before executing the function."
									},
									"id": 2208,
									"name": "mintToDis",
									"nameLocation": "5814:9:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5823:2:13"
									},
									"src": "5805:96:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2249,
										"nodeType": "Block",
										"src": "6270:235:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2222,
																	"name": "_MINTTO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1877,
																	"src": "6296:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2223,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1790,
																		"src": "6305:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6305:12:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2221,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "6288:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 2225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6288:30:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e74726163743a204e656564204d696e746f",
															"id": 2226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6320:22:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bd61e59b58c0d60bfbdd7c0883e85825d806ae73957bff921021d8f621b56a1e",
																"typeString": "literal_string \"Contract: Need Minto\""
															},
															"value": "Contract: Need Minto"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bd61e59b58c0d60bfbdd7c0883e85825d806ae73957bff921021d8f621b56a1e",
																"typeString": "literal_string \"Contract: Need Minto\""
															}
														],
														"id": 2220,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6280:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6280:63:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2228,
												"nodeType": "ExpressionStatement",
												"src": "6280:63:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2230,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 668,
																		"src": "6361:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 2231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6361:13:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2232,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2213,
																	"src": "6377:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6361:23:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2234,
																"name": "_cap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "6388:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6361:31:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e74726163743a20537570706c7920436170206578636565646564",
															"id": 2236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6394:31:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79",
																"typeString": "literal_string \"Contract: Supply Cap exceeded\""
															},
															"value": "Contract: Supply Cap exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79",
																"typeString": "literal_string \"Contract: Supply Cap exceeded\""
															}
														],
														"id": 2229,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6353:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6353:73:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2238,
												"nodeType": "ExpressionStatement",
												"src": "6353:73:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2240,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2211,
															"src": "6456:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2241,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2213,
															"src": "6461:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2239,
														"name": "TokensMintedTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1925,
														"src": "6441:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6441:28:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2243,
												"nodeType": "EmitStatement",
												"src": "6436:33:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2245,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2211,
															"src": "6485:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2246,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2213,
															"src": "6490:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2244,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 935,
														"src": "6479:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6479:19:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2248,
												"nodeType": "ExpressionStatement",
												"src": "6479:19:13"
											}
										]
									},
									"documentation": {
										"id": 2209,
										"nodeType": "StructuredDocumentation",
										"src": "5911:286:13",
										"text": " @dev Function to mint tokens to a specific address.\n Only callable by an address with the _MINTTO role, and if minting to is enabled and contract is not paused.\n @param _to The address to mint tokens to.\n @param _amount The amount of tokens to mint."
									},
									"functionSelector": "449a52f8",
									"id": 2250,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2216,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2215,
												"name": "pause",
												"nameLocations": [
													"6254:5:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2186,
												"src": "6254:5:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "6254:5:13"
										},
										{
											"id": 2218,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2217,
												"name": "mintToDis",
												"nameLocations": [
													"6260:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2208,
												"src": "6260:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "6260:9:13"
										}
									],
									"name": "mintTo",
									"nameLocation": "6211:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2211,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "6226:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "6218:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6218:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "6236:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "6231:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2212,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6231:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6217:27:13"
									},
									"returnParameters": {
										"id": 2219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6270:0:13"
									},
									"scope": 2634,
									"src": "6202:303:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2289,
										"nodeType": "Block",
										"src": "6791:234:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2262,
																	"name": "_MINT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1872,
																	"src": "6817:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2263,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1790,
																		"src": "6824:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6824:12:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2261,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "6809:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 2265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6809:28:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e74726163743a204e656564204d696e74",
															"id": 2266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6839:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_120df7b0ebb4e0f457cdf31a88cea9b4d2e1fd0ec041e7228fb01895c54a5b9f",
																"typeString": "literal_string \"Contract: Need Mint\""
															},
															"value": "Contract: Need Mint"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_120df7b0ebb4e0f457cdf31a88cea9b4d2e1fd0ec041e7228fb01895c54a5b9f",
																"typeString": "literal_string \"Contract: Need Mint\""
															}
														],
														"id": 2260,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6801:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6801:60:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2268,
												"nodeType": "ExpressionStatement",
												"src": "6801:60:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2270,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 668,
																		"src": "6879:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 2271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6879:13:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2272,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2253,
																	"src": "6895:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6879:23:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2274,
																"name": "_cap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "6906:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6879:31:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e74726163743a20537570706c7920436170206578636565646564",
															"id": 2276,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6912:31:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79",
																"typeString": "literal_string \"Contract: Supply Cap exceeded\""
															},
															"value": "Contract: Supply Cap exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79",
																"typeString": "literal_string \"Contract: Supply Cap exceeded\""
															}
														],
														"id": 2269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6871:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6871:73:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2278,
												"nodeType": "ExpressionStatement",
												"src": "6871:73:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2280,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2253,
															"src": "6972:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2279,
														"name": "TokensMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1919,
														"src": "6959:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6959:21:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2282,
												"nodeType": "EmitStatement",
												"src": "6954:26:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2284,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1790,
																"src": "6996:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6996:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2286,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2253,
															"src": "7010:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2283,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 935,
														"src": "6990:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6990:28:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2288,
												"nodeType": "ExpressionStatement",
												"src": "6990:28:13"
											}
										]
									},
									"documentation": {
										"id": 2251,
										"nodeType": "StructuredDocumentation",
										"src": "6511:224:13",
										"text": " @dev Function to mint tokens to the caller.\n Only callable by an address with the _MINT role, and if minting is enabled and contract is not paused.\n @param _amount The amount of tokens to mint."
									},
									"functionSelector": "a0712d68",
									"id": 2290,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2256,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2255,
												"name": "pause",
												"nameLocations": [
													"6777:5:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2186,
												"src": "6777:5:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "6777:5:13"
										},
										{
											"id": 2258,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2257,
												"name": "mintDis",
												"nameLocations": [
													"6783:7:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2197,
												"src": "6783:7:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "6783:7:13"
										}
									],
									"name": "mint",
									"nameLocation": "6749:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2253,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "6759:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2290,
												"src": "6754:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2252,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6754:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6753:14:13"
									},
									"returnParameters": {
										"id": 2259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6791:0:13"
									},
									"scope": 2634,
									"src": "6740:285:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2319,
										"nodeType": "Block",
										"src": "7300:166:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2300,
																	"name": "_BURN",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1882,
																	"src": "7327:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2301,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1790,
																		"src": "7334:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7334:12:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2299,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "7319:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 2303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7319:28:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e74726163743a204e656564204275726e",
															"id": 2304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7349:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0f2142f4e404960c39c0eef9aa83c0b4e0c80eb3bb63665846eabb25d9855d04",
																"typeString": "literal_string \"Contract: Need Burn\""
															},
															"value": "Contract: Need Burn"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0f2142f4e404960c39c0eef9aa83c0b4e0c80eb3bb63665846eabb25d9855d04",
																"typeString": "literal_string \"Contract: Need Burn\""
															}
														],
														"id": 2298,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7311:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7311:60:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2306,
												"nodeType": "ExpressionStatement",
												"src": "7311:60:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2308,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2293,
															"src": "7399:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2309,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1790,
																"src": "7408:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7408:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2307,
														"name": "TokensBurned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1931,
														"src": "7386:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 2311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7386:35:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2312,
												"nodeType": "EmitStatement",
												"src": "7381:40:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2314,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1790,
																"src": "7437:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7437:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2316,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2293,
															"src": "7451:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2313,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "7431:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7431:28:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2318,
												"nodeType": "ExpressionStatement",
												"src": "7431:28:13"
											}
										]
									},
									"documentation": {
										"id": 2291,
										"nodeType": "StructuredDocumentation",
										"src": "7035:217:13",
										"text": " @dev Function to burn tokens from the caller's balance.\n Only callable by an address with the _BURN role, and if the contract is not paused.\n @param _amount The amount of tokens to burn."
									},
									"functionSelector": "42966c68",
									"id": 2320,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2296,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2295,
												"name": "pause",
												"nameLocations": [
													"7294:5:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2186,
												"src": "7294:5:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "7294:5:13"
										}
									],
									"name": "burn",
									"nameLocation": "7266:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2293,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "7276:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2320,
												"src": "7271:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2292,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7271:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7270:14:13"
									},
									"returnParameters": {
										"id": 2297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7300:0:13"
									},
									"scope": 2634,
									"src": "7257:209:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2351,
										"nodeType": "Block",
										"src": "7815:177:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2332,
																	"name": "_BURNFROM",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1887,
																	"src": "7841:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2333,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1790,
																		"src": "7852:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7852:12:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2331,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "7833:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 2335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7833:32:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e74726163743a204e656564204275726e66726f6d",
															"id": 2336,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7867:25:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_961af01899b104abd9a52cd42f7f5de7ebb564a1e56e1cf3c3fda073f51fffa0",
																"typeString": "literal_string \"Contract: Need Burnfrom\""
															},
															"value": "Contract: Need Burnfrom"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_961af01899b104abd9a52cd42f7f5de7ebb564a1e56e1cf3c3fda073f51fffa0",
																"typeString": "literal_string \"Contract: Need Burnfrom\""
															}
														],
														"id": 2330,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7825:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7825:68:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2338,
												"nodeType": "ExpressionStatement",
												"src": "7825:68:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2340,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2323,
															"src": "7925:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2341,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2325,
															"src": "7932:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2342,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1790,
																"src": "7941:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7941:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2339,
														"name": "TokensBurnedFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1939,
														"src": "7908:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 2344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7908:46:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2345,
												"nodeType": "EmitStatement",
												"src": "7903:51:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2347,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2323,
															"src": "7970:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2348,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2325,
															"src": "7977:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2346,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "7964:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7964:21:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2350,
												"nodeType": "ExpressionStatement",
												"src": "7964:21:13"
											}
										]
									},
									"documentation": {
										"id": 2321,
										"nodeType": "StructuredDocumentation",
										"src": "7476:272:13",
										"text": " @dev Function to burn tokens from a specific address.\n Only callable by an address with the _BURNFROM role, and if the contract is not paused.\n @param _from The address to burn tokens from.\n @param _amount The amount of tokens to burn."
									},
									"functionSelector": "79cc6790",
									"id": 2352,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2328,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2327,
												"name": "pause",
												"nameLocations": [
													"7809:5:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2186,
												"src": "7809:5:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "7809:5:13"
										}
									],
									"name": "burnFrom",
									"nameLocation": "7762:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2323,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "7779:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2352,
												"src": "7771:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7771:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2325,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "7791:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2352,
												"src": "7786:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2324,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7786:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7770:29:13"
									},
									"returnParameters": {
										"id": 2329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7815:0:13"
									},
									"scope": 2634,
									"src": "7753:239:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2387,
										"nodeType": "Block",
										"src": "8270:233:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2362,
																	"name": "_SUPPLY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1892,
																	"src": "8296:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2363,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1790,
																		"src": "8305:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8305:12:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2361,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "8288:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 2365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8288:30:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e65656420537570706c79",
															"id": 2366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8320:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_11191c3e11b0e660fa4fa7e62f4d364ea97ce393c4c6616dd08d6862e6796e25",
																"typeString": "literal_string \"Need Supply\""
															},
															"value": "Need Supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_11191c3e11b0e660fa4fa7e62f4d364ea97ce393c4c6616dd08d6862e6796e25",
																"typeString": "literal_string \"Need Supply\""
															}
														],
														"id": 2360,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8280:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8280:54:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2368,
												"nodeType": "ExpressionStatement",
												"src": "8280:54:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2370,
																"name": "_supplyCap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2355,
																"src": "8352:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2371,
																	"name": "totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 668,
																	"src": "8366:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 2372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8366:13:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8352:27:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e74726163743a20537570706c792043617020746f6f206c6f77",
															"id": 2374,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8381:30:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_77e086eba60b2e28f8cf4f0f10149625654a071ad569481f91828ddb6b36141b",
																"typeString": "literal_string \"Contract: Supply Cap too low\""
															},
															"value": "Contract: Supply Cap too low"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_77e086eba60b2e28f8cf4f0f10149625654a071ad569481f91828ddb6b36141b",
																"typeString": "literal_string \"Contract: Supply Cap too low\""
															}
														],
														"id": 2369,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8344:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8344:68:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2376,
												"nodeType": "ExpressionStatement",
												"src": "8344:68:13"
											},
											{
												"expression": {
													"id": 2379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2377,
														"name": "_cap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1904,
														"src": "8422:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2378,
														"name": "_supplyCap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2355,
														"src": "8429:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8422:17:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2380,
												"nodeType": "ExpressionStatement",
												"src": "8422:17:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2382,
															"name": "_supplyCap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2355,
															"src": "8471:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2383,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1790,
																"src": "8483:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8483:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2381,
														"name": "SupplyCapChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1945,
														"src": "8454:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 2385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8454:42:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2386,
												"nodeType": "EmitStatement",
												"src": "8449:47:13"
											}
										]
									},
									"documentation": {
										"id": 2353,
										"nodeType": "StructuredDocumentation",
										"src": "8002:209:13",
										"text": " @dev Function to change the supply cap of the token.\n Only callable by an address with the _SUPPLY role, and if the contract is not paused.\n @param _supplyCap The new supply cap."
									},
									"functionSelector": "b6a3f59a",
									"id": 2388,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2358,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2357,
												"name": "pause",
												"nameLocations": [
													"8264:5:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2186,
												"src": "8264:5:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "8264:5:13"
										}
									],
									"name": "setSupplyCap",
									"nameLocation": "8225:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2355,
												"mutability": "mutable",
												"name": "_supplyCap",
												"nameLocation": "8243:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2388,
												"src": "8238:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2354,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8238:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8237:17:13"
									},
									"returnParameters": {
										"id": 2359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8270:0:13"
									},
									"scope": 2634,
									"src": "8216:287:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2396,
										"nodeType": "Block",
										"src": "8668:28:13",
										"statements": [
											{
												"expression": {
													"id": 2394,
													"name": "_cap",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1904,
													"src": "8685:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2393,
												"id": 2395,
												"nodeType": "Return",
												"src": "8678:11:13"
											}
										]
									},
									"documentation": {
										"id": 2389,
										"nodeType": "StructuredDocumentation",
										"src": "8513:102:13",
										"text": " @dev Function to get the current supply cap.\n @return The current supply cap."
									},
									"functionSelector": "8f770ad0",
									"id": 2397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supplyCap",
									"nameLocation": "8629:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8638:2:13"
									},
									"returnParameters": {
										"id": 2393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2397,
												"src": "8662:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2391,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8662:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8661:6:13"
									},
									"scope": 2634,
									"src": "8620:76:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 2434,
										"nodeType": "Block",
										"src": "9063:179:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2408,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2400,
														"src": "9077:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2411,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9093:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2410,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9085:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2409,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9085:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 2412,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9085:10:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9077:18:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2425,
												"nodeType": "IfStatement",
												"src": "9073:122:13",
												"trueBody": {
													"id": 2424,
													"nodeType": "Block",
													"src": "9097:98:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 2415,
																					"name": "totalSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 668,
																					"src": "9120:11:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																						"typeString": "function () view returns (uint256)"
																					}
																				},
																				"id": 2416,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9120:13:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 2417,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2404,
																				"src": "9136:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9120:22:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 2419,
																			"name": "_cap",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1904,
																			"src": "9146:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9120:30:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "436f6e74726163743a20537570706c7920436170206578636565646564",
																		"id": 2421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9152:31:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79",
																			"typeString": "literal_string \"Contract: Supply Cap exceeded\""
																		},
																		"value": "Contract: Supply Cap exceeded"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_0ba07a4afe187961b602481eb8377563f07c408e9efbfe278e49cf4bbac73c79",
																			"typeString": "literal_string \"Contract: Supply Cap exceeded\""
																		}
																	],
																	"id": 2414,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "9112:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9112:72:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2423,
															"nodeType": "ExpressionStatement",
															"src": "9112:72:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2429,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2400,
															"src": "9218:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2430,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2402,
															"src": "9224:2:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2431,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2404,
															"src": "9228:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2426,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "9204:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Token_$2634_$",
																"typeString": "type(contract super Token)"
															}
														},
														"id": 2428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9210:7:13",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 902,
														"src": "9204:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9204:31:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2433,
												"nodeType": "ExpressionStatement",
												"src": "9204:31:13"
											}
										]
									},
									"documentation": {
										"id": 2398,
										"nodeType": "StructuredDocumentation",
										"src": "8706:267:13",
										"text": " @dev Internal function to update the token balances, ensuring the supply cap is not exceeded.\n @param from The address sending tokens.\n @param to The address receiving tokens.\n @param amount The amount of tokens being transferred."
									},
									"id": 2435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8987:7:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2406,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9054:8:13"
									},
									"parameters": {
										"id": 2405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2400,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9003:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2435,
												"src": "8995:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8995:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2402,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9017:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 2435,
												"src": "9009:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9009:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2404,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9029:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2435,
												"src": "9021:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9021:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8994:42:13"
									},
									"returnParameters": {
										"id": 2407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:13"
									},
									"scope": 2634,
									"src": "8978:264:13",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										778
									],
									"body": {
										"id": 2481,
										"nodeType": "Block",
										"src": "9709:261:13",
										"statements": [
											{
												"assignments": [
													2451
												],
												"declarations": [
													{
														"constant": false,
														"id": 2451,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "9727:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 2481,
														"src": "9719:15:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2450,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9719:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2454,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2452,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1790,
														"src": "9737:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 2453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9737:12:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9719:30:13"
											},
											{
												"condition": {
													"baseExpression": {
														"id": 2455,
														"name": "whitelistedAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2004,
														"src": "9763:18:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2457,
													"indexExpression": {
														"id": 2456,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2451,
														"src": "9782:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9763:27:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2477,
													"nodeType": "Block",
													"src": "9849:94:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2466,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2438,
																		"src": "9873:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2467,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2440,
																		"src": "9879:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2468,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2442,
																		"src": "9883:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2465,
																	"name": "_transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 825,
																	"src": "9863:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9863:26:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2470,
															"nodeType": "ExpressionStatement",
															"src": "9863:26:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2472,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2438,
																		"src": "9913:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2473,
																		"name": "vault",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1906,
																		"src": "9919:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2474,
																		"name": "txFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1909,
																		"src": "9926:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2471,
																	"name": "_transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 825,
																	"src": "9903:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9903:29:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2476,
															"nodeType": "ExpressionStatement",
															"src": "9903:29:13"
														}
													]
												},
												"id": 2478,
												"nodeType": "IfStatement",
												"src": "9759:184:13",
												"trueBody": {
													"id": 2464,
													"nodeType": "Block",
													"src": "9792:51:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2459,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2438,
																		"src": "9816:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2460,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2440,
																		"src": "9822:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2461,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2442,
																		"src": "9826:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2458,
																	"name": "_transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 825,
																	"src": "9806:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9806:26:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2463,
															"nodeType": "ExpressionStatement",
															"src": "9806:26:13"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9959:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2449,
												"id": 2480,
												"nodeType": "Return",
												"src": "9952:11:13"
											}
										]
									},
									"documentation": {
										"id": 2436,
										"nodeType": "StructuredDocumentation",
										"src": "9248:341:13",
										"text": " @dev Function to transfer tokens from one address to another, applying a transaction fee unless the sender is whitelisted.\n @param from The address sending tokens.\n @param to The address receiving tokens.\n @param value The amount of tokens to transfer.\n @return True if the transfer was successful."
									},
									"functionSelector": "23b872dd",
									"id": 2482,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2445,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2444,
												"name": "nonReentrant",
												"nameLocations": [
													"9657:12:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 545,
												"src": "9657:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "9657:12:13"
										}
									],
									"name": "transferFrom",
									"nameLocation": "9603:12:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2446,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9685:8:13"
									},
									"parameters": {
										"id": 2443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2438,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9624:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "9616:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9616:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2440,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9638:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "9630:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9630:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2442,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9650:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "9642:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9642:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9615:41:13"
									},
									"returnParameters": {
										"id": 2449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "9703:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2447,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9703:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9702:6:13"
									},
									"scope": 2634,
									"src": "9594:376:13",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										705
									],
									"body": {
										"id": 2526,
										"nodeType": "Block",
										"src": "10381:260:13",
										"statements": [
											{
												"assignments": [
													2496
												],
												"declarations": [
													{
														"constant": false,
														"id": 2496,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "10399:5:13",
														"nodeType": "VariableDeclaration",
														"scope": 2526,
														"src": "10391:13:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2495,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10391:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2499,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2497,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1790,
														"src": "10407:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 2498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10407:12:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10391:28:13"
											},
											{
												"condition": {
													"baseExpression": {
														"id": 2500,
														"name": "whitelistedAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2004,
														"src": "10433:18:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2502,
													"indexExpression": {
														"id": 2501,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2496,
														"src": "10452:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10433:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2522,
													"nodeType": "Block",
													"src": "10518:96:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2511,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2496,
																		"src": "10542:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2512,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2485,
																		"src": "10549:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2513,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2487,
																		"src": "10553:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2510,
																	"name": "_transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 825,
																	"src": "10532:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10532:27:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2515,
															"nodeType": "ExpressionStatement",
															"src": "10532:27:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2517,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2496,
																		"src": "10583:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2518,
																		"name": "vault",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1906,
																		"src": "10590:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2519,
																		"name": "txFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1909,
																		"src": "10597:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2516,
																	"name": "_transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 825,
																	"src": "10573:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10573:30:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2521,
															"nodeType": "ExpressionStatement",
															"src": "10573:30:13"
														}
													]
												},
												"id": 2523,
												"nodeType": "IfStatement",
												"src": "10429:185:13",
												"trueBody": {
													"id": 2509,
													"nodeType": "Block",
													"src": "10460:52:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2504,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2496,
																		"src": "10484:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2505,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2485,
																		"src": "10491:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2506,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2487,
																		"src": "10495:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2503,
																	"name": "_transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 825,
																	"src": "10474:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10474:27:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2508,
															"nodeType": "ExpressionStatement",
															"src": "10474:27:13"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2524,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10630:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2494,
												"id": 2525,
												"nodeType": "Return",
												"src": "10623:11:13"
											}
										]
									},
									"documentation": {
										"id": 2483,
										"nodeType": "StructuredDocumentation",
										"src": "9976:303:13",
										"text": " @dev Function to transfer tokens from the caller's address to another, applying a transaction fee unless the sender is whitelisted.\n @param to The address receiving tokens.\n @param value The amount of tokens to transfer.\n @return True if the transfer was successful."
									},
									"functionSelector": "a9059cbb",
									"id": 2527,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2490,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2489,
												"name": "nonReentrant",
												"nameLocations": [
													"10329:12:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 545,
												"src": "10329:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "10329:12:13"
										}
									],
									"name": "transfer",
									"nameLocation": "10293:8:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2491,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10357:8:13"
									},
									"parameters": {
										"id": 2488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2485,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10310:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 2527,
												"src": "10302:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10302:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2487,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10322:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2527,
												"src": "10314:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10314:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10301:27:13"
									},
									"returnParameters": {
										"id": 2494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2527,
												"src": "10375:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2492,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10375:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10374:6:13"
									},
									"scope": 2634,
									"src": "10284:357:13",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2560,
										"nodeType": "Block",
										"src": "11091:179:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2537,
																	"name": "_ADMIN",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1897,
																	"src": "11117:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 2538,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "11125:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11129:6:13",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "11125:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2536,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "11109:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 2540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11109:27:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6565642041646d696e",
															"id": 2541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11138:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b001b48f6c58139e2cae9da1391afe3c88f4951fb872771eda2713f4f3a0a6c2",
																"typeString": "literal_string \"Need Admin\""
															},
															"value": "Need Admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b001b48f6c58139e2cae9da1391afe3c88f4951fb872771eda2713f4f3a0a6c2",
																"typeString": "literal_string \"Need Admin\""
															}
														],
														"id": 2535,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11101:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11101:50:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2543,
												"nodeType": "ExpressionStatement",
												"src": "11101:50:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2545,
																"name": "_whitelist",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2530,
																"src": "11169:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11191:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11183:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2546,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11183:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 2549,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11183:10:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11169:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646472657373",
															"id": 2551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11195:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 2544,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11161:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11161:52:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2553,
												"nodeType": "ExpressionStatement",
												"src": "11161:52:13"
											},
											{
												"expression": {
													"id": 2558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2554,
															"name": "whitelistedAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2004,
															"src": "11223:18:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2556,
														"indexExpression": {
															"id": 2555,
															"name": "_whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2530,
															"src": "11242:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11223:30:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2557,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2532,
														"src": "11256:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "11223:40:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2559,
												"nodeType": "ExpressionStatement",
												"src": "11223:40:13"
											}
										]
									},
									"documentation": {
										"id": 2528,
										"nodeType": "StructuredDocumentation",
										"src": "10647:367:13",
										"text": " @dev Function to add or remove an address from the whitelist.\n Whitelisted addresses are exempt from transfer fees.\n Only callable by an admin.\n @param _whitelist The address to whitelist or remove from the whitelist.\n @param _status Boolean indicating whether to add (true) or remove (false) the address from the whitelist."
									},
									"functionSelector": "3f914aef",
									"id": 2561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setWhitelistAddress",
									"nameLocation": "11028:19:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2530,
												"mutability": "mutable",
												"name": "_whitelist",
												"nameLocation": "11056:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2561,
												"src": "11048:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11048:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2532,
												"mutability": "mutable",
												"name": "_status",
												"nameLocation": "11073:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2561,
												"src": "11068:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2531,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11068:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11047:34:13"
									},
									"returnParameters": {
										"id": 2534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11091:0:13"
									},
									"scope": 2634,
									"src": "11019:251:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2599,
										"nodeType": "Block",
										"src": "11700:197:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2576,
																	"name": "_RESCUE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1902,
																	"src": "11726:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 2577,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "11735:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11739:6:13",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "11735:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2575,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "11718:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 2579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11718:28:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e65656420524553435545",
															"id": 2580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11748:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c6d8abb0082a2eadfce7975cbc43efb0f6de7a832c688abfb0c618284167ffc2",
																"typeString": "literal_string \"Need RESCUE\""
															},
															"value": "Need RESCUE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c6d8abb0082a2eadfce7975cbc43efb0f6de7a832c688abfb0c618284167ffc2",
																"typeString": "literal_string \"Need RESCUE\""
															}
														],
														"id": 2574,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11710:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11710:52:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2582,
												"nodeType": "ExpressionStatement",
												"src": "11710:52:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2587,
															"name": "_dest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2567,
															"src": "11800:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2588,
															"name": "_ERC20Amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2569,
															"src": "11807:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2584,
																	"name": "_ERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2565,
																	"src": "11779:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1173",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1173",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 2583,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "11772:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1173_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11772:14:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1173",
																"typeString": "contract IERC20"
															}
														},
														"id": 2586,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11787:12:13",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1285,
														"src": "11772:27:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1173_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1173_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11772:48:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2590,
												"nodeType": "ExpressionStatement",
												"src": "11772:48:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2592,
															"name": "_ERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2565,
															"src": "11848:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1173",
																"typeString": "contract IERC20"
															}
														},
														{
															"expression": {
																"id": 2593,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "11856:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11862:6:13",
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "11856:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2595,
															"name": "_dest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2567,
															"src": "11870:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2596,
															"name": "_ERC20Amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2569,
															"src": "11877:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1173",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2591,
														"name": "ERC20Rescued",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2000,
														"src": "11835:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_contract$_IERC20_$1173_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,uint256,address,uint256)"
														}
													},
													"id": 2597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11835:55:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2598,
												"nodeType": "EmitStatement",
												"src": "11830:60:13"
											}
										]
									},
									"documentation": {
										"id": 2562,
										"nodeType": "StructuredDocumentation",
										"src": "11276:331:13",
										"text": " @dev Function to rescue ERC20 tokens sent to the contract by mistake.\n Only callable by an address with the _RESCUE role.\n @param _ERC20 The address of the ERC20 token to rescue.\n @param _dest The address to send the rescued tokens to.\n @param _ERC20Amount The amount of tokens to rescue."
									},
									"functionSelector": "41f431fd",
									"id": 2600,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2572,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2571,
												"name": "nonReentrant",
												"nameLocations": [
													"11680:12:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 545,
												"src": "11680:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "11680:12:13"
										}
									],
									"name": "moveERC20",
									"nameLocation": "11621:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2565,
												"mutability": "mutable",
												"name": "_ERC20",
												"nameLocation": "11638:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2600,
												"src": "11631:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1173",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2564,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2563,
														"name": "IERC20",
														"nameLocations": [
															"11631:6:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1173,
														"src": "11631:6:13"
													},
													"referencedDeclaration": 1173,
													"src": "11631:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1173",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2567,
												"mutability": "mutable",
												"name": "_dest",
												"nameLocation": "11654:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2600,
												"src": "11646:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11646:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2569,
												"mutability": "mutable",
												"name": "_ERC20Amount",
												"nameLocation": "11666:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2600,
												"src": "11661:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2568,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11661:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11630:49:13"
									},
									"returnParameters": {
										"id": 2573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11700:0:13"
									},
									"scope": 2634,
									"src": "11612:285:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2632,
										"nodeType": "Block",
										"src": "12248:167:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2612,
																	"name": "_RESCUE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1902,
																	"src": "12274:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 2613,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "12283:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12287:6:13",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "12283:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2611,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "12266:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 2615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12266:28:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e65656420524553435545",
															"id": 2616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12296:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c6d8abb0082a2eadfce7975cbc43efb0f6de7a832c688abfb0c618284167ffc2",
																"typeString": "literal_string \"Need RESCUE\""
															},
															"value": "Need RESCUE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c6d8abb0082a2eadfce7975cbc43efb0f6de7a832c688abfb0c618284167ffc2",
																"typeString": "literal_string \"Need RESCUE\""
															}
														],
														"id": 2610,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12258:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12258:52:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2618,
												"nodeType": "ExpressionStatement",
												"src": "12258:52:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2622,
															"name": "_etherAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2605,
															"src": "12335:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2619,
															"name": "_dest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2603,
															"src": "12320:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 2621,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12326:8:13",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "12320:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12320:28:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2624,
												"nodeType": "ExpressionStatement",
												"src": "12320:28:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2626,
															"name": "_dest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2603,
															"src": "12374:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"expression": {
																"id": 2627,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "12381:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12387:6:13",
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "12381:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2629,
															"name": "_etherAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2605,
															"src": "12395:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2625,
														"name": "ETHRescued",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1989,
														"src": "12363:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12363:45:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2631,
												"nodeType": "EmitStatement",
												"src": "12358:50:13"
											}
										]
									},
									"documentation": {
										"id": 2601,
										"nodeType": "StructuredDocumentation",
										"src": "11903:259:13",
										"text": " @dev Function to rescue Ether sent to the contract by mistake.\n Only callable by an address with the _RESCUE role.\n @param _dest The address to send the rescued Ether to.\n @param _etherAmount The amount of Ether to rescue."
									},
									"functionSelector": "48132f48",
									"id": 2633,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2608,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2607,
												"name": "nonReentrant",
												"nameLocations": [
													"12228:12:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 545,
												"src": "12228:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "12228:12:13"
										}
									],
									"name": "ethRescue",
									"nameLocation": "12176:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2603,
												"mutability": "mutable",
												"name": "_dest",
												"nameLocation": "12202:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2633,
												"src": "12186:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12186:15:13",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2605,
												"mutability": "mutable",
												"name": "_etherAmount",
												"nameLocation": "12214:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2633,
												"src": "12209:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2604,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12209:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12185:42:13"
									},
									"returnParameters": {
										"id": 2609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12248:0:13"
									},
									"scope": 2634,
									"src": "12167:248:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2635,
							"src": "740:11682:13",
							"usedErrors": [
								305,
								308,
								390,
								395,
								400,
								409,
								414,
								419,
								1252,
								1533,
								1538,
								1541
							],
							"usedEvents": [
								317,
								326,
								335,
								1107,
								1116,
								1919,
								1925,
								1931,
								1939,
								1945,
								1951,
								1957,
								1963,
								1969,
								1975,
								1981,
								1989,
								2000
							]
						}
					],
					"src": "37:12386:13"
				},
				"id": 13
			}
		}
	}
}